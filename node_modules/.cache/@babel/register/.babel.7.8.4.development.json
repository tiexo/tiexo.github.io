{
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/include\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/include/dependency.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/include",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/include/dependency.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/include/dependency.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/include/dependency.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/include",
        "sourceFileName": "dependency.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint no-process-exit: \"off\" */\nvar semver = require('semver');\n\nvar logger = require('hexo-log')();\n\nvar packageInfo = require('../package.json');\n\nvar _require = require('./util/console'),\n    yellow = _require.yellow,\n    red = _require.red,\n    green = _require.green;\n\nmodule.exports = function (hexo) {\n  function checkDependency(name, reqVer) {\n    try {\n      require.resolve(name);\n\n      var version = require(name + '/package.json').version;\n\n      if (!semver.satisfies(version, reqVer)) {\n        logger.error(\"Package \".concat(yellow(name), \"'s version (\").concat(yellow(version), \") does not satisfy the required version (\").concat(red(reqVer), \").\"));\n        return false;\n      }\n\n      return true;\n    } catch (e) {\n      logger.error(\"Package \".concat(yellow(name), \" is not installed.\"));\n    }\n\n    return false;\n  }\n\n  logger.info('=== Checking package dependencies ===');\n  var missingDeps = Object.keys(packageInfo.peerDependencies).filter(function (name) {\n    return !checkDependency(name, packageInfo.peerDependencies[name]);\n  });\n\n  if (missingDeps && missingDeps.length) {\n    logger.error('Please install the missing dependencies your Hexo site root directory:');\n    logger.error(green('npm install --save ' + missingDeps.map(function (name) {\n      return \"\".concat(name, \"@\").concat(packageInfo.peerDependencies[name]);\n    }).join(' ')));\n    process.exit(-1);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlcGVuZGVuY3kuanMiXSwibmFtZXMiOlsic2VtdmVyIiwicmVxdWlyZSIsImxvZ2dlciIsInBhY2thZ2VJbmZvIiwieWVsbG93IiwicmVkIiwiZ3JlZW4iLCJtb2R1bGUiLCJleHBvcnRzIiwiaGV4byIsImNoZWNrRGVwZW5kZW5jeSIsIm5hbWUiLCJyZXFWZXIiLCJyZXNvbHZlIiwidmVyc2lvbiIsInNhdGlzZmllcyIsImVycm9yIiwiZSIsImluZm8iLCJtaXNzaW5nRGVwcyIsIk9iamVjdCIsImtleXMiLCJwZWVyRGVwZW5kZW5jaWVzIiwiZmlsdGVyIiwibGVuZ3RoIiwibWFwIiwiam9pbiIsInByb2Nlc3MiLCJleGl0Il0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0EsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxVQUFELENBQVAsRUFBZjs7QUFDQSxJQUFNRSxXQUFXLEdBQUdGLE9BQU8sQ0FBQyxpQkFBRCxDQUEzQjs7ZUFDK0JBLE9BQU8sQ0FBQyxnQkFBRCxDO0lBQTlCRyxNLFlBQUFBLE07SUFBUUMsRyxZQUFBQSxHO0lBQUtDLEssWUFBQUEsSzs7QUFFckJDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFBQyxJQUFJLEVBQUk7QUFDckIsV0FBU0MsZUFBVCxDQUF5QkMsSUFBekIsRUFBK0JDLE1BQS9CLEVBQXVDO0FBQ25DLFFBQUk7QUFDQVgsTUFBQUEsT0FBTyxDQUFDWSxPQUFSLENBQWdCRixJQUFoQjs7QUFDQSxVQUFNRyxPQUFPLEdBQUdiLE9BQU8sQ0FBQ1UsSUFBSSxHQUFHLGVBQVIsQ0FBUCxDQUFnQ0csT0FBaEQ7O0FBQ0EsVUFBSSxDQUFDZCxNQUFNLENBQUNlLFNBQVAsQ0FBaUJELE9BQWpCLEVBQTBCRixNQUExQixDQUFMLEVBQXdDO0FBQ3BDVixRQUFBQSxNQUFNLENBQUNjLEtBQVAsbUJBQXdCWixNQUFNLENBQUNPLElBQUQsQ0FBOUIseUJBQW1EUCxNQUFNLENBQUNVLE9BQUQsQ0FBekQsc0RBQThHVCxHQUFHLENBQUNPLE1BQUQsQ0FBakg7QUFDQSxlQUFPLEtBQVA7QUFDSDs7QUFDRCxhQUFPLElBQVA7QUFDSCxLQVJELENBUUUsT0FBT0ssQ0FBUCxFQUFVO0FBQ1JmLE1BQUFBLE1BQU0sQ0FBQ2MsS0FBUCxtQkFBd0JaLE1BQU0sQ0FBQ08sSUFBRCxDQUE5QjtBQUNIOztBQUNELFdBQU8sS0FBUDtBQUNIOztBQUVEVCxFQUFBQSxNQUFNLENBQUNnQixJQUFQLENBQVksdUNBQVo7QUFDQSxNQUFNQyxXQUFXLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZbEIsV0FBVyxDQUFDbUIsZ0JBQXhCLEVBQ2ZDLE1BRGUsQ0FDUixVQUFBWixJQUFJO0FBQUEsV0FBSSxDQUFDRCxlQUFlLENBQUNDLElBQUQsRUFBT1IsV0FBVyxDQUFDbUIsZ0JBQVosQ0FBNkJYLElBQTdCLENBQVAsQ0FBcEI7QUFBQSxHQURJLENBQXBCOztBQUVBLE1BQUlRLFdBQVcsSUFBSUEsV0FBVyxDQUFDSyxNQUEvQixFQUF1QztBQUNuQ3RCLElBQUFBLE1BQU0sQ0FBQ2MsS0FBUCxDQUFhLHdFQUFiO0FBQ0FkLElBQUFBLE1BQU0sQ0FBQ2MsS0FBUCxDQUFhVixLQUFLLENBQUMsd0JBQXdCYSxXQUFXLENBQUNNLEdBQVosQ0FBZ0IsVUFBQWQsSUFBSTtBQUFBLHVCQUFPQSxJQUFQLGNBQWVSLFdBQVcsQ0FBQ21CLGdCQUFaLENBQTZCWCxJQUE3QixDQUFmO0FBQUEsS0FBcEIsRUFBeUVlLElBQXpFLENBQThFLEdBQTlFLENBQXpCLENBQWxCO0FBQ0FDLElBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUFhLENBQUMsQ0FBZDtBQUNIO0FBQ0osQ0F4QkQiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzMy9pbmNsdWRlIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IG5vLXByb2Nlc3MtZXhpdDogXCJvZmZcIiAqL1xuY29uc3Qgc2VtdmVyID0gcmVxdWlyZSgnc2VtdmVyJyk7XG5jb25zdCBsb2dnZXIgPSByZXF1aXJlKCdoZXhvLWxvZycpKCk7XG5jb25zdCBwYWNrYWdlSW5mbyA9IHJlcXVpcmUoJy4uL3BhY2thZ2UuanNvbicpO1xuY29uc3QgeyB5ZWxsb3csIHJlZCwgZ3JlZW4gfSA9IHJlcXVpcmUoJy4vdXRpbC9jb25zb2xlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gaGV4byA9PiB7XG4gICAgZnVuY3Rpb24gY2hlY2tEZXBlbmRlbmN5KG5hbWUsIHJlcVZlcikge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmVxdWlyZS5yZXNvbHZlKG5hbWUpO1xuICAgICAgICAgICAgY29uc3QgdmVyc2lvbiA9IHJlcXVpcmUobmFtZSArICcvcGFja2FnZS5qc29uJykudmVyc2lvbjtcbiAgICAgICAgICAgIGlmICghc2VtdmVyLnNhdGlzZmllcyh2ZXJzaW9uLCByZXFWZXIpKSB7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLmVycm9yKGBQYWNrYWdlICR7eWVsbG93KG5hbWUpfSdzIHZlcnNpb24gKCR7eWVsbG93KHZlcnNpb24pfSkgZG9lcyBub3Qgc2F0aXNmeSB0aGUgcmVxdWlyZWQgdmVyc2lvbiAoJHtyZWQocmVxVmVyKX0pLmApO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBsb2dnZXIuZXJyb3IoYFBhY2thZ2UgJHt5ZWxsb3cobmFtZSl9IGlzIG5vdCBpbnN0YWxsZWQuYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGxvZ2dlci5pbmZvKCc9PT0gQ2hlY2tpbmcgcGFja2FnZSBkZXBlbmRlbmNpZXMgPT09Jyk7XG4gICAgY29uc3QgbWlzc2luZ0RlcHMgPSBPYmplY3Qua2V5cyhwYWNrYWdlSW5mby5wZWVyRGVwZW5kZW5jaWVzKVxuICAgICAgICAuZmlsdGVyKG5hbWUgPT4gIWNoZWNrRGVwZW5kZW5jeShuYW1lLCBwYWNrYWdlSW5mby5wZWVyRGVwZW5kZW5jaWVzW25hbWVdKSk7XG4gICAgaWYgKG1pc3NpbmdEZXBzICYmIG1pc3NpbmdEZXBzLmxlbmd0aCkge1xuICAgICAgICBsb2dnZXIuZXJyb3IoJ1BsZWFzZSBpbnN0YWxsIHRoZSBtaXNzaW5nIGRlcGVuZGVuY2llcyB5b3VyIEhleG8gc2l0ZSByb290IGRpcmVjdG9yeTonKTtcbiAgICAgICAgbG9nZ2VyLmVycm9yKGdyZWVuKCducG0gaW5zdGFsbCAtLXNhdmUgJyArIG1pc3NpbmdEZXBzLm1hcChuYW1lID0+IGAke25hbWV9QCR7cGFja2FnZUluZm8ucGVlckRlcGVuZGVuY2llc1tuYW1lXX1gKS5qb2luKCcgJykpKTtcbiAgICAgICAgcHJvY2Vzcy5leGl0KC0xKTtcbiAgICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "dependency.js"
      ],
      "names": [
        "semver",
        "require",
        "logger",
        "packageInfo",
        "yellow",
        "red",
        "green",
        "module",
        "exports",
        "hexo",
        "checkDependency",
        "name",
        "reqVer",
        "resolve",
        "version",
        "satisfies",
        "error",
        "e",
        "info",
        "missingDeps",
        "Object",
        "keys",
        "peerDependencies",
        "filter",
        "length",
        "map",
        "join",
        "process",
        "exit"
      ],
      "mappings": ";;AAAA;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAP,EAAf;;AACA,IAAME,WAAW,GAAGF,OAAO,CAAC,iBAAD,CAA3B;;eAC+BA,OAAO,CAAC,gBAAD,C;IAA9BG,M,YAAAA,M;IAAQC,G,YAAAA,G;IAAKC,K,YAAAA,K;;AAErBC,MAAM,CAACC,OAAP,GAAiB,UAAAC,IAAI,EAAI;AACrB,WAASC,eAAT,CAAyBC,IAAzB,EAA+BC,MAA/B,EAAuC;AACnC,QAAI;AACAX,MAAAA,OAAO,CAACY,OAAR,CAAgBF,IAAhB;;AACA,UAAMG,OAAO,GAAGb,OAAO,CAACU,IAAI,GAAG,eAAR,CAAP,CAAgCG,OAAhD;;AACA,UAAI,CAACd,MAAM,CAACe,SAAP,CAAiBD,OAAjB,EAA0BF,MAA1B,CAAL,EAAwC;AACpCV,QAAAA,MAAM,CAACc,KAAP,mBAAwBZ,MAAM,CAACO,IAAD,CAA9B,yBAAmDP,MAAM,CAACU,OAAD,CAAzD,sDAA8GT,GAAG,CAACO,MAAD,CAAjH;AACA,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH,KARD,CAQE,OAAOK,CAAP,EAAU;AACRf,MAAAA,MAAM,CAACc,KAAP,mBAAwBZ,MAAM,CAACO,IAAD,CAA9B;AACH;;AACD,WAAO,KAAP;AACH;;AAEDT,EAAAA,MAAM,CAACgB,IAAP,CAAY,uCAAZ;AACA,MAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYlB,WAAW,CAACmB,gBAAxB,EACfC,MADe,CACR,UAAAZ,IAAI;AAAA,WAAI,CAACD,eAAe,CAACC,IAAD,EAAOR,WAAW,CAACmB,gBAAZ,CAA6BX,IAA7B,CAAP,CAApB;AAAA,GADI,CAApB;;AAEA,MAAIQ,WAAW,IAAIA,WAAW,CAACK,MAA/B,EAAuC;AACnCtB,IAAAA,MAAM,CAACc,KAAP,CAAa,wEAAb;AACAd,IAAAA,MAAM,CAACc,KAAP,CAAaV,KAAK,CAAC,wBAAwBa,WAAW,CAACM,GAAZ,CAAgB,UAAAd,IAAI;AAAA,uBAAOA,IAAP,cAAeR,WAAW,CAACmB,gBAAZ,CAA6BX,IAA7B,CAAf;AAAA,KAApB,EAAyEe,IAAzE,CAA8E,GAA9E,CAAzB,CAAlB;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAa,CAAC,CAAd;AACH;AACJ,CAxBD",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/include",
      "sourcesContent": [
        "/* eslint no-process-exit: \"off\" */\nconst semver = require('semver');\nconst logger = require('hexo-log')();\nconst packageInfo = require('../package.json');\nconst { yellow, red, green } = require('./util/console');\n\nmodule.exports = hexo => {\n    function checkDependency(name, reqVer) {\n        try {\n            require.resolve(name);\n            const version = require(name + '/package.json').version;\n            if (!semver.satisfies(version, reqVer)) {\n                logger.error(`Package ${yellow(name)}'s version (${yellow(version)}) does not satisfy the required version (${red(reqVer)}).`);\n                return false;\n            }\n            return true;\n        } catch (e) {\n            logger.error(`Package ${yellow(name)} is not installed.`);\n        }\n        return false;\n    }\n\n    logger.info('=== Checking package dependencies ===');\n    const missingDeps = Object.keys(packageInfo.peerDependencies)\n        .filter(name => !checkDependency(name, packageInfo.peerDependencies[name]));\n    if (missingDeps && missingDeps.length) {\n        logger.error('Please install the missing dependencies your Hexo site root directory:');\n        logger.error(green('npm install --save ' + missingDeps.map(name => `${name}@${packageInfo.peerDependencies[name]}`).join(' ')));\n        process.exit(-1);\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/include/util\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/include/util/console.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/include/util",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/include/util/console.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/include/util/console.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/include/util/console.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/include/util",
        "sourceFileName": "console.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar chalk;\n\ntry {\n  chalk = require('chalk'); // eslint-disable-line node/no-extraneous-require\n} catch (e) {}\n\nmodule.exports = new Proxy({}, {\n  get: function get(obj, prop) {\n    if (chalk) {\n      return chalk[prop];\n    }\n\n    return function () {\n      return arguments.length === 1 ? arguments[0] : arguments;\n    };\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnNvbGUuanMiXSwibmFtZXMiOlsiY2hhbGsiLCJyZXF1aXJlIiwiZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJQcm94eSIsImdldCIsIm9iaiIsInByb3AiLCJhcmd1bWVudHMiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsS0FBSjs7QUFDQSxJQUFJO0FBQ0FBLEVBQUFBLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBZixDQURBLENBQzBCO0FBQzdCLENBRkQsQ0FFRSxPQUFPQyxDQUFQLEVBQVUsQ0FBRzs7QUFFZkMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLElBQUlDLEtBQUosQ0FBVSxFQUFWLEVBQWM7QUFDM0JDLEVBQUFBLEdBRDJCLGVBQ3ZCQyxHQUR1QixFQUNsQkMsSUFEa0IsRUFDWjtBQUNYLFFBQUlSLEtBQUosRUFBVztBQUNQLGFBQU9BLEtBQUssQ0FBQ1EsSUFBRCxDQUFaO0FBQ0g7O0FBQ0QsV0FBTyxZQUFXO0FBQ2QsYUFBT0MsU0FBUyxDQUFDQyxNQUFWLEtBQXFCLENBQXJCLEdBQXlCRCxTQUFTLENBQUMsQ0FBRCxDQUFsQyxHQUF3Q0EsU0FBL0M7QUFDSCxLQUZEO0FBR0g7QUFSMEIsQ0FBZCxDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMzL2luY2x1ZGUvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImxldCBjaGFsaztcbnRyeSB7XG4gICAgY2hhbGsgPSByZXF1aXJlKCdjaGFsaycpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vZGUvbm8tZXh0cmFuZW91cy1yZXF1aXJlXG59IGNhdGNoIChlKSB7IH1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgUHJveHkoe30sIHtcbiAgICBnZXQob2JqLCBwcm9wKSB7XG4gICAgICAgIGlmIChjaGFsaykge1xuICAgICAgICAgICAgcmV0dXJuIGNoYWxrW3Byb3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gYXJndW1lbnRzWzBdIDogYXJndW1lbnRzO1xuICAgICAgICB9O1xuICAgIH1cbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "console.js"
      ],
      "names": [
        "chalk",
        "require",
        "e",
        "module",
        "exports",
        "Proxy",
        "get",
        "obj",
        "prop",
        "arguments",
        "length"
      ],
      "mappings": ";;AAAA,IAAIA,KAAJ;;AACA,IAAI;AACAA,EAAAA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAf,CADA,CAC0B;AAC7B,CAFD,CAEE,OAAOC,CAAP,EAAU,CAAG;;AAEfC,MAAM,CAACC,OAAP,GAAiB,IAAIC,KAAJ,CAAU,EAAV,EAAc;AAC3BC,EAAAA,GAD2B,eACvBC,GADuB,EAClBC,IADkB,EACZ;AACX,QAAIR,KAAJ,EAAW;AACP,aAAOA,KAAK,CAACQ,IAAD,CAAZ;AACH;;AACD,WAAO,YAAW;AACd,aAAOC,SAAS,CAACC,MAAV,KAAqB,CAArB,GAAyBD,SAAS,CAAC,CAAD,CAAlC,GAAwCA,SAA/C;AACH,KAFD;AAGH;AAR0B,CAAd,CAAjB",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/include/util",
      "sourcesContent": [
        "let chalk;\ntry {\n    chalk = require('chalk'); // eslint-disable-line node/no-extraneous-require\n} catch (e) { }\n\nmodule.exports = new Proxy({}, {\n    get(obj, prop) {\n        if (chalk) {\n            return chalk[prop];\n        }\n        return function() {\n            return arguments.length === 1 ? arguments[0] : arguments;\n        };\n    }\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/include\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/include/config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/include",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/include/config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/include/config.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/include/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/include",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint no-process-exit: \"off\" */\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar util = require('util');\n\nvar crypto = require('crypto');\n\nvar logger = require('hexo-log')();\n\nmodule.exports = function (hexo) {\n  if (!process.argv.includes('--icarus-dont-check-config')) {\n    var SCHEMA_ROOT = path.join(hexo.theme_dir, 'include/schema/');\n    var CONFIG_PATH = path.join(hexo.theme_dir, '_config.yml');\n\n    var yaml = require('hexo-component-inferno/lib/util/yaml');\n\n    var _require = require('hexo-component-inferno/lib/core/schema'),\n        SchemaLoader = _require.SchemaLoader;\n\n    var loader = SchemaLoader.load(require(path.join(SCHEMA_ROOT, 'config.json')), SCHEMA_ROOT);\n    var schema = loader.getSchema('/config.json');\n    logger.info('=== Checking the configuration file ==='); // Generate config file if not exist\n\n    if (!process.argv.includes('--icarus-dont-generate-config')) {\n      if (!fs.existsSync(CONFIG_PATH)) {\n        logger.warn(\"\".concat(CONFIG_PATH, \" is not found. We are creating one for you...\"));\n        logger.info('You may add \\'--icarus-dont-generate-config\\' to prevent creating the configuration file.');\n        var defaultValue = schema.getDefaultValue();\n        fs.writeFileSync(CONFIG_PATH, defaultValue.toYaml());\n        logger.info(\"\".concat(CONFIG_PATH, \" created successfully.\"));\n      }\n    }\n\n    try {\n      var cfgStr = fs.readFileSync(CONFIG_PATH);\n      var cfg = yaml.parse(cfgStr); // Check config version\n\n      if (!process.argv.includes('--icarus-dont-upgrade-config')) {\n        var migrator = new (require('hexo-component-inferno/lib/core/migrate'))(path.join(hexo.theme_dir, 'include/migration')); // Upgrade config\n\n        if (migrator.isOudated(cfg.version)) {\n          logger.info(\"Your configuration file is outdated (\".concat(cfg.version, \" < \").concat(migrator.getLatestVersion(), \"). \") + 'Trying to upgrade it...'); // Backup old config\n\n          var hash = crypto.createHash('sha256').update(cfgStr).digest('hex');\n          var backupPath = CONFIG_PATH + '.' + hash.substring(0, 16);\n          fs.writeFileSync(backupPath, cfgStr);\n          logger.info(\"Current configurations are written up to \".concat(backupPath)); // Migrate config\n\n          cfg = migrator.migrate(cfg); // Save config\n\n          fs.writeFileSync(CONFIG_PATH, yaml.stringify(cfg));\n          logger.info(\"\".concat(CONFIG_PATH, \" upgraded successfully.\"));\n\n          var _defaultValue = schema.getDefaultValue();\n\n          fs.writeFileSync(CONFIG_PATH + '.example', _defaultValue.toYaml());\n          logger.info(\"We also created an example at \".concat(CONFIG_PATH + '.example', \" for your reference.\"));\n        }\n      } // Check config file against schemas\n\n\n      var result = schema.validate(cfg);\n\n      if (result !== true) {\n        logger.warn('Configuration file failed one or more checks.');\n        logger.warn('Icarus may still run, but you will encounter excepted results.');\n        logger.warn('Here is some information for you to correct the configuration file.');\n        logger.warn(util.inspect(result));\n      }\n    } catch (e) {\n      logger.error(e);\n      logger.error(\"Failed to load the configuration file \".concat(CONFIG_PATH, \".\"));\n      logger.error('Please add \\'--icarus-dont-check-config\\' to your Hexo command if you');\n      logger.error('wish to skip the config file checking.');\n      process.exit(-1);\n    }\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJwYXRoIiwidXRpbCIsImNyeXB0byIsImxvZ2dlciIsIm1vZHVsZSIsImV4cG9ydHMiLCJoZXhvIiwicHJvY2VzcyIsImFyZ3YiLCJpbmNsdWRlcyIsIlNDSEVNQV9ST09UIiwiam9pbiIsInRoZW1lX2RpciIsIkNPTkZJR19QQVRIIiwieWFtbCIsIlNjaGVtYUxvYWRlciIsImxvYWRlciIsImxvYWQiLCJzY2hlbWEiLCJnZXRTY2hlbWEiLCJpbmZvIiwiZXhpc3RzU3luYyIsIndhcm4iLCJkZWZhdWx0VmFsdWUiLCJnZXREZWZhdWx0VmFsdWUiLCJ3cml0ZUZpbGVTeW5jIiwidG9ZYW1sIiwiY2ZnU3RyIiwicmVhZEZpbGVTeW5jIiwiY2ZnIiwicGFyc2UiLCJtaWdyYXRvciIsImlzT3VkYXRlZCIsInZlcnNpb24iLCJnZXRMYXRlc3RWZXJzaW9uIiwiaGFzaCIsImNyZWF0ZUhhc2giLCJ1cGRhdGUiLCJkaWdlc3QiLCJiYWNrdXBQYXRoIiwic3Vic3RyaW5nIiwibWlncmF0ZSIsInN0cmluZ2lmeSIsInJlc3VsdCIsInZhbGlkYXRlIiwiaW5zcGVjdCIsImUiLCJlcnJvciIsImV4aXQiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNRyxNQUFNLEdBQUdILE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLElBQU1JLE1BQU0sR0FBR0osT0FBTyxDQUFDLFVBQUQsQ0FBUCxFQUFmOztBQUVBSyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQUMsSUFBSSxFQUFJO0FBQ3JCLE1BQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFSLENBQWFDLFFBQWIsQ0FBc0IsNEJBQXRCLENBQUwsRUFBMEQ7QUFDdEQsUUFBTUMsV0FBVyxHQUFHVixJQUFJLENBQUNXLElBQUwsQ0FBVUwsSUFBSSxDQUFDTSxTQUFmLEVBQTBCLGlCQUExQixDQUFwQjtBQUNBLFFBQU1DLFdBQVcsR0FBR2IsSUFBSSxDQUFDVyxJQUFMLENBQVVMLElBQUksQ0FBQ00sU0FBZixFQUEwQixhQUExQixDQUFwQjs7QUFFQSxRQUFNRSxJQUFJLEdBQUdmLE9BQU8sQ0FBQyxzQ0FBRCxDQUFwQjs7QUFKc0QsbUJBSzdCQSxPQUFPLENBQUMsd0NBQUQsQ0FMc0I7QUFBQSxRQUs5Q2dCLFlBTDhDLFlBSzlDQSxZQUw4Qzs7QUFNdEQsUUFBTUMsTUFBTSxHQUFHRCxZQUFZLENBQUNFLElBQWIsQ0FBa0JsQixPQUFPLENBQUNDLElBQUksQ0FBQ1csSUFBTCxDQUFVRCxXQUFWLEVBQXVCLGFBQXZCLENBQUQsQ0FBekIsRUFBa0VBLFdBQWxFLENBQWY7QUFDQSxRQUFNUSxNQUFNLEdBQUdGLE1BQU0sQ0FBQ0csU0FBUCxDQUFpQixjQUFqQixDQUFmO0FBQ0FoQixJQUFBQSxNQUFNLENBQUNpQixJQUFQLENBQVkseUNBQVosRUFSc0QsQ0FVdEQ7O0FBQ0EsUUFBSSxDQUFDYixPQUFPLENBQUNDLElBQVIsQ0FBYUMsUUFBYixDQUFzQiwrQkFBdEIsQ0FBTCxFQUE2RDtBQUN6RCxVQUFJLENBQUNYLEVBQUUsQ0FBQ3VCLFVBQUgsQ0FBY1IsV0FBZCxDQUFMLEVBQWlDO0FBQzdCVixRQUFBQSxNQUFNLENBQUNtQixJQUFQLFdBQWVULFdBQWY7QUFDQVYsUUFBQUEsTUFBTSxDQUFDaUIsSUFBUCxDQUFZLDJGQUFaO0FBQ0EsWUFBTUcsWUFBWSxHQUFHTCxNQUFNLENBQUNNLGVBQVAsRUFBckI7QUFDQTFCLFFBQUFBLEVBQUUsQ0FBQzJCLGFBQUgsQ0FBaUJaLFdBQWpCLEVBQThCVSxZQUFZLENBQUNHLE1BQWIsRUFBOUI7QUFDQXZCLFFBQUFBLE1BQU0sQ0FBQ2lCLElBQVAsV0FBZVAsV0FBZjtBQUNIO0FBQ0o7O0FBRUQsUUFBSTtBQUNBLFVBQU1jLE1BQU0sR0FBRzdCLEVBQUUsQ0FBQzhCLFlBQUgsQ0FBZ0JmLFdBQWhCLENBQWY7QUFDQSxVQUFJZ0IsR0FBRyxHQUFHZixJQUFJLENBQUNnQixLQUFMLENBQVdILE1BQVgsQ0FBVixDQUZBLENBR0E7O0FBQ0EsVUFBSSxDQUFDcEIsT0FBTyxDQUFDQyxJQUFSLENBQWFDLFFBQWIsQ0FBc0IsOEJBQXRCLENBQUwsRUFBNEQ7QUFDeEQsWUFBTXNCLFFBQVEsR0FBRyxLQUFJaEMsT0FBTyxDQUFDLHlDQUFELENBQVgsRUFBd0RDLElBQUksQ0FBQ1csSUFBTCxDQUFVTCxJQUFJLENBQUNNLFNBQWYsRUFBMEIsbUJBQTFCLENBQXhELENBQWpCLENBRHdELENBRXhEOztBQUNBLFlBQUltQixRQUFRLENBQUNDLFNBQVQsQ0FBbUJILEdBQUcsQ0FBQ0ksT0FBdkIsQ0FBSixFQUFxQztBQUNqQzlCLFVBQUFBLE1BQU0sQ0FBQ2lCLElBQVAsQ0FBWSwrQ0FBd0NTLEdBQUcsQ0FBQ0ksT0FBNUMsZ0JBQXlERixRQUFRLENBQUNHLGdCQUFULEVBQXpELFdBQ04seUJBRE4sRUFEaUMsQ0FHakM7O0FBQ0EsY0FBTUMsSUFBSSxHQUFHakMsTUFBTSxDQUFDa0MsVUFBUCxDQUFrQixRQUFsQixFQUE0QkMsTUFBNUIsQ0FBbUNWLE1BQW5DLEVBQTJDVyxNQUEzQyxDQUFrRCxLQUFsRCxDQUFiO0FBQ0EsY0FBTUMsVUFBVSxHQUFHMUIsV0FBVyxHQUFHLEdBQWQsR0FBb0JzQixJQUFJLENBQUNLLFNBQUwsQ0FBZSxDQUFmLEVBQWtCLEVBQWxCLENBQXZDO0FBQ0ExQyxVQUFBQSxFQUFFLENBQUMyQixhQUFILENBQWlCYyxVQUFqQixFQUE2QlosTUFBN0I7QUFDQXhCLFVBQUFBLE1BQU0sQ0FBQ2lCLElBQVAsb0RBQXdEbUIsVUFBeEQsR0FQaUMsQ0FRakM7O0FBQ0FWLFVBQUFBLEdBQUcsR0FBR0UsUUFBUSxDQUFDVSxPQUFULENBQWlCWixHQUFqQixDQUFOLENBVGlDLENBVWpDOztBQUNBL0IsVUFBQUEsRUFBRSxDQUFDMkIsYUFBSCxDQUFpQlosV0FBakIsRUFBOEJDLElBQUksQ0FBQzRCLFNBQUwsQ0FBZWIsR0FBZixDQUE5QjtBQUNBMUIsVUFBQUEsTUFBTSxDQUFDaUIsSUFBUCxXQUFlUCxXQUFmOztBQUNBLGNBQU1VLGFBQVksR0FBR0wsTUFBTSxDQUFDTSxlQUFQLEVBQXJCOztBQUNBMUIsVUFBQUEsRUFBRSxDQUFDMkIsYUFBSCxDQUFpQlosV0FBVyxHQUFHLFVBQS9CLEVBQTJDVSxhQUFZLENBQUNHLE1BQWIsRUFBM0M7QUFDQXZCLFVBQUFBLE1BQU0sQ0FBQ2lCLElBQVAseUNBQTZDUCxXQUFXLEdBQUcsVUFBM0Q7QUFDSDtBQUNKLE9BeEJELENBMEJBOzs7QUFDQSxVQUFNOEIsTUFBTSxHQUFHekIsTUFBTSxDQUFDMEIsUUFBUCxDQUFnQmYsR0FBaEIsQ0FBZjs7QUFDQSxVQUFJYyxNQUFNLEtBQUssSUFBZixFQUFxQjtBQUNqQnhDLFFBQUFBLE1BQU0sQ0FBQ21CLElBQVAsQ0FBWSwrQ0FBWjtBQUNBbkIsUUFBQUEsTUFBTSxDQUFDbUIsSUFBUCxDQUFZLGdFQUFaO0FBQ0FuQixRQUFBQSxNQUFNLENBQUNtQixJQUFQLENBQVkscUVBQVo7QUFDQW5CLFFBQUFBLE1BQU0sQ0FBQ21CLElBQVAsQ0FBWXJCLElBQUksQ0FBQzRDLE9BQUwsQ0FBYUYsTUFBYixDQUFaO0FBQ0g7QUFDSixLQWxDRCxDQWtDRSxPQUFPRyxDQUFQLEVBQVU7QUFDUjNDLE1BQUFBLE1BQU0sQ0FBQzRDLEtBQVAsQ0FBYUQsQ0FBYjtBQUNBM0MsTUFBQUEsTUFBTSxDQUFDNEMsS0FBUCxpREFBc0RsQyxXQUF0RDtBQUNBVixNQUFBQSxNQUFNLENBQUM0QyxLQUFQLENBQWEsdUVBQWI7QUFDQTVDLE1BQUFBLE1BQU0sQ0FBQzRDLEtBQVAsQ0FBYSx3Q0FBYjtBQUNBeEMsTUFBQUEsT0FBTyxDQUFDeUMsSUFBUixDQUFhLENBQUMsQ0FBZDtBQUNIO0FBQ0o7QUFDSixDQWhFRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMzL2luY2x1ZGUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQgbm8tcHJvY2Vzcy1leGl0OiBcIm9mZlwiICovXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKTtcbmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuY29uc3QgbG9nZ2VyID0gcmVxdWlyZSgnaGV4by1sb2cnKSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGhleG8gPT4ge1xuICAgIGlmICghcHJvY2Vzcy5hcmd2LmluY2x1ZGVzKCctLWljYXJ1cy1kb250LWNoZWNrLWNvbmZpZycpKSB7XG4gICAgICAgIGNvbnN0IFNDSEVNQV9ST09UID0gcGF0aC5qb2luKGhleG8udGhlbWVfZGlyLCAnaW5jbHVkZS9zY2hlbWEvJyk7XG4gICAgICAgIGNvbnN0IENPTkZJR19QQVRIID0gcGF0aC5qb2luKGhleG8udGhlbWVfZGlyLCAnX2NvbmZpZy55bWwnKTtcblxuICAgICAgICBjb25zdCB5YW1sID0gcmVxdWlyZSgnaGV4by1jb21wb25lbnQtaW5mZXJuby9saWIvdXRpbC95YW1sJyk7XG4gICAgICAgIGNvbnN0IHsgU2NoZW1hTG9hZGVyIH0gPSByZXF1aXJlKCdoZXhvLWNvbXBvbmVudC1pbmZlcm5vL2xpYi9jb3JlL3NjaGVtYScpO1xuICAgICAgICBjb25zdCBsb2FkZXIgPSBTY2hlbWFMb2FkZXIubG9hZChyZXF1aXJlKHBhdGguam9pbihTQ0hFTUFfUk9PVCwgJ2NvbmZpZy5qc29uJykpLCBTQ0hFTUFfUk9PVCk7XG4gICAgICAgIGNvbnN0IHNjaGVtYSA9IGxvYWRlci5nZXRTY2hlbWEoJy9jb25maWcuanNvbicpO1xuICAgICAgICBsb2dnZXIuaW5mbygnPT09IENoZWNraW5nIHRoZSBjb25maWd1cmF0aW9uIGZpbGUgPT09Jyk7XG5cbiAgICAgICAgLy8gR2VuZXJhdGUgY29uZmlnIGZpbGUgaWYgbm90IGV4aXN0XG4gICAgICAgIGlmICghcHJvY2Vzcy5hcmd2LmluY2x1ZGVzKCctLWljYXJ1cy1kb250LWdlbmVyYXRlLWNvbmZpZycpKSB7XG4gICAgICAgICAgICBpZiAoIWZzLmV4aXN0c1N5bmMoQ09ORklHX1BBVEgpKSB7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLndhcm4oYCR7Q09ORklHX1BBVEh9IGlzIG5vdCBmb3VuZC4gV2UgYXJlIGNyZWF0aW5nIG9uZSBmb3IgeW91Li4uYCk7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oJ1lvdSBtYXkgYWRkIFxcJy0taWNhcnVzLWRvbnQtZ2VuZXJhdGUtY29uZmlnXFwnIHRvIHByZXZlbnQgY3JlYXRpbmcgdGhlIGNvbmZpZ3VyYXRpb24gZmlsZS4nKTtcbiAgICAgICAgICAgICAgICBjb25zdCBkZWZhdWx0VmFsdWUgPSBzY2hlbWEuZ2V0RGVmYXVsdFZhbHVlKCk7XG4gICAgICAgICAgICAgICAgZnMud3JpdGVGaWxlU3luYyhDT05GSUdfUEFUSCwgZGVmYXVsdFZhbHVlLnRvWWFtbCgpKTtcbiAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbyhgJHtDT05GSUdfUEFUSH0gY3JlYXRlZCBzdWNjZXNzZnVsbHkuYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgY2ZnU3RyID0gZnMucmVhZEZpbGVTeW5jKENPTkZJR19QQVRIKTtcbiAgICAgICAgICAgIGxldCBjZmcgPSB5YW1sLnBhcnNlKGNmZ1N0cik7XG4gICAgICAgICAgICAvLyBDaGVjayBjb25maWcgdmVyc2lvblxuICAgICAgICAgICAgaWYgKCFwcm9jZXNzLmFyZ3YuaW5jbHVkZXMoJy0taWNhcnVzLWRvbnQtdXBncmFkZS1jb25maWcnKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG1pZ3JhdG9yID0gbmV3KHJlcXVpcmUoJ2hleG8tY29tcG9uZW50LWluZmVybm8vbGliL2NvcmUvbWlncmF0ZScpKShwYXRoLmpvaW4oaGV4by50aGVtZV9kaXIsICdpbmNsdWRlL21pZ3JhdGlvbicpKTtcbiAgICAgICAgICAgICAgICAvLyBVcGdyYWRlIGNvbmZpZ1xuICAgICAgICAgICAgICAgIGlmIChtaWdyYXRvci5pc091ZGF0ZWQoY2ZnLnZlcnNpb24pKSB7XG4gICAgICAgICAgICAgICAgICAgIGxvZ2dlci5pbmZvKGBZb3VyIGNvbmZpZ3VyYXRpb24gZmlsZSBpcyBvdXRkYXRlZCAoJHtjZmcudmVyc2lvbn0gPCAke21pZ3JhdG9yLmdldExhdGVzdFZlcnNpb24oKX0pLiBgXG4gICAgICAgICAgICAgICAgICAgICAgICArICdUcnlpbmcgdG8gdXBncmFkZSBpdC4uLicpO1xuICAgICAgICAgICAgICAgICAgICAvLyBCYWNrdXAgb2xkIGNvbmZpZ1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBoYXNoID0gY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTI1NicpLnVwZGF0ZShjZmdTdHIpLmRpZ2VzdCgnaGV4Jyk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGJhY2t1cFBhdGggPSBDT05GSUdfUEFUSCArICcuJyArIGhhc2guc3Vic3RyaW5nKDAsIDE2KTtcbiAgICAgICAgICAgICAgICAgICAgZnMud3JpdGVGaWxlU3luYyhiYWNrdXBQYXRoLCBjZmdTdHIpO1xuICAgICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbyhgQ3VycmVudCBjb25maWd1cmF0aW9ucyBhcmUgd3JpdHRlbiB1cCB0byAke2JhY2t1cFBhdGh9YCk7XG4gICAgICAgICAgICAgICAgICAgIC8vIE1pZ3JhdGUgY29uZmlnXG4gICAgICAgICAgICAgICAgICAgIGNmZyA9IG1pZ3JhdG9yLm1pZ3JhdGUoY2ZnKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gU2F2ZSBjb25maWdcbiAgICAgICAgICAgICAgICAgICAgZnMud3JpdGVGaWxlU3luYyhDT05GSUdfUEFUSCwgeWFtbC5zdHJpbmdpZnkoY2ZnKSk7XG4gICAgICAgICAgICAgICAgICAgIGxvZ2dlci5pbmZvKGAke0NPTkZJR19QQVRIfSB1cGdyYWRlZCBzdWNjZXNzZnVsbHkuYCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlZmF1bHRWYWx1ZSA9IHNjaGVtYS5nZXREZWZhdWx0VmFsdWUoKTtcbiAgICAgICAgICAgICAgICAgICAgZnMud3JpdGVGaWxlU3luYyhDT05GSUdfUEFUSCArICcuZXhhbXBsZScsIGRlZmF1bHRWYWx1ZS50b1lhbWwoKSk7XG4gICAgICAgICAgICAgICAgICAgIGxvZ2dlci5pbmZvKGBXZSBhbHNvIGNyZWF0ZWQgYW4gZXhhbXBsZSBhdCAke0NPTkZJR19QQVRIICsgJy5leGFtcGxlJ30gZm9yIHlvdXIgcmVmZXJlbmNlLmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gQ2hlY2sgY29uZmlnIGZpbGUgYWdhaW5zdCBzY2hlbWFzXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBzY2hlbWEudmFsaWRhdGUoY2ZnKTtcbiAgICAgICAgICAgIGlmIChyZXN1bHQgIT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBsb2dnZXIud2FybignQ29uZmlndXJhdGlvbiBmaWxlIGZhaWxlZCBvbmUgb3IgbW9yZSBjaGVja3MuJyk7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLndhcm4oJ0ljYXJ1cyBtYXkgc3RpbGwgcnVuLCBidXQgeW91IHdpbGwgZW5jb3VudGVyIGV4Y2VwdGVkIHJlc3VsdHMuJyk7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLndhcm4oJ0hlcmUgaXMgc29tZSBpbmZvcm1hdGlvbiBmb3IgeW91IHRvIGNvcnJlY3QgdGhlIGNvbmZpZ3VyYXRpb24gZmlsZS4nKTtcbiAgICAgICAgICAgICAgICBsb2dnZXIud2Fybih1dGlsLmluc3BlY3QocmVzdWx0KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGxvZ2dlci5lcnJvcihlKTtcbiAgICAgICAgICAgIGxvZ2dlci5lcnJvcihgRmFpbGVkIHRvIGxvYWQgdGhlIGNvbmZpZ3VyYXRpb24gZmlsZSAke0NPTkZJR19QQVRIfS5gKTtcbiAgICAgICAgICAgIGxvZ2dlci5lcnJvcignUGxlYXNlIGFkZCBcXCctLWljYXJ1cy1kb250LWNoZWNrLWNvbmZpZ1xcJyB0byB5b3VyIEhleG8gY29tbWFuZCBpZiB5b3UnKTtcbiAgICAgICAgICAgIGxvZ2dlci5lcnJvcignd2lzaCB0byBza2lwIHRoZSBjb25maWcgZmlsZSBjaGVja2luZy4nKTtcbiAgICAgICAgICAgIHByb2Nlc3MuZXhpdCgtMSk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "util",
        "crypto",
        "logger",
        "module",
        "exports",
        "hexo",
        "process",
        "argv",
        "includes",
        "SCHEMA_ROOT",
        "join",
        "theme_dir",
        "CONFIG_PATH",
        "yaml",
        "SchemaLoader",
        "loader",
        "load",
        "schema",
        "getSchema",
        "info",
        "existsSync",
        "warn",
        "defaultValue",
        "getDefaultValue",
        "writeFileSync",
        "toYaml",
        "cfgStr",
        "readFileSync",
        "cfg",
        "parse",
        "migrator",
        "isOudated",
        "version",
        "getLatestVersion",
        "hash",
        "createHash",
        "update",
        "digest",
        "backupPath",
        "substring",
        "migrate",
        "stringify",
        "result",
        "validate",
        "inspect",
        "e",
        "error",
        "exit"
      ],
      "mappings": ";;AAAA;AACA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAAP,EAAf;;AAEAK,MAAM,CAACC,OAAP,GAAiB,UAAAC,IAAI,EAAI;AACrB,MAAI,CAACC,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsB,4BAAtB,CAAL,EAA0D;AACtD,QAAMC,WAAW,GAAGV,IAAI,CAACW,IAAL,CAAUL,IAAI,CAACM,SAAf,EAA0B,iBAA1B,CAApB;AACA,QAAMC,WAAW,GAAGb,IAAI,CAACW,IAAL,CAAUL,IAAI,CAACM,SAAf,EAA0B,aAA1B,CAApB;;AAEA,QAAME,IAAI,GAAGf,OAAO,CAAC,sCAAD,CAApB;;AAJsD,mBAK7BA,OAAO,CAAC,wCAAD,CALsB;AAAA,QAK9CgB,YAL8C,YAK9CA,YAL8C;;AAMtD,QAAMC,MAAM,GAAGD,YAAY,CAACE,IAAb,CAAkBlB,OAAO,CAACC,IAAI,CAACW,IAAL,CAAUD,WAAV,EAAuB,aAAvB,CAAD,CAAzB,EAAkEA,WAAlE,CAAf;AACA,QAAMQ,MAAM,GAAGF,MAAM,CAACG,SAAP,CAAiB,cAAjB,CAAf;AACAhB,IAAAA,MAAM,CAACiB,IAAP,CAAY,yCAAZ,EARsD,CAUtD;;AACA,QAAI,CAACb,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsB,+BAAtB,CAAL,EAA6D;AACzD,UAAI,CAACX,EAAE,CAACuB,UAAH,CAAcR,WAAd,CAAL,EAAiC;AAC7BV,QAAAA,MAAM,CAACmB,IAAP,WAAeT,WAAf;AACAV,QAAAA,MAAM,CAACiB,IAAP,CAAY,2FAAZ;AACA,YAAMG,YAAY,GAAGL,MAAM,CAACM,eAAP,EAArB;AACA1B,QAAAA,EAAE,CAAC2B,aAAH,CAAiBZ,WAAjB,EAA8BU,YAAY,CAACG,MAAb,EAA9B;AACAvB,QAAAA,MAAM,CAACiB,IAAP,WAAeP,WAAf;AACH;AACJ;;AAED,QAAI;AACA,UAAMc,MAAM,GAAG7B,EAAE,CAAC8B,YAAH,CAAgBf,WAAhB,CAAf;AACA,UAAIgB,GAAG,GAAGf,IAAI,CAACgB,KAAL,CAAWH,MAAX,CAAV,CAFA,CAGA;;AACA,UAAI,CAACpB,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsB,8BAAtB,CAAL,EAA4D;AACxD,YAAMsB,QAAQ,GAAG,KAAIhC,OAAO,CAAC,yCAAD,CAAX,EAAwDC,IAAI,CAACW,IAAL,CAAUL,IAAI,CAACM,SAAf,EAA0B,mBAA1B,CAAxD,CAAjB,CADwD,CAExD;;AACA,YAAImB,QAAQ,CAACC,SAAT,CAAmBH,GAAG,CAACI,OAAvB,CAAJ,EAAqC;AACjC9B,UAAAA,MAAM,CAACiB,IAAP,CAAY,+CAAwCS,GAAG,CAACI,OAA5C,gBAAyDF,QAAQ,CAACG,gBAAT,EAAzD,WACN,yBADN,EADiC,CAGjC;;AACA,cAAMC,IAAI,GAAGjC,MAAM,CAACkC,UAAP,CAAkB,QAAlB,EAA4BC,MAA5B,CAAmCV,MAAnC,EAA2CW,MAA3C,CAAkD,KAAlD,CAAb;AACA,cAAMC,UAAU,GAAG1B,WAAW,GAAG,GAAd,GAAoBsB,IAAI,CAACK,SAAL,CAAe,CAAf,EAAkB,EAAlB,CAAvC;AACA1C,UAAAA,EAAE,CAAC2B,aAAH,CAAiBc,UAAjB,EAA6BZ,MAA7B;AACAxB,UAAAA,MAAM,CAACiB,IAAP,oDAAwDmB,UAAxD,GAPiC,CAQjC;;AACAV,UAAAA,GAAG,GAAGE,QAAQ,CAACU,OAAT,CAAiBZ,GAAjB,CAAN,CATiC,CAUjC;;AACA/B,UAAAA,EAAE,CAAC2B,aAAH,CAAiBZ,WAAjB,EAA8BC,IAAI,CAAC4B,SAAL,CAAeb,GAAf,CAA9B;AACA1B,UAAAA,MAAM,CAACiB,IAAP,WAAeP,WAAf;;AACA,cAAMU,aAAY,GAAGL,MAAM,CAACM,eAAP,EAArB;;AACA1B,UAAAA,EAAE,CAAC2B,aAAH,CAAiBZ,WAAW,GAAG,UAA/B,EAA2CU,aAAY,CAACG,MAAb,EAA3C;AACAvB,UAAAA,MAAM,CAACiB,IAAP,yCAA6CP,WAAW,GAAG,UAA3D;AACH;AACJ,OAxBD,CA0BA;;;AACA,UAAM8B,MAAM,GAAGzB,MAAM,CAAC0B,QAAP,CAAgBf,GAAhB,CAAf;;AACA,UAAIc,MAAM,KAAK,IAAf,EAAqB;AACjBxC,QAAAA,MAAM,CAACmB,IAAP,CAAY,+CAAZ;AACAnB,QAAAA,MAAM,CAACmB,IAAP,CAAY,gEAAZ;AACAnB,QAAAA,MAAM,CAACmB,IAAP,CAAY,qEAAZ;AACAnB,QAAAA,MAAM,CAACmB,IAAP,CAAYrB,IAAI,CAAC4C,OAAL,CAAaF,MAAb,CAAZ;AACH;AACJ,KAlCD,CAkCE,OAAOG,CAAP,EAAU;AACR3C,MAAAA,MAAM,CAAC4C,KAAP,CAAaD,CAAb;AACA3C,MAAAA,MAAM,CAAC4C,KAAP,iDAAsDlC,WAAtD;AACAV,MAAAA,MAAM,CAAC4C,KAAP,CAAa,uEAAb;AACA5C,MAAAA,MAAM,CAAC4C,KAAP,CAAa,wCAAb;AACAxC,MAAAA,OAAO,CAACyC,IAAR,CAAa,CAAC,CAAd;AACH;AACJ;AACJ,CAhED",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/include",
      "sourcesContent": [
        "/* eslint no-process-exit: \"off\" */\nconst fs = require('fs');\nconst path = require('path');\nconst util = require('util');\nconst crypto = require('crypto');\nconst logger = require('hexo-log')();\n\nmodule.exports = hexo => {\n    if (!process.argv.includes('--icarus-dont-check-config')) {\n        const SCHEMA_ROOT = path.join(hexo.theme_dir, 'include/schema/');\n        const CONFIG_PATH = path.join(hexo.theme_dir, '_config.yml');\n\n        const yaml = require('hexo-component-inferno/lib/util/yaml');\n        const { SchemaLoader } = require('hexo-component-inferno/lib/core/schema');\n        const loader = SchemaLoader.load(require(path.join(SCHEMA_ROOT, 'config.json')), SCHEMA_ROOT);\n        const schema = loader.getSchema('/config.json');\n        logger.info('=== Checking the configuration file ===');\n\n        // Generate config file if not exist\n        if (!process.argv.includes('--icarus-dont-generate-config')) {\n            if (!fs.existsSync(CONFIG_PATH)) {\n                logger.warn(`${CONFIG_PATH} is not found. We are creating one for you...`);\n                logger.info('You may add \\'--icarus-dont-generate-config\\' to prevent creating the configuration file.');\n                const defaultValue = schema.getDefaultValue();\n                fs.writeFileSync(CONFIG_PATH, defaultValue.toYaml());\n                logger.info(`${CONFIG_PATH} created successfully.`);\n            }\n        }\n\n        try {\n            const cfgStr = fs.readFileSync(CONFIG_PATH);\n            let cfg = yaml.parse(cfgStr);\n            // Check config version\n            if (!process.argv.includes('--icarus-dont-upgrade-config')) {\n                const migrator = new(require('hexo-component-inferno/lib/core/migrate'))(path.join(hexo.theme_dir, 'include/migration'));\n                // Upgrade config\n                if (migrator.isOudated(cfg.version)) {\n                    logger.info(`Your configuration file is outdated (${cfg.version} < ${migrator.getLatestVersion()}). `\n                        + 'Trying to upgrade it...');\n                    // Backup old config\n                    const hash = crypto.createHash('sha256').update(cfgStr).digest('hex');\n                    const backupPath = CONFIG_PATH + '.' + hash.substring(0, 16);\n                    fs.writeFileSync(backupPath, cfgStr);\n                    logger.info(`Current configurations are written up to ${backupPath}`);\n                    // Migrate config\n                    cfg = migrator.migrate(cfg);\n                    // Save config\n                    fs.writeFileSync(CONFIG_PATH, yaml.stringify(cfg));\n                    logger.info(`${CONFIG_PATH} upgraded successfully.`);\n                    const defaultValue = schema.getDefaultValue();\n                    fs.writeFileSync(CONFIG_PATH + '.example', defaultValue.toYaml());\n                    logger.info(`We also created an example at ${CONFIG_PATH + '.example'} for your reference.`);\n                }\n            }\n\n            // Check config file against schemas\n            const result = schema.validate(cfg);\n            if (result !== true) {\n                logger.warn('Configuration file failed one or more checks.');\n                logger.warn('Icarus may still run, but you will encounter excepted results.');\n                logger.warn('Here is some information for you to correct the configuration file.');\n                logger.warn(util.inspect(result));\n            }\n        } catch (e) {\n            logger.error(e);\n            logger.error(`Failed to load the configuration file ${CONFIG_PATH}.`);\n            logger.error('Please add \\'--icarus-dont-check-config\\' to your Hexo command if you');\n            logger.error('wish to skip the config file checking.');\n            process.exit(-1);\n        }\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/include/migration\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/include/migration/head.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/include/migration",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/include/migration/head.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/include/migration/head.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/include/migration/head.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/include/migration",
        "sourceFileName": "head.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = require('./v2_v3');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYWQuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkMsT0FBTyxDQUFDLFNBQUQsQ0FBeEIiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzMy9pbmNsdWRlL21pZ3JhdGlvbiIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi92Ml92MycpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "head.js"
      ],
      "names": [
        "module",
        "exports",
        "require"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiBC,OAAO,CAAC,SAAD,CAAxB",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/include/migration",
      "sourcesContent": [
        "module.exports = require('./v2_v3');\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/include/migration\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/include/migration/v2_v3.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/include/migration",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/include/migration/v2_v3.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/include/migration/v2_v3.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/include/migration/v2_v3.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/include/migration",
        "sourceFileName": "v2_v3.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar logger = require('hexo-log')();\n\nvar deepmerge = require('deepmerge');\n\nvar Migration = require('hexo-component-inferno/lib/core/migrate').Migration;\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Migration) {\n  _inherits(_class, _Migration);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, '3.0.0', null));\n  }\n\n  _createClass(_class, [{\n    key: \"upgrade\",\n    value: function upgrade(config) {\n      var result = deepmerge({}, config);\n      result.head = {\n        favicon: config.favicon || null,\n        canonical_url: config.canonical_url || null,\n        open_graph: config.open_graph || null,\n        meta: config.meta || null,\n        rss: config.rss || null\n      };\n      delete result.favicon;\n      delete result.canonical_url;\n      delete result.open_graph;\n      delete result.meta;\n      delete result.rss;\n\n      if (result.logo === '/images/logo.svg') {\n        result.logo = result.logo.replace(/^\\/images/, '/img');\n      }\n\n      if (result.head.favicon === '/img/favicon.svg') {\n        result.head.favicon = result.head.favicon.replace(/^\\/images/, '/img');\n      }\n\n      if (result.search && Object.prototype.hasOwnProperty.call(result.search, 'type')) {\n        switch (result.search.type) {\n          case 'google-cse':\n            result.search.type = 'google_cse';\n            break;\n        }\n      }\n\n      if (result.comment && Object.prototype.hasOwnProperty.call(result.comment, 'type')) {\n        switch (result.comment.type) {\n          case 'changyan':\n            result.comment.app_id = config.comment.appid;\n            delete result.comment.appid;\n            break;\n        }\n      }\n\n      if (Array.isArray(result.donate) && result.donate.length) {\n        result.donates = result.donate;\n        delete result.donate;\n      }\n\n      if (Array.isArray(result.widgets) && result.widgets.length) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = result.widgets[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var widget = _step.value;\n\n            if (Object.prototype.hasOwnProperty.call(widget, 'type')) {\n              switch (widget.type) {\n                case 'archive':\n                  widget.type = 'archives';\n                  break;\n\n                case 'category':\n                  widget.type = 'categories';\n                  break;\n\n                case 'tag':\n                  widget.type = 'tags';\n                  break;\n\n                case 'tagcloud':\n                  logger.warn('The tagcloud widget has been removed from Icarus in version 3.0.0.');\n                  logger.warn('Please remove it from your configuration file.');\n                  break;\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      if (result.plugins && _typeof(result.plugins) === 'object') {\n        for (var name in result.plugins) {\n          switch (name) {\n            case 'outdated-browser':\n              result.plugins.outdated_browser = result.plugins[name];\n              delete result.plugins[name];\n              break;\n\n            case 'back-to-top':\n              result.plugins.back_to_top = result.plugins[name];\n              delete result.plugins[name];\n              break;\n\n            case 'baidu-analytics':\n              result.plugins.baidu_analytics = result.plugins[name];\n              delete result.plugins[name];\n              break;\n\n            case 'google-analytics':\n              result.plugins.google_analytics = result.plugins[name];\n              delete result.plugins[name];\n              break;\n          }\n        }\n      }\n\n      return result;\n    }\n  }]);\n\n  return _class;\n}(Migration);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "v2_v3.js"
      ],
      "names": [
        "logger",
        "require",
        "deepmerge",
        "Migration",
        "module",
        "exports",
        "config",
        "result",
        "head",
        "favicon",
        "canonical_url",
        "open_graph",
        "meta",
        "rss",
        "logo",
        "replace",
        "search",
        "Object",
        "prototype",
        "hasOwnProperty",
        "call",
        "type",
        "comment",
        "app_id",
        "appid",
        "Array",
        "isArray",
        "donate",
        "length",
        "donates",
        "widgets",
        "widget",
        "warn",
        "plugins",
        "name",
        "outdated_browser",
        "back_to_top",
        "baidu_analytics",
        "google_analytics"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAP,EAAf;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,yCAAD,CAAP,CAAmDE,SAArE;;AAEAC,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AACI,oBAAc;AAAA;;AAAA,+EACJ,OADI,EACK,IADL;AAEb;;AAHL;AAAA;AAAA,4BAKYC,MALZ,EAKoB;AACZ,UAAMC,MAAM,GAAGL,SAAS,CAAC,EAAD,EAAKI,MAAL,CAAxB;AACAC,MAAAA,MAAM,CAACC,IAAP,GAAc;AACVC,QAAAA,OAAO,EAAEH,MAAM,CAACG,OAAP,IAAkB,IADjB;AAEVC,QAAAA,aAAa,EAAEJ,MAAM,CAACI,aAAP,IAAwB,IAF7B;AAGVC,QAAAA,UAAU,EAAEL,MAAM,CAACK,UAAP,IAAqB,IAHvB;AAIVC,QAAAA,IAAI,EAAEN,MAAM,CAACM,IAAP,IAAe,IAJX;AAKVC,QAAAA,GAAG,EAAEP,MAAM,CAACO,GAAP,IAAc;AALT,OAAd;AAOA,aAAON,MAAM,CAACE,OAAd;AACA,aAAOF,MAAM,CAACG,aAAd;AACA,aAAOH,MAAM,CAACI,UAAd;AACA,aAAOJ,MAAM,CAACK,IAAd;AACA,aAAOL,MAAM,CAACM,GAAd;;AAEA,UAAIN,MAAM,CAACO,IAAP,KAAgB,kBAApB,EAAwC;AACpCP,QAAAA,MAAM,CAACO,IAAP,GAAcP,MAAM,CAACO,IAAP,CAAYC,OAAZ,CAAoB,WAApB,EAAiC,MAAjC,CAAd;AACH;;AAED,UAAIR,MAAM,CAACC,IAAP,CAAYC,OAAZ,KAAwB,kBAA5B,EAAgD;AAC5CF,QAAAA,MAAM,CAACC,IAAP,CAAYC,OAAZ,GAAsBF,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBM,OAApB,CAA4B,WAA5B,EAAyC,MAAzC,CAAtB;AACH;;AAED,UAAIR,MAAM,CAACS,MAAP,IAAiBC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCb,MAAM,CAACS,MAA5C,EAAoD,MAApD,CAArB,EAAkF;AAC9E,gBAAQT,MAAM,CAACS,MAAP,CAAcK,IAAtB;AACI,eAAK,YAAL;AACId,YAAAA,MAAM,CAACS,MAAP,CAAcK,IAAd,GAAqB,YAArB;AACA;AAHR;AAKH;;AAED,UAAId,MAAM,CAACe,OAAP,IAAkBL,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCb,MAAM,CAACe,OAA5C,EAAqD,MAArD,CAAtB,EAAoF;AAChF,gBAAQf,MAAM,CAACe,OAAP,CAAeD,IAAvB;AACI,eAAK,UAAL;AACId,YAAAA,MAAM,CAACe,OAAP,CAAeC,MAAf,GAAwBjB,MAAM,CAACgB,OAAP,CAAeE,KAAvC;AACA,mBAAOjB,MAAM,CAACe,OAAP,CAAeE,KAAtB;AACA;AAJR;AAMH;;AAED,UAAIC,KAAK,CAACC,OAAN,CAAcnB,MAAM,CAACoB,MAArB,KAAgCpB,MAAM,CAACoB,MAAP,CAAcC,MAAlD,EAA0D;AACtDrB,QAAAA,MAAM,CAACsB,OAAP,GAAiBtB,MAAM,CAACoB,MAAxB;AACA,eAAOpB,MAAM,CAACoB,MAAd;AACH;;AAED,UAAIF,KAAK,CAACC,OAAN,CAAcnB,MAAM,CAACuB,OAArB,KAAiCvB,MAAM,CAACuB,OAAP,CAAeF,MAApD,EAA4D;AAAA;AAAA;AAAA;;AAAA;AACxD,+BAAqBrB,MAAM,CAACuB,OAA5B,8HAAqC;AAAA,gBAA1BC,MAA0B;;AACjC,gBAAId,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCW,MAArC,EAA6C,MAA7C,CAAJ,EAA0D;AACtD,sBAAQA,MAAM,CAACV,IAAf;AACI,qBAAK,SAAL;AACIU,kBAAAA,MAAM,CAACV,IAAP,GAAc,UAAd;AACA;;AACJ,qBAAK,UAAL;AACIU,kBAAAA,MAAM,CAACV,IAAP,GAAc,YAAd;AACA;;AACJ,qBAAK,KAAL;AACIU,kBAAAA,MAAM,CAACV,IAAP,GAAc,MAAd;AACA;;AACJ,qBAAK,UAAL;AACIrB,kBAAAA,MAAM,CAACgC,IAAP,CAAY,oEAAZ;AACAhC,kBAAAA,MAAM,CAACgC,IAAP,CAAY,gDAAZ;AACA;AAbR;AAeH;AACJ;AAnBuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoB3D;;AAED,UAAIzB,MAAM,CAAC0B,OAAP,IAAkB,QAAO1B,MAAM,CAAC0B,OAAd,MAA0B,QAAhD,EAA0D;AACtD,aAAK,IAAMC,IAAX,IAAmB3B,MAAM,CAAC0B,OAA1B,EAAmC;AAC/B,kBAAQC,IAAR;AACI,iBAAK,kBAAL;AACI3B,cAAAA,MAAM,CAAC0B,OAAP,CAAeE,gBAAf,GAAkC5B,MAAM,CAAC0B,OAAP,CAAeC,IAAf,CAAlC;AACA,qBAAO3B,MAAM,CAAC0B,OAAP,CAAeC,IAAf,CAAP;AACA;;AACJ,iBAAK,aAAL;AACI3B,cAAAA,MAAM,CAAC0B,OAAP,CAAeG,WAAf,GAA6B7B,MAAM,CAAC0B,OAAP,CAAeC,IAAf,CAA7B;AACA,qBAAO3B,MAAM,CAAC0B,OAAP,CAAeC,IAAf,CAAP;AACA;;AACJ,iBAAK,iBAAL;AACI3B,cAAAA,MAAM,CAAC0B,OAAP,CAAeI,eAAf,GAAiC9B,MAAM,CAAC0B,OAAP,CAAeC,IAAf,CAAjC;AACA,qBAAO3B,MAAM,CAAC0B,OAAP,CAAeC,IAAf,CAAP;AACA;;AACJ,iBAAK,kBAAL;AACI3B,cAAAA,MAAM,CAAC0B,OAAP,CAAeK,gBAAf,GAAkC/B,MAAM,CAAC0B,OAAP,CAAeC,IAAf,CAAlC;AACA,qBAAO3B,MAAM,CAAC0B,OAAP,CAAeC,IAAf,CAAP;AACA;AAhBR;AAkBH;AACJ;;AAED,aAAO3B,MAAP;AACH;AAhGL;;AAAA;AAAA,EAA+BJ,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/include/migration",
      "sourcesContent": [
        "const logger = require('hexo-log')();\nconst deepmerge = require('deepmerge');\nconst Migration = require('hexo-component-inferno/lib/core/migrate').Migration;\n\nmodule.exports = class extends Migration {\n    constructor() {\n        super('3.0.0', null);\n    }\n\n    upgrade(config) {\n        const result = deepmerge({}, config);\n        result.head = {\n            favicon: config.favicon || null,\n            canonical_url: config.canonical_url || null,\n            open_graph: config.open_graph || null,\n            meta: config.meta || null,\n            rss: config.rss || null\n        };\n        delete result.favicon;\n        delete result.canonical_url;\n        delete result.open_graph;\n        delete result.meta;\n        delete result.rss;\n\n        if (result.logo === '/images/logo.svg') {\n            result.logo = result.logo.replace(/^\\/images/, '/img');\n        }\n\n        if (result.head.favicon === '/img/favicon.svg') {\n            result.head.favicon = result.head.favicon.replace(/^\\/images/, '/img');\n        }\n\n        if (result.search && Object.prototype.hasOwnProperty.call(result.search, 'type')) {\n            switch (result.search.type) {\n                case 'google-cse':\n                    result.search.type = 'google_cse';\n                    break;\n            }\n        }\n\n        if (result.comment && Object.prototype.hasOwnProperty.call(result.comment, 'type')) {\n            switch (result.comment.type) {\n                case 'changyan':\n                    result.comment.app_id = config.comment.appid;\n                    delete result.comment.appid;\n                    break;\n            }\n        }\n\n        if (Array.isArray(result.donate) && result.donate.length) {\n            result.donates = result.donate;\n            delete result.donate;\n        }\n\n        if (Array.isArray(result.widgets) && result.widgets.length) {\n            for (const widget of result.widgets) {\n                if (Object.prototype.hasOwnProperty.call(widget, 'type')) {\n                    switch (widget.type) {\n                        case 'archive':\n                            widget.type = 'archives';\n                            break;\n                        case 'category':\n                            widget.type = 'categories';\n                            break;\n                        case 'tag':\n                            widget.type = 'tags';\n                            break;\n                        case 'tagcloud':\n                            logger.warn('The tagcloud widget has been removed from Icarus in version 3.0.0.');\n                            logger.warn('Please remove it from your configuration file.');\n                            break;\n                    }\n                }\n            }\n        }\n\n        if (result.plugins && typeof result.plugins === 'object') {\n            for (const name in result.plugins) {\n                switch (name) {\n                    case 'outdated-browser':\n                        result.plugins.outdated_browser = result.plugins[name];\n                        delete result.plugins[name];\n                        break;\n                    case 'back-to-top':\n                        result.plugins.back_to_top = result.plugins[name];\n                        delete result.plugins[name];\n                        break;\n                    case 'baidu-analytics':\n                        result.plugins.baidu_analytics = result.plugins[name];\n                        delete result.plugins[name];\n                        break;\n                    case 'google-analytics':\n                        result.plugins.google_analytics = result.plugins[name];\n                        delete result.plugins[name];\n                        break;\n                }\n            }\n        }\n\n        return result;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581405672109
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/include\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/include/register.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/include",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/include/register.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/include/register.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/include/register.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/include",
        "sourceFileName": "register.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar logger = require('hexo-log')();\n\nmodule.exports = function (hexo) {\n  logger.info('=== Registering Hexo extensions ===');\n\n  require('hexo-component-inferno/lib/hexo/filter/locals')(hexo);\n\n  require('./generator/category')(hexo);\n\n  require('./generator/insight')(hexo);\n\n  require('hexo-component-inferno/lib/hexo/generator/categories')(hexo);\n\n  require('hexo-component-inferno/lib/hexo/generator/tags')(hexo);\n\n  require('hexo-component-inferno/lib/hexo/helper/cdn')(hexo);\n\n  require('hexo-component-inferno/lib/hexo/helper/page')(hexo);\n\n  require('hexo-component-inferno/lib/hexo/helper/thumbnail')(hexo);\n\n  require('hexo-component-inferno/lib/core/view').init(hexo);\n\n  var hooks = ['after_render:html', 'after_post_render'];\n  var filters = ['hexoMetaGeneratorInject', 'externalLinkFilter'];\n  hooks.forEach(function (hook) {\n    hexo.extend.filter.list()[hook].filter(function (filter) {\n      return filters.includes(filter.name);\n    }).forEach(function (filter) {\n      return hexo.extend.filter.unregister(hook, filter);\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLmpzIl0sIm5hbWVzIjpbImxvZ2dlciIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiaGV4byIsImluZm8iLCJpbml0IiwiaG9va3MiLCJmaWx0ZXJzIiwiZm9yRWFjaCIsImhvb2siLCJleHRlbmQiLCJmaWx0ZXIiLCJsaXN0IiwiaW5jbHVkZXMiLCJuYW1lIiwidW5yZWdpc3RlciJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQVAsRUFBZjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLElBQUksRUFBSTtBQUNyQkosRUFBQUEsTUFBTSxDQUFDSyxJQUFQLENBQVkscUNBQVo7O0FBQ0FKLEVBQUFBLE9BQU8sQ0FBQywrQ0FBRCxDQUFQLENBQXlERyxJQUF6RDs7QUFDQUgsRUFBQUEsT0FBTyxDQUFDLHNCQUFELENBQVAsQ0FBZ0NHLElBQWhDOztBQUNBSCxFQUFBQSxPQUFPLENBQUMscUJBQUQsQ0FBUCxDQUErQkcsSUFBL0I7O0FBQ0FILEVBQUFBLE9BQU8sQ0FBQyxzREFBRCxDQUFQLENBQWdFRyxJQUFoRTs7QUFDQUgsRUFBQUEsT0FBTyxDQUFDLGdEQUFELENBQVAsQ0FBMERHLElBQTFEOztBQUNBSCxFQUFBQSxPQUFPLENBQUMsNENBQUQsQ0FBUCxDQUFzREcsSUFBdEQ7O0FBQ0FILEVBQUFBLE9BQU8sQ0FBQyw2Q0FBRCxDQUFQLENBQXVERyxJQUF2RDs7QUFDQUgsRUFBQUEsT0FBTyxDQUFDLGtEQUFELENBQVAsQ0FBNERHLElBQTVEOztBQUNBSCxFQUFBQSxPQUFPLENBQUMsc0NBQUQsQ0FBUCxDQUFnREssSUFBaEQsQ0FBcURGLElBQXJEOztBQUVBLE1BQU1HLEtBQUssR0FBRyxDQUNWLG1CQURVLEVBRVYsbUJBRlUsQ0FBZDtBQUlBLE1BQU1DLE9BQU8sR0FBRyxDQUNaLHlCQURZLEVBRVosb0JBRlksQ0FBaEI7QUFJQUQsRUFBQUEsS0FBSyxDQUFDRSxPQUFOLENBQWMsVUFBQUMsSUFBSSxFQUFJO0FBQ2xCTixJQUFBQSxJQUFJLENBQUNPLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkMsSUFBbkIsR0FBMEJILElBQTFCLEVBQ0tFLE1BREwsQ0FDWSxVQUFBQSxNQUFNO0FBQUEsYUFBSUosT0FBTyxDQUFDTSxRQUFSLENBQWlCRixNQUFNLENBQUNHLElBQXhCLENBQUo7QUFBQSxLQURsQixFQUVLTixPQUZMLENBRWEsVUFBQUcsTUFBTTtBQUFBLGFBQUlSLElBQUksQ0FBQ08sTUFBTCxDQUFZQyxNQUFaLENBQW1CSSxVQUFuQixDQUE4Qk4sSUFBOUIsRUFBb0NFLE1BQXBDLENBQUo7QUFBQSxLQUZuQjtBQUdILEdBSkQ7QUFLSCxDQXpCRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMzL2luY2x1ZGUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBsb2dnZXIgPSByZXF1aXJlKCdoZXhvLWxvZycpKCk7XG5cbm1vZHVsZS5leHBvcnRzID0gaGV4byA9PiB7XG4gICAgbG9nZ2VyLmluZm8oJz09PSBSZWdpc3RlcmluZyBIZXhvIGV4dGVuc2lvbnMgPT09Jyk7XG4gICAgcmVxdWlyZSgnaGV4by1jb21wb25lbnQtaW5mZXJuby9saWIvaGV4by9maWx0ZXIvbG9jYWxzJykoaGV4byk7XG4gICAgcmVxdWlyZSgnLi9nZW5lcmF0b3IvY2F0ZWdvcnknKShoZXhvKTtcbiAgICByZXF1aXJlKCcuL2dlbmVyYXRvci9pbnNpZ2h0JykoaGV4byk7XG4gICAgcmVxdWlyZSgnaGV4by1jb21wb25lbnQtaW5mZXJuby9saWIvaGV4by9nZW5lcmF0b3IvY2F0ZWdvcmllcycpKGhleG8pO1xuICAgIHJlcXVpcmUoJ2hleG8tY29tcG9uZW50LWluZmVybm8vbGliL2hleG8vZ2VuZXJhdG9yL3RhZ3MnKShoZXhvKTtcbiAgICByZXF1aXJlKCdoZXhvLWNvbXBvbmVudC1pbmZlcm5vL2xpYi9oZXhvL2hlbHBlci9jZG4nKShoZXhvKTtcbiAgICByZXF1aXJlKCdoZXhvLWNvbXBvbmVudC1pbmZlcm5vL2xpYi9oZXhvL2hlbHBlci9wYWdlJykoaGV4byk7XG4gICAgcmVxdWlyZSgnaGV4by1jb21wb25lbnQtaW5mZXJuby9saWIvaGV4by9oZWxwZXIvdGh1bWJuYWlsJykoaGV4byk7XG4gICAgcmVxdWlyZSgnaGV4by1jb21wb25lbnQtaW5mZXJuby9saWIvY29yZS92aWV3JykuaW5pdChoZXhvKTtcblxuICAgIGNvbnN0IGhvb2tzID0gW1xuICAgICAgICAnYWZ0ZXJfcmVuZGVyOmh0bWwnLFxuICAgICAgICAnYWZ0ZXJfcG9zdF9yZW5kZXInXG4gICAgXTtcbiAgICBjb25zdCBmaWx0ZXJzID0gW1xuICAgICAgICAnaGV4b01ldGFHZW5lcmF0b3JJbmplY3QnLFxuICAgICAgICAnZXh0ZXJuYWxMaW5rRmlsdGVyJ1xuICAgIF07XG4gICAgaG9va3MuZm9yRWFjaChob29rID0+IHtcbiAgICAgICAgaGV4by5leHRlbmQuZmlsdGVyLmxpc3QoKVtob29rXVxuICAgICAgICAgICAgLmZpbHRlcihmaWx0ZXIgPT4gZmlsdGVycy5pbmNsdWRlcyhmaWx0ZXIubmFtZSkpXG4gICAgICAgICAgICAuZm9yRWFjaChmaWx0ZXIgPT4gaGV4by5leHRlbmQuZmlsdGVyLnVucmVnaXN0ZXIoaG9vaywgZmlsdGVyKSk7XG4gICAgfSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "register.js"
      ],
      "names": [
        "logger",
        "require",
        "module",
        "exports",
        "hexo",
        "info",
        "init",
        "hooks",
        "filters",
        "forEach",
        "hook",
        "extend",
        "filter",
        "list",
        "includes",
        "name",
        "unregister"
      ],
      "mappings": ";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAP,EAAf;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAAC,IAAI,EAAI;AACrBJ,EAAAA,MAAM,CAACK,IAAP,CAAY,qCAAZ;;AACAJ,EAAAA,OAAO,CAAC,+CAAD,CAAP,CAAyDG,IAAzD;;AACAH,EAAAA,OAAO,CAAC,sBAAD,CAAP,CAAgCG,IAAhC;;AACAH,EAAAA,OAAO,CAAC,qBAAD,CAAP,CAA+BG,IAA/B;;AACAH,EAAAA,OAAO,CAAC,sDAAD,CAAP,CAAgEG,IAAhE;;AACAH,EAAAA,OAAO,CAAC,gDAAD,CAAP,CAA0DG,IAA1D;;AACAH,EAAAA,OAAO,CAAC,4CAAD,CAAP,CAAsDG,IAAtD;;AACAH,EAAAA,OAAO,CAAC,6CAAD,CAAP,CAAuDG,IAAvD;;AACAH,EAAAA,OAAO,CAAC,kDAAD,CAAP,CAA4DG,IAA5D;;AACAH,EAAAA,OAAO,CAAC,sCAAD,CAAP,CAAgDK,IAAhD,CAAqDF,IAArD;;AAEA,MAAMG,KAAK,GAAG,CACV,mBADU,EAEV,mBAFU,CAAd;AAIA,MAAMC,OAAO,GAAG,CACZ,yBADY,EAEZ,oBAFY,CAAhB;AAIAD,EAAAA,KAAK,CAACE,OAAN,CAAc,UAAAC,IAAI,EAAI;AAClBN,IAAAA,IAAI,CAACO,MAAL,CAAYC,MAAZ,CAAmBC,IAAnB,GAA0BH,IAA1B,EACKE,MADL,CACY,UAAAA,MAAM;AAAA,aAAIJ,OAAO,CAACM,QAAR,CAAiBF,MAAM,CAACG,IAAxB,CAAJ;AAAA,KADlB,EAEKN,OAFL,CAEa,UAAAG,MAAM;AAAA,aAAIR,IAAI,CAACO,MAAL,CAAYC,MAAZ,CAAmBI,UAAnB,CAA8BN,IAA9B,EAAoCE,MAApC,CAAJ;AAAA,KAFnB;AAGH,GAJD;AAKH,CAzBD",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/include",
      "sourcesContent": [
        "const logger = require('hexo-log')();\n\nmodule.exports = hexo => {\n    logger.info('=== Registering Hexo extensions ===');\n    require('hexo-component-inferno/lib/hexo/filter/locals')(hexo);\n    require('./generator/category')(hexo);\n    require('./generator/insight')(hexo);\n    require('hexo-component-inferno/lib/hexo/generator/categories')(hexo);\n    require('hexo-component-inferno/lib/hexo/generator/tags')(hexo);\n    require('hexo-component-inferno/lib/hexo/helper/cdn')(hexo);\n    require('hexo-component-inferno/lib/hexo/helper/page')(hexo);\n    require('hexo-component-inferno/lib/hexo/helper/thumbnail')(hexo);\n    require('hexo-component-inferno/lib/core/view').init(hexo);\n\n    const hooks = [\n        'after_render:html',\n        'after_post_render'\n    ];\n    const filters = [\n        'hexoMetaGeneratorInject',\n        'externalLinkFilter'\n    ];\n    hooks.forEach(hook => {\n        hexo.extend.filter.list()[hook]\n            .filter(filter => filters.includes(filter.name))\n            .forEach(filter => hexo.extend.filter.unregister(hook, filter));\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/include/generator\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/include/generator/category.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/include/generator",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/include/generator/category.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/include/generator/category.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/include/generator/category.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/include/generator",
        "sourceFileName": "category.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar pagination = require('hexo-pagination');\n\nmodule.exports = function (hexo) {\n  // ATTENTION: This will override the default category generator!\n  hexo.extend.generator.register('category', function (locals) {\n    var config = this.config;\n    var perPage = config.category_generator.per_page;\n    var paginationDir = config.pagination_dir || 'page';\n\n    function findParent(category) {\n      var parents = [];\n\n      if (_typeof(category) === 'object' && 'parent' in category) {\n        var parent = locals.categories.filter(function (cat) {\n          return cat._id === category.parent;\n        }).first();\n        parents = [parent].concat(findParent(parent));\n      }\n\n      return parents;\n    }\n\n    return locals.categories.reduce(function (result, category) {\n      var posts = category.posts.sort('-date');\n      var data = pagination(category.path, posts, {\n        perPage: perPage,\n        layout: ['category', 'archive', 'index'],\n        format: paginationDir + '/%d/',\n        data: {\n          category: category.name,\n          parents: findParent(category)\n        }\n      });\n      return result.concat(data);\n    }, []);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LmpzIl0sIm5hbWVzIjpbInBhZ2luYXRpb24iLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImhleG8iLCJleHRlbmQiLCJnZW5lcmF0b3IiLCJyZWdpc3RlciIsImxvY2FscyIsImNvbmZpZyIsInBlclBhZ2UiLCJjYXRlZ29yeV9nZW5lcmF0b3IiLCJwZXJfcGFnZSIsInBhZ2luYXRpb25EaXIiLCJwYWdpbmF0aW9uX2RpciIsImZpbmRQYXJlbnQiLCJjYXRlZ29yeSIsInBhcmVudHMiLCJwYXJlbnQiLCJjYXRlZ29yaWVzIiwiZmlsdGVyIiwiY2F0IiwiX2lkIiwiZmlyc3QiLCJjb25jYXQiLCJyZWR1Y2UiLCJyZXN1bHQiLCJwb3N0cyIsInNvcnQiLCJkYXRhIiwicGF0aCIsImxheW91dCIsImZvcm1hdCIsIm5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFNQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxpQkFBRCxDQUExQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVNDLElBQVQsRUFBZTtBQUM1QjtBQUNBQSxFQUFBQSxJQUFJLENBQUNDLE1BQUwsQ0FBWUMsU0FBWixDQUFzQkMsUUFBdEIsQ0FBK0IsVUFBL0IsRUFBMkMsVUFBU0MsTUFBVCxFQUFpQjtBQUN4RCxRQUFNQyxNQUFNLEdBQUcsS0FBS0EsTUFBcEI7QUFDQSxRQUFNQyxPQUFPLEdBQUdELE1BQU0sQ0FBQ0Usa0JBQVAsQ0FBMEJDLFFBQTFDO0FBQ0EsUUFBTUMsYUFBYSxHQUFHSixNQUFNLENBQUNLLGNBQVAsSUFBeUIsTUFBL0M7O0FBRUEsYUFBU0MsVUFBVCxDQUFvQkMsUUFBcEIsRUFBOEI7QUFDMUIsVUFBSUMsT0FBTyxHQUFHLEVBQWQ7O0FBQ0EsVUFBSSxRQUFPRCxRQUFQLE1BQW9CLFFBQXBCLElBQWdDLFlBQVlBLFFBQWhELEVBQTBEO0FBQ3RELFlBQU1FLE1BQU0sR0FBR1YsTUFBTSxDQUFDVyxVQUFQLENBQWtCQyxNQUFsQixDQUF5QixVQUFBQyxHQUFHO0FBQUEsaUJBQUlBLEdBQUcsQ0FBQ0MsR0FBSixLQUFZTixRQUFRLENBQUNFLE1BQXpCO0FBQUEsU0FBNUIsRUFBNkRLLEtBQTdELEVBQWY7QUFDQU4sUUFBQUEsT0FBTyxHQUFHLENBQUNDLE1BQUQsRUFBU00sTUFBVCxDQUFnQlQsVUFBVSxDQUFDRyxNQUFELENBQTFCLENBQVY7QUFDSDs7QUFDRCxhQUFPRCxPQUFQO0FBQ0g7O0FBRUQsV0FBT1QsTUFBTSxDQUFDVyxVQUFQLENBQWtCTSxNQUFsQixDQUF5QixVQUFDQyxNQUFELEVBQVNWLFFBQVQsRUFBc0I7QUFDbEQsVUFBTVcsS0FBSyxHQUFHWCxRQUFRLENBQUNXLEtBQVQsQ0FBZUMsSUFBZixDQUFvQixPQUFwQixDQUFkO0FBQ0EsVUFBTUMsSUFBSSxHQUFHN0IsVUFBVSxDQUFDZ0IsUUFBUSxDQUFDYyxJQUFWLEVBQWdCSCxLQUFoQixFQUF1QjtBQUMxQ2pCLFFBQUFBLE9BQU8sRUFBRUEsT0FEaUM7QUFFMUNxQixRQUFBQSxNQUFNLEVBQUUsQ0FBQyxVQUFELEVBQWEsU0FBYixFQUF3QixPQUF4QixDQUZrQztBQUcxQ0MsUUFBQUEsTUFBTSxFQUFFbkIsYUFBYSxHQUFHLE1BSGtCO0FBSTFDZ0IsUUFBQUEsSUFBSSxFQUFFO0FBQ0ZiLFVBQUFBLFFBQVEsRUFBRUEsUUFBUSxDQUFDaUIsSUFEakI7QUFFRmhCLFVBQUFBLE9BQU8sRUFBRUYsVUFBVSxDQUFDQyxRQUFEO0FBRmpCO0FBSm9DLE9BQXZCLENBQXZCO0FBVUEsYUFBT1UsTUFBTSxDQUFDRixNQUFQLENBQWNLLElBQWQsQ0FBUDtBQUNILEtBYk0sRUFhSixFQWJJLENBQVA7QUFjSCxHQTVCRDtBQTZCSCxDQS9CRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMzL2luY2x1ZGUvZ2VuZXJhdG9yIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGFnaW5hdGlvbiA9IHJlcXVpcmUoJ2hleG8tcGFnaW5hdGlvbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGhleG8pIHtcbiAgICAvLyBBVFRFTlRJT046IFRoaXMgd2lsbCBvdmVycmlkZSB0aGUgZGVmYXVsdCBjYXRlZ29yeSBnZW5lcmF0b3IhXG4gICAgaGV4by5leHRlbmQuZ2VuZXJhdG9yLnJlZ2lzdGVyKCdjYXRlZ29yeScsIGZ1bmN0aW9uKGxvY2Fscykge1xuICAgICAgICBjb25zdCBjb25maWcgPSB0aGlzLmNvbmZpZztcbiAgICAgICAgY29uc3QgcGVyUGFnZSA9IGNvbmZpZy5jYXRlZ29yeV9nZW5lcmF0b3IucGVyX3BhZ2U7XG4gICAgICAgIGNvbnN0IHBhZ2luYXRpb25EaXIgPSBjb25maWcucGFnaW5hdGlvbl9kaXIgfHwgJ3BhZ2UnO1xuXG4gICAgICAgIGZ1bmN0aW9uIGZpbmRQYXJlbnQoY2F0ZWdvcnkpIHtcbiAgICAgICAgICAgIGxldCBwYXJlbnRzID0gW107XG4gICAgICAgICAgICBpZiAodHlwZW9mIGNhdGVnb3J5ID09PSAnb2JqZWN0JyAmJiAncGFyZW50JyBpbiBjYXRlZ29yeSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhcmVudCA9IGxvY2Fscy5jYXRlZ29yaWVzLmZpbHRlcihjYXQgPT4gY2F0Ll9pZCA9PT0gY2F0ZWdvcnkucGFyZW50KS5maXJzdCgpO1xuICAgICAgICAgICAgICAgIHBhcmVudHMgPSBbcGFyZW50XS5jb25jYXQoZmluZFBhcmVudChwYXJlbnQpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBwYXJlbnRzO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGxvY2Fscy5jYXRlZ29yaWVzLnJlZHVjZSgocmVzdWx0LCBjYXRlZ29yeSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcG9zdHMgPSBjYXRlZ29yeS5wb3N0cy5zb3J0KCctZGF0ZScpO1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IHBhZ2luYXRpb24oY2F0ZWdvcnkucGF0aCwgcG9zdHMsIHtcbiAgICAgICAgICAgICAgICBwZXJQYWdlOiBwZXJQYWdlLFxuICAgICAgICAgICAgICAgIGxheW91dDogWydjYXRlZ29yeScsICdhcmNoaXZlJywgJ2luZGV4J10sXG4gICAgICAgICAgICAgICAgZm9ybWF0OiBwYWdpbmF0aW9uRGlyICsgJy8lZC8nLFxuICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnk6IGNhdGVnb3J5Lm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudHM6IGZpbmRQYXJlbnQoY2F0ZWdvcnkpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQuY29uY2F0KGRhdGEpO1xuICAgICAgICB9LCBbXSk7XG4gICAgfSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "category.js"
      ],
      "names": [
        "pagination",
        "require",
        "module",
        "exports",
        "hexo",
        "extend",
        "generator",
        "register",
        "locals",
        "config",
        "perPage",
        "category_generator",
        "per_page",
        "paginationDir",
        "pagination_dir",
        "findParent",
        "category",
        "parents",
        "parent",
        "categories",
        "filter",
        "cat",
        "_id",
        "first",
        "concat",
        "reduce",
        "result",
        "posts",
        "sort",
        "data",
        "path",
        "layout",
        "format",
        "name"
      ],
      "mappings": ";;;;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,iBAAD,CAA1B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC5B;AACAA,EAAAA,IAAI,CAACC,MAAL,CAAYC,SAAZ,CAAsBC,QAAtB,CAA+B,UAA/B,EAA2C,UAASC,MAAT,EAAiB;AACxD,QAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,QAAMC,OAAO,GAAGD,MAAM,CAACE,kBAAP,CAA0BC,QAA1C;AACA,QAAMC,aAAa,GAAGJ,MAAM,CAACK,cAAP,IAAyB,MAA/C;;AAEA,aAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC1B,UAAIC,OAAO,GAAG,EAAd;;AACA,UAAI,QAAOD,QAAP,MAAoB,QAApB,IAAgC,YAAYA,QAAhD,EAA0D;AACtD,YAAME,MAAM,GAAGV,MAAM,CAACW,UAAP,CAAkBC,MAAlB,CAAyB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,GAAJ,KAAYN,QAAQ,CAACE,MAAzB;AAAA,SAA5B,EAA6DK,KAA7D,EAAf;AACAN,QAAAA,OAAO,GAAG,CAACC,MAAD,EAASM,MAAT,CAAgBT,UAAU,CAACG,MAAD,CAA1B,CAAV;AACH;;AACD,aAAOD,OAAP;AACH;;AAED,WAAOT,MAAM,CAACW,UAAP,CAAkBM,MAAlB,CAAyB,UAACC,MAAD,EAASV,QAAT,EAAsB;AAClD,UAAMW,KAAK,GAAGX,QAAQ,CAACW,KAAT,CAAeC,IAAf,CAAoB,OAApB,CAAd;AACA,UAAMC,IAAI,GAAG7B,UAAU,CAACgB,QAAQ,CAACc,IAAV,EAAgBH,KAAhB,EAAuB;AAC1CjB,QAAAA,OAAO,EAAEA,OADiC;AAE1CqB,QAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,SAAb,EAAwB,OAAxB,CAFkC;AAG1CC,QAAAA,MAAM,EAAEnB,aAAa,GAAG,MAHkB;AAI1CgB,QAAAA,IAAI,EAAE;AACFb,UAAAA,QAAQ,EAAEA,QAAQ,CAACiB,IADjB;AAEFhB,UAAAA,OAAO,EAAEF,UAAU,CAACC,QAAD;AAFjB;AAJoC,OAAvB,CAAvB;AAUA,aAAOU,MAAM,CAACF,MAAP,CAAcK,IAAd,CAAP;AACH,KAbM,EAaJ,EAbI,CAAP;AAcH,GA5BD;AA6BH,CA/BD",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/include/generator",
      "sourcesContent": [
        "const pagination = require('hexo-pagination');\n\nmodule.exports = function(hexo) {\n    // ATTENTION: This will override the default category generator!\n    hexo.extend.generator.register('category', function(locals) {\n        const config = this.config;\n        const perPage = config.category_generator.per_page;\n        const paginationDir = config.pagination_dir || 'page';\n\n        function findParent(category) {\n            let parents = [];\n            if (typeof category === 'object' && 'parent' in category) {\n                const parent = locals.categories.filter(cat => cat._id === category.parent).first();\n                parents = [parent].concat(findParent(parent));\n            }\n            return parents;\n        }\n\n        return locals.categories.reduce((result, category) => {\n            const posts = category.posts.sort('-date');\n            const data = pagination(category.path, posts, {\n                perPage: perPage,\n                layout: ['category', 'archive', 'index'],\n                format: paginationDir + '/%d/',\n                data: {\n                    category: category.name,\n                    parents: findParent(category)\n                }\n            });\n\n            return result.concat(data);\n        }, []);\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/include/generator\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/include/generator/insight.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/include/generator",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/include/generator/insight.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/include/generator/insight.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/include/generator/insight.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/include/generator",
        "sourceFileName": "insight.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar util = require('hexo-util');\n/**\n * Insight search content.json generator.\n */\n\n\nmodule.exports = function (hexo) {\n  hexo.extend.generator.register('insight', function (locals) {\n    var url_for = hexo.extend.helper.get('url_for').bind(this);\n\n    function minify(str) {\n      return util.stripHTML(str).trim().replace(/\\n/g, ' ').replace(/\\s+/g, ' ').replace(/&#x([\\da-fA-F]+);/g, function (match, hex) {\n        return String.fromCharCode(parseInt(hex, 16));\n      }).replace(/&#([\\d]+);/g, function (match, dec) {\n        return String.fromCharCode(dec);\n      });\n    }\n\n    function postMapper(post) {\n      return {\n        title: post.title,\n        text: minify(post.content),\n        link: url_for(post.path)\n      };\n    }\n\n    function tagMapper(tag) {\n      return {\n        name: tag.name,\n        slug: tag.slug,\n        link: url_for(tag.path)\n      };\n    }\n\n    var site = {\n      pages: locals.pages.map(postMapper),\n      posts: locals.posts.map(postMapper),\n      tags: locals.tags.map(tagMapper),\n      categories: locals.categories.map(tagMapper)\n    };\n    return {\n      path: '/content.json',\n      data: JSON.stringify(site)\n    };\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluc2lnaHQuanMiXSwibmFtZXMiOlsidXRpbCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiaGV4byIsImV4dGVuZCIsImdlbmVyYXRvciIsInJlZ2lzdGVyIiwibG9jYWxzIiwidXJsX2ZvciIsImhlbHBlciIsImdldCIsImJpbmQiLCJtaW5pZnkiLCJzdHIiLCJzdHJpcEhUTUwiLCJ0cmltIiwicmVwbGFjZSIsIm1hdGNoIiwiaGV4IiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwicGFyc2VJbnQiLCJkZWMiLCJwb3N0TWFwcGVyIiwicG9zdCIsInRpdGxlIiwidGV4dCIsImNvbnRlbnQiLCJsaW5rIiwicGF0aCIsInRhZ01hcHBlciIsInRhZyIsIm5hbWUiLCJzbHVnIiwic2l0ZSIsInBhZ2VzIiwibWFwIiwicG9zdHMiLCJ0YWdzIiwiY2F0ZWdvcmllcyIsImRhdGEiLCJKU09OIiwic3RyaW5naWZ5Il0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBcEI7QUFFQTs7Ozs7QUFHQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVNDLElBQVQsRUFBZTtBQUM1QkEsRUFBQUEsSUFBSSxDQUFDQyxNQUFMLENBQVlDLFNBQVosQ0FBc0JDLFFBQXRCLENBQStCLFNBQS9CLEVBQTBDLFVBQVNDLE1BQVQsRUFBaUI7QUFDdkQsUUFBTUMsT0FBTyxHQUFHTCxJQUFJLENBQUNDLE1BQUwsQ0FBWUssTUFBWixDQUFtQkMsR0FBbkIsQ0FBdUIsU0FBdkIsRUFBa0NDLElBQWxDLENBQXVDLElBQXZDLENBQWhCOztBQUNBLGFBQVNDLE1BQVQsQ0FBZ0JDLEdBQWhCLEVBQXFCO0FBQ2pCLGFBQU9kLElBQUksQ0FBQ2UsU0FBTCxDQUFlRCxHQUFmLEVBQW9CRSxJQUFwQixHQUEyQkMsT0FBM0IsQ0FBbUMsS0FBbkMsRUFBMEMsR0FBMUMsRUFBK0NBLE9BQS9DLENBQXVELE1BQXZELEVBQStELEdBQS9ELEVBQ0ZBLE9BREUsQ0FDTSxvQkFETixFQUM0QixVQUFDQyxLQUFELEVBQVFDLEdBQVIsRUFBZ0I7QUFDM0MsZUFBT0MsTUFBTSxDQUFDQyxZQUFQLENBQW9CQyxRQUFRLENBQUNILEdBQUQsRUFBTSxFQUFOLENBQTVCLENBQVA7QUFDSCxPQUhFLEVBSUZGLE9BSkUsQ0FJTSxhQUpOLEVBSXFCLFVBQUNDLEtBQUQsRUFBUUssR0FBUixFQUFnQjtBQUNwQyxlQUFPSCxNQUFNLENBQUNDLFlBQVAsQ0FBb0JFLEdBQXBCLENBQVA7QUFDSCxPQU5FLENBQVA7QUFPSDs7QUFDRCxhQUFTQyxVQUFULENBQW9CQyxJQUFwQixFQUEwQjtBQUN0QixhQUFPO0FBQ0hDLFFBQUFBLEtBQUssRUFBRUQsSUFBSSxDQUFDQyxLQURUO0FBRUhDLFFBQUFBLElBQUksRUFBRWQsTUFBTSxDQUFDWSxJQUFJLENBQUNHLE9BQU4sQ0FGVDtBQUdIQyxRQUFBQSxJQUFJLEVBQUVwQixPQUFPLENBQUNnQixJQUFJLENBQUNLLElBQU47QUFIVixPQUFQO0FBS0g7O0FBQ0QsYUFBU0MsU0FBVCxDQUFtQkMsR0FBbkIsRUFBd0I7QUFDcEIsYUFBTztBQUNIQyxRQUFBQSxJQUFJLEVBQUVELEdBQUcsQ0FBQ0MsSUFEUDtBQUVIQyxRQUFBQSxJQUFJLEVBQUVGLEdBQUcsQ0FBQ0UsSUFGUDtBQUdITCxRQUFBQSxJQUFJLEVBQUVwQixPQUFPLENBQUN1QixHQUFHLENBQUNGLElBQUw7QUFIVixPQUFQO0FBS0g7O0FBQ0QsUUFBTUssSUFBSSxHQUFHO0FBQ1RDLE1BQUFBLEtBQUssRUFBRTVCLE1BQU0sQ0FBQzRCLEtBQVAsQ0FBYUMsR0FBYixDQUFpQmIsVUFBakIsQ0FERTtBQUVUYyxNQUFBQSxLQUFLLEVBQUU5QixNQUFNLENBQUM4QixLQUFQLENBQWFELEdBQWIsQ0FBaUJiLFVBQWpCLENBRkU7QUFHVGUsTUFBQUEsSUFBSSxFQUFFL0IsTUFBTSxDQUFDK0IsSUFBUCxDQUFZRixHQUFaLENBQWdCTixTQUFoQixDQUhHO0FBSVRTLE1BQUFBLFVBQVUsRUFBRWhDLE1BQU0sQ0FBQ2dDLFVBQVAsQ0FBa0JILEdBQWxCLENBQXNCTixTQUF0QjtBQUpILEtBQWI7QUFNQSxXQUFPO0FBQ0hELE1BQUFBLElBQUksRUFBRSxlQURIO0FBRUhXLE1BQUFBLElBQUksRUFBRUMsSUFBSSxDQUFDQyxTQUFMLENBQWVSLElBQWY7QUFGSCxLQUFQO0FBSUgsR0FuQ0Q7QUFvQ0gsQ0FyQ0QiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzMy9pbmNsdWRlL2dlbmVyYXRvciIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHV0aWwgPSByZXF1aXJlKCdoZXhvLXV0aWwnKTtcblxuLyoqXG4gKiBJbnNpZ2h0IHNlYXJjaCBjb250ZW50Lmpzb24gZ2VuZXJhdG9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGhleG8pIHtcbiAgICBoZXhvLmV4dGVuZC5nZW5lcmF0b3IucmVnaXN0ZXIoJ2luc2lnaHQnLCBmdW5jdGlvbihsb2NhbHMpIHtcbiAgICAgICAgY29uc3QgdXJsX2ZvciA9IGhleG8uZXh0ZW5kLmhlbHBlci5nZXQoJ3VybF9mb3InKS5iaW5kKHRoaXMpO1xuICAgICAgICBmdW5jdGlvbiBtaW5pZnkoc3RyKSB7XG4gICAgICAgICAgICByZXR1cm4gdXRpbC5zdHJpcEhUTUwoc3RyKS50cmltKCkucmVwbGFjZSgvXFxuL2csICcgJykucmVwbGFjZSgvXFxzKy9nLCAnICcpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoLyYjeChbXFxkYS1mQS1GXSspOy9nLCAobWF0Y2gsIGhleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShwYXJzZUludChoZXgsIDE2KSk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgvJiMoW1xcZF0rKTsvZywgKG1hdGNoLCBkZWMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoZGVjKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBwb3N0TWFwcGVyKHBvc3QpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdGl0bGU6IHBvc3QudGl0bGUsXG4gICAgICAgICAgICAgICAgdGV4dDogbWluaWZ5KHBvc3QuY29udGVudCksXG4gICAgICAgICAgICAgICAgbGluazogdXJsX2Zvcihwb3N0LnBhdGgpXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHRhZ01hcHBlcih0YWcpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbmFtZTogdGFnLm5hbWUsXG4gICAgICAgICAgICAgICAgc2x1ZzogdGFnLnNsdWcsXG4gICAgICAgICAgICAgICAgbGluazogdXJsX2Zvcih0YWcucGF0aClcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2l0ZSA9IHtcbiAgICAgICAgICAgIHBhZ2VzOiBsb2NhbHMucGFnZXMubWFwKHBvc3RNYXBwZXIpLFxuICAgICAgICAgICAgcG9zdHM6IGxvY2Fscy5wb3N0cy5tYXAocG9zdE1hcHBlciksXG4gICAgICAgICAgICB0YWdzOiBsb2NhbHMudGFncy5tYXAodGFnTWFwcGVyKSxcbiAgICAgICAgICAgIGNhdGVnb3JpZXM6IGxvY2Fscy5jYXRlZ29yaWVzLm1hcCh0YWdNYXBwZXIpXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwYXRoOiAnL2NvbnRlbnQuanNvbicsXG4gICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShzaXRlKVxuICAgICAgICB9O1xuICAgIH0pO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "insight.js"
      ],
      "names": [
        "util",
        "require",
        "module",
        "exports",
        "hexo",
        "extend",
        "generator",
        "register",
        "locals",
        "url_for",
        "helper",
        "get",
        "bind",
        "minify",
        "str",
        "stripHTML",
        "trim",
        "replace",
        "match",
        "hex",
        "String",
        "fromCharCode",
        "parseInt",
        "dec",
        "postMapper",
        "post",
        "title",
        "text",
        "content",
        "link",
        "path",
        "tagMapper",
        "tag",
        "name",
        "slug",
        "site",
        "pages",
        "map",
        "posts",
        "tags",
        "categories",
        "data",
        "JSON",
        "stringify"
      ],
      "mappings": ";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB;AAEA;;;;;AAGAC,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC5BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,SAAZ,CAAsBC,QAAtB,CAA+B,SAA/B,EAA0C,UAASC,MAAT,EAAiB;AACvD,QAAMC,OAAO,GAAGL,IAAI,CAACC,MAAL,CAAYK,MAAZ,CAAmBC,GAAnB,CAAuB,SAAvB,EAAkCC,IAAlC,CAAuC,IAAvC,CAAhB;;AACA,aAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACjB,aAAOd,IAAI,CAACe,SAAL,CAAeD,GAAf,EAAoBE,IAApB,GAA2BC,OAA3B,CAAmC,KAAnC,EAA0C,GAA1C,EAA+CA,OAA/C,CAAuD,MAAvD,EAA+D,GAA/D,EACFA,OADE,CACM,oBADN,EAC4B,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC3C,eAAOC,MAAM,CAACC,YAAP,CAAoBC,QAAQ,CAACH,GAAD,EAAM,EAAN,CAA5B,CAAP;AACH,OAHE,EAIFF,OAJE,CAIM,aAJN,EAIqB,UAACC,KAAD,EAAQK,GAAR,EAAgB;AACpC,eAAOH,MAAM,CAACC,YAAP,CAAoBE,GAApB,CAAP;AACH,OANE,CAAP;AAOH;;AACD,aAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,aAAO;AACHC,QAAAA,KAAK,EAAED,IAAI,CAACC,KADT;AAEHC,QAAAA,IAAI,EAAEd,MAAM,CAACY,IAAI,CAACG,OAAN,CAFT;AAGHC,QAAAA,IAAI,EAAEpB,OAAO,CAACgB,IAAI,CAACK,IAAN;AAHV,OAAP;AAKH;;AACD,aAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACpB,aAAO;AACHC,QAAAA,IAAI,EAAED,GAAG,CAACC,IADP;AAEHC,QAAAA,IAAI,EAAEF,GAAG,CAACE,IAFP;AAGHL,QAAAA,IAAI,EAAEpB,OAAO,CAACuB,GAAG,CAACF,IAAL;AAHV,OAAP;AAKH;;AACD,QAAMK,IAAI,GAAG;AACTC,MAAAA,KAAK,EAAE5B,MAAM,CAAC4B,KAAP,CAAaC,GAAb,CAAiBb,UAAjB,CADE;AAETc,MAAAA,KAAK,EAAE9B,MAAM,CAAC8B,KAAP,CAAaD,GAAb,CAAiBb,UAAjB,CAFE;AAGTe,MAAAA,IAAI,EAAE/B,MAAM,CAAC+B,IAAP,CAAYF,GAAZ,CAAgBN,SAAhB,CAHG;AAITS,MAAAA,UAAU,EAAEhC,MAAM,CAACgC,UAAP,CAAkBH,GAAlB,CAAsBN,SAAtB;AAJH,KAAb;AAMA,WAAO;AACHD,MAAAA,IAAI,EAAE,eADH;AAEHW,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAFH,KAAP;AAIH,GAnCD;AAoCH,CArCD",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/include/generator",
      "sourcesContent": [
        "const util = require('hexo-util');\n\n/**\n * Insight search content.json generator.\n */\nmodule.exports = function(hexo) {\n    hexo.extend.generator.register('insight', function(locals) {\n        const url_for = hexo.extend.helper.get('url_for').bind(this);\n        function minify(str) {\n            return util.stripHTML(str).trim().replace(/\\n/g, ' ').replace(/\\s+/g, ' ')\n                .replace(/&#x([\\da-fA-F]+);/g, (match, hex) => {\n                    return String.fromCharCode(parseInt(hex, 16));\n                })\n                .replace(/&#([\\d]+);/g, (match, dec) => {\n                    return String.fromCharCode(dec);\n                });\n        }\n        function postMapper(post) {\n            return {\n                title: post.title,\n                text: minify(post.content),\n                link: url_for(post.path)\n            };\n        }\n        function tagMapper(tag) {\n            return {\n                name: tag.name,\n                slug: tag.slug,\n                link: url_for(tag.path)\n            };\n        }\n        const site = {\n            pages: locals.pages.map(postMapper),\n            posts: locals.posts.map(postMapper),\n            tags: locals.tags.map(tagMapper),\n            categories: locals.categories.map(tagMapper)\n        };\n        return {\n            path: '/content.json',\n            data: JSON.stringify(site)\n        };\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/archive.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/archive.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/archive.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/archive.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
        "sourceFileName": "archive.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar moment = require('moment');\n\nvar _require = require('inferno'),\n    Component = _require.Component,\n    Fragment = _require.Fragment;\n\nvar Paginator = require('hexo-component-inferno/lib/view/misc/paginator');\n\nvar ArticleMedia = require('hexo-component-inferno/lib/view/common/article-media');\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          config = _this$props.config,\n          page = _this$props.page,\n          helper = _this$props.helper;\n      var url_for = helper.url_for,\n          __ = helper.__,\n          has_thumbnail = helper.has_thumbnail,\n          get_thumbnail = helper.get_thumbnail,\n          date_xml = helper.date_xml,\n          date = helper.date;\n      var language = page.lang || page.language || config.language;\n\n      function renderArticleList(posts, year) {\n        var month = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var time = moment([page.year, page.month ? page.month - 1 : null].filter(function (i) {\n          return i !== null;\n        }));\n        return (0, _inferno.createVNode)(1, \"div\", \"card\", (0, _inferno.createVNode)(1, \"div\", \"card-content\", [(0, _inferno.createVNode)(1, \"h3\", \"tag is-primary\", month === null ? year : time.locale(language).format('MMMM YYYY'), 0), (0, _inferno.createVNode)(1, \"div\", \"timeline\", posts.map(function (post) {\n          var categories = post.categories.map(function (category) {\n            return {\n              url: url_for(category.path),\n              name: category.name\n            };\n          });\n          return (0, _inferno.createComponentVNode)(2, ArticleMedia, {\n            \"thumbnail\": has_thumbnail(post) ? get_thumbnail(post) : null,\n            \"url\": url_for(post.link || post.path),\n            \"title\": post.title,\n            \"date\": date(post.date),\n            \"dateXml\": date_xml(post.date),\n            \"categories\": categories\n          });\n        }), 0)], 4), 2);\n      }\n\n      var articleList;\n\n      if (!page.year) {\n        var years = {};\n        page.posts.each(function (p) {\n          years[p.date.year()] = null;\n        });\n        articleList = Object.keys(years).sort(function (a, b) {\n          return b - a;\n        }).map(function (year) {\n          var posts = page.posts.filter(function (p) {\n            return p.date.year() === parseInt(year, 10);\n          });\n          return renderArticleList(posts, year, null);\n        });\n      } else {\n        articleList = renderArticleList(page.posts, page.year, page.month);\n      }\n\n      return (0, _inferno.createFragment)([articleList, page.total > 1 ? (0, _inferno.createComponentVNode)(2, Paginator, {\n        \"current\": page.current,\n        \"total\": page.total,\n        \"baseUrl\": page.base,\n        \"path\": config.pagination_dir,\n        \"urlFor\": url_for,\n        \"prevTitle\": __('common.prev'),\n        \"nextTitle\": __('common.next')\n      }) : null], 0);\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "archive.jsx"
      ],
      "names": [
        "moment",
        "require",
        "Component",
        "Fragment",
        "Paginator",
        "ArticleMedia",
        "module",
        "exports",
        "props",
        "config",
        "page",
        "helper",
        "url_for",
        "__",
        "has_thumbnail",
        "get_thumbnail",
        "date_xml",
        "date",
        "language",
        "lang",
        "renderArticleList",
        "posts",
        "year",
        "month",
        "time",
        "filter",
        "i",
        "locale",
        "format",
        "map",
        "post",
        "categories",
        "category",
        "url",
        "path",
        "name",
        "link",
        "title",
        "articleList",
        "years",
        "each",
        "p",
        "Object",
        "keys",
        "sort",
        "a",
        "b",
        "parseInt",
        "total",
        "current",
        "base",
        "pagination_dir"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;eACgCA,OAAO,CAAC,SAAD,C;IAA/BC,S,YAAAA,S;IAAWC,Q,YAAAA,Q;;AACnB,IAAMC,SAAS,GAAGH,OAAO,CAAC,gDAAD,CAAzB;;AACA,IAAMI,YAAY,GAAGJ,OAAO,CAAC,sDAAD,CAA5B;;AAEAK,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACGC,MADH,eACGA,MADH;AAAA,UACWC,IADX,eACWA,IADX;AAAA,UACiBC,MADjB,eACiBA,MADjB;AAAA,UAEGC,OAFH,GAEiED,MAFjE,CAEGC,OAFH;AAAA,UAEYC,EAFZ,GAEiEF,MAFjE,CAEYE,EAFZ;AAAA,UAEgBC,aAFhB,GAEiEH,MAFjE,CAEgBG,aAFhB;AAAA,UAE+BC,aAF/B,GAEiEJ,MAFjE,CAE+BI,aAF/B;AAAA,UAE8CC,QAF9C,GAEiEL,MAFjE,CAE8CK,QAF9C;AAAA,UAEwDC,IAFxD,GAEiEN,MAFjE,CAEwDM,IAFxD;AAIL,UAAMC,QAAQ,GAAGR,IAAI,CAACS,IAAL,IAAaT,IAAI,CAACQ,QAAlB,IAA8BT,MAAM,CAACS,QAAtD;;AAEA,eAASE,iBAAT,CAA2BC,KAA3B,EAAkCC,IAAlC,EAAsD;AAAA,YAAdC,KAAc,uEAAN,IAAM;AAClD,YAAMC,IAAI,GAAGxB,MAAM,CAAC,CAACU,IAAI,CAACY,IAAN,EAAYZ,IAAI,CAACa,KAAL,GAAab,IAAI,CAACa,KAAL,GAAa,CAA1B,GAA8B,IAA1C,EAAgDE,MAAhD,CAAuD,UAAAC,CAAC;AAAA,iBAAIA,CAAC,KAAK,IAAV;AAAA,SAAxD,CAAD,CAAnB;AAEA,mDAAkB,MAAlB,sCACe,cADf,sCAEkB,gBAFlB,EAEoCH,KAAK,KAAK,IAAV,GAAiBD,IAAjB,GAAwBE,IAAI,CAACG,MAAL,CAAYT,QAAZ,EAAsBU,MAAtB,CAA6B,WAA7B,CAF5D,0CAGmB,UAHnB,EAIaP,KAAK,CAACQ,GAAN,CAAU,UAAAC,IAAI,EAAI;AACf,cAAMC,UAAU,GAAGD,IAAI,CAACC,UAAL,CAAgBF,GAAhB,CAAoB,UAAAG,QAAQ;AAAA,mBAAK;AAChDC,cAAAA,GAAG,EAAErB,OAAO,CAACoB,QAAQ,CAACE,IAAV,CADoC;AAEhDC,cAAAA,IAAI,EAAEH,QAAQ,CAACG;AAFiC,aAAL;AAAA,WAA5B,CAAnB;AAIA;AAAA,yBACerB,aAAa,CAACgB,IAAD,CAAb,GAAsBf,aAAa,CAACe,IAAD,CAAnC,GAA4C,IAD3D;AAAA,mBAESlB,OAAO,CAACkB,IAAI,CAACM,IAAL,IAAaN,IAAI,CAACI,IAAnB,CAFhB;AAAA,qBAGWJ,IAAI,CAACO,KAHhB;AAAA,oBAIUpB,IAAI,CAACa,IAAI,CAACb,IAAN,CAJd;AAAA,uBAKaD,QAAQ,CAACc,IAAI,CAACb,IAAN,CALrB;AAAA,0BAMgBc;AANhB;AAOH,SAZA,CAJb;AAoBH;;AAED,UAAIO,WAAJ;;AACA,UAAI,CAAC5B,IAAI,CAACY,IAAV,EAAgB;AACZ,YAAMiB,KAAK,GAAG,EAAd;AACA7B,QAAAA,IAAI,CAACW,KAAL,CAAWmB,IAAX,CAAgB,UAAAC,CAAC,EAAI;AAAEF,UAAAA,KAAK,CAACE,CAAC,CAACxB,IAAF,CAAOK,IAAP,EAAD,CAAL,GAAuB,IAAvB;AAA8B,SAArD;AACAgB,QAAAA,WAAW,GAAGI,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,IAAnB,CAAwB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUA,CAAC,GAAGD,CAAd;AAAA,SAAxB,EAAyChB,GAAzC,CAA6C,UAAAP,IAAI,EAAI;AAC/D,cAAMD,KAAK,GAAGX,IAAI,CAACW,KAAL,CAAWI,MAAX,CAAkB,UAAAgB,CAAC;AAAA,mBAAIA,CAAC,CAACxB,IAAF,CAAOK,IAAP,OAAkByB,QAAQ,CAACzB,IAAD,EAAO,EAAP,CAA9B;AAAA,WAAnB,CAAd;AACA,iBAAOF,iBAAiB,CAACC,KAAD,EAAQC,IAAR,EAAc,IAAd,CAAxB;AACH,SAHa,CAAd;AAIH,OAPD,MAOO;AACHgB,QAAAA,WAAW,GAAGlB,iBAAiB,CAACV,IAAI,CAACW,KAAN,EAAaX,IAAI,CAACY,IAAlB,EAAwBZ,IAAI,CAACa,KAA7B,CAA/B;AACH;;AAED,2CACKe,WADL,EAEK5B,IAAI,CAACsC,KAAL,GAAa,CAAb;AAAA,mBACYtC,IAAI,CAACuC,OADjB;AAAA,iBAEUvC,IAAI,CAACsC,KAFf;AAAA,mBAGYtC,IAAI,CAACwC,IAHjB;AAAA,gBAISzC,MAAM,CAAC0C,cAJhB;AAAA,kBAKWvC,OALX;AAAA,qBAMcC,EAAE,CAAC,aAAD,CANhB;AAAA,qBAOcA,EAAE,CAAC,aAAD;AAPhB,WAOsC,IAT3C;AAWH;AAvDL;;AAAA;AAAA,EAA+BX,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "sourcesContent": [
        "const moment = require('moment');\nconst { Component, Fragment } = require('inferno');\nconst Paginator = require('hexo-component-inferno/lib/view/misc/paginator');\nconst ArticleMedia = require('hexo-component-inferno/lib/view/common/article-media');\n\nmodule.exports = class extends Component {\n    render() {\n        const { config, page, helper } = this.props;\n        const { url_for, __, has_thumbnail, get_thumbnail, date_xml, date } = helper;\n\n        const language = page.lang || page.language || config.language;\n\n        function renderArticleList(posts, year, month = null) {\n            const time = moment([page.year, page.month ? page.month - 1 : null].filter(i => i !== null));\n\n            return <div class=\"card\">\n                <div class=\"card-content\">\n                    <h3 class=\"tag is-primary\">{month === null ? year : time.locale(language).format('MMMM YYYY')}</h3>\n                    <div class=\"timeline\">\n                        {posts.map(post => {\n                            const categories = post.categories.map(category => ({\n                                url: url_for(category.path),\n                                name: category.name\n                            }));\n                            return <ArticleMedia\n                                thumbnail={has_thumbnail(post) ? get_thumbnail(post) : null}\n                                url={url_for(post.link || post.path)}\n                                title={post.title}\n                                date={date(post.date)}\n                                dateXml={date_xml(post.date)}\n                                categories={categories} />;\n                        })}\n                    </div>\n                </div>\n            </div>;\n        }\n\n        let articleList;\n        if (!page.year) {\n            const years = {};\n            page.posts.each(p => { years[p.date.year()] = null; });\n            articleList = Object.keys(years).sort((a, b) => b - a).map(year => {\n                const posts = page.posts.filter(p => p.date.year() === parseInt(year, 10));\n                return renderArticleList(posts, year, null);\n            });\n        } else {\n            articleList = renderArticleList(page.posts, page.year, page.month);\n        }\n\n        return <Fragment>\n            {articleList}\n            {page.total > 1 ? <Paginator\n                current={page.current}\n                total={page.total}\n                baseUrl={page.base}\n                path={config.pagination_dir}\n                urlFor={url_for}\n                prevTitle={__('common.prev')}\n                nextTitle={__('common.next')} /> : null}\n        </Fragment>;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/categories.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/categories.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/categories.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/categories.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
        "sourceFileName": "categories.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('inferno'),\n    Component = _require.Component;\n\nvar Categories = require('hexo-component-inferno/lib/view/widget/categories');\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          site = _this$props.site,\n          page = _this$props.page,\n          helper = _this$props.helper;\n      return (0, _inferno.createComponentVNode)(2, Categories, {\n        \"site\": site,\n        \"page\": page,\n        \"helper\": helper\n      });\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3JpZXMuanN4Il0sIm5hbWVzIjpbInJlcXVpcmUiLCJDb21wb25lbnQiLCJDYXRlZ29yaWVzIiwibW9kdWxlIiwiZXhwb3J0cyIsInByb3BzIiwic2l0ZSIsInBhZ2UiLCJoZWxwZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFBc0JBLE9BQU8sQ0FBQyxTQUFELEM7SUFBckJDLFMsWUFBQUEsUzs7QUFDUixJQUFNQyxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxtREFBRCxDQUExQjs7QUFFQUcsTUFBTSxDQUFDQyxPQUFQO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUEsNkJBQ2E7QUFBQSx3QkFDMEIsS0FBS0MsS0FEL0I7QUFBQSxVQUNHQyxJQURILGVBQ0dBLElBREg7QUFBQSxVQUNTQyxJQURULGVBQ1NBLElBRFQ7QUFBQSxVQUNlQyxNQURmLGVBQ2VBLE1BRGY7QUFHTDtBQUFBLGdCQUF5QkYsSUFBekI7QUFBQSxnQkFBcUNDLElBQXJDO0FBQUEsa0JBQW1EQztBQUFuRDtBQUNIO0FBTEw7O0FBQUE7QUFBQSxFQUErQlAsU0FBL0IiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzMy9sYXlvdXQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IENvbXBvbmVudCB9ID0gcmVxdWlyZSgnaW5mZXJubycpO1xuY29uc3QgQ2F0ZWdvcmllcyA9IHJlcXVpcmUoJ2hleG8tY29tcG9uZW50LWluZmVybm8vbGliL3ZpZXcvd2lkZ2V0L2NhdGVnb3JpZXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBjbGFzcyBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IHNpdGUsIHBhZ2UsIGhlbHBlciB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICByZXR1cm4gPENhdGVnb3JpZXMgc2l0ZT17c2l0ZX0gcGFnZT17cGFnZX0gaGVscGVyPXtoZWxwZXJ9IC8+O1xuICAgIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "categories.jsx"
      ],
      "names": [
        "require",
        "Component",
        "Categories",
        "module",
        "exports",
        "props",
        "site",
        "page",
        "helper"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;eAAsBA,OAAO,CAAC,SAAD,C;IAArBC,S,YAAAA,S;;AACR,IAAMC,UAAU,GAAGF,OAAO,CAAC,mDAAD,CAA1B;;AAEAG,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,IADT,eACSA,IADT;AAAA,UACeC,MADf,eACeA,MADf;AAGL;AAAA,gBAAyBF,IAAzB;AAAA,gBAAqCC,IAArC;AAAA,kBAAmDC;AAAnD;AACH;AALL;;AAAA;AAAA,EAA+BP,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "sourcesContent": [
        "const { Component } = require('inferno');\nconst Categories = require('hexo-component-inferno/lib/view/widget/categories');\n\nmodule.exports = class extends Component {\n    render() {\n        const { site, page, helper } = this.props;\n\n        return <Categories site={site} page={page} helper={helper} />;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/category.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/category.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/category.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/category.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
        "sourceFileName": "category.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('inferno'),\n    Component = _require.Component,\n    Fragment = _require.Fragment;\n\nvar Index = require('./index');\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          config = _this$props.config,\n          page = _this$props.page,\n          helper = _this$props.helper;\n      var url_for = helper.url_for,\n          _p = helper._p;\n      return (0, _inferno.createFragment)([(0, _inferno.createVNode)(1, \"div\", \"card\", (0, _inferno.createVNode)(1, \"div\", \"card-content\", (0, _inferno.createVNode)(1, \"nav\", \"breadcrumb\", (0, _inferno.createVNode)(1, \"ul\", null, [(0, _inferno.createVNode)(1, \"li\", null, (0, _inferno.createVNode)(1, \"a\", null, _p('common.category', Infinity), 0, {\n        \"href\": url_for('/categories')\n      }), 2), page.parents.map(function (category) {\n        return (0, _inferno.createVNode)(1, \"li\", null, (0, _inferno.createVNode)(1, \"a\", null, category.name, 0, {\n          \"href\": url_for(category.path)\n        }), 2);\n      }), (0, _inferno.createVNode)(1, \"li\", \"is-active\", (0, _inferno.createVNode)(1, \"a\", null, page.category, 0, {\n        \"href\": \"#\",\n        \"aria-current\": \"page\"\n      }), 2)], 0), 2, {\n        \"aria-label\": \"breadcrumbs\"\n      }), 2), 2), (0, _inferno.createComponentVNode)(2, Index, {\n        \"config\": config,\n        \"page\": page,\n        \"helper\": helper\n      })], 4);\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LmpzeCJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiQ29tcG9uZW50IiwiRnJhZ21lbnQiLCJJbmRleCIsIm1vZHVsZSIsImV4cG9ydHMiLCJwcm9wcyIsImNvbmZpZyIsInBhZ2UiLCJoZWxwZXIiLCJ1cmxfZm9yIiwiX3AiLCJJbmZpbml0eSIsInBhcmVudHMiLCJtYXAiLCJjYXRlZ29yeSIsIm5hbWUiLCJwYXRoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBQWdDQSxPQUFPLENBQUMsU0FBRCxDO0lBQS9CQyxTLFlBQUFBLFM7SUFBV0MsUSxZQUFBQSxROztBQUNuQixJQUFNQyxLQUFLLEdBQUdILE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUVBSSxNQUFNLENBQUNDLE9BQVA7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSw2QkFDYTtBQUFBLHdCQUM0QixLQUFLQyxLQURqQztBQUFBLFVBQ0dDLE1BREgsZUFDR0EsTUFESDtBQUFBLFVBQ1dDLElBRFgsZUFDV0EsSUFEWDtBQUFBLFVBQ2lCQyxNQURqQixlQUNpQkEsTUFEakI7QUFBQSxVQUVHQyxPQUZILEdBRW1CRCxNQUZuQixDQUVHQyxPQUZIO0FBQUEsVUFFWUMsRUFGWixHQUVtQkYsTUFGbkIsQ0FFWUUsRUFGWjtBQUlMLCtFQUNlLE1BRGYsc0NBRW1CLGNBRm5CLHNDQUd1QixZQUh2Qiw2SEFLMERBLEVBQUUsQ0FBQyxpQkFBRCxFQUFvQkMsUUFBcEIsQ0FMNUQ7QUFBQSxnQkFLaUNGLE9BQU8sQ0FBQyxhQUFEO0FBTHhDLGNBTXFCRixJQUFJLENBQUNLLE9BQUwsQ0FBYUMsR0FBYixDQUFpQixVQUFBQyxRQUFRLEVBQUk7QUFDMUIsZ0dBQTZDQSxRQUFRLENBQUNDLElBQXREO0FBQUEsa0JBQW9CTixPQUFPLENBQUNLLFFBQVEsQ0FBQ0UsSUFBVjtBQUEzQjtBQUNILE9BRkEsQ0FOckIscUNBUzhCLFdBVDlCLDBDQVMyRVQsSUFBSSxDQUFDTyxRQVRoRjtBQUFBLGdCQVNrRCxHQVRsRDtBQUFBLHdCQVNtRTtBQVRuRTtBQUFBLHNCQUcrQztBQUgvQztBQUFBLGtCQWNtQlIsTUFkbkI7QUFBQSxnQkFjaUNDLElBZGpDO0FBQUEsa0JBYytDQztBQWQvQztBQWdCSDtBQXJCTDs7QUFBQTtBQUFBLEVBQStCUixTQUEvQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMzL2xheW91dCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgQ29tcG9uZW50LCBGcmFnbWVudCB9ID0gcmVxdWlyZSgnaW5mZXJubycpO1xuY29uc3QgSW5kZXggPSByZXF1aXJlKCcuL2luZGV4Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gY2xhc3MgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBjb25maWcsIHBhZ2UsIGhlbHBlciB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgeyB1cmxfZm9yLCBfcCB9ID0gaGVscGVyO1xuXG4gICAgICAgIHJldHVybiA8RnJhZ21lbnQ+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAgPG5hdiBjbGFzcz1cImJyZWFkY3J1bWJcIiBhcmlhLWxhYmVsPVwiYnJlYWRjcnVtYnNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj17dXJsX2ZvcignL2NhdGVnb3JpZXMnKX0+e19wKCdjb21tb24uY2F0ZWdvcnknLCBJbmZpbml0eSl9PC9hPjwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3BhZ2UucGFyZW50cy5tYXAoY2F0ZWdvcnkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGxpPjxhIGhyZWY9e3VybF9mb3IoY2F0ZWdvcnkucGF0aCl9PntjYXRlZ29yeS5uYW1lfTwvYT48L2xpPjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9XCJpcy1hY3RpdmVcIj48YSBocmVmPVwiI1wiIGFyaWEtY3VycmVudD1cInBhZ2VcIj57cGFnZS5jYXRlZ29yeX08L2E+PC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgICAgIDwvbmF2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8SW5kZXggY29uZmlnPXtjb25maWd9IHBhZ2U9e3BhZ2V9IGhlbHBlcj17aGVscGVyfSAvPlxuICAgICAgICA8L0ZyYWdtZW50PjtcbiAgICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "category.jsx"
      ],
      "names": [
        "require",
        "Component",
        "Fragment",
        "Index",
        "module",
        "exports",
        "props",
        "config",
        "page",
        "helper",
        "url_for",
        "_p",
        "Infinity",
        "parents",
        "map",
        "category",
        "name",
        "path"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;eAAgCA,OAAO,CAAC,SAAD,C;IAA/BC,S,YAAAA,S;IAAWC,Q,YAAAA,Q;;AACnB,IAAMC,KAAK,GAAGH,OAAO,CAAC,SAAD,CAArB;;AAEAI,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACGC,MADH,eACGA,MADH;AAAA,UACWC,IADX,eACWA,IADX;AAAA,UACiBC,MADjB,eACiBA,MADjB;AAAA,UAEGC,OAFH,GAEmBD,MAFnB,CAEGC,OAFH;AAAA,UAEYC,EAFZ,GAEmBF,MAFnB,CAEYE,EAFZ;AAIL,+EACe,MADf,sCAEmB,cAFnB,sCAGuB,YAHvB,6HAK0DA,EAAE,CAAC,iBAAD,EAAoBC,QAApB,CAL5D;AAAA,gBAKiCF,OAAO,CAAC,aAAD;AALxC,cAMqBF,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAiB,UAAAC,QAAQ,EAAI;AAC1B,gGAA6CA,QAAQ,CAACC,IAAtD;AAAA,kBAAoBN,OAAO,CAACK,QAAQ,CAACE,IAAV;AAA3B;AACH,OAFA,CANrB,qCAS8B,WAT9B,0CAS2ET,IAAI,CAACO,QAThF;AAAA,gBASkD,GATlD;AAAA,wBASmE;AATnE;AAAA,sBAG+C;AAH/C;AAAA,kBAcmBR,MAdnB;AAAA,gBAciCC,IAdjC;AAAA,kBAc+CC;AAd/C;AAgBH;AArBL;;AAAA;AAAA,EAA+BR,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "sourcesContent": [
        "const { Component, Fragment } = require('inferno');\nconst Index = require('./index');\n\nmodule.exports = class extends Component {\n    render() {\n        const { config, page, helper } = this.props;\n        const { url_for, _p } = helper;\n\n        return <Fragment>\n            <div class=\"card\">\n                <div class=\"card-content\">\n                    <nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n                        <ul>\n                            <li><a href={url_for('/categories')}>{_p('common.category', Infinity)}</a></li>\n                            {page.parents.map(category => {\n                                return <li><a href={url_for(category.path)}>{category.name}</a></li>;\n                            })}\n                            <li class=\"is-active\"><a href=\"#\" aria-current=\"page\">{page.category}</a></li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n            <Index config={config} page={page} helper={helper} />\n        </Fragment>;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/index.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/index.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/index.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/index.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
        "sourceFileName": "index.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('inferno'),\n    Component = _require.Component,\n    Fragment = _require.Fragment;\n\nvar Paginator = require('hexo-component-inferno/lib/view/misc/paginator');\n\nvar Article = require('./common/article');\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          config = _this$props.config,\n          page = _this$props.page,\n          helper = _this$props.helper;\n      var __ = helper.__,\n          url_for = helper.url_for;\n      return (0, _inferno.createFragment)([page.posts.map(function (post) {\n        return (0, _inferno.createComponentVNode)(2, Article, {\n          \"config\": config,\n          \"page\": post,\n          \"helper\": helper,\n          \"index\": true\n        });\n      }), page.total > 1 ? (0, _inferno.createComponentVNode)(2, Paginator, {\n        \"current\": page.current,\n        \"total\": page.total,\n        \"baseUrl\": page.base,\n        \"path\": config.pagination_dir,\n        \"urlFor\": url_for,\n        \"prevTitle\": __('common.prev'),\n        \"nextTitle\": __('common.next')\n      }) : null], 0);\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiQ29tcG9uZW50IiwiRnJhZ21lbnQiLCJQYWdpbmF0b3IiLCJBcnRpY2xlIiwibW9kdWxlIiwiZXhwb3J0cyIsInByb3BzIiwiY29uZmlnIiwicGFnZSIsImhlbHBlciIsIl9fIiwidXJsX2ZvciIsInBvc3RzIiwibWFwIiwicG9zdCIsInRvdGFsIiwiY3VycmVudCIsImJhc2UiLCJwYWdpbmF0aW9uX2RpciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQUFnQ0EsT0FBTyxDQUFDLFNBQUQsQztJQUEvQkMsUyxZQUFBQSxTO0lBQVdDLFEsWUFBQUEsUTs7QUFDbkIsSUFBTUMsU0FBUyxHQUFHSCxPQUFPLENBQUMsZ0RBQUQsQ0FBekI7O0FBQ0EsSUFBTUksT0FBTyxHQUFHSixPQUFPLENBQUMsa0JBQUQsQ0FBdkI7O0FBRUFLLE1BQU0sQ0FBQ0MsT0FBUDtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBOztBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLDZCQUNhO0FBQUEsd0JBQzRCLEtBQUtDLEtBRGpDO0FBQUEsVUFDR0MsTUFESCxlQUNHQSxNQURIO0FBQUEsVUFDV0MsSUFEWCxlQUNXQSxJQURYO0FBQUEsVUFDaUJDLE1BRGpCLGVBQ2lCQSxNQURqQjtBQUFBLFVBRUdDLEVBRkgsR0FFbUJELE1BRm5CLENBRUdDLEVBRkg7QUFBQSxVQUVPQyxPQUZQLEdBRW1CRixNQUZuQixDQUVPRSxPQUZQO0FBSUwsMkNBQ0tILElBQUksQ0FBQ0ksS0FBTCxDQUFXQyxHQUFYLENBQWUsVUFBQUMsSUFBSTtBQUFBO0FBQUEsb0JBQXFCUCxNQUFyQjtBQUFBLGtCQUFtQ08sSUFBbkM7QUFBQSxvQkFBaURMLE1BQWpEO0FBQUEsbUJBQWdFO0FBQWhFO0FBQUEsT0FBbkIsQ0FETCxFQUVLRCxJQUFJLENBQUNPLEtBQUwsR0FBYSxDQUFiO0FBQUEsbUJBQ1lQLElBQUksQ0FBQ1EsT0FEakI7QUFBQSxpQkFFVVIsSUFBSSxDQUFDTyxLQUZmO0FBQUEsbUJBR1lQLElBQUksQ0FBQ1MsSUFIakI7QUFBQSxnQkFJU1YsTUFBTSxDQUFDVyxjQUpoQjtBQUFBLGtCQUtXUCxPQUxYO0FBQUEscUJBTWNELEVBQUUsQ0FBQyxhQUFELENBTmhCO0FBQUEscUJBT2NBLEVBQUUsQ0FBQyxhQUFEO0FBUGhCLFdBT3NDLElBVDNDO0FBV0g7QUFoQkw7O0FBQUE7QUFBQSxFQUErQlYsU0FBL0IiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzMy9sYXlvdXQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IENvbXBvbmVudCwgRnJhZ21lbnQgfSA9IHJlcXVpcmUoJ2luZmVybm8nKTtcbmNvbnN0IFBhZ2luYXRvciA9IHJlcXVpcmUoJ2hleG8tY29tcG9uZW50LWluZmVybm8vbGliL3ZpZXcvbWlzYy9wYWdpbmF0b3InKTtcbmNvbnN0IEFydGljbGUgPSByZXF1aXJlKCcuL2NvbW1vbi9hcnRpY2xlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gY2xhc3MgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBjb25maWcsIHBhZ2UsIGhlbHBlciB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgeyBfXywgdXJsX2ZvciB9ID0gaGVscGVyO1xuXG4gICAgICAgIHJldHVybiA8RnJhZ21lbnQ+XG4gICAgICAgICAgICB7cGFnZS5wb3N0cy5tYXAocG9zdCA9PiA8QXJ0aWNsZSBjb25maWc9e2NvbmZpZ30gcGFnZT17cG9zdH0gaGVscGVyPXtoZWxwZXJ9IGluZGV4PXt0cnVlfSAvPil9XG4gICAgICAgICAgICB7cGFnZS50b3RhbCA+IDEgPyA8UGFnaW5hdG9yXG4gICAgICAgICAgICAgICAgY3VycmVudD17cGFnZS5jdXJyZW50fVxuICAgICAgICAgICAgICAgIHRvdGFsPXtwYWdlLnRvdGFsfVxuICAgICAgICAgICAgICAgIGJhc2VVcmw9e3BhZ2UuYmFzZX1cbiAgICAgICAgICAgICAgICBwYXRoPXtjb25maWcucGFnaW5hdGlvbl9kaXJ9XG4gICAgICAgICAgICAgICAgdXJsRm9yPXt1cmxfZm9yfVxuICAgICAgICAgICAgICAgIHByZXZUaXRsZT17X18oJ2NvbW1vbi5wcmV2Jyl9XG4gICAgICAgICAgICAgICAgbmV4dFRpdGxlPXtfXygnY29tbW9uLm5leHQnKX0gLz4gOiBudWxsfVxuICAgICAgICA8L0ZyYWdtZW50PjtcbiAgICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.jsx"
      ],
      "names": [
        "require",
        "Component",
        "Fragment",
        "Paginator",
        "Article",
        "module",
        "exports",
        "props",
        "config",
        "page",
        "helper",
        "__",
        "url_for",
        "posts",
        "map",
        "post",
        "total",
        "current",
        "base",
        "pagination_dir"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;eAAgCA,OAAO,CAAC,SAAD,C;IAA/BC,S,YAAAA,S;IAAWC,Q,YAAAA,Q;;AACnB,IAAMC,SAAS,GAAGH,OAAO,CAAC,gDAAD,CAAzB;;AACA,IAAMI,OAAO,GAAGJ,OAAO,CAAC,kBAAD,CAAvB;;AAEAK,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACGC,MADH,eACGA,MADH;AAAA,UACWC,IADX,eACWA,IADX;AAAA,UACiBC,MADjB,eACiBA,MADjB;AAAA,UAEGC,EAFH,GAEmBD,MAFnB,CAEGC,EAFH;AAAA,UAEOC,OAFP,GAEmBF,MAFnB,CAEOE,OAFP;AAIL,2CACKH,IAAI,CAACI,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI;AAAA;AAAA,oBAAqBP,MAArB;AAAA,kBAAmCO,IAAnC;AAAA,oBAAiDL,MAAjD;AAAA,mBAAgE;AAAhE;AAAA,OAAnB,CADL,EAEKD,IAAI,CAACO,KAAL,GAAa,CAAb;AAAA,mBACYP,IAAI,CAACQ,OADjB;AAAA,iBAEUR,IAAI,CAACO,KAFf;AAAA,mBAGYP,IAAI,CAACS,IAHjB;AAAA,gBAISV,MAAM,CAACW,cAJhB;AAAA,kBAKWP,OALX;AAAA,qBAMcD,EAAE,CAAC,aAAD,CANhB;AAAA,qBAOcA,EAAE,CAAC,aAAD;AAPhB,WAOsC,IAT3C;AAWH;AAhBL;;AAAA;AAAA,EAA+BV,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "sourcesContent": [
        "const { Component, Fragment } = require('inferno');\nconst Paginator = require('hexo-component-inferno/lib/view/misc/paginator');\nconst Article = require('./common/article');\n\nmodule.exports = class extends Component {\n    render() {\n        const { config, page, helper } = this.props;\n        const { __, url_for } = helper;\n\n        return <Fragment>\n            {page.posts.map(post => <Article config={config} page={post} helper={helper} index={true} />)}\n            {page.total > 1 ? <Paginator\n                current={page.current}\n                total={page.total}\n                baseUrl={page.base}\n                path={config.pagination_dir}\n                urlFor={url_for}\n                prevTitle={__('common.prev')}\n                nextTitle={__('common.next')} /> : null}\n        </Fragment>;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/common/article.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/common/article.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/common/article.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/common/article.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
        "sourceFileName": "article.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar moment = require('moment');\n\nvar _require = require('inferno'),\n    Component = _require.Component,\n    Fragment = _require.Fragment;\n\nvar Share = require('./share');\n\nvar Donates = require('./donates');\n\nvar Comment = require('./comment');\n/**\n * Get the word count of text.\n */\n\n\nfunction getWordCount(content) {\n  content = content.replace(/<\\/?[a-z][^>]*>/gi, '');\n  content = content.trim();\n  return content ? (content.match(/[\\u00ff-\\uffff]|[a-zA-Z]+/g) || []).length : 0;\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          config = _this$props.config,\n          helper = _this$props.helper,\n          page = _this$props.page,\n          index = _this$props.index;\n      var article = config.article,\n          plugins = config.plugins;\n      var has_thumbnail = helper.has_thumbnail,\n          get_thumbnail = helper.get_thumbnail,\n          url_for = helper.url_for,\n          date = helper.date,\n          date_xml = helper.date_xml,\n          __ = helper.__,\n          _p = helper._p;\n      var language = page.lang || page.language || config.language || 'en';\n      return (0, _inferno.createFragment)([(0, _inferno.createVNode)(1, \"div\", \"card\", [has_thumbnail(page) ? (0, _inferno.createVNode)(1, \"div\", \"card-image\", index ? (0, _inferno.createVNode)(1, \"a\", \"image is-7by3\", (0, _inferno.createVNode)(1, \"img\", \"thumbnail\", null, 1, {\n        \"src\": get_thumbnail(page),\n        \"alt\": page.title || get_thumbnail(page)\n      }), 2, {\n        \"href\": url_for(page.link || page.path)\n      }) : (0, _inferno.createVNode)(1, \"span\", \"image is-7by3\", (0, _inferno.createVNode)(1, \"img\", \"thumbnail\", null, 1, {\n        \"src\": get_thumbnail(page),\n        \"alt\": page.title || get_thumbnail(page)\n      }), 2), 0) : null, (0, _inferno.createVNode)(1, \"article\", \"card-content article\".concat('direction' in page ? ' ' + page.direction : ''), [page.layout !== 'page' ? (0, _inferno.createVNode)(1, \"div\", \"article-meta size-small is-uppercase level is-mobile\", (0, _inferno.createVNode)(1, \"div\", \"level-left\", [(0, _inferno.createVNode)(1, \"time\", \"level-item\", date(page.date), 0, {\n        \"dateTime\": date_xml(page.date)\n      }), page.categories && page.categories.length ? (0, _inferno.createVNode)(1, \"span\", \"level-item\", function () {\n        var categories = [];\n        page.categories.forEach(function (category, i) {\n          categories.push((0, _inferno.createVNode)(1, \"a\", \"link-muted\", category.name, 0, {\n            \"href\": url_for(category.path)\n          }));\n\n          if (i < page.categories.length - 1) {\n            categories.push((0, _inferno.createVNode)(1, \"span\", null, \"\\xA0/\\xA0\", 16));\n          }\n        });\n        return categories;\n      }(), 0) : null, article && article.readtime && article.readtime === true ? (0, _inferno.createVNode)(1, \"span\", \"level-item\", function () {\n        var words = getWordCount(page._content);\n        var time = moment.duration(words / 150.0 * 60, 'seconds');\n        return \"\".concat(time.locale(language).humanize(), \" \").concat(__('article.read'), \" (\").concat(__('article.about'), \" \").concat(words, \" \").concat(__('article.words'), \")\");\n      }(), 0) : null, !index && plugins && plugins.busuanzi === true ? (0, _inferno.createVNode)(1, \"span\", \"level-item\", null, 1, {\n        \"id\": \"busuanzi_container_page_pv\",\n        \"dangerouslySetInnerHTML\": {\n          __html: '<i class=\"far fa-eye\"></i>' + _p('plugin.visit', '&nbsp;&nbsp;<span id=\"busuanzi_value_page_pv\">0</span>')\n        }\n      }) : null], 0), 2) : null, (0, _inferno.createVNode)(1, \"h1\", \"title is-3 is-size-4-mobile\", index ? (0, _inferno.createVNode)(1, \"a\", \"link-muted\", page.title, 0, {\n        \"href\": url_for(page.link || page.path)\n      }) : page.title, 0), (0, _inferno.createVNode)(1, \"div\", \"content\", null, 1, {\n        \"dangerouslySetInnerHTML\": {\n          __html: index && page.excerpt ? page.excerpt : page.content\n        }\n      }), !index && page.tags && page.tags.length ? (0, _inferno.createVNode)(1, \"div\", \"article-tags size-small is-uppercase mb-4\", [(0, _inferno.createVNode)(1, \"span\", \"mr-2\", \"#\", 16), page.tags.map(function (tag) {\n        return (0, _inferno.createVNode)(1, \"a\", \"link-muted mr-2\", tag.name, 0, {\n          \"rel\": \"tag\",\n          \"href\": url_for(tag.path)\n        });\n      })], 0) : null, index && page.excerpt ? (0, _inferno.createVNode)(1, \"a\", \"article-more button is-small size-small\", __('article.more'), 0, {\n        \"href\": \"\".concat(url_for(page.path), \"#more\")\n      }) : null, !index ? (0, _inferno.createComponentVNode)(2, Share, {\n        \"config\": config,\n        \"page\": page,\n        \"helper\": helper\n      }) : null], 0, {\n        \"role\": \"article\"\n      })], 0), !index ? (0, _inferno.createComponentVNode)(2, Donates, {\n        \"config\": config,\n        \"helper\": helper\n      }) : null, !index && (page.prev || page.next) ? (0, _inferno.createVNode)(1, \"nav\", \"post-navigation mt-4 level is-mobile\", [page.prev ? (0, _inferno.createVNode)(1, \"div\", \"level-start\", (0, _inferno.createVNode)(1, \"a\", \"article-nav-prev level level-item\".concat(!page.prev ? ' is-hidden-mobile' : '', \" link-muted\"), [(0, _inferno.createVNode)(1, \"i\", \"level-item fas fa-chevron-left\"), (0, _inferno.createVNode)(1, \"span\", \"level-item\", page.prev.title, 0)], 4, {\n        \"href\": url_for(page.prev.path)\n      }), 2) : null, page.next ? (0, _inferno.createVNode)(1, \"div\", \"level-end\", (0, _inferno.createVNode)(1, \"a\", \"article-nav-next level level-item\".concat(!page.next ? ' is-hidden-mobile' : '', \" link-muted\"), [(0, _inferno.createVNode)(1, \"span\", \"level-item\", page.next.title, 0), (0, _inferno.createVNode)(1, \"i\", \"level-item fas fa-chevron-right\")], 4, {\n        \"href\": url_for(page.next.path)\n      }), 2) : null], 0) : null, !index ? (0, _inferno.createComponentVNode)(2, Comment, {\n        \"config\": config,\n        \"page\": page,\n        \"helper\": helper\n      }) : null], 0);\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "article.jsx"
      ],
      "names": [
        "moment",
        "require",
        "Component",
        "Fragment",
        "Share",
        "Donates",
        "Comment",
        "getWordCount",
        "content",
        "replace",
        "trim",
        "match",
        "length",
        "module",
        "exports",
        "props",
        "config",
        "helper",
        "page",
        "index",
        "article",
        "plugins",
        "has_thumbnail",
        "get_thumbnail",
        "url_for",
        "date",
        "date_xml",
        "__",
        "_p",
        "language",
        "lang",
        "title",
        "link",
        "path",
        "direction",
        "layout",
        "categories",
        "forEach",
        "category",
        "i",
        "push",
        "name",
        "readtime",
        "words",
        "_content",
        "time",
        "duration",
        "locale",
        "humanize",
        "busuanzi",
        "__html",
        "excerpt",
        "tags",
        "map",
        "tag",
        "prev",
        "next"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;eACgCA,OAAO,CAAC,SAAD,C;IAA/BC,S,YAAAA,S;IAAWC,Q,YAAAA,Q;;AACnB,IAAMC,KAAK,GAAGH,OAAO,CAAC,SAAD,CAArB;;AACA,IAAMI,OAAO,GAAGJ,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMK,OAAO,GAAGL,OAAO,CAAC,WAAD,CAAvB;AAEA;;;;;AAGA,SAASM,YAAT,CAAsBC,OAAtB,EAA+B;AAC3BA,EAAAA,OAAO,GAAGA,OAAO,CAACC,OAAR,CAAgB,mBAAhB,EAAqC,EAArC,CAAV;AACAD,EAAAA,OAAO,GAAGA,OAAO,CAACE,IAAR,EAAV;AACA,SAAOF,OAAO,GAAG,CAACA,OAAO,CAACG,KAAR,CAAc,4BAAd,KAA+C,EAAhD,EAAoDC,MAAvD,GAAgE,CAA9E;AACH;;AAEDC,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBACmC,KAAKC,KADxC;AAAA,UACGC,MADH,eACGA,MADH;AAAA,UACWC,MADX,eACWA,MADX;AAAA,UACmBC,IADnB,eACmBA,IADnB;AAAA,UACyBC,KADzB,eACyBA,KADzB;AAAA,UAEGC,OAFH,GAEwBJ,MAFxB,CAEGI,OAFH;AAAA,UAEYC,OAFZ,GAEwBL,MAFxB,CAEYK,OAFZ;AAAA,UAGGC,aAHH,GAGqEL,MAHrE,CAGGK,aAHH;AAAA,UAGkBC,aAHlB,GAGqEN,MAHrE,CAGkBM,aAHlB;AAAA,UAGiCC,OAHjC,GAGqEP,MAHrE,CAGiCO,OAHjC;AAAA,UAG0CC,IAH1C,GAGqER,MAHrE,CAG0CQ,IAH1C;AAAA,UAGgDC,QAHhD,GAGqET,MAHrE,CAGgDS,QAHhD;AAAA,UAG0DC,EAH1D,GAGqEV,MAHrE,CAG0DU,EAH1D;AAAA,UAG8DC,EAH9D,GAGqEX,MAHrE,CAG8DW,EAH9D;AAKL,UAAMC,QAAQ,GAAGX,IAAI,CAACY,IAAL,IAAaZ,IAAI,CAACW,QAAlB,IAA8Bb,MAAM,CAACa,QAArC,IAAiD,IAAlE;AAEA,+EAEe,MAFf,GAISP,aAAa,CAACJ,IAAD,CAAb,uCAAiC,YAAjC,EACIC,KAAK,qCAAmD,eAAnD,sCACS,WADT;AAAA,eAC0BI,aAAa,CAACL,IAAD,CADvC;AAAA,eACoDA,IAAI,CAACa,KAAL,IAAcR,aAAa,CAACL,IAAD;AAD/E;AAAA,gBAAYM,OAAO,CAACN,IAAI,CAACc,IAAL,IAAad,IAAI,CAACe,IAAnB;AAAnB,gDAEa,eAFb,sCAGS,WAHT;AAAA,eAG0BV,aAAa,CAACL,IAAD,CAHvC;AAAA,eAGoDA,IAAI,CAACa,KAAL,IAAcR,aAAa,CAACL,IAAD;AAH/E,YADT,OAMQ,IAVjB,wEAY+C,eAAeA,IAAf,GAAsB,MAAMA,IAAI,CAACgB,SAAjC,GAA6C,EAZ5F,IAaahB,IAAI,CAACiB,MAAL,KAAgB,MAAhB,uCAAoC,sDAApC,sCACc,YADd,wCAGmB,YAHnB,EAGgEV,IAAI,CAACP,IAAI,CAACO,IAAN,CAHpE;AAAA,oBAG0CC,QAAQ,CAACR,IAAI,CAACO,IAAN;AAHlD,UAKQP,IAAI,CAACkB,UAAL,IAAmBlB,IAAI,CAACkB,UAAL,CAAgBxB,MAAnC,wCAAwD,YAAxD,EACK,YAAM;AACJ,YAAMwB,UAAU,GAAG,EAAnB;AACAlB,QAAAA,IAAI,CAACkB,UAAL,CAAgBC,OAAhB,CAAwB,UAACC,QAAD,EAAWC,CAAX,EAAiB;AACrCH,UAAAA,UAAU,CAACI,IAAX,mCAAyB,YAAzB,EAAqEF,QAAQ,CAACG,IAA9E;AAAA,oBAA4CjB,OAAO,CAACc,QAAQ,CAACL,IAAV;AAAnD;;AACA,cAAIM,CAAC,GAAGrB,IAAI,CAACkB,UAAL,CAAgBxB,MAAhB,GAAyB,CAAjC,EAAoC;AAChCwB,YAAAA,UAAU,CAACI,IAAX;AACH;AACJ,SALD;AAMA,eAAOJ,UAAP;AACH,OATA,EADJ,OAWS,IAhBjB,EAkBQhB,OAAO,IAAIA,OAAO,CAACsB,QAAnB,IAA+BtB,OAAO,CAACsB,QAAR,KAAqB,IAApD,wCAAuE,YAAvE,EACK,YAAM;AACJ,YAAMC,KAAK,GAAGpC,YAAY,CAACW,IAAI,CAAC0B,QAAN,CAA1B;AACA,YAAMC,IAAI,GAAG7C,MAAM,CAAC8C,QAAP,CAAiBH,KAAK,GAAG,KAAT,GAAkB,EAAlC,EAAsC,SAAtC,CAAb;AACA,yBAAUE,IAAI,CAACE,MAAL,CAAYlB,QAAZ,EAAsBmB,QAAtB,EAAV,cAA8CrB,EAAE,CAAC,cAAD,CAAhD,eAAqEA,EAAE,CAAC,eAAD,CAAvE,cAA4FgB,KAA5F,cAAqGhB,EAAE,CAAC,eAAD,CAAvG;AACH,OAJA,EADJ,OAMS,IAxBjB,EA0BQ,CAACR,KAAD,IAAUE,OAAV,IAAqBA,OAAO,CAAC4B,QAAR,KAAqB,IAA1C,wCAA6D,YAA7D;AAAA,cAA6E,4BAA7E;AAAA,mCAAmI;AAChIC,UAAAA,MAAM,EAAE,+BAA+BtB,EAAE,CAAC,cAAD,EAAiB,wDAAjB;AADuF;AAAnI,WAEY,IA5BpB,YA8BQ,IA3CrB,qCA6CsB,6BA7CtB,EA8CiBT,KAAK,qCAAY,YAAZ,EAAiED,IAAI,CAACa,KAAtE;AAAA,gBAA+BP,OAAO,CAACN,IAAI,CAACc,IAAL,IAAad,IAAI,CAACe,IAAnB;AAAtC,WAAmFf,IAAI,CAACa,KA9C9G,0CAiDuB,SAjDvB;AAAA,mCAiD0D;AAAEmB,UAAAA,MAAM,EAAE/B,KAAK,IAAID,IAAI,CAACiC,OAAd,GAAwBjC,IAAI,CAACiC,OAA7B,GAAuCjC,IAAI,CAACV;AAAtD;AAjD1D,UAmDa,CAACW,KAAD,IAAUD,IAAI,CAACkC,IAAf,IAAuBlC,IAAI,CAACkC,IAAL,CAAUxC,MAAjC,uCAAqD,2CAArD,wCACe,MADf,YAEIM,IAAI,CAACkC,IAAL,CAAUC,GAAV,CAAc,UAAAC,GAAG,EAAI;AAClB,iDAAgB,iBAAhB,EAAsEA,GAAG,CAACb,IAA1E;AAAA,iBAAsC,KAAtC;AAAA,kBAAkDjB,OAAO,CAAC8B,GAAG,CAACrB,IAAL;AAAzD;AACH,OAFA,CAFJ,QAKQ,IAxDrB,EA0Dad,KAAK,IAAID,IAAI,CAACiC,OAAd,qCAAiC,yCAAjC,EAAgHxB,EAAE,CAAC,cAAD,CAAlH;AAAA,0BAAoFH,OAAO,CAACN,IAAI,CAACe,IAAN,CAA3F;AAAA,WAA0I,IA1DvJ,EA4Da,CAACd,KAAD;AAAA,kBAAwBH,MAAxB;AAAA,gBAAsCE,IAAtC;AAAA,kBAAoDD;AAApD,WAAiE,IA5D9E;AAAA,gBAYuG;AAZvG,eAgEK,CAACE,KAAD;AAAA,kBAA0BH,MAA1B;AAAA,kBAA0CC;AAA1C,WAAuD,IAhE5D,EAkEK,CAACE,KAAD,KAAWD,IAAI,CAACqC,IAAL,IAAarC,IAAI,CAACsC,IAA7B,wCAAgD,sCAAhD,GACItC,IAAI,CAACqC,IAAL,uCAAuB,aAAvB,+EACiD,CAACrC,IAAI,CAACqC,IAAN,GAAa,mBAAb,GAAmC,EADpF,qDAEgB,gCAFhB,wCAGmB,YAHnB,EAGiCrC,IAAI,CAACqC,IAAL,CAAUxB,KAH3C;AAAA,gBAC2GP,OAAO,CAACN,IAAI,CAACqC,IAAL,CAAUtB,IAAX;AADlH,eAKQ,IANZ,EAOIf,IAAI,CAACsC,IAAL,uCAAuB,WAAvB,+EACiD,CAACtC,IAAI,CAACsC,IAAN,GAAa,mBAAb,GAAmC,EADpF,wDAEmB,YAFnB,EAEiCtC,IAAI,CAACsC,IAAL,CAAUzB,KAF3C,wCAGgB,iCAHhB;AAAA,gBAC2GP,OAAO,CAACN,IAAI,CAACsC,IAAL,CAAUvB,IAAX;AADlH,eAKQ,IAZZ,QAaQ,IA/Eb,EAiFK,CAACd,KAAD;AAAA,kBAA0BH,MAA1B;AAAA,gBAAwCE,IAAxC;AAAA,kBAAsDD;AAAtD,WAAmE,IAjFxE;AAmFH;AA3FL;;AAAA;AAAA,EAA+Bf,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "sourcesContent": [
        "const moment = require('moment');\nconst { Component, Fragment } = require('inferno');\nconst Share = require('./share');\nconst Donates = require('./donates');\nconst Comment = require('./comment');\n\n/**\n * Get the word count of text.\n */\nfunction getWordCount(content) {\n    content = content.replace(/<\\/?[a-z][^>]*>/gi, '');\n    content = content.trim();\n    return content ? (content.match(/[\\u00ff-\\uffff]|[a-zA-Z]+/g) || []).length : 0;\n}\n\nmodule.exports = class extends Component {\n    render() {\n        const { config, helper, page, index } = this.props;\n        const { article, plugins } = config;\n        const { has_thumbnail, get_thumbnail, url_for, date, date_xml, __, _p } = helper;\n\n        const language = page.lang || page.language || config.language || 'en';\n\n        return <Fragment>\n            {/* Main content */}\n            <div class=\"card\">\n                {/* Thumbnail */}\n                {has_thumbnail(page) ? <div class=\"card-image\">\n                    {index ? <a href={url_for(page.link || page.path)} class=\"image is-7by3\">\n                        <img class=\"thumbnail\" src={get_thumbnail(page)} alt={page.title || get_thumbnail(page)} />\n                    </a> : <span class=\"image is-7by3\">\n                        <img class=\"thumbnail\" src={get_thumbnail(page)} alt={page.title || get_thumbnail(page)} />\n                    </span>}\n                </div> : null}\n                {/* Metadata */}\n                <article class={`card-content article${'direction' in page ? ' ' + page.direction : ''}`} role=\"article\">\n                    {page.layout !== 'page' ? <div class=\"article-meta size-small is-uppercase level is-mobile\">\n                        <div class=\"level-left\">\n                            {/* Date */}\n                            <time class=\"level-item\" dateTime={date_xml(page.date)}>{date(page.date)}</time>\n                            {/* Categories */}\n                            {page.categories && page.categories.length ? <span class=\"level-item\">\n                                {(() => {\n                                    const categories = [];\n                                    page.categories.forEach((category, i) => {\n                                        categories.push(<a class=\"link-muted\" href={url_for(category.path)}>{category.name}</a>);\n                                        if (i < page.categories.length - 1) {\n                                            categories.push(<span>&nbsp;/&nbsp;</span>);\n                                        }\n                                    });\n                                    return categories;\n                                })()}\n                            </span> : null}\n                            {/* Read time */}\n                            {article && article.readtime && article.readtime === true ? <span class=\"level-item\">\n                                {(() => {\n                                    const words = getWordCount(page._content);\n                                    const time = moment.duration((words / 150.0) * 60, 'seconds');\n                                    return `${time.locale(language).humanize()} ${__('article.read')} (${__('article.about')} ${words} ${__('article.words')})`;\n                                })()}\n                            </span> : null}\n                            {/* Visitor counter */}\n                            {!index && plugins && plugins.busuanzi === true ? <span class=\"level-item\" id=\"busuanzi_container_page_pv\" dangerouslySetInnerHTML={{\n                                __html: '<i class=\"far fa-eye\"></i>' + _p('plugin.visit', '&nbsp;&nbsp;<span id=\"busuanzi_value_page_pv\">0</span>')\n                            }}></span> : null}\n                        </div>\n                    </div> : null}\n                    {/* Title */}\n                    <h1 class=\"title is-3 is-size-4-mobile\">\n                        {index ? <a class=\"link-muted\" href={url_for(page.link || page.path)}>{page.title}</a> : page.title}\n                    </h1>\n                    {/* Content/Excerpt */}\n                    <div class=\"content\" dangerouslySetInnerHTML={{ __html: index && page.excerpt ? page.excerpt : page.content }}></div>\n                    {/* Tags */}\n                    {!index && page.tags && page.tags.length ? <div class=\"article-tags size-small is-uppercase mb-4\">\n                        <span class=\"mr-2\">#</span>\n                        {page.tags.map(tag => {\n                            return <a class=\"link-muted mr-2\" rel=\"tag\" href={url_for(tag.path)}>{tag.name}</a>;\n                        })}\n                    </div> : null}\n                    {/* \"Read more\" button */}\n                    {index && page.excerpt ? <a class=\"article-more button is-small size-small\" href={`${url_for(page.path)}#more`}>{__('article.more')}</a> : null}\n                    {/* Share button */}\n                    {!index ? <Share config={config} page={page} helper={helper} /> : null}\n                </article>\n            </div>\n            {/* Donate button */}\n            {!index ? <Donates config={config} helper={helper} /> : null}\n            {/* Post navigation */}\n            {!index && (page.prev || page.next) ? <nav class=\"post-navigation mt-4 level is-mobile\">\n                {page.prev ? <div class=\"level-start\">\n                    <a class={`article-nav-prev level level-item${!page.prev ? ' is-hidden-mobile' : ''} link-muted`} href={url_for(page.prev.path)}>\n                        <i class=\"level-item fas fa-chevron-left\"></i>\n                        <span class=\"level-item\">{page.prev.title}</span>\n                    </a>\n                </div> : null}\n                {page.next ? <div class=\"level-end\">\n                    <a class={`article-nav-next level level-item${!page.next ? ' is-hidden-mobile' : ''} link-muted`} href={url_for(page.next.path)}>\n                        <span class=\"level-item\">{page.next.title}</span>\n                        <i class=\"level-item fas fa-chevron-right\"></i>\n                    </a>\n                </div> : null}\n            </nav> : null}\n            {/* Comment */}\n            {!index ? <Comment config={config} page={page} helper={helper} /> : null}\n        </Fragment>;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/common/share.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/common/share.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/common/share.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/common/share.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
        "sourceFileName": "share.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar logger = require('hexo-log')();\n\nvar _require = require('inferno'),\n    Component = _require.Component;\n\nvar view = require('hexo-component-inferno/lib/core/view');\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          config = _this$props.config,\n          page = _this$props.page,\n          helper = _this$props.helper;\n      var share = config.share;\n\n      if (!share || typeof share.type !== 'string') {\n        return null;\n      }\n\n      try {\n        var Share = view.require('share/' + share.type);\n\n        return (0, _inferno.createComponentVNode)(2, Share, {\n          \"config\": config,\n          \"page\": page,\n          \"helper\": helper,\n          \"share\": share\n        });\n      } catch (e) {\n        logger.w(\"Icarus cannot load share button \\\"\".concat(share.type, \"\\\"\"));\n        return null;\n      }\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNoYXJlLmpzeCJdLCJuYW1lcyI6WyJsb2dnZXIiLCJyZXF1aXJlIiwiQ29tcG9uZW50IiwidmlldyIsIm1vZHVsZSIsImV4cG9ydHMiLCJwcm9wcyIsImNvbmZpZyIsInBhZ2UiLCJoZWxwZXIiLCJzaGFyZSIsInR5cGUiLCJTaGFyZSIsImUiLCJ3Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUFQLEVBQWY7O2VBQ3NCQSxPQUFPLENBQUMsU0FBRCxDO0lBQXJCQyxTLFlBQUFBLFM7O0FBQ1IsSUFBTUMsSUFBSSxHQUFHRixPQUFPLENBQUMsc0NBQUQsQ0FBcEI7O0FBRUFHLE1BQU0sQ0FBQ0MsT0FBUDtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBOztBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLDZCQUNhO0FBQUEsd0JBQzRCLEtBQUtDLEtBRGpDO0FBQUEsVUFDR0MsTUFESCxlQUNHQSxNQURIO0FBQUEsVUFDV0MsSUFEWCxlQUNXQSxJQURYO0FBQUEsVUFDaUJDLE1BRGpCLGVBQ2lCQSxNQURqQjtBQUFBLFVBRUdDLEtBRkgsR0FFYUgsTUFGYixDQUVHRyxLQUZIOztBQUdMLFVBQUksQ0FBQ0EsS0FBRCxJQUFVLE9BQU9BLEtBQUssQ0FBQ0MsSUFBYixLQUFzQixRQUFwQyxFQUE4QztBQUMxQyxlQUFPLElBQVA7QUFDSDs7QUFFRCxVQUFJO0FBQ0EsWUFBTUMsS0FBSyxHQUFHVCxJQUFJLENBQUNGLE9BQUwsQ0FBYSxXQUFXUyxLQUFLLENBQUNDLElBQTlCLENBQWQ7O0FBQ0E7QUFBQSxvQkFBc0JKLE1BQXRCO0FBQUEsa0JBQW9DQyxJQUFwQztBQUFBLG9CQUFrREMsTUFBbEQ7QUFBQSxtQkFBaUVDO0FBQWpFO0FBQ0gsT0FIRCxDQUdFLE9BQU9HLENBQVAsRUFBVTtBQUNSYixRQUFBQSxNQUFNLENBQUNjLENBQVAsNkNBQTZDSixLQUFLLENBQUNDLElBQW5EO0FBQ0EsZUFBTyxJQUFQO0FBQ0g7QUFDSjtBQWZMOztBQUFBO0FBQUEsRUFBK0JULFNBQS9CIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1czMvbGF5b3V0L2NvbW1vbiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGxvZ2dlciA9IHJlcXVpcmUoJ2hleG8tbG9nJykoKTtcbmNvbnN0IHsgQ29tcG9uZW50IH0gPSByZXF1aXJlKCdpbmZlcm5vJyk7XG5jb25zdCB2aWV3ID0gcmVxdWlyZSgnaGV4by1jb21wb25lbnQtaW5mZXJuby9saWIvY29yZS92aWV3Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gY2xhc3MgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBjb25maWcsIHBhZ2UsIGhlbHBlciB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgeyBzaGFyZSB9ID0gY29uZmlnO1xuICAgICAgICBpZiAoIXNoYXJlIHx8IHR5cGVvZiBzaGFyZS50eXBlICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgU2hhcmUgPSB2aWV3LnJlcXVpcmUoJ3NoYXJlLycgKyBzaGFyZS50eXBlKTtcbiAgICAgICAgICAgIHJldHVybiA8U2hhcmUgY29uZmlnPXtjb25maWd9IHBhZ2U9e3BhZ2V9IGhlbHBlcj17aGVscGVyfSBzaGFyZT17c2hhcmV9IC8+O1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBsb2dnZXIudyhgSWNhcnVzIGNhbm5vdCBsb2FkIHNoYXJlIGJ1dHRvbiBcIiR7c2hhcmUudHlwZX1cImApO1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "share.jsx"
      ],
      "names": [
        "logger",
        "require",
        "Component",
        "view",
        "module",
        "exports",
        "props",
        "config",
        "page",
        "helper",
        "share",
        "type",
        "Share",
        "e",
        "w"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAP,EAAf;;eACsBA,OAAO,CAAC,SAAD,C;IAArBC,S,YAAAA,S;;AACR,IAAMC,IAAI,GAAGF,OAAO,CAAC,sCAAD,CAApB;;AAEAG,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACGC,MADH,eACGA,MADH;AAAA,UACWC,IADX,eACWA,IADX;AAAA,UACiBC,MADjB,eACiBA,MADjB;AAAA,UAEGC,KAFH,GAEaH,MAFb,CAEGG,KAFH;;AAGL,UAAI,CAACA,KAAD,IAAU,OAAOA,KAAK,CAACC,IAAb,KAAsB,QAApC,EAA8C;AAC1C,eAAO,IAAP;AACH;;AAED,UAAI;AACA,YAAMC,KAAK,GAAGT,IAAI,CAACF,OAAL,CAAa,WAAWS,KAAK,CAACC,IAA9B,CAAd;;AACA;AAAA,oBAAsBJ,MAAtB;AAAA,kBAAoCC,IAApC;AAAA,oBAAkDC,MAAlD;AAAA,mBAAiEC;AAAjE;AACH,OAHD,CAGE,OAAOG,CAAP,EAAU;AACRb,QAAAA,MAAM,CAACc,CAAP,6CAA6CJ,KAAK,CAACC,IAAnD;AACA,eAAO,IAAP;AACH;AACJ;AAfL;;AAAA;AAAA,EAA+BT,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "sourcesContent": [
        "const logger = require('hexo-log')();\nconst { Component } = require('inferno');\nconst view = require('hexo-component-inferno/lib/core/view');\n\nmodule.exports = class extends Component {\n    render() {\n        const { config, page, helper } = this.props;\n        const { share } = config;\n        if (!share || typeof share.type !== 'string') {\n            return null;\n        }\n\n        try {\n            const Share = view.require('share/' + share.type);\n            return <Share config={config} page={page} helper={helper} share={share} />;\n        } catch (e) {\n            logger.w(`Icarus cannot load share button \"${share.type}\"`);\n            return null;\n        }\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/common/donates.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/common/donates.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/common/donates.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/common/donates.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
        "sourceFileName": "donates.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar logger = require('hexo-log')();\n\nvar _require = require('inferno'),\n    Component = _require.Component;\n\nvar view = require('hexo-component-inferno/lib/core/view');\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          config = _this$props.config,\n          helper = _this$props.helper;\n      var __ = helper.__;\n      var _config$donates = config.donates,\n          donates = _config$donates === void 0 ? [] : _config$donates;\n\n      if (!Array.isArray(donates) || !donates.length) {\n        return null;\n      }\n\n      return (0, _inferno.createVNode)(1, \"div\", \"card\", (0, _inferno.createVNode)(1, \"div\", \"card-content\", [(0, _inferno.createVNode)(1, \"h3\", \"menu-label has-text-centered\", __('donate.title'), 0), (0, _inferno.createVNode)(1, \"div\", \"buttons is-centered\", donates.map(function (service) {\n        var type = service.type;\n\n        if (typeof type === 'string') {\n          try {\n            var Donate = view.require('donate/' + type);\n\n            return (0, _inferno.createComponentVNode)(2, Donate, {\n              \"helper\": helper,\n              \"donate\": service\n            });\n          } catch (e) {\n            logger.w(\"Icarus cannot load donate button \\\"\".concat(type, \"\\\"\"));\n          }\n        }\n\n        return null;\n      }), 0)], 4), 2);\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbmF0ZXMuanN4Il0sIm5hbWVzIjpbImxvZ2dlciIsInJlcXVpcmUiLCJDb21wb25lbnQiLCJ2aWV3IiwibW9kdWxlIiwiZXhwb3J0cyIsInByb3BzIiwiY29uZmlnIiwiaGVscGVyIiwiX18iLCJkb25hdGVzIiwiQXJyYXkiLCJpc0FycmF5IiwibGVuZ3RoIiwibWFwIiwic2VydmljZSIsInR5cGUiLCJEb25hdGUiLCJlIiwidyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBUCxFQUFmOztlQUNzQkEsT0FBTyxDQUFDLFNBQUQsQztJQUFyQkMsUyxZQUFBQSxTOztBQUNSLElBQU1DLElBQUksR0FBR0YsT0FBTyxDQUFDLHNDQUFELENBQXBCOztBQUVBRyxNQUFNLENBQUNDLE9BQVA7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSw2QkFDYTtBQUFBLHdCQUNzQixLQUFLQyxLQUQzQjtBQUFBLFVBQ0dDLE1BREgsZUFDR0EsTUFESDtBQUFBLFVBQ1dDLE1BRFgsZUFDV0EsTUFEWDtBQUFBLFVBRUdDLEVBRkgsR0FFVUQsTUFGVixDQUVHQyxFQUZIO0FBQUEsNEJBR29CRixNQUhwQixDQUdHRyxPQUhIO0FBQUEsVUFHR0EsT0FISCxnQ0FHYSxFQUhiOztBQUlMLFVBQUksQ0FBQ0MsS0FBSyxDQUFDQyxPQUFOLENBQWNGLE9BQWQsQ0FBRCxJQUEyQixDQUFDQSxPQUFPLENBQUNHLE1BQXhDLEVBQWdEO0FBQzVDLGVBQU8sSUFBUDtBQUNIOztBQUNELGlEQUFrQixNQUFsQixzQ0FDZSxjQURmLHNDQUVrQiw4QkFGbEIsRUFFa0RKLEVBQUUsQ0FBQyxjQUFELENBRnBELDBDQUdtQixxQkFIbkIsRUFJYUMsT0FBTyxDQUFDSSxHQUFSLENBQVksVUFBQUMsT0FBTyxFQUFJO0FBQ3BCLFlBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDQyxJQUFyQjs7QUFDQSxZQUFJLE9BQU9BLElBQVAsS0FBZ0IsUUFBcEIsRUFBOEI7QUFDMUIsY0FBSTtBQUNBLGdCQUFNQyxNQUFNLEdBQUdkLElBQUksQ0FBQ0YsT0FBTCxDQUFhLFlBQVllLElBQXpCLENBQWY7O0FBQ0E7QUFBQSx3QkFBdUJSLE1BQXZCO0FBQUEsd0JBQXVDTztBQUF2QztBQUNILFdBSEQsQ0FHRSxPQUFPRyxDQUFQLEVBQVU7QUFDUmxCLFlBQUFBLE1BQU0sQ0FBQ21CLENBQVAsOENBQThDSCxJQUE5QztBQUNIO0FBQ0o7O0FBQ0QsZUFBTyxJQUFQO0FBQ0gsT0FYQSxDQUpiO0FBbUJIO0FBM0JMOztBQUFBO0FBQUEsRUFBK0JkLFNBQS9CIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1czMvbGF5b3V0L2NvbW1vbiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGxvZ2dlciA9IHJlcXVpcmUoJ2hleG8tbG9nJykoKTtcbmNvbnN0IHsgQ29tcG9uZW50IH0gPSByZXF1aXJlKCdpbmZlcm5vJyk7XG5jb25zdCB2aWV3ID0gcmVxdWlyZSgnaGV4by1jb21wb25lbnQtaW5mZXJuby9saWIvY29yZS92aWV3Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gY2xhc3MgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBjb25maWcsIGhlbHBlciB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgeyBfXyB9ID0gaGVscGVyO1xuICAgICAgICBjb25zdCB7IGRvbmF0ZXMgPSBbXSB9ID0gY29uZmlnO1xuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkoZG9uYXRlcykgfHwgIWRvbmF0ZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gPGRpdiBjbGFzcz1cImNhcmRcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICA8aDMgY2xhc3M9XCJtZW51LWxhYmVsIGhhcy10ZXh0LWNlbnRlcmVkXCI+e19fKCdkb25hdGUudGl0bGUnKX08L2gzPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidXR0b25zIGlzLWNlbnRlcmVkXCI+XG4gICAgICAgICAgICAgICAgICAgIHtkb25hdGVzLm1hcChzZXJ2aWNlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHR5cGUgPSBzZXJ2aWNlLnR5cGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgRG9uYXRlID0gdmlldy5yZXF1aXJlKCdkb25hdGUvJyArIHR5cGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPERvbmF0ZSBoZWxwZXI9e2hlbHBlcn0gZG9uYXRlPXtzZXJ2aWNlfSAvPjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvZ2dlci53KGBJY2FydXMgY2Fubm90IGxvYWQgZG9uYXRlIGJ1dHRvbiBcIiR7dHlwZX1cImApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj47XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "donates.jsx"
      ],
      "names": [
        "logger",
        "require",
        "Component",
        "view",
        "module",
        "exports",
        "props",
        "config",
        "helper",
        "__",
        "donates",
        "Array",
        "isArray",
        "length",
        "map",
        "service",
        "type",
        "Donate",
        "e",
        "w"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAP,EAAf;;eACsBA,OAAO,CAAC,SAAD,C;IAArBC,S,YAAAA,S;;AACR,IAAMC,IAAI,GAAGF,OAAO,CAAC,sCAAD,CAApB;;AAEAG,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBACsB,KAAKC,KAD3B;AAAA,UACGC,MADH,eACGA,MADH;AAAA,UACWC,MADX,eACWA,MADX;AAAA,UAEGC,EAFH,GAEUD,MAFV,CAEGC,EAFH;AAAA,4BAGoBF,MAHpB,CAGGG,OAHH;AAAA,UAGGA,OAHH,gCAGa,EAHb;;AAIL,UAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,OAAd,CAAD,IAA2B,CAACA,OAAO,CAACG,MAAxC,EAAgD;AAC5C,eAAO,IAAP;AACH;;AACD,iDAAkB,MAAlB,sCACe,cADf,sCAEkB,8BAFlB,EAEkDJ,EAAE,CAAC,cAAD,CAFpD,0CAGmB,qBAHnB,EAIaC,OAAO,CAACI,GAAR,CAAY,UAAAC,OAAO,EAAI;AACpB,YAAMC,IAAI,GAAGD,OAAO,CAACC,IAArB;;AACA,YAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC1B,cAAI;AACA,gBAAMC,MAAM,GAAGd,IAAI,CAACF,OAAL,CAAa,YAAYe,IAAzB,CAAf;;AACA;AAAA,wBAAuBR,MAAvB;AAAA,wBAAuCO;AAAvC;AACH,WAHD,CAGE,OAAOG,CAAP,EAAU;AACRlB,YAAAA,MAAM,CAACmB,CAAP,8CAA8CH,IAA9C;AACH;AACJ;;AACD,eAAO,IAAP;AACH,OAXA,CAJb;AAmBH;AA3BL;;AAAA;AAAA,EAA+Bd,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "sourcesContent": [
        "const logger = require('hexo-log')();\nconst { Component } = require('inferno');\nconst view = require('hexo-component-inferno/lib/core/view');\n\nmodule.exports = class extends Component {\n    render() {\n        const { config, helper } = this.props;\n        const { __ } = helper;\n        const { donates = [] } = config;\n        if (!Array.isArray(donates) || !donates.length) {\n            return null;\n        }\n        return <div class=\"card\">\n            <div class=\"card-content\">\n                <h3 class=\"menu-label has-text-centered\">{__('donate.title')}</h3>\n                <div class=\"buttons is-centered\">\n                    {donates.map(service => {\n                        const type = service.type;\n                        if (typeof type === 'string') {\n                            try {\n                                const Donate = view.require('donate/' + type);\n                                return <Donate helper={helper} donate={service} />;\n                            } catch (e) {\n                                logger.w(`Icarus cannot load donate button \"${type}\"`);\n                            }\n                        }\n                        return null;\n                    })}\n                </div>\n            </div>\n        </div>;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/common/comment.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/common/comment.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/common/comment.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/common/comment.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
        "sourceFileName": "comment.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar logger = require('hexo-log')();\n\nvar _require = require('inferno'),\n    Component = _require.Component;\n\nvar view = require('hexo-component-inferno/lib/core/view');\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          config = _this$props.config,\n          page = _this$props.page,\n          helper = _this$props.helper;\n      var __ = helper.__;\n      var comment = config.comment;\n\n      if (!comment || typeof comment.type !== 'string') {\n        return null;\n      }\n\n      return (0, _inferno.createVNode)(1, \"div\", \"card\", (0, _inferno.createVNode)(1, \"div\", \"card-content\", [(0, _inferno.createVNode)(1, \"h3\", \"title is-5\", __('article.comments'), 0), function () {\n        try {\n          var Comment = view.require('comment/' + comment.type);\n\n          return (0, _inferno.createComponentVNode)(2, Comment, {\n            \"config\": config,\n            \"page\": page,\n            \"helper\": helper,\n            \"comment\": comment\n          });\n        } catch (e) {\n          logger.w(\"Icarus cannot load comment \\\"\".concat(comment.type, \"\\\"\"));\n          return null;\n        }\n      }()], 0), 2);\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnQuanN4Il0sIm5hbWVzIjpbImxvZ2dlciIsInJlcXVpcmUiLCJDb21wb25lbnQiLCJ2aWV3IiwibW9kdWxlIiwiZXhwb3J0cyIsInByb3BzIiwiY29uZmlnIiwicGFnZSIsImhlbHBlciIsIl9fIiwiY29tbWVudCIsInR5cGUiLCJDb21tZW50IiwiZSIsInciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQVAsRUFBZjs7ZUFDc0JBLE9BQU8sQ0FBQyxTQUFELEM7SUFBckJDLFMsWUFBQUEsUzs7QUFDUixJQUFNQyxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxzQ0FBRCxDQUFwQjs7QUFFQUcsTUFBTSxDQUFDQyxPQUFQO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUEsNkJBQ2E7QUFBQSx3QkFDNEIsS0FBS0MsS0FEakM7QUFBQSxVQUNHQyxNQURILGVBQ0dBLE1BREg7QUFBQSxVQUNXQyxJQURYLGVBQ1dBLElBRFg7QUFBQSxVQUNpQkMsTUFEakIsZUFDaUJBLE1BRGpCO0FBQUEsVUFFR0MsRUFGSCxHQUVVRCxNQUZWLENBRUdDLEVBRkg7QUFBQSxVQUdHQyxPQUhILEdBR2VKLE1BSGYsQ0FHR0ksT0FISDs7QUFJTCxVQUFJLENBQUNBLE9BQUQsSUFBWSxPQUFPQSxPQUFPLENBQUNDLElBQWYsS0FBd0IsUUFBeEMsRUFBa0Q7QUFDOUMsZUFBTyxJQUFQO0FBQ0g7O0FBRUQsaURBQWtCLE1BQWxCLHNDQUNlLGNBRGYsc0NBRWtCLFlBRmxCLEVBRWdDRixFQUFFLENBQUMsa0JBQUQsQ0FGbEMsTUFHVSxZQUFNO0FBQ0osWUFBSTtBQUNBLGNBQU1HLE9BQU8sR0FBR1YsSUFBSSxDQUFDRixPQUFMLENBQWEsYUFBYVUsT0FBTyxDQUFDQyxJQUFsQyxDQUFoQjs7QUFDQTtBQUFBLHNCQUF3QkwsTUFBeEI7QUFBQSxvQkFBc0NDLElBQXRDO0FBQUEsc0JBQW9EQyxNQUFwRDtBQUFBLHVCQUFxRUU7QUFBckU7QUFDSCxTQUhELENBR0UsT0FBT0csQ0FBUCxFQUFVO0FBQ1JkLFVBQUFBLE1BQU0sQ0FBQ2UsQ0FBUCx3Q0FBd0NKLE9BQU8sQ0FBQ0MsSUFBaEQ7QUFDQSxpQkFBTyxJQUFQO0FBQ0g7QUFDSixPQVJBLEVBSFQ7QUFjSDtBQXZCTDs7QUFBQTtBQUFBLEVBQStCVixTQUEvQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMzL2xheW91dC9jb21tb24iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBsb2dnZXIgPSByZXF1aXJlKCdoZXhvLWxvZycpKCk7XG5jb25zdCB7IENvbXBvbmVudCB9ID0gcmVxdWlyZSgnaW5mZXJubycpO1xuY29uc3QgdmlldyA9IHJlcXVpcmUoJ2hleG8tY29tcG9uZW50LWluZmVybm8vbGliL2NvcmUvdmlldycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNsYXNzIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgY29uZmlnLCBwYWdlLCBoZWxwZXIgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgX18gfSA9IGhlbHBlcjtcbiAgICAgICAgY29uc3QgeyBjb21tZW50IH0gPSBjb25maWc7XG4gICAgICAgIGlmICghY29tbWVudCB8fCB0eXBlb2YgY29tbWVudC50eXBlICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gPGRpdiBjbGFzcz1cImNhcmRcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICA8aDMgY2xhc3M9XCJ0aXRsZSBpcy01XCI+e19fKCdhcnRpY2xlLmNvbW1lbnRzJyl9PC9oMz5cbiAgICAgICAgICAgICAgICB7KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IENvbW1lbnQgPSB2aWV3LnJlcXVpcmUoJ2NvbW1lbnQvJyArIGNvbW1lbnQudHlwZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPENvbW1lbnQgY29uZmlnPXtjb25maWd9IHBhZ2U9e3BhZ2V9IGhlbHBlcj17aGVscGVyfSBjb21tZW50PXtjb21tZW50fSAvPjtcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLncoYEljYXJ1cyBjYW5ub3QgbG9hZCBjb21tZW50IFwiJHtjb21tZW50LnR5cGV9XCJgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSkoKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj47XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "comment.jsx"
      ],
      "names": [
        "logger",
        "require",
        "Component",
        "view",
        "module",
        "exports",
        "props",
        "config",
        "page",
        "helper",
        "__",
        "comment",
        "type",
        "Comment",
        "e",
        "w"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAP,EAAf;;eACsBA,OAAO,CAAC,SAAD,C;IAArBC,S,YAAAA,S;;AACR,IAAMC,IAAI,GAAGF,OAAO,CAAC,sCAAD,CAApB;;AAEAG,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACGC,MADH,eACGA,MADH;AAAA,UACWC,IADX,eACWA,IADX;AAAA,UACiBC,MADjB,eACiBA,MADjB;AAAA,UAEGC,EAFH,GAEUD,MAFV,CAEGC,EAFH;AAAA,UAGGC,OAHH,GAGeJ,MAHf,CAGGI,OAHH;;AAIL,UAAI,CAACA,OAAD,IAAY,OAAOA,OAAO,CAACC,IAAf,KAAwB,QAAxC,EAAkD;AAC9C,eAAO,IAAP;AACH;;AAED,iDAAkB,MAAlB,sCACe,cADf,sCAEkB,YAFlB,EAEgCF,EAAE,CAAC,kBAAD,CAFlC,MAGU,YAAM;AACJ,YAAI;AACA,cAAMG,OAAO,GAAGV,IAAI,CAACF,OAAL,CAAa,aAAaU,OAAO,CAACC,IAAlC,CAAhB;;AACA;AAAA,sBAAwBL,MAAxB;AAAA,oBAAsCC,IAAtC;AAAA,sBAAoDC,MAApD;AAAA,uBAAqEE;AAArE;AACH,SAHD,CAGE,OAAOG,CAAP,EAAU;AACRd,UAAAA,MAAM,CAACe,CAAP,wCAAwCJ,OAAO,CAACC,IAAhD;AACA,iBAAO,IAAP;AACH;AACJ,OARA,EAHT;AAcH;AAvBL;;AAAA;AAAA,EAA+BV,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "sourcesContent": [
        "const logger = require('hexo-log')();\nconst { Component } = require('inferno');\nconst view = require('hexo-component-inferno/lib/core/view');\n\nmodule.exports = class extends Component {\n    render() {\n        const { config, page, helper } = this.props;\n        const { __ } = helper;\n        const { comment } = config;\n        if (!comment || typeof comment.type !== 'string') {\n            return null;\n        }\n\n        return <div class=\"card\">\n            <div class=\"card-content\">\n                <h3 class=\"title is-5\">{__('article.comments')}</h3>\n                {(() => {\n                    try {\n                        const Comment = view.require('comment/' + comment.type);\n                        return <Comment config={config} page={page} helper={helper} comment={comment} />;\n                    } catch (e) {\n                        logger.w(`Icarus cannot load comment \"${comment.type}\"`);\n                        return null;\n                    }\n                })()}\n            </div>\n        </div>;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/layout.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/layout.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/layout.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/layout.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
        "sourceFileName": "layout.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('inferno'),\n    Component = _require.Component;\n\nvar classname = require('hexo-component-inferno/lib/util/classname');\n\nvar Head = require('./common/head');\n\nvar Navbar = require('./common/navbar');\n\nvar Widgets = require('./common/widgets');\n\nvar Footer = require('./common/footer');\n\nvar Scripts = require('./common/scripts');\n\nvar Search = require('./common/search');\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          env = _this$props.env,\n          site = _this$props.site,\n          config = _this$props.config,\n          page = _this$props.page,\n          helper = _this$props.helper,\n          body = _this$props.body;\n      var language = page.lang || page.language || config.language;\n      var columnCount = Widgets.getColumnCount(config.widgets);\n      return (0, _inferno.createVNode)(1, \"html\", null, [(0, _inferno.createComponentVNode)(2, Head, {\n        \"env\": env,\n        \"site\": site,\n        \"config\": config,\n        \"helper\": helper,\n        \"page\": page\n      }), (0, _inferno.createVNode)(1, \"body\", \"is-\".concat(columnCount, \"-column\"), [(0, _inferno.createComponentVNode)(2, Navbar, {\n        \"config\": config,\n        \"helper\": helper,\n        \"page\": page\n      }), (0, _inferno.createVNode)(1, \"section\", \"section\", (0, _inferno.createVNode)(1, \"div\", \"container\", (0, _inferno.createVNode)(1, \"div\", \"columns\", [(0, _inferno.createVNode)(1, \"div\", classname({\n        column: true,\n        'order-2': true,\n        'column-main': true,\n        'is-12': columnCount === 1,\n        'is-8-tablet is-8-desktop is-8-widescreen': columnCount === 2,\n        'is-8-tablet is-8-desktop is-6-widescreen': columnCount === 3\n      }), null, 1, {\n        \"dangerouslySetInnerHTML\": {\n          __html: body\n        }\n      }), (0, _inferno.createComponentVNode)(2, Widgets, {\n        \"site\": site,\n        \"config\": config,\n        \"helper\": helper,\n        \"page\": page,\n        \"position\": 'left'\n      }), (0, _inferno.createComponentVNode)(2, Widgets, {\n        \"site\": site,\n        \"config\": config,\n        \"helper\": helper,\n        \"page\": page,\n        \"position\": 'right'\n      })], 4), 2), 2), (0, _inferno.createComponentVNode)(2, Footer, {\n        \"config\": config,\n        \"helper\": helper\n      }), (0, _inferno.createComponentVNode)(2, Scripts, {\n        \"site\": site,\n        \"config\": config,\n        \"helper\": helper,\n        \"page\": page\n      }), (0, _inferno.createComponentVNode)(2, Search, {\n        \"config\": config,\n        \"helper\": helper\n      })], 4)], 4, {\n        \"lang\": language ? language.substr(0, 2) : ''\n      });\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxheW91dC5qc3giXSwibmFtZXMiOlsicmVxdWlyZSIsIkNvbXBvbmVudCIsImNsYXNzbmFtZSIsIkhlYWQiLCJOYXZiYXIiLCJXaWRnZXRzIiwiRm9vdGVyIiwiU2NyaXB0cyIsIlNlYXJjaCIsIm1vZHVsZSIsImV4cG9ydHMiLCJwcm9wcyIsImVudiIsInNpdGUiLCJjb25maWciLCJwYWdlIiwiaGVscGVyIiwiYm9keSIsImxhbmd1YWdlIiwibGFuZyIsImNvbHVtbkNvdW50IiwiZ2V0Q29sdW1uQ291bnQiLCJ3aWRnZXRzIiwiY29sdW1uIiwiX19odG1sIiwic3Vic3RyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBQXNCQSxPQUFPLENBQUMsU0FBRCxDO0lBQXJCQyxTLFlBQUFBLFM7O0FBQ1IsSUFBTUMsU0FBUyxHQUFHRixPQUFPLENBQUMsMkNBQUQsQ0FBekI7O0FBQ0EsSUFBTUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsZUFBRCxDQUFwQjs7QUFDQSxJQUFNSSxNQUFNLEdBQUdKLE9BQU8sQ0FBQyxpQkFBRCxDQUF0Qjs7QUFDQSxJQUFNSyxPQUFPLEdBQUdMLE9BQU8sQ0FBQyxrQkFBRCxDQUF2Qjs7QUFDQSxJQUFNTSxNQUFNLEdBQUdOLE9BQU8sQ0FBQyxpQkFBRCxDQUF0Qjs7QUFDQSxJQUFNTyxPQUFPLEdBQUdQLE9BQU8sQ0FBQyxrQkFBRCxDQUF2Qjs7QUFDQSxJQUFNUSxNQUFNLEdBQUdSLE9BQU8sQ0FBQyxpQkFBRCxDQUF0Qjs7QUFFQVMsTUFBTSxDQUFDQyxPQUFQO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUEsNkJBQ2E7QUFBQSx3QkFDNkMsS0FBS0MsS0FEbEQ7QUFBQSxVQUNHQyxHQURILGVBQ0dBLEdBREg7QUFBQSxVQUNRQyxJQURSLGVBQ1FBLElBRFI7QUFBQSxVQUNjQyxNQURkLGVBQ2NBLE1BRGQ7QUFBQSxVQUNzQkMsSUFEdEIsZUFDc0JBLElBRHRCO0FBQUEsVUFDNEJDLE1BRDVCLGVBQzRCQSxNQUQ1QjtBQUFBLFVBQ29DQyxJQURwQyxlQUNvQ0EsSUFEcEM7QUFHTCxVQUFNQyxRQUFRLEdBQUdILElBQUksQ0FBQ0ksSUFBTCxJQUFhSixJQUFJLENBQUNHLFFBQWxCLElBQThCSixNQUFNLENBQUNJLFFBQXREO0FBQ0EsVUFBTUUsV0FBVyxHQUFHZixPQUFPLENBQUNnQixjQUFSLENBQXVCUCxNQUFNLENBQUNRLE9BQTlCLENBQXBCO0FBRUE7QUFBQSxlQUNlVixHQURmO0FBQUEsZ0JBQzBCQyxJQUQxQjtBQUFBLGtCQUN3Q0MsTUFEeEM7QUFBQSxrQkFDd0RFLE1BRHhEO0FBQUEsZ0JBQ3NFRDtBQUR0RSw0REFFdUJLLFdBRnZCO0FBQUEsa0JBR3dCTixNQUh4QjtBQUFBLGtCQUd3Q0UsTUFIeEM7QUFBQSxnQkFHc0REO0FBSHRELGtEQUl1QixTQUp2QixzQ0FLdUIsV0FMdkIsc0NBTTJCLFNBTjNCLHVDQU9nQ2IsU0FBUyxDQUFDO0FBQ2xCcUIsUUFBQUEsTUFBTSxFQUFFLElBRFU7QUFFbEIsbUJBQVcsSUFGTztBQUdsQix1QkFBZSxJQUhHO0FBSWxCLGlCQUFTSCxXQUFXLEtBQUssQ0FKUDtBQUtsQixvREFBNENBLFdBQVcsS0FBSyxDQUwxQztBQU1sQixvREFBNENBLFdBQVcsS0FBSztBQU4xQyxPQUFELENBUHpDO0FBQUEsbUNBY2lEO0FBQUVJLFVBQUFBLE1BQU0sRUFBRVA7QUFBVjtBQWRqRDtBQUFBLGdCQWVtQ0osSUFmbkM7QUFBQSxrQkFlaURDLE1BZmpEO0FBQUEsa0JBZWlFRSxNQWZqRTtBQUFBLGdCQWUrRUQsSUFmL0U7QUFBQSxvQkFlK0Y7QUFmL0Y7QUFBQSxnQkFnQm1DRixJQWhCbkM7QUFBQSxrQkFnQmlEQyxNQWhCakQ7QUFBQSxrQkFnQmlFRSxNQWhCakU7QUFBQSxnQkFnQitFRCxJQWhCL0U7QUFBQSxvQkFnQitGO0FBaEIvRjtBQUFBLGtCQW9Cd0JELE1BcEJ4QjtBQUFBLGtCQW9Cd0NFO0FBcEJ4QztBQUFBLGdCQXFCdUJILElBckJ2QjtBQUFBLGtCQXFCcUNDLE1BckJyQztBQUFBLGtCQXFCcURFLE1BckJyRDtBQUFBLGdCQXFCbUVEO0FBckJuRTtBQUFBLGtCQXNCd0JELE1BdEJ4QjtBQUFBLGtCQXNCd0NFO0FBdEJ4QztBQUFBLGdCQUFtQkUsUUFBUSxHQUFHQSxRQUFRLENBQUNPLE1BQVQsQ0FBZ0IsQ0FBaEIsRUFBbUIsQ0FBbkIsQ0FBSCxHQUEyQjtBQUF0RDtBQXlCSDtBQWhDTDs7QUFBQTtBQUFBLEVBQStCeEIsU0FBL0IiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzMy9sYXlvdXQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IENvbXBvbmVudCB9ID0gcmVxdWlyZSgnaW5mZXJubycpO1xuY29uc3QgY2xhc3NuYW1lID0gcmVxdWlyZSgnaGV4by1jb21wb25lbnQtaW5mZXJuby9saWIvdXRpbC9jbGFzc25hbWUnKTtcbmNvbnN0IEhlYWQgPSByZXF1aXJlKCcuL2NvbW1vbi9oZWFkJyk7XG5jb25zdCBOYXZiYXIgPSByZXF1aXJlKCcuL2NvbW1vbi9uYXZiYXInKTtcbmNvbnN0IFdpZGdldHMgPSByZXF1aXJlKCcuL2NvbW1vbi93aWRnZXRzJyk7XG5jb25zdCBGb290ZXIgPSByZXF1aXJlKCcuL2NvbW1vbi9mb290ZXInKTtcbmNvbnN0IFNjcmlwdHMgPSByZXF1aXJlKCcuL2NvbW1vbi9zY3JpcHRzJyk7XG5jb25zdCBTZWFyY2ggPSByZXF1aXJlKCcuL2NvbW1vbi9zZWFyY2gnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBjbGFzcyBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IGVudiwgc2l0ZSwgY29uZmlnLCBwYWdlLCBoZWxwZXIsIGJvZHkgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgY29uc3QgbGFuZ3VhZ2UgPSBwYWdlLmxhbmcgfHwgcGFnZS5sYW5ndWFnZSB8fCBjb25maWcubGFuZ3VhZ2U7XG4gICAgICAgIGNvbnN0IGNvbHVtbkNvdW50ID0gV2lkZ2V0cy5nZXRDb2x1bW5Db3VudChjb25maWcud2lkZ2V0cyk7XG5cbiAgICAgICAgcmV0dXJuIDxodG1sIGxhbmc9e2xhbmd1YWdlID8gbGFuZ3VhZ2Uuc3Vic3RyKDAsIDIpIDogJyd9PlxuICAgICAgICAgICAgPEhlYWQgZW52PXtlbnZ9IHNpdGU9e3NpdGV9IGNvbmZpZz17Y29uZmlnfSBoZWxwZXI9e2hlbHBlcn0gcGFnZT17cGFnZX0gLz5cbiAgICAgICAgICAgIDxib2R5IGNsYXNzPXtgaXMtJHtjb2x1bW5Db3VudH0tY29sdW1uYH0+XG4gICAgICAgICAgICAgICAgPE5hdmJhciBjb25maWc9e2NvbmZpZ30gaGVscGVyPXtoZWxwZXJ9IHBhZ2U9e3BhZ2V9IC8+XG4gICAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9XCJzZWN0aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW5zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz17Y2xhc3NuYW1lKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sdW1uOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnb3JkZXItMic6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjb2x1bW4tbWFpbic6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpcy0xMic6IGNvbHVtbkNvdW50ID09PSAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaXMtOC10YWJsZXQgaXMtOC1kZXNrdG9wIGlzLTgtd2lkZXNjcmVlbic6IGNvbHVtbkNvdW50ID09PSAyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaXMtOC10YWJsZXQgaXMtOC1kZXNrdG9wIGlzLTYtd2lkZXNjcmVlbic6IGNvbHVtbkNvdW50ID09PSAzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSl9IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogYm9keSB9fT48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8V2lkZ2V0cyBzaXRlPXtzaXRlfSBjb25maWc9e2NvbmZpZ30gaGVscGVyPXtoZWxwZXJ9IHBhZ2U9e3BhZ2V9IHBvc2l0aW9uPXsnbGVmdCd9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFdpZGdldHMgc2l0ZT17c2l0ZX0gY29uZmlnPXtjb25maWd9IGhlbHBlcj17aGVscGVyfSBwYWdlPXtwYWdlfSBwb3NpdGlvbj17J3JpZ2h0J30gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICAgICAgICAgPEZvb3RlciBjb25maWc9e2NvbmZpZ30gaGVscGVyPXtoZWxwZXJ9IC8+XG4gICAgICAgICAgICAgICAgPFNjcmlwdHMgc2l0ZT17c2l0ZX0gY29uZmlnPXtjb25maWd9IGhlbHBlcj17aGVscGVyfSBwYWdlPXtwYWdlfSAvPlxuICAgICAgICAgICAgICAgIDxTZWFyY2ggY29uZmlnPXtjb25maWd9IGhlbHBlcj17aGVscGVyfSAvPlxuICAgICAgICAgICAgPC9ib2R5PlxuICAgICAgICA8L2h0bWw+O1xuICAgIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "layout.jsx"
      ],
      "names": [
        "require",
        "Component",
        "classname",
        "Head",
        "Navbar",
        "Widgets",
        "Footer",
        "Scripts",
        "Search",
        "module",
        "exports",
        "props",
        "env",
        "site",
        "config",
        "page",
        "helper",
        "body",
        "language",
        "lang",
        "columnCount",
        "getColumnCount",
        "widgets",
        "column",
        "__html",
        "substr"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;eAAsBA,OAAO,CAAC,SAAD,C;IAArBC,S,YAAAA,S;;AACR,IAAMC,SAAS,GAAGF,OAAO,CAAC,2CAAD,CAAzB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,eAAD,CAApB;;AACA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,iBAAD,CAAtB;;AACA,IAAMK,OAAO,GAAGL,OAAO,CAAC,kBAAD,CAAvB;;AACA,IAAMM,MAAM,GAAGN,OAAO,CAAC,iBAAD,CAAtB;;AACA,IAAMO,OAAO,GAAGP,OAAO,CAAC,kBAAD,CAAvB;;AACA,IAAMQ,MAAM,GAAGR,OAAO,CAAC,iBAAD,CAAtB;;AAEAS,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBAC6C,KAAKC,KADlD;AAAA,UACGC,GADH,eACGA,GADH;AAAA,UACQC,IADR,eACQA,IADR;AAAA,UACcC,MADd,eACcA,MADd;AAAA,UACsBC,IADtB,eACsBA,IADtB;AAAA,UAC4BC,MAD5B,eAC4BA,MAD5B;AAAA,UACoCC,IADpC,eACoCA,IADpC;AAGL,UAAMC,QAAQ,GAAGH,IAAI,CAACI,IAAL,IAAaJ,IAAI,CAACG,QAAlB,IAA8BJ,MAAM,CAACI,QAAtD;AACA,UAAME,WAAW,GAAGf,OAAO,CAACgB,cAAR,CAAuBP,MAAM,CAACQ,OAA9B,CAApB;AAEA;AAAA,eACeV,GADf;AAAA,gBAC0BC,IAD1B;AAAA,kBACwCC,MADxC;AAAA,kBACwDE,MADxD;AAAA,gBACsED;AADtE,4DAEuBK,WAFvB;AAAA,kBAGwBN,MAHxB;AAAA,kBAGwCE,MAHxC;AAAA,gBAGsDD;AAHtD,kDAIuB,SAJvB,sCAKuB,WALvB,sCAM2B,SAN3B,uCAOgCb,SAAS,CAAC;AAClBqB,QAAAA,MAAM,EAAE,IADU;AAElB,mBAAW,IAFO;AAGlB,uBAAe,IAHG;AAIlB,iBAASH,WAAW,KAAK,CAJP;AAKlB,oDAA4CA,WAAW,KAAK,CAL1C;AAMlB,oDAA4CA,WAAW,KAAK;AAN1C,OAAD,CAPzC;AAAA,mCAciD;AAAEI,UAAAA,MAAM,EAAEP;AAAV;AAdjD;AAAA,gBAemCJ,IAfnC;AAAA,kBAeiDC,MAfjD;AAAA,kBAeiEE,MAfjE;AAAA,gBAe+ED,IAf/E;AAAA,oBAe+F;AAf/F;AAAA,gBAgBmCF,IAhBnC;AAAA,kBAgBiDC,MAhBjD;AAAA,kBAgBiEE,MAhBjE;AAAA,gBAgB+ED,IAhB/E;AAAA,oBAgB+F;AAhB/F;AAAA,kBAoBwBD,MApBxB;AAAA,kBAoBwCE;AApBxC;AAAA,gBAqBuBH,IArBvB;AAAA,kBAqBqCC,MArBrC;AAAA,kBAqBqDE,MArBrD;AAAA,gBAqBmED;AArBnE;AAAA,kBAsBwBD,MAtBxB;AAAA,kBAsBwCE;AAtBxC;AAAA,gBAAmBE,QAAQ,GAAGA,QAAQ,CAACO,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,CAAH,GAA2B;AAAtD;AAyBH;AAhCL;;AAAA;AAAA,EAA+BxB,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "sourcesContent": [
        "const { Component } = require('inferno');\nconst classname = require('hexo-component-inferno/lib/util/classname');\nconst Head = require('./common/head');\nconst Navbar = require('./common/navbar');\nconst Widgets = require('./common/widgets');\nconst Footer = require('./common/footer');\nconst Scripts = require('./common/scripts');\nconst Search = require('./common/search');\n\nmodule.exports = class extends Component {\n    render() {\n        const { env, site, config, page, helper, body } = this.props;\n\n        const language = page.lang || page.language || config.language;\n        const columnCount = Widgets.getColumnCount(config.widgets);\n\n        return <html lang={language ? language.substr(0, 2) : ''}>\n            <Head env={env} site={site} config={config} helper={helper} page={page} />\n            <body class={`is-${columnCount}-column`}>\n                <Navbar config={config} helper={helper} page={page} />\n                <section class=\"section\">\n                    <div class=\"container\">\n                        <div class=\"columns\">\n                            <div class={classname({\n                                column: true,\n                                'order-2': true,\n                                'column-main': true,\n                                'is-12': columnCount === 1,\n                                'is-8-tablet is-8-desktop is-8-widescreen': columnCount === 2,\n                                'is-8-tablet is-8-desktop is-6-widescreen': columnCount === 3\n                            })} dangerouslySetInnerHTML={{ __html: body }}></div>\n                            <Widgets site={site} config={config} helper={helper} page={page} position={'left'} />\n                            <Widgets site={site} config={config} helper={helper} page={page} position={'right'} />\n                        </div>\n                    </div>\n                </section>\n                <Footer config={config} helper={helper} />\n                <Scripts site={site} config={config} helper={helper} page={page} />\n                <Search config={config} helper={helper} />\n            </body>\n        </html>;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/common/head.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/common/head.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/common/head.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/common/head.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
        "sourceFileName": "head.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('inferno'),\n    Component = _require.Component;\n\nvar MetaTags = require('hexo-component-inferno/lib/view/misc/meta');\n\nvar OpenGraph = require('hexo-component-inferno/lib/view/misc/open_graph');\n\nvar StructuredData = require('hexo-component-inferno/lib/view/misc/structured_data');\n\nvar Plugins = require('./plugins');\n\nfunction getPageTitle(page, siteTitle, helper) {\n  var title = page.title;\n\n  if (helper.is_archive()) {\n    title = helper._p('common.archive', Infinity);\n\n    if (helper.is_month()) {\n      title += ': ' + page.year + '/' + page.month;\n    } else if (helper.is_year()) {\n      title += ': ' + page.year;\n    }\n  } else if (helper.is_category()) {\n    title = helper._p('common.category', 1) + ': ' + page.category;\n  } else if (helper.is_tag()) {\n    title = helper._p('common.tag', 1) + ': ' + page.tag;\n  } else if (helper.is_categories()) {\n    title = helper._p('common.category', Infinity);\n  } else if (helper.is_tags()) {\n    title = helper._p('common.tag', Infinity);\n  }\n\n  return [title, siteTitle].filter(function (str) {\n    return typeof str !== 'undefined' && str.trim() !== '';\n  }).join(' - ');\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          env = _this$props.env,\n          site = _this$props.site,\n          config = _this$props.config,\n          helper = _this$props.helper,\n          page = _this$props.page;\n      var url_for = helper.url_for,\n          cdn = helper.cdn,\n          iconcdn = helper.iconcdn,\n          fontcdn = helper.fontcdn,\n          is_post = helper.is_post;\n      var url = config.url,\n          _config$meta_generato = config.meta_generator,\n          meta_generator = _config$meta_generato === void 0 ? true : _config$meta_generato,\n          _config$head = config.head,\n          head = _config$head === void 0 ? {} : _config$head,\n          article = config.article,\n          highlight = config.highlight;\n      var _head$meta = head.meta,\n          meta = _head$meta === void 0 ? [] : _head$meta,\n          _head$open_graph = head.open_graph,\n          open_graph = _head$open_graph === void 0 ? {} : _head$open_graph,\n          _head$structured_data = head.structured_data,\n          structured_data = _head$structured_data === void 0 ? {} : _head$structured_data,\n          canonical_url = head.canonical_url,\n          rss = head.rss,\n          favicon = head.favicon;\n      var language = page.lang || page.language || config.language;\n      var hlTheme, images;\n\n      if (highlight && highlight.enable === false) {\n        hlTheme = null;\n      } else if (article && article.highlight && article.highlight.theme) {\n        hlTheme = article.highlight.theme;\n      } else {\n        hlTheme = 'atom-one-light';\n      }\n\n      if (typeof page.og_image === 'string') {\n        images = [page.og_image];\n      } else if (helper.has_thumbnail(page)) {\n        images = [helper.get_thumbnail(page)];\n      } else if (article && typeof article.og_image === 'string') {\n        images = [article.og_image];\n      } else if (page.content && page.content.includes('<img')) {\n        var img;\n        images = [];\n        var imgPattern = /<img [^>]*src=['\"]([^'\"]+)([^>]*>)/gi;\n\n        while ((img = imgPattern.exec(page.content)) !== null) {\n          images.push(img[1]);\n        }\n      } else {\n        images = [url_for('/img/og_image.png')];\n      }\n\n      var adsenseClientId = null;\n\n      if (Array.isArray(config.widgets)) {\n        var widget = config.widgets.find(function (widget) {\n          return widget.type === 'adsense';\n        });\n\n        if (widget) {\n          adsenseClientId = widget.client_id;\n        }\n      }\n\n      var openGraphImages = images;\n\n      if (Array.isArray(open_graph.image) && open_graph.image.length > 0 || typeof open_graph.image === 'string') {\n        openGraphImages = open_graph.image;\n      } else if (Array.isArray(page.photos) && page.photos.length > 0 || typeof page.photos === 'string') {\n        openGraphImages = page.photos;\n      }\n\n      var structuredImages = images;\n\n      if (Array.isArray(structured_data.image) && structured_data.image.length > 0 || typeof structured_data.image === 'string') {\n        structuredImages = structured_data.image;\n      } else if (Array.isArray(page.photos) && page.photos.length > 0 || typeof page.photos === 'string') {\n        structuredImages = page.photos;\n      }\n\n      return (0, _inferno.createVNode)(1, \"head\", null, [(0, _inferno.createVNode)(1, \"meta\", null, null, 1, {\n        \"charset\": \"utf-8\"\n      }), meta_generator ? (0, _inferno.createVNode)(1, \"meta\", null, null, 1, {\n        \"name\": \"generator\",\n        \"content\": \"Hexo \".concat(env.version)\n      }) : null, (0, _inferno.createVNode)(1, \"meta\", null, null, 1, {\n        \"name\": \"viewport\",\n        \"content\": \"width=device-width, initial-scale=1, maximum-scale=1\"\n      }), (0, _inferno.createComponentVNode)(2, MetaTags, {\n        \"meta\": meta\n      }), (0, _inferno.createVNode)(1, \"title\", null, getPageTitle(page, config.title, helper), 0), _typeof(open_graph) === 'object' ? (0, _inferno.createComponentVNode)(2, OpenGraph, {\n        \"type\": open_graph.type || (is_post(page) ? 'article' : 'website'),\n        \"title\": open_graph.title || page.title || config.title,\n        \"date\": page.date,\n        \"updated\": page.updated,\n        \"author\": open_graph.author || config.author,\n        \"description\": open_graph.description || page.description || page.excerpt || page.content || config.description,\n        \"keywords\": page.keywords || (page.tags && page.tags.length ? page.tags : undefined) || config.keywords,\n        \"url\": open_graph.url || url,\n        \"images\": openGraphImages,\n        \"siteName\": open_graph.site_name || config.title,\n        \"language\": language,\n        \"twitterId\": open_graph.twitter_id,\n        \"twitterCard\": open_graph.twitter_card,\n        \"twitterSite\": open_graph.twitter_site,\n        \"googlePlus\": open_graph.google_plus,\n        \"facebookAdmins\": open_graph.fb_admins,\n        \"facebookAppId\": open_graph.fb_app_id\n      }) : null, _typeof(structured_data) === 'object' ? (0, _inferno.createComponentVNode)(2, StructuredData, {\n        \"title\": structured_data.title || config.title,\n        \"description\": structured_data.description || page.description || page.excerpt || page.content || config.description,\n        \"url\": structured_data.url || page.permalink || url,\n        \"author\": structured_data.author || config.author,\n        \"date\": page.date,\n        \"updated\": page.updated,\n        \"images\": structuredImages\n      }) : null, canonical_url ? (0, _inferno.createVNode)(1, \"link\", null, null, 1, {\n        \"rel\": \"canonical\",\n        \"href\": canonical_url\n      }) : null, rss ? (0, _inferno.createVNode)(1, \"link\", null, null, 1, {\n        \"rel\": \"alternative\",\n        \"href\": url_for(rss),\n        \"title\": config.title,\n        \"type\": \"application/atom+xml\"\n      }) : null, favicon ? (0, _inferno.createVNode)(1, \"link\", null, null, 1, {\n        \"rel\": \"icon\",\n        \"href\": url_for(favicon)\n      }) : null, (0, _inferno.createVNode)(1, \"link\", null, null, 1, {\n        \"rel\": \"stylesheet\",\n        \"href\": iconcdn()\n      }), (0, _inferno.createVNode)(1, \"link\", null, null, 1, {\n        \"rel\": \"stylesheet\",\n        \"href\": fontcdn('Ubuntu:400,600|Source+Code+Pro')\n      }), hlTheme ? (0, _inferno.createVNode)(1, \"link\", null, null, 1, {\n        \"rel\": \"stylesheet\",\n        \"href\": cdn('highlight.js', '9.12.0', 'styles/' + hlTheme + '.css')\n      }) : null, (0, _inferno.createComponentVNode)(2, Plugins, {\n        \"site\": site,\n        \"config\": config,\n        \"helper\": helper,\n        \"page\": page,\n        \"head\": true\n      }), (0, _inferno.createVNode)(1, \"link\", null, null, 1, {\n        \"rel\": \"stylesheet\",\n        \"href\": url_for('/css/style.css')\n      }), adsenseClientId ? (0, _inferno.createVNode)(1, \"script\", null, null, 1, {\n        \"data-ad-client\": adsenseClientId,\n        \"src\": \"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\",\n        \"async\": true\n      }) : null], 0);\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "head.jsx"
      ],
      "names": [
        "require",
        "Component",
        "MetaTags",
        "OpenGraph",
        "StructuredData",
        "Plugins",
        "getPageTitle",
        "page",
        "siteTitle",
        "helper",
        "title",
        "is_archive",
        "_p",
        "Infinity",
        "is_month",
        "year",
        "month",
        "is_year",
        "is_category",
        "category",
        "is_tag",
        "tag",
        "is_categories",
        "is_tags",
        "filter",
        "str",
        "trim",
        "join",
        "module",
        "exports",
        "props",
        "env",
        "site",
        "config",
        "url_for",
        "cdn",
        "iconcdn",
        "fontcdn",
        "is_post",
        "url",
        "meta_generator",
        "head",
        "article",
        "highlight",
        "meta",
        "open_graph",
        "structured_data",
        "canonical_url",
        "rss",
        "favicon",
        "language",
        "lang",
        "hlTheme",
        "images",
        "enable",
        "theme",
        "og_image",
        "has_thumbnail",
        "get_thumbnail",
        "content",
        "includes",
        "img",
        "imgPattern",
        "exec",
        "push",
        "adsenseClientId",
        "Array",
        "isArray",
        "widgets",
        "widget",
        "find",
        "type",
        "client_id",
        "openGraphImages",
        "image",
        "length",
        "photos",
        "structuredImages",
        "version",
        "date",
        "updated",
        "author",
        "description",
        "excerpt",
        "keywords",
        "tags",
        "undefined",
        "site_name",
        "twitter_id",
        "twitter_card",
        "twitter_site",
        "google_plus",
        "fb_admins",
        "fb_app_id",
        "permalink"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;eAAsBA,OAAO,CAAC,SAAD,C;IAArBC,S,YAAAA,S;;AACR,IAAMC,QAAQ,GAAGF,OAAO,CAAC,2CAAD,CAAxB;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,iDAAD,CAAzB;;AACA,IAAMI,cAAc,GAAGJ,OAAO,CAAC,sDAAD,CAA9B;;AACA,IAAMK,OAAO,GAAGL,OAAO,CAAC,WAAD,CAAvB;;AAEA,SAASM,YAAT,CAAsBC,IAAtB,EAA4BC,SAA5B,EAAuCC,MAAvC,EAA+C;AAC3C,MAAIC,KAAK,GAAGH,IAAI,CAACG,KAAjB;;AAEA,MAAID,MAAM,CAACE,UAAP,EAAJ,EAAyB;AACrBD,IAAAA,KAAK,GAAGD,MAAM,CAACG,EAAP,CAAU,gBAAV,EAA4BC,QAA5B,CAAR;;AACA,QAAIJ,MAAM,CAACK,QAAP,EAAJ,EAAuB;AACnBJ,MAAAA,KAAK,IAAI,OAAOH,IAAI,CAACQ,IAAZ,GAAmB,GAAnB,GAAyBR,IAAI,CAACS,KAAvC;AACH,KAFD,MAEO,IAAIP,MAAM,CAACQ,OAAP,EAAJ,EAAsB;AACzBP,MAAAA,KAAK,IAAI,OAAOH,IAAI,CAACQ,IAArB;AACH;AACJ,GAPD,MAOO,IAAIN,MAAM,CAACS,WAAP,EAAJ,EAA0B;AAC7BR,IAAAA,KAAK,GAAGD,MAAM,CAACG,EAAP,CAAU,iBAAV,EAA6B,CAA7B,IAAkC,IAAlC,GAAyCL,IAAI,CAACY,QAAtD;AACH,GAFM,MAEA,IAAIV,MAAM,CAACW,MAAP,EAAJ,EAAqB;AACxBV,IAAAA,KAAK,GAAGD,MAAM,CAACG,EAAP,CAAU,YAAV,EAAwB,CAAxB,IAA6B,IAA7B,GAAoCL,IAAI,CAACc,GAAjD;AACH,GAFM,MAEA,IAAIZ,MAAM,CAACa,aAAP,EAAJ,EAA4B;AAC/BZ,IAAAA,KAAK,GAAGD,MAAM,CAACG,EAAP,CAAU,iBAAV,EAA6BC,QAA7B,CAAR;AACH,GAFM,MAEA,IAAIJ,MAAM,CAACc,OAAP,EAAJ,EAAsB;AACzBb,IAAAA,KAAK,GAAGD,MAAM,CAACG,EAAP,CAAU,YAAV,EAAwBC,QAAxB,CAAR;AACH;;AAED,SAAO,CAACH,KAAD,EAAQF,SAAR,EAAmBgB,MAAnB,CAA0B,UAAAC,GAAG;AAAA,WAAI,OAAOA,GAAP,KAAe,WAAf,IAA8BA,GAAG,CAACC,IAAJ,OAAe,EAAjD;AAAA,GAA7B,EAAkFC,IAAlF,CAAuF,KAAvF,CAAP;AACH;;AAEDC,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBACuC,KAAKC,KAD5C;AAAA,UACGC,GADH,eACGA,GADH;AAAA,UACQC,IADR,eACQA,IADR;AAAA,UACcC,MADd,eACcA,MADd;AAAA,UACsBxB,MADtB,eACsBA,MADtB;AAAA,UAC8BF,IAD9B,eAC8BA,IAD9B;AAAA,UAEG2B,OAFH,GAE+CzB,MAF/C,CAEGyB,OAFH;AAAA,UAEYC,GAFZ,GAE+C1B,MAF/C,CAEY0B,GAFZ;AAAA,UAEiBC,OAFjB,GAE+C3B,MAF/C,CAEiB2B,OAFjB;AAAA,UAE0BC,OAF1B,GAE+C5B,MAF/C,CAE0B4B,OAF1B;AAAA,UAEmCC,OAFnC,GAE+C7B,MAF/C,CAEmC6B,OAFnC;AAAA,UAIDC,GAJC,GASDN,MATC,CAIDM,GAJC;AAAA,kCASDN,MATC,CAKDO,cALC;AAAA,UAKDA,cALC,sCAKgB,IALhB;AAAA,yBASDP,MATC,CAMDQ,IANC;AAAA,UAMDA,IANC,6BAMM,EANN;AAAA,UAODC,OAPC,GASDT,MATC,CAODS,OAPC;AAAA,UAQDC,SARC,GASDV,MATC,CAQDU,SARC;AAAA,uBAiBDF,IAjBC,CAWDG,IAXC;AAAA,UAWDA,IAXC,2BAWM,EAXN;AAAA,6BAiBDH,IAjBC,CAYDI,UAZC;AAAA,UAYDA,UAZC,iCAYY,EAZZ;AAAA,kCAiBDJ,IAjBC,CAaDK,eAbC;AAAA,UAaDA,eAbC,sCAaiB,EAbjB;AAAA,UAcDC,aAdC,GAiBDN,IAjBC,CAcDM,aAdC;AAAA,UAeDC,GAfC,GAiBDP,IAjBC,CAeDO,GAfC;AAAA,UAgBDC,OAhBC,GAiBDR,IAjBC,CAgBDQ,OAhBC;AAmBL,UAAMC,QAAQ,GAAG3C,IAAI,CAAC4C,IAAL,IAAa5C,IAAI,CAAC2C,QAAlB,IAA8BjB,MAAM,CAACiB,QAAtD;AAEA,UAAIE,OAAJ,EAAaC,MAAb;;AACA,UAAIV,SAAS,IAAIA,SAAS,CAACW,MAAV,KAAqB,KAAtC,EAA6C;AACzCF,QAAAA,OAAO,GAAG,IAAV;AACH,OAFD,MAEO,IAAIV,OAAO,IAAIA,OAAO,CAACC,SAAnB,IAAgCD,OAAO,CAACC,SAAR,CAAkBY,KAAtD,EAA6D;AAChEH,QAAAA,OAAO,GAAGV,OAAO,CAACC,SAAR,CAAkBY,KAA5B;AACH,OAFM,MAEA;AACHH,QAAAA,OAAO,GAAG,gBAAV;AACH;;AAED,UAAI,OAAO7C,IAAI,CAACiD,QAAZ,KAAyB,QAA7B,EAAuC;AACnCH,QAAAA,MAAM,GAAG,CAAC9C,IAAI,CAACiD,QAAN,CAAT;AACH,OAFD,MAEO,IAAI/C,MAAM,CAACgD,aAAP,CAAqBlD,IAArB,CAAJ,EAAgC;AACnC8C,QAAAA,MAAM,GAAG,CAAC5C,MAAM,CAACiD,aAAP,CAAqBnD,IAArB,CAAD,CAAT;AACH,OAFM,MAEA,IAAImC,OAAO,IAAI,OAAOA,OAAO,CAACc,QAAf,KAA4B,QAA3C,EAAqD;AACxDH,QAAAA,MAAM,GAAG,CAACX,OAAO,CAACc,QAAT,CAAT;AACH,OAFM,MAEA,IAAIjD,IAAI,CAACoD,OAAL,IAAgBpD,IAAI,CAACoD,OAAL,CAAaC,QAAb,CAAsB,MAAtB,CAApB,EAAmD;AACtD,YAAIC,GAAJ;AACAR,QAAAA,MAAM,GAAG,EAAT;AACA,YAAMS,UAAU,GAAG,sCAAnB;;AACA,eAAO,CAACD,GAAG,GAAGC,UAAU,CAACC,IAAX,CAAgBxD,IAAI,CAACoD,OAArB,CAAP,MAA0C,IAAjD,EAAuD;AACnDN,UAAAA,MAAM,CAACW,IAAP,CAAYH,GAAG,CAAC,CAAD,CAAf;AACH;AACJ,OAPM,MAOA;AACHR,QAAAA,MAAM,GAAG,CAACnB,OAAO,CAAC,mBAAD,CAAR,CAAT;AACH;;AAED,UAAI+B,eAAe,GAAG,IAAtB;;AACA,UAAIC,KAAK,CAACC,OAAN,CAAclC,MAAM,CAACmC,OAArB,CAAJ,EAAmC;AAC/B,YAAMC,MAAM,GAAGpC,MAAM,CAACmC,OAAP,CAAeE,IAAf,CAAoB,UAAAD,MAAM;AAAA,iBAAIA,MAAM,CAACE,IAAP,KAAgB,SAApB;AAAA,SAA1B,CAAf;;AACA,YAAIF,MAAJ,EAAY;AACRJ,UAAAA,eAAe,GAAGI,MAAM,CAACG,SAAzB;AACH;AACJ;;AAED,UAAIC,eAAe,GAAGpB,MAAtB;;AACA,UAAKa,KAAK,CAACC,OAAN,CAActB,UAAU,CAAC6B,KAAzB,KAAmC7B,UAAU,CAAC6B,KAAX,CAAiBC,MAAjB,GAA0B,CAA9D,IAAoE,OAAO9B,UAAU,CAAC6B,KAAlB,KAA4B,QAApG,EAA8G;AAC1GD,QAAAA,eAAe,GAAG5B,UAAU,CAAC6B,KAA7B;AACH,OAFD,MAEO,IAAKR,KAAK,CAACC,OAAN,CAAc5D,IAAI,CAACqE,MAAnB,KAA8BrE,IAAI,CAACqE,MAAL,CAAYD,MAAZ,GAAqB,CAApD,IAA0D,OAAOpE,IAAI,CAACqE,MAAZ,KAAuB,QAArF,EAA+F;AAClGH,QAAAA,eAAe,GAAGlE,IAAI,CAACqE,MAAvB;AACH;;AAED,UAAIC,gBAAgB,GAAGxB,MAAvB;;AACA,UAAKa,KAAK,CAACC,OAAN,CAAcrB,eAAe,CAAC4B,KAA9B,KAAwC5B,eAAe,CAAC4B,KAAhB,CAAsBC,MAAtB,GAA+B,CAAxE,IAA8E,OAAO7B,eAAe,CAAC4B,KAAvB,KAAiC,QAAnH,EAA6H;AACzHG,QAAAA,gBAAgB,GAAG/B,eAAe,CAAC4B,KAAnC;AACH,OAFD,MAEO,IAAKR,KAAK,CAACC,OAAN,CAAc5D,IAAI,CAACqE,MAAnB,KAA8BrE,IAAI,CAACqE,MAAL,CAAYD,MAAZ,GAAqB,CAApD,IAA0D,OAAOpE,IAAI,CAACqE,MAAZ,KAAuB,QAArF,EAA+F;AAClGC,QAAAA,gBAAgB,GAAGtE,IAAI,CAACqE,MAAxB;AACH;;AAED;AAAA,mBACkB;AADlB,UAEKpC,cAAc;AAAA,gBAAc,WAAd;AAAA,kCAA2CT,GAAG,CAAC+C,OAA/C;AAAA,WAA+D,IAFlF;AAAA,gBAGe,UAHf;AAAA,mBAGkC;AAHlC;AAAA,gBAIoBlC;AAJpB,sDAMYtC,YAAY,CAACC,IAAD,EAAO0B,MAAM,CAACvB,KAAd,EAAqBD,MAArB,CANxB,MAQK,QAAOoC,UAAP,MAAsB,QAAtB;AAAA,gBACSA,UAAU,CAAC0B,IAAX,KAAoBjC,OAAO,CAAC/B,IAAD,CAAP,GAAgB,SAAhB,GAA4B,SAAhD,CADT;AAAA,iBAEUsC,UAAU,CAACnC,KAAX,IAAoBH,IAAI,CAACG,KAAzB,IAAkCuB,MAAM,CAACvB,KAFnD;AAAA,gBAGSH,IAAI,CAACwE,IAHd;AAAA,mBAIYxE,IAAI,CAACyE,OAJjB;AAAA,kBAKWnC,UAAU,CAACoC,MAAX,IAAqBhD,MAAM,CAACgD,MALvC;AAAA,uBAMgBpC,UAAU,CAACqC,WAAX,IAA0B3E,IAAI,CAAC2E,WAA/B,IAA8C3E,IAAI,CAAC4E,OAAnD,IAA8D5E,IAAI,CAACoD,OAAnE,IAA8E1B,MAAM,CAACiD,WANrG;AAAA,oBAOa3E,IAAI,CAAC6E,QAAL,KAAkB7E,IAAI,CAAC8E,IAAL,IAAa9E,IAAI,CAAC8E,IAAL,CAAUV,MAAvB,GAAgCpE,IAAI,CAAC8E,IAArC,GAA4CC,SAA9D,KAA4ErD,MAAM,CAACmD,QAPhG;AAAA,eAQQvC,UAAU,CAACN,GAAX,IAAkBA,GAR1B;AAAA,kBASWkC,eATX;AAAA,oBAUa5B,UAAU,CAAC0C,SAAX,IAAwBtD,MAAM,CAACvB,KAV5C;AAAA,oBAWawC,QAXb;AAAA,qBAYcL,UAAU,CAAC2C,UAZzB;AAAA,uBAagB3C,UAAU,CAAC4C,YAb3B;AAAA,uBAcgB5C,UAAU,CAAC6C,YAd3B;AAAA,sBAee7C,UAAU,CAAC8C,WAf1B;AAAA,0BAgBmB9C,UAAU,CAAC+C,SAhB9B;AAAA,yBAiBkB/C,UAAU,CAACgD;AAjB7B,WAiB6C,IAzBlD,EA2BK,QAAO/C,eAAP,MAA2B,QAA3B;AAAA,iBACUA,eAAe,CAACpC,KAAhB,IAAyBuB,MAAM,CAACvB,KAD1C;AAAA,uBAEgBoC,eAAe,CAACoC,WAAhB,IAA+B3E,IAAI,CAAC2E,WAApC,IAAmD3E,IAAI,CAAC4E,OAAxD,IAAmE5E,IAAI,CAACoD,OAAxE,IAAmF1B,MAAM,CAACiD,WAF1G;AAAA,eAGQpC,eAAe,CAACP,GAAhB,IAAuBhC,IAAI,CAACuF,SAA5B,IAAyCvD,GAHjD;AAAA,kBAIWO,eAAe,CAACmC,MAAhB,IAA0BhD,MAAM,CAACgD,MAJ5C;AAAA,gBAKS1E,IAAI,CAACwE,IALd;AAAA,mBAMYxE,IAAI,CAACyE,OANjB;AAAA,kBAOWH;AAPX,WAOkC,IAlCvC,EAoCK9B,aAAa;AAAA,eAAa,WAAb;AAAA,gBAA+BA;AAA/B,WAAmD,IApCrE,EAqCKC,GAAG;AAAA,eAAa,aAAb;AAAA,gBAAiCd,OAAO,CAACc,GAAD,CAAxC;AAAA,iBAAsDf,MAAM,CAACvB,KAA7D;AAAA,gBAAyE;AAAzE,WAAqG,IArC7G,EAsCKuC,OAAO;AAAA,eAAa,MAAb;AAAA,gBAA0Bf,OAAO,CAACe,OAAD;AAAjC,WAAiD,IAtC7D;AAAA,eAuCc,YAvCd;AAAA,gBAuCiCb,OAAO;AAvCxC;AAAA,eAwCc,YAxCd;AAAA,gBAwCiCC,OAAO,CAAC,gCAAD;AAxCxC,UAyCKe,OAAO;AAAA,eAAa,YAAb;AAAA,gBAAgCjB,GAAG,CAAC,cAAD,EAAiB,QAAjB,EAA2B,YAAYiB,OAAZ,GAAsB,MAAjD;AAAnC,WAAkG,IAzC9G;AAAA,gBA0CmBpB,IA1CnB;AAAA,kBA0CiCC,MA1CjC;AAAA,kBA0CiDxB,MA1CjD;AAAA,gBA0C+DF,IA1C/D;AAAA,gBA0C2E;AA1C3E;AAAA,eA2Cc,YA3Cd;AAAA,gBA2CiC2B,OAAO,CAAC,gBAAD;AA3CxC,UA6CK+B,eAAe;AAAA,0BAA2BA,eAA3B;AAAA,eACR,gEADQ;AAAA,iBACgE;AADhE,WACkF,IA9CtG;AAgDH;AAtHL;;AAAA;AAAA,EAA+BhE,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "sourcesContent": [
        "const { Component } = require('inferno');\nconst MetaTags = require('hexo-component-inferno/lib/view/misc/meta');\nconst OpenGraph = require('hexo-component-inferno/lib/view/misc/open_graph');\nconst StructuredData = require('hexo-component-inferno/lib/view/misc/structured_data');\nconst Plugins = require('./plugins');\n\nfunction getPageTitle(page, siteTitle, helper) {\n    let title = page.title;\n\n    if (helper.is_archive()) {\n        title = helper._p('common.archive', Infinity);\n        if (helper.is_month()) {\n            title += ': ' + page.year + '/' + page.month;\n        } else if (helper.is_year()) {\n            title += ': ' + page.year;\n        }\n    } else if (helper.is_category()) {\n        title = helper._p('common.category', 1) + ': ' + page.category;\n    } else if (helper.is_tag()) {\n        title = helper._p('common.tag', 1) + ': ' + page.tag;\n    } else if (helper.is_categories()) {\n        title = helper._p('common.category', Infinity);\n    } else if (helper.is_tags()) {\n        title = helper._p('common.tag', Infinity);\n    }\n\n    return [title, siteTitle].filter(str => typeof str !== 'undefined' && str.trim() !== '').join(' - ');\n}\n\nmodule.exports = class extends Component {\n    render() {\n        const { env, site, config, helper, page } = this.props;\n        const { url_for, cdn, iconcdn, fontcdn, is_post } = helper;\n        const {\n            url,\n            meta_generator = true,\n            head = {},\n            article,\n            highlight\n        } = config;\n        const {\n            meta = [],\n            open_graph = {},\n            structured_data = {},\n            canonical_url,\n            rss,\n            favicon\n        } = head;\n\n        const language = page.lang || page.language || config.language;\n\n        let hlTheme, images;\n        if (highlight && highlight.enable === false) {\n            hlTheme = null;\n        } else if (article && article.highlight && article.highlight.theme) {\n            hlTheme = article.highlight.theme;\n        } else {\n            hlTheme = 'atom-one-light';\n        }\n\n        if (typeof page.og_image === 'string') {\n            images = [page.og_image];\n        } else if (helper.has_thumbnail(page)) {\n            images = [helper.get_thumbnail(page)];\n        } else if (article && typeof article.og_image === 'string') {\n            images = [article.og_image];\n        } else if (page.content && page.content.includes('<img')) {\n            let img;\n            images = [];\n            const imgPattern = /<img [^>]*src=['\"]([^'\"]+)([^>]*>)/gi;\n            while ((img = imgPattern.exec(page.content)) !== null) {\n                images.push(img[1]);\n            }\n        } else {\n            images = [url_for('/img/og_image.png')];\n        }\n\n        let adsenseClientId = null;\n        if (Array.isArray(config.widgets)) {\n            const widget = config.widgets.find(widget => widget.type === 'adsense');\n            if (widget) {\n                adsenseClientId = widget.client_id;\n            }\n        }\n\n        let openGraphImages = images;\n        if ((Array.isArray(open_graph.image) && open_graph.image.length > 0) || typeof open_graph.image === 'string') {\n            openGraphImages = open_graph.image;\n        } else if ((Array.isArray(page.photos) && page.photos.length > 0) || typeof page.photos === 'string') {\n            openGraphImages = page.photos;\n        }\n\n        let structuredImages = images;\n        if ((Array.isArray(structured_data.image) && structured_data.image.length > 0) || typeof structured_data.image === 'string') {\n            structuredImages = structured_data.image;\n        } else if ((Array.isArray(page.photos) && page.photos.length > 0) || typeof page.photos === 'string') {\n            structuredImages = page.photos;\n        }\n\n        return <head>\n            <meta charset=\"utf-8\" />\n            {meta_generator ? <meta name=\"generator\" content={`Hexo ${env.version}`} /> : null}\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\" />\n            <MetaTags meta={meta} />\n\n            <title>{getPageTitle(page, config.title, helper)}</title>\n\n            {typeof open_graph === 'object' ? <OpenGraph\n                type={open_graph.type || (is_post(page) ? 'article' : 'website')}\n                title={open_graph.title || page.title || config.title}\n                date={page.date}\n                updated={page.updated}\n                author={open_graph.author || config.author}\n                description={open_graph.description || page.description || page.excerpt || page.content || config.description}\n                keywords={page.keywords || (page.tags && page.tags.length ? page.tags : undefined) || config.keywords}\n                url={open_graph.url || url}\n                images={openGraphImages}\n                siteName={open_graph.site_name || config.title}\n                language={language}\n                twitterId={open_graph.twitter_id}\n                twitterCard={open_graph.twitter_card}\n                twitterSite={open_graph.twitter_site}\n                googlePlus={open_graph.google_plus}\n                facebookAdmins={open_graph.fb_admins}\n                facebookAppId={open_graph.fb_app_id} /> : null}\n\n            {typeof structured_data === 'object' ? <StructuredData\n                title={structured_data.title || config.title}\n                description={structured_data.description || page.description || page.excerpt || page.content || config.description}\n                url={structured_data.url || page.permalink || url}\n                author={structured_data.author || config.author}\n                date={page.date}\n                updated={page.updated}\n                images={structuredImages} /> : null}\n\n            {canonical_url ? <link rel=\"canonical\" href={canonical_url} /> : null}\n            {rss ? <link rel=\"alternative\" href={url_for(rss)} title={config.title} type=\"application/atom+xml\" /> : null}\n            {favicon ? <link rel=\"icon\" href={url_for(favicon)} /> : null}\n            <link rel=\"stylesheet\" href={iconcdn()} />\n            <link rel=\"stylesheet\" href={fontcdn('Ubuntu:400,600|Source+Code+Pro')} />\n            {hlTheme ? <link rel=\"stylesheet\" href={cdn('highlight.js', '9.12.0', 'styles/' + hlTheme + '.css')} /> : null}\n            <Plugins site={site} config={config} helper={helper} page={page} head={true} />\n            <link rel=\"stylesheet\" href={url_for('/css/style.css')} />\n\n            {adsenseClientId ? <script data-ad-client={adsenseClientId}\n                src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\" async={true}></script> : null}\n        </head>;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/common/plugins.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/common/plugins.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/common/plugins.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/common/plugins.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
        "sourceFileName": "plugins.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar logger = require('hexo-log')();\n\nvar _require = require('inferno'),\n    Component = _require.Component,\n    Fragment = _require.Fragment;\n\nvar view = require('hexo-component-inferno/lib/core/view');\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          site = _this$props.site,\n          config = _this$props.config,\n          page = _this$props.page,\n          helper = _this$props.helper,\n          head = _this$props.head;\n      var _config$plugins = config.plugins,\n          plugins = _config$plugins === void 0 ? [] : _config$plugins;\n      return (0, _inferno.createFragment)(Object.keys(plugins).map(function (name) {\n        // plugin is not enabled\n        if (!plugins[name]) {\n          return null;\n        }\n\n        try {\n          var Plugin = view.require('plugin/' + name);\n\n          return (0, _inferno.createComponentVNode)(2, Plugin, {\n            \"site\": site,\n            \"config\": config,\n            \"page\": page,\n            \"helper\": helper,\n            \"plugin\": plugins[name],\n            \"head\": head\n          });\n        } catch (e) {\n          logger.w(\"Icarus cannot load plugin \\\"\".concat(name, \"\\\"\"));\n          return null;\n        }\n      }), 0);\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsdWdpbnMuanN4Il0sIm5hbWVzIjpbImxvZ2dlciIsInJlcXVpcmUiLCJDb21wb25lbnQiLCJGcmFnbWVudCIsInZpZXciLCJtb2R1bGUiLCJleHBvcnRzIiwicHJvcHMiLCJzaXRlIiwiY29uZmlnIiwicGFnZSIsImhlbHBlciIsImhlYWQiLCJwbHVnaW5zIiwiT2JqZWN0Iiwia2V5cyIsIm1hcCIsIm5hbWUiLCJQbHVnaW4iLCJlIiwidyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBUCxFQUFmOztlQUNnQ0EsT0FBTyxDQUFDLFNBQUQsQztJQUEvQkMsUyxZQUFBQSxTO0lBQVdDLFEsWUFBQUEsUTs7QUFDbkIsSUFBTUMsSUFBSSxHQUFHSCxPQUFPLENBQUMsc0NBQUQsQ0FBcEI7O0FBRUFJLE1BQU0sQ0FBQ0MsT0FBUDtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBOztBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLDZCQUNhO0FBQUEsd0JBQ3dDLEtBQUtDLEtBRDdDO0FBQUEsVUFDR0MsSUFESCxlQUNHQSxJQURIO0FBQUEsVUFDU0MsTUFEVCxlQUNTQSxNQURUO0FBQUEsVUFDaUJDLElBRGpCLGVBQ2lCQSxJQURqQjtBQUFBLFVBQ3VCQyxNQUR2QixlQUN1QkEsTUFEdkI7QUFBQSxVQUMrQkMsSUFEL0IsZUFDK0JBLElBRC9CO0FBQUEsNEJBRW9CSCxNQUZwQixDQUVHSSxPQUZIO0FBQUEsVUFFR0EsT0FGSCxnQ0FFYSxFQUZiO0FBSUwsMENBQ0tDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZRixPQUFaLEVBQXFCRyxHQUFyQixDQUF5QixVQUFBQyxJQUFJLEVBQUk7QUFDOUI7QUFDQSxZQUFJLENBQUNKLE9BQU8sQ0FBQ0ksSUFBRCxDQUFaLEVBQW9CO0FBQ2hCLGlCQUFPLElBQVA7QUFDSDs7QUFDRCxZQUFJO0FBQ0EsY0FBTUMsTUFBTSxHQUFHZCxJQUFJLENBQUNILE9BQUwsQ0FBYSxZQUFZZ0IsSUFBekIsQ0FBZjs7QUFDQTtBQUFBLG9CQUFxQlQsSUFBckI7QUFBQSxzQkFBbUNDLE1BQW5DO0FBQUEsb0JBQWlEQyxJQUFqRDtBQUFBLHNCQUErREMsTUFBL0Q7QUFBQSxzQkFBK0VFLE9BQU8sQ0FBQ0ksSUFBRCxDQUF0RjtBQUFBLG9CQUFvR0w7QUFBcEc7QUFDSCxTQUhELENBR0UsT0FBT08sQ0FBUCxFQUFVO0FBQ1JuQixVQUFBQSxNQUFNLENBQUNvQixDQUFQLHVDQUF1Q0gsSUFBdkM7QUFDQSxpQkFBTyxJQUFQO0FBQ0g7QUFDSixPQVpBLENBREw7QUFlSDtBQXBCTDs7QUFBQTtBQUFBLEVBQStCZixTQUEvQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMzL2xheW91dC9jb21tb24iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBsb2dnZXIgPSByZXF1aXJlKCdoZXhvLWxvZycpKCk7XG5jb25zdCB7IENvbXBvbmVudCwgRnJhZ21lbnQgfSA9IHJlcXVpcmUoJ2luZmVybm8nKTtcbmNvbnN0IHZpZXcgPSByZXF1aXJlKCdoZXhvLWNvbXBvbmVudC1pbmZlcm5vL2xpYi9jb3JlL3ZpZXcnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBjbGFzcyBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IHNpdGUsIGNvbmZpZywgcGFnZSwgaGVscGVyLCBoZWFkIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCB7IHBsdWdpbnMgPSBbXSB9ID0gY29uZmlnO1xuXG4gICAgICAgIHJldHVybiA8RnJhZ21lbnQ+XG4gICAgICAgICAgICB7T2JqZWN0LmtleXMocGx1Z2lucykubWFwKG5hbWUgPT4ge1xuICAgICAgICAgICAgICAgIC8vIHBsdWdpbiBpcyBub3QgZW5hYmxlZFxuICAgICAgICAgICAgICAgIGlmICghcGx1Z2luc1tuYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgUGx1Z2luID0gdmlldy5yZXF1aXJlKCdwbHVnaW4vJyArIG5hbWUpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gPFBsdWdpbiBzaXRlPXtzaXRlfSBjb25maWc9e2NvbmZpZ30gcGFnZT17cGFnZX0gaGVscGVyPXtoZWxwZXJ9IHBsdWdpbj17cGx1Z2luc1tuYW1lXX0gaGVhZD17aGVhZH0gLz47XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICBsb2dnZXIudyhgSWNhcnVzIGNhbm5vdCBsb2FkIHBsdWdpbiBcIiR7bmFtZX1cImApO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KX1cbiAgICAgICAgPC9GcmFnbWVudD47XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "plugins.jsx"
      ],
      "names": [
        "logger",
        "require",
        "Component",
        "Fragment",
        "view",
        "module",
        "exports",
        "props",
        "site",
        "config",
        "page",
        "helper",
        "head",
        "plugins",
        "Object",
        "keys",
        "map",
        "name",
        "Plugin",
        "e",
        "w"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAP,EAAf;;eACgCA,OAAO,CAAC,SAAD,C;IAA/BC,S,YAAAA,S;IAAWC,Q,YAAAA,Q;;AACnB,IAAMC,IAAI,GAAGH,OAAO,CAAC,sCAAD,CAApB;;AAEAI,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBACwC,KAAKC,KAD7C;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,MADT,eACSA,MADT;AAAA,UACiBC,IADjB,eACiBA,IADjB;AAAA,UACuBC,MADvB,eACuBA,MADvB;AAAA,UAC+BC,IAD/B,eAC+BA,IAD/B;AAAA,4BAEoBH,MAFpB,CAEGI,OAFH;AAAA,UAEGA,OAFH,gCAEa,EAFb;AAIL,0CACKC,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBG,GAArB,CAAyB,UAAAC,IAAI,EAAI;AAC9B;AACA,YAAI,CAACJ,OAAO,CAACI,IAAD,CAAZ,EAAoB;AAChB,iBAAO,IAAP;AACH;;AACD,YAAI;AACA,cAAMC,MAAM,GAAGd,IAAI,CAACH,OAAL,CAAa,YAAYgB,IAAzB,CAAf;;AACA;AAAA,oBAAqBT,IAArB;AAAA,sBAAmCC,MAAnC;AAAA,oBAAiDC,IAAjD;AAAA,sBAA+DC,MAA/D;AAAA,sBAA+EE,OAAO,CAACI,IAAD,CAAtF;AAAA,oBAAoGL;AAApG;AACH,SAHD,CAGE,OAAOO,CAAP,EAAU;AACRnB,UAAAA,MAAM,CAACoB,CAAP,uCAAuCH,IAAvC;AACA,iBAAO,IAAP;AACH;AACJ,OAZA,CADL;AAeH;AApBL;;AAAA;AAAA,EAA+Bf,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "sourcesContent": [
        "const logger = require('hexo-log')();\nconst { Component, Fragment } = require('inferno');\nconst view = require('hexo-component-inferno/lib/core/view');\n\nmodule.exports = class extends Component {\n    render() {\n        const { site, config, page, helper, head } = this.props;\n        const { plugins = [] } = config;\n\n        return <Fragment>\n            {Object.keys(plugins).map(name => {\n                // plugin is not enabled\n                if (!plugins[name]) {\n                    return null;\n                }\n                try {\n                    const Plugin = view.require('plugin/' + name);\n                    return <Plugin site={site} config={config} page={page} helper={helper} plugin={plugins[name]} head={head} />;\n                } catch (e) {\n                    logger.w(`Icarus cannot load plugin \"${name}\"`);\n                    return null;\n                }\n            })}\n        </Fragment>;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/common/navbar.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/common/navbar.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/common/navbar.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/common/navbar.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
        "sourceFileName": "navbar.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('inferno'),\n    Component = _require.Component,\n    Fragment = _require.Fragment;\n\nvar _require2 = require('hexo-component-inferno/lib/util/cache'),\n    cacheComponent = _require2.cacheComponent;\n\nvar classname = require('hexo-component-inferno/lib/util/classname');\n\nfunction isSameLink(a, b) {\n  function santize(url) {\n    var paths = url.replace(/(^\\w+:|^)\\/\\//, '').split('#')[0].split('/').filter(function (p) {\n      return p.trim() !== '';\n    });\n\n    if (paths.length > 0 && paths[paths.length - 1].trim() === 'index.html') {\n      paths = paths.slice(0, paths.length - 1);\n    }\n\n    return paths.join('/');\n  }\n\n  return santize(a) === santize(b);\n}\n\nvar Navbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Navbar, _Component);\n\n  function Navbar() {\n    _classCallCheck(this, Navbar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Navbar).apply(this, arguments));\n  }\n\n  _createClass(Navbar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          logo = _this$props.logo,\n          logoUrl = _this$props.logoUrl,\n          siteUrl = _this$props.siteUrl,\n          siteTitle = _this$props.siteTitle,\n          menu = _this$props.menu,\n          links = _this$props.links,\n          showToc = _this$props.showToc,\n          tocTitle = _this$props.tocTitle,\n          showSearch = _this$props.showSearch,\n          searchTitle = _this$props.searchTitle;\n      return (0, _inferno.createVNode)(1, \"nav\", \"navbar navbar-main\", (0, _inferno.createVNode)(1, \"div\", \"container\", [(0, _inferno.createVNode)(1, \"div\", \"navbar-brand justify-content-center\", (0, _inferno.createVNode)(1, \"a\", \"navbar-item navbar-logo\", logo && logo.text ? logo.text : (0, _inferno.createVNode)(1, \"img\", null, null, 1, {\n        \"src\": logoUrl,\n        \"alt\": siteTitle,\n        \"height\": \"28\"\n      }), 0, {\n        \"href\": siteUrl\n      }), 2), (0, _inferno.createVNode)(1, \"div\", \"navbar-menu\", [Object.keys(menu).length ? (0, _inferno.createVNode)(1, \"div\", \"navbar-start\", Object.keys(menu).map(function (name) {\n        var item = menu[name];\n        return (0, _inferno.createVNode)(1, \"a\", classname({\n          'navbar-item': true,\n          'is-active': item.active\n        }), name, 0, {\n          \"href\": item.url\n        });\n      }), 0) : null, (0, _inferno.createVNode)(1, \"div\", \"navbar-end\", [Object.keys(links).length ? (0, _inferno.createFragment)(Object.keys(links).map(function (name) {\n        var link = links[name];\n        return (0, _inferno.createVNode)(1, \"a\", \"navbar-item\", link.icon ? (0, _inferno.createVNode)(1, \"i\", link.icon) : name, 0, {\n          \"target\": \"_blank\",\n          \"rel\": \"noopener\",\n          \"title\": name,\n          \"href\": link.url\n        });\n      }), 0) : null, showToc ? (0, _inferno.createVNode)(1, \"a\", \"navbar-item is-hidden-tablet catalogue\", (0, _inferno.createVNode)(1, \"i\", \"fas fa-list-ul\"), 2, {\n        \"title\": tocTitle,\n        \"href\": \"javascript:;\"\n      }) : null, showSearch ? (0, _inferno.createVNode)(1, \"a\", \"navbar-item search\", (0, _inferno.createVNode)(1, \"i\", \"fas fa-search\"), 2, {\n        \"title\": searchTitle,\n        \"href\": \"javascript:;\"\n      }) : null], 0)], 0)], 4), 2);\n    }\n  }]);\n\n  return Navbar;\n}(Component);\n\nmodule.exports = cacheComponent(Navbar, 'common.navbar', function (props) {\n  var config = props.config,\n      helper = props.helper,\n      page = props.page;\n  var url_for = helper.url_for,\n      _p = helper._p,\n      __ = helper.__;\n  var logo = config.logo,\n      title = config.title,\n      navbar = config.navbar,\n      widgets = config.widgets,\n      search = config.search;\n  var hasTocWidget = Array.isArray(widgets) && widgets.find(function (widget) {\n    return widget.type === 'toc';\n  });\n  var showToc = (config.toc === true || page.toc) && hasTocWidget && ['page', 'post'].includes(page.layout);\n  var menu = {};\n\n  if (navbar && navbar.menu) {\n    var pageUrl = typeof page.path !== 'undefined' ? url_for(page.path) : '';\n    Object.keys(navbar.menu).forEach(function (name) {\n      var url = url_for(navbar.menu[name]);\n      var active = isSameLink(url, pageUrl);\n      menu[name] = {\n        url: url,\n        active: active\n      };\n    });\n  }\n\n  var links = {};\n\n  if (navbar && navbar.links) {\n    Object.keys(navbar.links).forEach(function (name) {\n      var link = navbar.links[name];\n      links[name] = {\n        url: url_for(typeof link === 'string' ? link : link.url),\n        icon: link.icon\n      };\n    });\n  }\n\n  return {\n    logo: logo,\n    logoUrl: url_for(logo),\n    siteUrl: url_for('/'),\n    siteTitle: title,\n    menu: menu,\n    links: links,\n    showToc: showToc,\n    tocTitle: _p('widget.catalogue', Infinity),\n    showSearch: search && search.type,\n    searchTitle: __('search.search')\n  };\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "navbar.jsx"
      ],
      "names": [
        "require",
        "Component",
        "Fragment",
        "cacheComponent",
        "classname",
        "isSameLink",
        "a",
        "b",
        "santize",
        "url",
        "paths",
        "replace",
        "split",
        "filter",
        "p",
        "trim",
        "length",
        "slice",
        "join",
        "Navbar",
        "props",
        "logo",
        "logoUrl",
        "siteUrl",
        "siteTitle",
        "menu",
        "links",
        "showToc",
        "tocTitle",
        "showSearch",
        "searchTitle",
        "text",
        "Object",
        "keys",
        "map",
        "name",
        "item",
        "active",
        "link",
        "icon",
        "module",
        "exports",
        "config",
        "helper",
        "page",
        "url_for",
        "_p",
        "__",
        "title",
        "navbar",
        "widgets",
        "search",
        "hasTocWidget",
        "Array",
        "isArray",
        "find",
        "widget",
        "type",
        "toc",
        "includes",
        "layout",
        "pageUrl",
        "path",
        "forEach",
        "Infinity"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;eAAgCA,OAAO,CAAC,SAAD,C;IAA/BC,S,YAAAA,S;IAAWC,Q,YAAAA,Q;;gBACQF,OAAO,CAAC,uCAAD,C;IAA1BG,c,aAAAA,c;;AACR,IAAMC,SAAS,GAAGJ,OAAO,CAAC,2CAAD,CAAzB;;AAEA,SAASK,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AACtB,WAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,QAAIC,KAAK,GAAGD,GAAG,CAACE,OAAJ,CAAY,eAAZ,EAA6B,EAA7B,EAAiCC,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,EAA+CA,KAA/C,CAAqD,GAArD,EAA0DC,MAA1D,CAAiE,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,OAAa,EAAjB;AAAA,KAAlE,CAAZ;;AACA,QAAIL,KAAK,CAACM,MAAN,GAAe,CAAf,IAAoBN,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAAL,CAAwBD,IAAxB,OAAmC,YAA3D,EAAyE;AACrEL,MAAAA,KAAK,GAAGA,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAeP,KAAK,CAACM,MAAN,GAAe,CAA9B,CAAR;AACH;;AACD,WAAON,KAAK,CAACQ,IAAN,CAAW,GAAX,CAAP;AACH;;AACD,SAAOV,OAAO,CAACF,CAAD,CAAP,KAAeE,OAAO,CAACD,CAAD,CAA7B;AACH;;IAEKY,M;;;;;;;;;;;;;6BACO;AAAA,wBAYD,KAAKC,KAZJ;AAAA,UAEDC,IAFC,eAEDA,IAFC;AAAA,UAGDC,OAHC,eAGDA,OAHC;AAAA,UAIDC,OAJC,eAIDA,OAJC;AAAA,UAKDC,SALC,eAKDA,SALC;AAAA,UAMDC,IANC,eAMDA,IANC;AAAA,UAODC,KAPC,eAODA,KAPC;AAAA,UAQDC,OARC,eAQDA,OARC;AAAA,UASDC,QATC,eASDA,QATC;AAAA,UAUDC,UAVC,eAUDA,UAVC;AAAA,UAWDC,WAXC,eAWDA,WAXC;AAcL,iDAAkB,oBAAlB,sCACe,WADf,uCAEmB,qCAFnB,oCAGqB,yBAHrB,EAIiBT,IAAI,IAAIA,IAAI,CAACU,IAAb,GAAoBV,IAAI,CAACU,IAAzB;AAAA,eAA0CT,OAA1C;AAAA,eAAwDE,SAAxD;AAAA,kBAA0E;AAA1E,QAJjB;AAAA,gBAGqDD;AAHrD,kDAOmB,aAPnB,GAQaS,MAAM,CAACC,IAAP,CAAYR,IAAZ,EAAkBT,MAAlB,uCAAsC,cAAtC,EACIgB,MAAM,CAACC,IAAP,CAAYR,IAAZ,EAAkBS,GAAlB,CAAsB,UAAAC,IAAI,EAAI;AAC3B,YAAMC,IAAI,GAAGX,IAAI,CAACU,IAAD,CAAjB;AACA,iDAAiB/B,SAAS,CAAC;AAAE,yBAAe,IAAjB;AAAuB,uBAAagC,IAAI,CAACC;AAAzC,SAAD,CAA1B,EAAgGF,IAAhG;AAAA,kBAAqFC,IAAI,CAAC3B;AAA1F;AACH,OAHA,CADJ,OAKQ,IAbrB,sCAcuB,YAdvB,GAeiBuB,MAAM,CAACC,IAAP,CAAYP,KAAZ,EAAmBV,MAAnB,gCACIgB,MAAM,CAACC,IAAP,CAAYP,KAAZ,EAAmBQ,GAAnB,CAAuB,UAAAC,IAAI,EAAI;AAC5B,YAAMG,IAAI,GAAGZ,KAAK,CAACS,IAAD,CAAlB;AACA,iDAAgB,aAAhB,EACKG,IAAI,CAACC,IAAL,qCAAsBD,IAAI,CAACC,IAA3B,IAAwCJ,IAD7C;AAAA,oBAAqC,QAArC;AAAA,iBAAkD,UAAlD;AAAA,mBAAoEA,IAApE;AAAA,kBAAgFG,IAAI,CAAC7B;AAArF;AAGH,OALA,CADJ,OAOa,IAtB9B,EAuBiBkB,OAAO,qCAAY,wCAAZ,oCACK,gBADL;AAAA,iBAA4DC,QAA5D;AAAA,gBAA2E;AAA3E,WAED,IAzBvB,EA0BiBC,UAAU,qCAAY,oBAAZ,oCACE,eADF;AAAA,iBAAwCC,WAAxC;AAAA,gBAA0D;AAA1D,WAEJ,IA5BvB;AAiCH;;;;EAhDgB7B,S;;AAmDrBuC,MAAM,CAACC,OAAP,GAAiBtC,cAAc,CAACgB,MAAD,EAAS,eAAT,EAA0B,UAAAC,KAAK,EAAI;AAAA,MACtDsB,MADsD,GAC7BtB,KAD6B,CACtDsB,MADsD;AAAA,MAC9CC,MAD8C,GAC7BvB,KAD6B,CAC9CuB,MAD8C;AAAA,MACtCC,IADsC,GAC7BxB,KAD6B,CACtCwB,IADsC;AAAA,MAEtDC,OAFsD,GAElCF,MAFkC,CAEtDE,OAFsD;AAAA,MAE7CC,EAF6C,GAElCH,MAFkC,CAE7CG,EAF6C;AAAA,MAEzCC,EAFyC,GAElCJ,MAFkC,CAEzCI,EAFyC;AAAA,MAGtD1B,IAHsD,GAGbqB,MAHa,CAGtDrB,IAHsD;AAAA,MAGhD2B,KAHgD,GAGbN,MAHa,CAGhDM,KAHgD;AAAA,MAGzCC,MAHyC,GAGbP,MAHa,CAGzCO,MAHyC;AAAA,MAGjCC,OAHiC,GAGbR,MAHa,CAGjCQ,OAHiC;AAAA,MAGxBC,MAHwB,GAGbT,MAHa,CAGxBS,MAHwB;AAK9D,MAAMC,YAAY,GAAGC,KAAK,CAACC,OAAN,CAAcJ,OAAd,KAA0BA,OAAO,CAACK,IAAR,CAAa,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB;AAAA,GAAnB,CAA/C;AACA,MAAM9B,OAAO,GAAG,CAACe,MAAM,CAACgB,GAAP,KAAe,IAAf,IAAuBd,IAAI,CAACc,GAA7B,KAAqCN,YAArC,IAAqD,CAAC,MAAD,EAAS,MAAT,EAAiBO,QAAjB,CAA0Bf,IAAI,CAACgB,MAA/B,CAArE;AAEA,MAAMnC,IAAI,GAAG,EAAb;;AACA,MAAIwB,MAAM,IAAIA,MAAM,CAACxB,IAArB,EAA2B;AACvB,QAAMoC,OAAO,GAAG,OAAOjB,IAAI,CAACkB,IAAZ,KAAqB,WAArB,GAAmCjB,OAAO,CAACD,IAAI,CAACkB,IAAN,CAA1C,GAAwD,EAAxE;AACA9B,IAAAA,MAAM,CAACC,IAAP,CAAYgB,MAAM,CAACxB,IAAnB,EAAyBsC,OAAzB,CAAiC,UAAA5B,IAAI,EAAI;AACrC,UAAM1B,GAAG,GAAGoC,OAAO,CAACI,MAAM,CAACxB,IAAP,CAAYU,IAAZ,CAAD,CAAnB;AACA,UAAME,MAAM,GAAGhC,UAAU,CAACI,GAAD,EAAMoD,OAAN,CAAzB;AACApC,MAAAA,IAAI,CAACU,IAAD,CAAJ,GAAa;AAAE1B,QAAAA,GAAG,EAAHA,GAAF;AAAO4B,QAAAA,MAAM,EAANA;AAAP,OAAb;AACH,KAJD;AAKH;;AAED,MAAMX,KAAK,GAAG,EAAd;;AACA,MAAIuB,MAAM,IAAIA,MAAM,CAACvB,KAArB,EAA4B;AACxBM,IAAAA,MAAM,CAACC,IAAP,CAAYgB,MAAM,CAACvB,KAAnB,EAA0BqC,OAA1B,CAAkC,UAAA5B,IAAI,EAAI;AACtC,UAAMG,IAAI,GAAGW,MAAM,CAACvB,KAAP,CAAaS,IAAb,CAAb;AACAT,MAAAA,KAAK,CAACS,IAAD,CAAL,GAAc;AACV1B,QAAAA,GAAG,EAAEoC,OAAO,CAAC,OAAOP,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAAC7B,GAAxC,CADF;AAEV8B,QAAAA,IAAI,EAAED,IAAI,CAACC;AAFD,OAAd;AAIH,KAND;AAOH;;AAED,SAAO;AACHlB,IAAAA,IAAI,EAAJA,IADG;AAEHC,IAAAA,OAAO,EAAEuB,OAAO,CAACxB,IAAD,CAFb;AAGHE,IAAAA,OAAO,EAAEsB,OAAO,CAAC,GAAD,CAHb;AAIHrB,IAAAA,SAAS,EAAEwB,KAJR;AAKHvB,IAAAA,IAAI,EAAJA,IALG;AAMHC,IAAAA,KAAK,EAALA,KANG;AAOHC,IAAAA,OAAO,EAAPA,OAPG;AAQHC,IAAAA,QAAQ,EAAEkB,EAAE,CAAC,kBAAD,EAAqBkB,QAArB,CART;AASHnC,IAAAA,UAAU,EAAEsB,MAAM,IAAIA,MAAM,CAACM,IAT1B;AAUH3B,IAAAA,WAAW,EAAEiB,EAAE,CAAC,eAAD;AAVZ,GAAP;AAYH,CAzC8B,CAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "sourcesContent": [
        "const { Component, Fragment } = require('inferno');\nconst { cacheComponent } = require('hexo-component-inferno/lib/util/cache');\nconst classname = require('hexo-component-inferno/lib/util/classname');\n\nfunction isSameLink(a, b) {\n    function santize(url) {\n        let paths = url.replace(/(^\\w+:|^)\\/\\//, '').split('#')[0].split('/').filter(p => p.trim() !== '');\n        if (paths.length > 0 && paths[paths.length - 1].trim() === 'index.html') {\n            paths = paths.slice(0, paths.length - 1);\n        }\n        return paths.join('/');\n    }\n    return santize(a) === santize(b);\n}\n\nclass Navbar extends Component {\n    render() {\n        const {\n            logo,\n            logoUrl,\n            siteUrl,\n            siteTitle,\n            menu,\n            links,\n            showToc,\n            tocTitle,\n            showSearch,\n            searchTitle\n        } = this.props;\n\n        return <nav class=\"navbar navbar-main\">\n            <div class=\"container\">\n                <div class=\"navbar-brand justify-content-center\">\n                    <a class=\"navbar-item navbar-logo\" href={siteUrl}>\n                        {logo && logo.text ? logo.text : <img src={logoUrl} alt={siteTitle} height=\"28\" />}\n                    </a>\n                </div>\n                <div class=\"navbar-menu\">\n                    {Object.keys(menu).length ? <div class=\"navbar-start\">\n                        {Object.keys(menu).map(name => {\n                            const item = menu[name];\n                            return <a class={classname({ 'navbar-item': true, 'is-active': item.active })} href={item.url}>{name}</a>;\n                        })}\n                    </div> : null}\n                    <div class=\"navbar-end\">\n                        {Object.keys(links).length ? <Fragment>\n                            {Object.keys(links).map(name => {\n                                const link = links[name];\n                                return <a class=\"navbar-item\" target=\"_blank\" rel=\"noopener\" title={name} href={link.url}>\n                                    {link.icon ? <i class={link.icon}></i> : name}\n                                </a>;\n                            })}\n                        </Fragment> : null}\n                        {showToc ? <a class=\"navbar-item is-hidden-tablet catalogue\" title={tocTitle} href=\"javascript:;\">\n                            <i class=\"fas fa-list-ul\"></i>\n                        </a> : null}\n                        {showSearch ? <a class=\"navbar-item search\" title={searchTitle} href=\"javascript:;\">\n                            <i class=\"fas fa-search\"></i>\n                        </a> : null}\n                    </div>\n                </div>\n            </div>\n        </nav>;\n    }\n}\n\nmodule.exports = cacheComponent(Navbar, 'common.navbar', props => {\n    const { config, helper, page } = props;\n    const { url_for, _p, __ } = helper;\n    const { logo, title, navbar, widgets, search } = config;\n\n    const hasTocWidget = Array.isArray(widgets) && widgets.find(widget => widget.type === 'toc');\n    const showToc = (config.toc === true || page.toc) && hasTocWidget && ['page', 'post'].includes(page.layout);\n\n    const menu = {};\n    if (navbar && navbar.menu) {\n        const pageUrl = typeof page.path !== 'undefined' ? url_for(page.path) : '';\n        Object.keys(navbar.menu).forEach(name => {\n            const url = url_for(navbar.menu[name]);\n            const active = isSameLink(url, pageUrl);\n            menu[name] = { url, active };\n        });\n    }\n\n    const links = {};\n    if (navbar && navbar.links) {\n        Object.keys(navbar.links).forEach(name => {\n            const link = navbar.links[name];\n            links[name] = {\n                url: url_for(typeof link === 'string' ? link : link.url),\n                icon: link.icon\n            };\n        });\n    }\n\n    return {\n        logo,\n        logoUrl: url_for(logo),\n        siteUrl: url_for('/'),\n        siteTitle: title,\n        menu,\n        links,\n        showToc,\n        tocTitle: _p('widget.catalogue', Infinity),\n        showSearch: search && search.type,\n        searchTitle: __('search.search')\n    };\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/common/widgets.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/common/widgets.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/common/widgets.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/common/widgets.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
        "sourceFileName": "widgets.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar logger = require('hexo-log')();\n\nvar _require = require('inferno'),\n    Component = _require.Component;\n\nvar view = require('hexo-component-inferno/lib/core/view');\n\nvar classname = require('hexo-component-inferno/lib/util/classname');\n\nfunction formatWidgets(widgets) {\n  var result = {};\n\n  if (Array.isArray(widgets)) {\n    widgets.filter(function (widget) {\n      return _typeof(widget) === 'object';\n    }).forEach(function (widget) {\n      if ('position' in widget && (widget.position === 'left' || widget.position === 'right')) {\n        if (!(widget.position in result)) {\n          result[widget.position] = [widget];\n        } else {\n          result[widget.position].push(widget);\n        }\n      }\n    });\n  }\n\n  return result;\n}\n\nfunction hasColumn(widgets, position) {\n  if (Array.isArray(widgets)) {\n    return typeof widgets.find(function (widget) {\n      return widget.position === position;\n    }) !== 'undefined';\n  }\n\n  return false;\n}\n\nfunction getColumnCount(widgets) {\n  return [hasColumn(widgets, 'left'), hasColumn(widgets, 'right')].filter(function (v) {\n    return !!v;\n  }).length + 1;\n}\n\nfunction getColumnSizeClass(columnCount) {\n  switch (columnCount) {\n    case 2:\n      return 'is-4-tablet is-4-desktop is-4-widescreen';\n\n    case 3:\n      return 'is-4-tablet is-4-desktop is-3-widescreen';\n  }\n\n  return '';\n}\n\nfunction getColumnVisibilityClass(columnCount, position) {\n  if (columnCount === 3 && position === 'right') {\n    return 'is-hidden-touch is-hidden-desktop-only';\n  }\n\n  return '';\n}\n\nfunction getColumnOrderClass(position) {\n  return position === 'left' ? 'order-1' : 'order-3';\n}\n\nfunction isColumnSticky(config, position) {\n  return _typeof(config.sidebar) === 'object' && position in config.sidebar && config.sidebar[position].sticky === true;\n}\n\nvar Widgets =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Widgets, _Component);\n\n  function Widgets() {\n    _classCallCheck(this, Widgets);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Widgets).apply(this, arguments));\n  }\n\n  _createClass(Widgets, [{\n    key: \"render\",\n    value: function render() {\n      var _classname;\n\n      var _this$props = this.props,\n          site = _this$props.site,\n          config = _this$props.config,\n          helper = _this$props.helper,\n          page = _this$props.page,\n          position = _this$props.position;\n      var widgets = formatWidgets(config.widgets)[position] || [];\n      var columnCount = getColumnCount(config.widgets);\n\n      if (!widgets.length) {\n        return null;\n      }\n\n      return (0, _inferno.createVNode)(1, \"div\", classname((_classname = {\n        'column': true\n      }, _defineProperty(_classname, 'column-' + position, true), _defineProperty(_classname, getColumnSizeClass(columnCount), true), _defineProperty(_classname, getColumnVisibilityClass(columnCount, position), true), _defineProperty(_classname, getColumnOrderClass(position), true), _defineProperty(_classname, 'is-sticky', isColumnSticky(config, position)), _classname)), [widgets.map(function (widget) {\n        // widget type is not defined\n        if (!widget.type) {\n          return null;\n        }\n\n        try {\n          var Widget = view.require('widget/' + widget.type);\n\n          return (0, _inferno.createComponentVNode)(2, Widget, {\n            \"site\": site,\n            \"helper\": helper,\n            \"config\": config,\n            \"page\": page,\n            \"widget\": widget\n          });\n        } catch (e) {\n          logger.w(\"Icarus cannot load widget \\\"\".concat(widget.type, \"\\\"\"));\n        }\n\n        return null;\n      }), position === 'left' && hasColumn(config.widgets, 'right') ? (0, _inferno.createVNode)(1, \"div\", classname({\n        'column-right-shadow': true,\n        'is-hidden-widescreen': true,\n        'is-sticky': isColumnSticky(config, 'right')\n      })) : null], 0);\n    }\n  }]);\n\n  return Widgets;\n}(Component);\n\nWidgets.getColumnCount = getColumnCount;\nmodule.exports = Widgets;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "widgets.jsx"
      ],
      "names": [
        "logger",
        "require",
        "Component",
        "view",
        "classname",
        "formatWidgets",
        "widgets",
        "result",
        "Array",
        "isArray",
        "filter",
        "widget",
        "forEach",
        "position",
        "push",
        "hasColumn",
        "find",
        "getColumnCount",
        "v",
        "length",
        "getColumnSizeClass",
        "columnCount",
        "getColumnVisibilityClass",
        "getColumnOrderClass",
        "isColumnSticky",
        "config",
        "sidebar",
        "sticky",
        "Widgets",
        "props",
        "site",
        "helper",
        "page",
        "map",
        "type",
        "Widget",
        "e",
        "w",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAP,EAAf;;eACsBA,OAAO,CAAC,SAAD,C;IAArBC,S,YAAAA,S;;AACR,IAAMC,IAAI,GAAGF,OAAO,CAAC,sCAAD,CAApB;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,2CAAD,CAAzB;;AAEA,SAASI,aAAT,CAAuBC,OAAvB,EAAgC;AAC5B,MAAMC,MAAM,GAAG,EAAf;;AACA,MAAIC,KAAK,CAACC,OAAN,CAAcH,OAAd,CAAJ,EAA4B;AACxBA,IAAAA,OAAO,CAACI,MAAR,CAAe,UAAAC,MAAM;AAAA,aAAI,QAAOA,MAAP,MAAkB,QAAtB;AAAA,KAArB,EAAqDC,OAArD,CAA6D,UAAAD,MAAM,EAAI;AACnE,UAAI,cAAcA,MAAd,KAAyBA,MAAM,CAACE,QAAP,KAAoB,MAApB,IAA8BF,MAAM,CAACE,QAAP,KAAoB,OAA3E,CAAJ,EAAyF;AACrF,YAAI,EAAEF,MAAM,CAACE,QAAP,IAAmBN,MAArB,CAAJ,EAAkC;AAC9BA,UAAAA,MAAM,CAACI,MAAM,CAACE,QAAR,CAAN,GAA0B,CAACF,MAAD,CAA1B;AACH,SAFD,MAEO;AACHJ,UAAAA,MAAM,CAACI,MAAM,CAACE,QAAR,CAAN,CAAwBC,IAAxB,CAA6BH,MAA7B;AACH;AACJ;AACJ,KARD;AASH;;AACD,SAAOJ,MAAP;AACH;;AAED,SAASQ,SAAT,CAAmBT,OAAnB,EAA4BO,QAA5B,EAAsC;AAClC,MAAIL,KAAK,CAACC,OAAN,CAAcH,OAAd,CAAJ,EAA4B;AACxB,WAAO,OAAOA,OAAO,CAACU,IAAR,CAAa,UAAAL,MAAM;AAAA,aAAIA,MAAM,CAACE,QAAP,KAAoBA,QAAxB;AAAA,KAAnB,CAAP,KAAgE,WAAvE;AACH;;AACD,SAAO,KAAP;AACH;;AAED,SAASI,cAAT,CAAwBX,OAAxB,EAAiC;AAC7B,SAAO,CAACS,SAAS,CAACT,OAAD,EAAU,MAAV,CAAV,EAA6BS,SAAS,CAACT,OAAD,EAAU,OAAV,CAAtC,EAA0DI,MAA1D,CAAiE,UAAAQ,CAAC;AAAA,WAAI,CAAC,CAACA,CAAN;AAAA,GAAlE,EAA2EC,MAA3E,GAAoF,CAA3F;AACH;;AAED,SAASC,kBAAT,CAA4BC,WAA5B,EAAyC;AACrC,UAAQA,WAAR;AACI,SAAK,CAAL;AACI,aAAO,0CAAP;;AACJ,SAAK,CAAL;AACI,aAAO,0CAAP;AAJR;;AAMA,SAAO,EAAP;AACH;;AAED,SAASC,wBAAT,CAAkCD,WAAlC,EAA+CR,QAA/C,EAAyD;AACrD,MAAIQ,WAAW,KAAK,CAAhB,IAAqBR,QAAQ,KAAK,OAAtC,EAA+C;AAC3C,WAAO,wCAAP;AACH;;AACD,SAAO,EAAP;AACH;;AAED,SAASU,mBAAT,CAA6BV,QAA7B,EAAuC;AACnC,SAAOA,QAAQ,KAAK,MAAb,GAAsB,SAAtB,GAAkC,SAAzC;AACH;;AAED,SAASW,cAAT,CAAwBC,MAAxB,EAAgCZ,QAAhC,EAA0C;AACtC,SAAO,QAAOY,MAAM,CAACC,OAAd,MAA0B,QAA1B,IACAb,QAAQ,IAAIY,MAAM,CAACC,OADnB,IAEAD,MAAM,CAACC,OAAP,CAAeb,QAAf,EAAyBc,MAAzB,KAAoC,IAF3C;AAGH;;IAEKC,O;;;;;;;;;;;;;6BACO;AAAA;;AAAA,wBAC4C,KAAKC,KADjD;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSL,MADT,eACSA,MADT;AAAA,UACiBM,MADjB,eACiBA,MADjB;AAAA,UACyBC,IADzB,eACyBA,IADzB;AAAA,UAC+BnB,QAD/B,eAC+BA,QAD/B;AAEL,UAAMP,OAAO,GAAGD,aAAa,CAACoB,MAAM,CAACnB,OAAR,CAAb,CAA8BO,QAA9B,KAA2C,EAA3D;AACA,UAAMQ,WAAW,GAAGJ,cAAc,CAACQ,MAAM,CAACnB,OAAR,CAAlC;;AAEA,UAAI,CAACA,OAAO,CAACa,MAAb,EAAqB;AACjB,eAAO,IAAP;AACH;;AAED,iDAAmBf,SAAS;AACxB,kBAAU;AADc,qCAEvB,YAAYS,QAFW,EAEA,IAFA,+BAGvBO,kBAAkB,CAACC,WAAD,CAHK,EAGW,IAHX,+BAIvBC,wBAAwB,CAACD,WAAD,EAAcR,QAAd,CAJD,EAI2B,IAJ3B,+BAKvBU,mBAAmB,CAACV,QAAD,CALI,EAKS,IALT,+BAMxB,WANwB,EAMXW,cAAc,CAACC,MAAD,EAASZ,QAAT,CANH,eAA5B,GAQKP,OAAO,CAAC2B,GAAR,CAAY,UAAAtB,MAAM,EAAI;AACnB;AACA,YAAI,CAACA,MAAM,CAACuB,IAAZ,EAAkB;AACd,iBAAO,IAAP;AACH;;AACD,YAAI;AACA,cAAMC,MAAM,GAAGhC,IAAI,CAACF,OAAL,CAAa,YAAYU,MAAM,CAACuB,IAAhC,CAAf;;AACA;AAAA,oBAAqBJ,IAArB;AAAA,sBAAmCC,MAAnC;AAAA,sBAAmDN,MAAnD;AAAA,oBAAiEO,IAAjE;AAAA,sBAA+ErB;AAA/E;AACH,SAHD,CAGE,OAAOyB,CAAP,EAAU;AACRpC,UAAAA,MAAM,CAACqC,CAAP,uCAAuC1B,MAAM,CAACuB,IAA9C;AACH;;AACD,eAAO,IAAP;AACH,OAZA,CARL,EAqBKrB,QAAQ,KAAK,MAAb,IAAuBE,SAAS,CAACU,MAAM,CAACnB,OAAR,EAAiB,OAAjB,CAAhC,uCAAwEF,SAAS,CAAC;AAC/E,+BAAuB,IADwD;AAE/E,gCAAwB,IAFuD;AAG/E,qBAAaoB,cAAc,CAACC,MAAD,EAAS,OAAT;AAHoD,OAAD,CAAjF,IAIY,IAzBjB;AA2BH;;;;EArCiBvB,S;;AAwCtB0B,OAAO,CAACX,cAAR,GAAyBA,cAAzB;AAEAqB,MAAM,CAACC,OAAP,GAAiBX,OAAjB",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "sourcesContent": [
        "const logger = require('hexo-log')();\nconst { Component } = require('inferno');\nconst view = require('hexo-component-inferno/lib/core/view');\nconst classname = require('hexo-component-inferno/lib/util/classname');\n\nfunction formatWidgets(widgets) {\n    const result = {};\n    if (Array.isArray(widgets)) {\n        widgets.filter(widget => typeof widget === 'object').forEach(widget => {\n            if ('position' in widget && (widget.position === 'left' || widget.position === 'right')) {\n                if (!(widget.position in result)) {\n                    result[widget.position] = [widget];\n                } else {\n                    result[widget.position].push(widget);\n                }\n            }\n        });\n    }\n    return result;\n}\n\nfunction hasColumn(widgets, position) {\n    if (Array.isArray(widgets)) {\n        return typeof widgets.find(widget => widget.position === position) !== 'undefined';\n    }\n    return false;\n}\n\nfunction getColumnCount(widgets) {\n    return [hasColumn(widgets, 'left'), hasColumn(widgets, 'right')].filter(v => !!v).length + 1;\n}\n\nfunction getColumnSizeClass(columnCount) {\n    switch (columnCount) {\n        case 2:\n            return 'is-4-tablet is-4-desktop is-4-widescreen';\n        case 3:\n            return 'is-4-tablet is-4-desktop is-3-widescreen';\n    }\n    return '';\n}\n\nfunction getColumnVisibilityClass(columnCount, position) {\n    if (columnCount === 3 && position === 'right') {\n        return 'is-hidden-touch is-hidden-desktop-only';\n    }\n    return '';\n}\n\nfunction getColumnOrderClass(position) {\n    return position === 'left' ? 'order-1' : 'order-3';\n}\n\nfunction isColumnSticky(config, position) {\n    return typeof config.sidebar === 'object'\n        && position in config.sidebar\n        && config.sidebar[position].sticky === true;\n}\n\nclass Widgets extends Component {\n    render() {\n        const { site, config, helper, page, position } = this.props;\n        const widgets = formatWidgets(config.widgets)[position] || [];\n        const columnCount = getColumnCount(config.widgets);\n\n        if (!widgets.length) {\n            return null;\n        }\n\n        return <div class={classname({\n            'column': true,\n            ['column-' + position]: true,\n            [getColumnSizeClass(columnCount)]: true,\n            [getColumnVisibilityClass(columnCount, position)]: true,\n            [getColumnOrderClass(position)]: true,\n            'is-sticky': isColumnSticky(config, position)\n        })}>\n            {widgets.map(widget => {\n                // widget type is not defined\n                if (!widget.type) {\n                    return null;\n                }\n                try {\n                    const Widget = view.require('widget/' + widget.type);\n                    return <Widget site={site} helper={helper} config={config} page={page} widget={widget} />;\n                } catch (e) {\n                    logger.w(`Icarus cannot load widget \"${widget.type}\"`);\n                }\n                return null;\n            })}\n            {position === 'left' && hasColumn(config.widgets, 'right') ? <div class={classname({\n                'column-right-shadow': true,\n                'is-hidden-widescreen': true,\n                'is-sticky': isColumnSticky(config, 'right')\n            })}></div> : null}\n        </div>;\n    }\n}\n\nWidgets.getColumnCount = getColumnCount;\n\nmodule.exports = Widgets;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/common/footer.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/common/footer.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/common/footer.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/common/footer.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
        "sourceFileName": "footer.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('inferno'),\n    Component = _require.Component;\n\nvar _require2 = require('hexo-component-inferno/lib/util/cache'),\n    cacheComponent = _require2.cacheComponent;\n\nvar Footer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Footer, _Component);\n\n  function Footer() {\n    _classCallCheck(this, Footer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Footer).apply(this, arguments));\n  }\n\n  _createClass(Footer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          logo = _this$props.logo,\n          logoUrl = _this$props.logoUrl,\n          siteUrl = _this$props.siteUrl,\n          siteTitle = _this$props.siteTitle,\n          siteYear = _this$props.siteYear,\n          author = _this$props.author,\n          links = _this$props.links,\n          showVisitorCounter = _this$props.showVisitorCounter,\n          visitorCounterTitle = _this$props.visitorCounterTitle;\n      return (0, _inferno.createVNode)(1, \"footer\", \"footer\", (0, _inferno.createVNode)(1, \"div\", \"container\", (0, _inferno.createVNode)(1, \"div\", \"level\", [(0, _inferno.createVNode)(1, \"div\", \"level-start\", [(0, _inferno.createVNode)(1, \"a\", \"footer-logo is-block mb-2\", logo && logo.text ? logo.text : (0, _inferno.createVNode)(1, \"img\", null, null, 1, {\n        \"src\": logoUrl,\n        \"alt\": siteTitle,\n        \"height\": \"28\"\n      }), 0, {\n        \"href\": siteUrl\n      }), (0, _inferno.createVNode)(1, \"p\", \"size-small\", [(0, _inferno.createVNode)(1, \"span\", null, null, 1, {\n        \"dangerouslySetInnerHTML\": {\n          __html: \"&copy; \".concat(siteYear, \" \").concat(author || siteTitle)\n        }\n      }), (0, _inferno.createTextVNode)(\"\\xA0\\xA0Powered by \"), (0, _inferno.createVNode)(1, \"a\", null, \"Hexo\", 16, {\n        \"href\": \"https://hexo.io/\",\n        \"target\": \"_blank\",\n        \"rel\": \"noopener\"\n      }), (0, _inferno.createTextVNode)(\"\\xA0&\\xA0\"), (0, _inferno.createVNode)(1, \"a\", null, \"Icarus\", 16, {\n        \"href\": \"https://github.com/ppoffice/hexo-theme-icarus\",\n        \"target\": \"_blank\",\n        \"rel\": \"noopener\"\n      }), showVisitorCounter ? (0, _inferno.createVNode)(1, \"br\") : null, showVisitorCounter ? (0, _inferno.createVNode)(1, \"span\", null, null, 1, {\n        \"id\": \"busuanzi_container_site_uv\",\n        \"dangerouslySetInnerHTML\": {\n          __html: visitorCounterTitle\n        }\n      }) : null], 0)], 4), (0, _inferno.createVNode)(1, \"div\", \"level-end\", Object.keys(links).length ? (0, _inferno.createVNode)(1, \"div\", \"field has-addons\", Object.keys(links).map(function (name) {\n        var link = links[name];\n        return (0, _inferno.createVNode)(1, \"p\", \"control\", (0, _inferno.createVNode)(1, \"a\", \"button is-transparent \".concat(link.icon ? 'is-large' : ''), link.icon ? (0, _inferno.createVNode)(1, \"i\", link.icon) : name, 0, {\n          \"target\": \"_blank\",\n          \"rel\": \"noopener\",\n          \"title\": name,\n          \"href\": link.url\n        }), 2);\n      }), 0) : null, 0)], 4), 2), 2);\n    }\n  }]);\n\n  return Footer;\n}(Component);\n\nmodule.exports = cacheComponent(Footer, 'common.footer', function (props) {\n  var config = props.config,\n      helper = props.helper;\n  var url_for = helper.url_for,\n      _p = helper._p,\n      date = helper.date;\n  var logo = config.logo,\n      title = config.title,\n      author = config.author,\n      footer = config.footer,\n      plugins = config.plugins;\n  var links = {};\n\n  if (footer && footer.links) {\n    Object.keys(footer.links).forEach(function (name) {\n      var link = footer.links[name];\n      links[name] = {\n        url: url_for(typeof link === 'string' ? link : link.url),\n        icon: link.icon\n      };\n    });\n  }\n\n  return {\n    logo: logo,\n    logoUrl: url_for(logo),\n    siteUrl: url_for('/'),\n    siteTitle: title,\n    siteYear: date(new Date(), 'YYYY'),\n    author: author,\n    links: links,\n    showVisitorCounter: plugins && plugins.busuanzi === true,\n    visitorCounterTitle: _p('plugin.visitor', '<span id=\"busuanzi_value_site_uv\">0</span>')\n  };\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "footer.jsx"
      ],
      "names": [
        "require",
        "Component",
        "cacheComponent",
        "Footer",
        "props",
        "logo",
        "logoUrl",
        "siteUrl",
        "siteTitle",
        "siteYear",
        "author",
        "links",
        "showVisitorCounter",
        "visitorCounterTitle",
        "text",
        "__html",
        "Object",
        "keys",
        "length",
        "map",
        "name",
        "link",
        "icon",
        "url",
        "module",
        "exports",
        "config",
        "helper",
        "url_for",
        "_p",
        "date",
        "title",
        "footer",
        "plugins",
        "forEach",
        "Date",
        "busuanzi"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;eAAsBA,OAAO,CAAC,SAAD,C;IAArBC,S,YAAAA,S;;gBACmBD,OAAO,CAAC,uCAAD,C;IAA1BE,c,aAAAA,c;;IAEFC,M;;;;;;;;;;;;;6BACO;AAAA,wBAWD,KAAKC,KAXJ;AAAA,UAEDC,IAFC,eAEDA,IAFC;AAAA,UAGDC,OAHC,eAGDA,OAHC;AAAA,UAIDC,OAJC,eAIDA,OAJC;AAAA,UAKDC,SALC,eAKDA,SALC;AAAA,UAMDC,QANC,eAMDA,QANC;AAAA,UAODC,MAPC,eAODA,MAPC;AAAA,UAQDC,KARC,eAQDA,KARC;AAAA,UASDC,kBATC,eASDA,kBATC;AAAA,UAUDC,mBAVC,eAUDA,mBAVC;AAaL,oDAAqB,QAArB,sCACe,WADf,sCAEmB,OAFnB,uCAGuB,aAHvB,qCAIyB,2BAJzB,EAKqBR,IAAI,IAAIA,IAAI,CAACS,IAAb,GAAoBT,IAAI,CAACS,IAAzB;AAAA,eAA0CR,OAA1C;AAAA,eAAwDE,SAAxD;AAAA,kBAA0E;AAA1E,QALrB;AAAA,gBAI2DD;AAJ3D,4CAOyB,YAPzB;AAAA,mCAQmD;AAAEQ,UAAAA,MAAM,mBAAYN,QAAZ,cAAwBC,MAAM,IAAIF,SAAlC;AAAR;AARnD;AAAA,gBASmD,kBATnD;AAAA,kBAS6E,QAT7E;AAAA,eAS0F;AAT1F;AAAA,gBAU4B,+CAV5B;AAAA,kBAUmF,QAVnF;AAAA,eAUgG;AAVhG,UAWqBI,kBAAkB,wCAAY,IAXnD,EAYqBA,kBAAkB;AAAA,cAAY,4BAAZ;AAAA,mCACU;AAAEG,UAAAA,MAAM,EAAEF;AAAV;AADV,WACqD,IAb5F,gDAgBuB,WAhBvB,EAiBiBG,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,MAAnB,uCAAuC,kBAAvC,EACIF,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBQ,GAAnB,CAAuB,UAAAC,IAAI,EAAI;AAC5B,YAAMC,IAAI,GAAGV,KAAK,CAACS,IAAD,CAAlB;AACA,iDAAgB,SAAhB,oEACuCC,IAAI,CAACC,IAAL,GAAY,UAAZ,GAAyB,EADhE,GAESD,IAAI,CAACC,IAAL,qCAAsBD,IAAI,CAACC,IAA3B,IAAwCF,IAFjD;AAAA,oBAC6E,QAD7E;AAAA,iBAC0F,UAD1F;AAAA,mBAC4GA,IAD5G;AAAA,kBACwHC,IAAI,CAACE;AAD7H;AAKH,OAPA,CADJ,OASQ,IA1BzB;AA+BH;;;;EA7CgBtB,S;;AAgDrBuB,MAAM,CAACC,OAAP,GAAiBvB,cAAc,CAACC,MAAD,EAAS,eAAT,EAA0B,UAAAC,KAAK,EAAI;AAAA,MACtDsB,MADsD,GACnCtB,KADmC,CACtDsB,MADsD;AAAA,MAC9CC,MAD8C,GACnCvB,KADmC,CAC9CuB,MAD8C;AAAA,MAEtDC,OAFsD,GAEhCD,MAFgC,CAEtDC,OAFsD;AAAA,MAE7CC,EAF6C,GAEhCF,MAFgC,CAE7CE,EAF6C;AAAA,MAEzCC,IAFyC,GAEhCH,MAFgC,CAEzCG,IAFyC;AAAA,MAGtDzB,IAHsD,GAGbqB,MAHa,CAGtDrB,IAHsD;AAAA,MAGhD0B,KAHgD,GAGbL,MAHa,CAGhDK,KAHgD;AAAA,MAGzCrB,MAHyC,GAGbgB,MAHa,CAGzChB,MAHyC;AAAA,MAGjCsB,MAHiC,GAGbN,MAHa,CAGjCM,MAHiC;AAAA,MAGzBC,OAHyB,GAGbP,MAHa,CAGzBO,OAHyB;AAK9D,MAAMtB,KAAK,GAAG,EAAd;;AACA,MAAIqB,MAAM,IAAIA,MAAM,CAACrB,KAArB,EAA4B;AACxBK,IAAAA,MAAM,CAACC,IAAP,CAAYe,MAAM,CAACrB,KAAnB,EAA0BuB,OAA1B,CAAkC,UAAAd,IAAI,EAAI;AACtC,UAAMC,IAAI,GAAGW,MAAM,CAACrB,KAAP,CAAaS,IAAb,CAAb;AACAT,MAAAA,KAAK,CAACS,IAAD,CAAL,GAAc;AACVG,QAAAA,GAAG,EAAEK,OAAO,CAAC,OAAOP,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACE,GAAxC,CADF;AAEVD,QAAAA,IAAI,EAAED,IAAI,CAACC;AAFD,OAAd;AAIH,KAND;AAOH;;AAED,SAAO;AACHjB,IAAAA,IAAI,EAAJA,IADG;AAEHC,IAAAA,OAAO,EAAEsB,OAAO,CAACvB,IAAD,CAFb;AAGHE,IAAAA,OAAO,EAAEqB,OAAO,CAAC,GAAD,CAHb;AAIHpB,IAAAA,SAAS,EAAEuB,KAJR;AAKHtB,IAAAA,QAAQ,EAAEqB,IAAI,CAAC,IAAIK,IAAJ,EAAD,EAAa,MAAb,CALX;AAMHzB,IAAAA,MAAM,EAANA,MANG;AAOHC,IAAAA,KAAK,EAALA,KAPG;AAQHC,IAAAA,kBAAkB,EAAEqB,OAAO,IAAIA,OAAO,CAACG,QAAR,KAAqB,IARjD;AASHvB,IAAAA,mBAAmB,EAAEgB,EAAE,CAAC,gBAAD,EAAmB,4CAAnB;AATpB,GAAP;AAWH,CA3B8B,CAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "sourcesContent": [
        "const { Component } = require('inferno');\nconst { cacheComponent } = require('hexo-component-inferno/lib/util/cache');\n\nclass Footer extends Component {\n    render() {\n        const {\n            logo,\n            logoUrl,\n            siteUrl,\n            siteTitle,\n            siteYear,\n            author,\n            links,\n            showVisitorCounter,\n            visitorCounterTitle\n        } = this.props;\n\n        return <footer class=\"footer\">\n            <div class=\"container\">\n                <div class=\"level\">\n                    <div class=\"level-start\">\n                        <a class=\"footer-logo is-block mb-2\" href={siteUrl}>\n                            {logo && logo.text ? logo.text : <img src={logoUrl} alt={siteTitle} height=\"28\" />}\n                        </a>\n                        <p class=\"size-small\">\n                            <span dangerouslySetInnerHTML={{ __html: `&copy; ${siteYear} ${author || siteTitle}` }}></span>\n                            &nbsp;&nbsp;Powered by <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>&nbsp;&&nbsp;\n                            <a href=\"https://github.com/ppoffice/hexo-theme-icarus\" target=\"_blank\" rel=\"noopener\">Icarus</a>\n                            {showVisitorCounter ? <br /> : null}\n                            {showVisitorCounter ? <span id=\"busuanzi_container_site_uv\"\n                                dangerouslySetInnerHTML={{ __html: visitorCounterTitle }}></span> : null}\n                        </p>\n                    </div>\n                    <div class=\"level-end\">\n                        {Object.keys(links).length ? <div class=\"field has-addons\">\n                            {Object.keys(links).map(name => {\n                                const link = links[name];\n                                return <p class=\"control\">\n                                    <a class={`button is-transparent ${link.icon ? 'is-large' : ''}`} target=\"_blank\" rel=\"noopener\" title={name} href={link.url}>\n                                        {link.icon ? <i class={link.icon}></i> : name}\n                                    </a>\n                                </p>;\n                            })}\n                        </div> : null}\n                    </div>\n                </div>\n            </div>\n        </footer>;\n    }\n}\n\nmodule.exports = cacheComponent(Footer, 'common.footer', props => {\n    const { config, helper } = props;\n    const { url_for, _p, date } = helper;\n    const { logo, title, author, footer, plugins } = config;\n\n    const links = {};\n    if (footer && footer.links) {\n        Object.keys(footer.links).forEach(name => {\n            const link = footer.links[name];\n            links[name] = {\n                url: url_for(typeof link === 'string' ? link : link.url),\n                icon: link.icon\n            };\n        });\n    }\n\n    return {\n        logo,\n        logoUrl: url_for(logo),\n        siteUrl: url_for('/'),\n        siteTitle: title,\n        siteYear: date(new Date(), 'YYYY'),\n        author,\n        links,\n        showVisitorCounter: plugins && plugins.busuanzi === true,\n        visitorCounterTitle: _p('plugin.visitor', '<span id=\"busuanzi_value_site_uv\">0</span>')\n    };\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/common/scripts.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/common/scripts.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/common/scripts.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/common/scripts.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
        "sourceFileName": "scripts.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('inferno'),\n    Component = _require.Component,\n    Fragment = _require.Fragment;\n\nvar Plugins = require('./plugins');\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          site = _this$props.site,\n          config = _this$props.config,\n          helper = _this$props.helper,\n          page = _this$props.page;\n      var url_for = helper.url_for,\n          cdn = helper.cdn;\n      var external_link = config.external_link,\n          article = config.article;\n      var language = page.lang || page.language || config.language || 'en';\n      var externalLink;\n\n      if (typeof external_link === 'boolean') {\n        externalLink = {\n          enable: external_link,\n          exclude: []\n        };\n      } else {\n        externalLink = {\n          enable: typeof external_link.enable === 'boolean' ? external_link.enable : true,\n          exclude: external_link.exclude || []\n        };\n      }\n\n      var fold = 'unfolded';\n      var clipboard = true;\n\n      if (article && article.highlight) {\n        if (typeof article.highlight.clipboard !== 'undefined') {\n          clipboard = !!article.highlight.clipboard;\n        }\n\n        if (typeof article.highlight.fold === 'string') {\n          fold = article.highlight.fold;\n        }\n      }\n\n      var embeddedConfig = \"var IcarusThemeSettings = {\\n            site: {\\n                url: '\".concat(config.url, \"',\\n                external_link: \").concat(JSON.stringify(externalLink), \"\\n            },\\n            article: {\\n                highlight: {\\n                    clipboard: \").concat(clipboard, \",\\n                    fold: '\").concat(fold, \"'\\n                }\\n            }\\n        };\");\n      return (0, _inferno.createFragment)([(0, _inferno.createVNode)(1, \"script\", null, null, 1, {\n        \"src\": cdn('jquery', '3.3.1', 'dist/jquery.min.js')\n      }), (0, _inferno.createVNode)(1, \"script\", null, null, 1, {\n        \"src\": cdn('moment', '2.22.2', 'min/moment-with-locales.min.js')\n      }), (0, _inferno.createVNode)(1, \"script\", null, null, 1, {\n        \"dangerouslySetInnerHTML\": {\n          __html: \"moment.locale(\\\"\".concat(language, \"\\\");\")\n        }\n      }), (0, _inferno.createVNode)(1, \"script\", null, null, 1, {\n        \"dangerouslySetInnerHTML\": {\n          __html: embeddedConfig\n        }\n      }), clipboard ? (0, _inferno.createVNode)(1, \"script\", null, null, 1, {\n        \"src\": cdn('clipboard', '2.0.4', 'dist/clipboard.min.js'),\n        \"defer\": true\n      }) : null, (0, _inferno.createComponentVNode)(2, Plugins, {\n        \"site\": site,\n        \"config\": config,\n        \"page\": page,\n        \"helper\": helper,\n        \"head\": false\n      }), (0, _inferno.createVNode)(1, \"script\", null, null, 1, {\n        \"src\": url_for('/js/main.js'),\n        \"defer\": true\n      })], 0);\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanN4Il0sIm5hbWVzIjpbInJlcXVpcmUiLCJDb21wb25lbnQiLCJGcmFnbWVudCIsIlBsdWdpbnMiLCJtb2R1bGUiLCJleHBvcnRzIiwicHJvcHMiLCJzaXRlIiwiY29uZmlnIiwiaGVscGVyIiwicGFnZSIsInVybF9mb3IiLCJjZG4iLCJleHRlcm5hbF9saW5rIiwiYXJ0aWNsZSIsImxhbmd1YWdlIiwibGFuZyIsImV4dGVybmFsTGluayIsImVuYWJsZSIsImV4Y2x1ZGUiLCJmb2xkIiwiY2xpcGJvYXJkIiwiaGlnaGxpZ2h0IiwiZW1iZWRkZWRDb25maWciLCJ1cmwiLCJKU09OIiwic3RyaW5naWZ5IiwiX19odG1sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBQWdDQSxPQUFPLENBQUMsU0FBRCxDO0lBQS9CQyxTLFlBQUFBLFM7SUFBV0MsUSxZQUFBQSxROztBQUNuQixJQUFNQyxPQUFPLEdBQUdILE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUVBSSxNQUFNLENBQUNDLE9BQVA7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSw2QkFDYTtBQUFBLHdCQUNrQyxLQUFLQyxLQUR2QztBQUFBLFVBQ0dDLElBREgsZUFDR0EsSUFESDtBQUFBLFVBQ1NDLE1BRFQsZUFDU0EsTUFEVDtBQUFBLFVBQ2lCQyxNQURqQixlQUNpQkEsTUFEakI7QUFBQSxVQUN5QkMsSUFEekIsZUFDeUJBLElBRHpCO0FBQUEsVUFFR0MsT0FGSCxHQUVvQkYsTUFGcEIsQ0FFR0UsT0FGSDtBQUFBLFVBRVlDLEdBRlosR0FFb0JILE1BRnBCLENBRVlHLEdBRlo7QUFBQSxVQUdHQyxhQUhILEdBRzhCTCxNQUg5QixDQUdHSyxhQUhIO0FBQUEsVUFHa0JDLE9BSGxCLEdBRzhCTixNQUg5QixDQUdrQk0sT0FIbEI7QUFJTCxVQUFNQyxRQUFRLEdBQUdMLElBQUksQ0FBQ00sSUFBTCxJQUFhTixJQUFJLENBQUNLLFFBQWxCLElBQThCUCxNQUFNLENBQUNPLFFBQXJDLElBQWlELElBQWxFO0FBRUEsVUFBSUUsWUFBSjs7QUFDQSxVQUFJLE9BQU9KLGFBQVAsS0FBeUIsU0FBN0IsRUFBd0M7QUFDcENJLFFBQUFBLFlBQVksR0FBRztBQUFFQyxVQUFBQSxNQUFNLEVBQUVMLGFBQVY7QUFBeUJNLFVBQUFBLE9BQU8sRUFBRTtBQUFsQyxTQUFmO0FBQ0gsT0FGRCxNQUVPO0FBQ0hGLFFBQUFBLFlBQVksR0FBRztBQUNYQyxVQUFBQSxNQUFNLEVBQUUsT0FBT0wsYUFBYSxDQUFDSyxNQUFyQixLQUFnQyxTQUFoQyxHQUE0Q0wsYUFBYSxDQUFDSyxNQUExRCxHQUFtRSxJQURoRTtBQUVYQyxVQUFBQSxPQUFPLEVBQUVOLGFBQWEsQ0FBQ00sT0FBZCxJQUF5QjtBQUZ2QixTQUFmO0FBSUg7O0FBRUQsVUFBSUMsSUFBSSxHQUFHLFVBQVg7QUFDQSxVQUFJQyxTQUFTLEdBQUcsSUFBaEI7O0FBQ0EsVUFBSVAsT0FBTyxJQUFJQSxPQUFPLENBQUNRLFNBQXZCLEVBQWtDO0FBQzlCLFlBQUksT0FBT1IsT0FBTyxDQUFDUSxTQUFSLENBQWtCRCxTQUF6QixLQUF1QyxXQUEzQyxFQUF3RDtBQUNwREEsVUFBQUEsU0FBUyxHQUFHLENBQUMsQ0FBQ1AsT0FBTyxDQUFDUSxTQUFSLENBQWtCRCxTQUFoQztBQUNIOztBQUNELFlBQUksT0FBT1AsT0FBTyxDQUFDUSxTQUFSLENBQWtCRixJQUF6QixLQUFrQyxRQUF0QyxFQUFnRDtBQUM1Q0EsVUFBQUEsSUFBSSxHQUFHTixPQUFPLENBQUNRLFNBQVIsQ0FBa0JGLElBQXpCO0FBQ0g7QUFDSjs7QUFFRCxVQUFNRyxjQUFjLHFGQUVKZixNQUFNLENBQUNnQixHQUZILGdEQUdLQyxJQUFJLENBQUNDLFNBQUwsQ0FBZVQsWUFBZixDQUhMLG9IQU9LSSxTQVBMLDJDQVFDRCxJQVJELG9EQUFwQjtBQWFBO0FBQUEsZUFDaUJSLEdBQUcsQ0FBQyxRQUFELEVBQVcsT0FBWCxFQUFvQixvQkFBcEI7QUFEcEI7QUFBQSxlQUVpQkEsR0FBRyxDQUFDLFFBQUQsRUFBVyxRQUFYLEVBQXFCLGdDQUFyQjtBQUZwQjtBQUFBLG1DQUdxQztBQUFFZSxVQUFBQSxNQUFNLDRCQUFvQlosUUFBcEI7QUFBUjtBQUhyQztBQUFBLG1DQUlxQztBQUFFWSxVQUFBQSxNQUFNLEVBQUVKO0FBQVY7QUFKckMsVUFLS0YsU0FBUztBQUFBLGVBQWdCVCxHQUFHLENBQUMsV0FBRCxFQUFjLE9BQWQsRUFBdUIsdUJBQXZCLENBQW5CO0FBQUEsaUJBQTJFO0FBQTNFLFdBQTZGLElBTDNHO0FBQUEsZ0JBTW1CTCxJQU5uQjtBQUFBLGtCQU1pQ0MsTUFOakM7QUFBQSxnQkFNK0NFLElBTi9DO0FBQUEsa0JBTTZERCxNQU43RDtBQUFBLGdCQU0yRTtBQU4zRTtBQUFBLGVBT2lCRSxPQUFPLENBQUMsYUFBRCxDQVB4QjtBQUFBLGlCQU9nRDtBQVBoRDtBQVNIO0FBbERMOztBQUFBO0FBQUEsRUFBK0JWLFNBQS9CIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1czMvbGF5b3V0L2NvbW1vbiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgQ29tcG9uZW50LCBGcmFnbWVudCB9ID0gcmVxdWlyZSgnaW5mZXJubycpO1xuY29uc3QgUGx1Z2lucyA9IHJlcXVpcmUoJy4vcGx1Z2lucycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNsYXNzIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgc2l0ZSwgY29uZmlnLCBoZWxwZXIsIHBhZ2UgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgdXJsX2ZvciwgY2RuIH0gPSBoZWxwZXI7XG4gICAgICAgIGNvbnN0IHsgZXh0ZXJuYWxfbGluaywgYXJ0aWNsZSB9ID0gY29uZmlnO1xuICAgICAgICBjb25zdCBsYW5ndWFnZSA9IHBhZ2UubGFuZyB8fCBwYWdlLmxhbmd1YWdlIHx8IGNvbmZpZy5sYW5ndWFnZSB8fCAnZW4nO1xuXG4gICAgICAgIGxldCBleHRlcm5hbExpbms7XG4gICAgICAgIGlmICh0eXBlb2YgZXh0ZXJuYWxfbGluayA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgICAgICBleHRlcm5hbExpbmsgPSB7IGVuYWJsZTogZXh0ZXJuYWxfbGluaywgZXhjbHVkZTogW10gfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGV4dGVybmFsTGluayA9IHtcbiAgICAgICAgICAgICAgICBlbmFibGU6IHR5cGVvZiBleHRlcm5hbF9saW5rLmVuYWJsZSA9PT0gJ2Jvb2xlYW4nID8gZXh0ZXJuYWxfbGluay5lbmFibGUgOiB0cnVlLFxuICAgICAgICAgICAgICAgIGV4Y2x1ZGU6IGV4dGVybmFsX2xpbmsuZXhjbHVkZSB8fCBbXVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBmb2xkID0gJ3VuZm9sZGVkJztcbiAgICAgICAgbGV0IGNsaXBib2FyZCA9IHRydWU7XG4gICAgICAgIGlmIChhcnRpY2xlICYmIGFydGljbGUuaGlnaGxpZ2h0KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGFydGljbGUuaGlnaGxpZ2h0LmNsaXBib2FyZCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICBjbGlwYm9hcmQgPSAhIWFydGljbGUuaGlnaGxpZ2h0LmNsaXBib2FyZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgYXJ0aWNsZS5oaWdobGlnaHQuZm9sZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBmb2xkID0gYXJ0aWNsZS5oaWdobGlnaHQuZm9sZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGVtYmVkZGVkQ29uZmlnID0gYHZhciBJY2FydXNUaGVtZVNldHRpbmdzID0ge1xuICAgICAgICAgICAgc2l0ZToge1xuICAgICAgICAgICAgICAgIHVybDogJyR7Y29uZmlnLnVybH0nLFxuICAgICAgICAgICAgICAgIGV4dGVybmFsX2xpbms6ICR7SlNPTi5zdHJpbmdpZnkoZXh0ZXJuYWxMaW5rKX1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhcnRpY2xlOiB7XG4gICAgICAgICAgICAgICAgaGlnaGxpZ2h0OiB7XG4gICAgICAgICAgICAgICAgICAgIGNsaXBib2FyZDogJHtjbGlwYm9hcmR9LFxuICAgICAgICAgICAgICAgICAgICBmb2xkOiAnJHtmb2xkfSdcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07YDtcblxuICAgICAgICByZXR1cm4gPEZyYWdtZW50PlxuICAgICAgICAgICAgPHNjcmlwdCBzcmM9e2NkbignanF1ZXJ5JywgJzMuMy4xJywgJ2Rpc3QvanF1ZXJ5Lm1pbi5qcycpfT48L3NjcmlwdD5cbiAgICAgICAgICAgIDxzY3JpcHQgc3JjPXtjZG4oJ21vbWVudCcsICcyLjIyLjInLCAnbWluL21vbWVudC13aXRoLWxvY2FsZXMubWluLmpzJyl9Pjwvc2NyaXB0PlxuICAgICAgICAgICAgPHNjcmlwdCBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGBtb21lbnQubG9jYWxlKFwiJHtsYW5ndWFnZX1cIik7YCB9fT48L3NjcmlwdD5cbiAgICAgICAgICAgIDxzY3JpcHQgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBlbWJlZGRlZENvbmZpZyB9fT48L3NjcmlwdD5cbiAgICAgICAgICAgIHtjbGlwYm9hcmQgPyA8c2NyaXB0IHNyYz17Y2RuKCdjbGlwYm9hcmQnLCAnMi4wLjQnLCAnZGlzdC9jbGlwYm9hcmQubWluLmpzJyl9IGRlZmVyPXt0cnVlfT48L3NjcmlwdD4gOiBudWxsfVxuICAgICAgICAgICAgPFBsdWdpbnMgc2l0ZT17c2l0ZX0gY29uZmlnPXtjb25maWd9IHBhZ2U9e3BhZ2V9IGhlbHBlcj17aGVscGVyfSBoZWFkPXtmYWxzZX0gLz5cbiAgICAgICAgICAgIDxzY3JpcHQgc3JjPXt1cmxfZm9yKCcvanMvbWFpbi5qcycpfSBkZWZlcj17dHJ1ZX0+PC9zY3JpcHQ+XG4gICAgICAgIDwvRnJhZ21lbnQ+O1xuICAgIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "scripts.jsx"
      ],
      "names": [
        "require",
        "Component",
        "Fragment",
        "Plugins",
        "module",
        "exports",
        "props",
        "site",
        "config",
        "helper",
        "page",
        "url_for",
        "cdn",
        "external_link",
        "article",
        "language",
        "lang",
        "externalLink",
        "enable",
        "exclude",
        "fold",
        "clipboard",
        "highlight",
        "embeddedConfig",
        "url",
        "JSON",
        "stringify",
        "__html"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;eAAgCA,OAAO,CAAC,SAAD,C;IAA/BC,S,YAAAA,S;IAAWC,Q,YAAAA,Q;;AACnB,IAAMC,OAAO,GAAGH,OAAO,CAAC,WAAD,CAAvB;;AAEAI,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBACkC,KAAKC,KADvC;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,MADT,eACSA,MADT;AAAA,UACiBC,MADjB,eACiBA,MADjB;AAAA,UACyBC,IADzB,eACyBA,IADzB;AAAA,UAEGC,OAFH,GAEoBF,MAFpB,CAEGE,OAFH;AAAA,UAEYC,GAFZ,GAEoBH,MAFpB,CAEYG,GAFZ;AAAA,UAGGC,aAHH,GAG8BL,MAH9B,CAGGK,aAHH;AAAA,UAGkBC,OAHlB,GAG8BN,MAH9B,CAGkBM,OAHlB;AAIL,UAAMC,QAAQ,GAAGL,IAAI,CAACM,IAAL,IAAaN,IAAI,CAACK,QAAlB,IAA8BP,MAAM,CAACO,QAArC,IAAiD,IAAlE;AAEA,UAAIE,YAAJ;;AACA,UAAI,OAAOJ,aAAP,KAAyB,SAA7B,EAAwC;AACpCI,QAAAA,YAAY,GAAG;AAAEC,UAAAA,MAAM,EAAEL,aAAV;AAAyBM,UAAAA,OAAO,EAAE;AAAlC,SAAf;AACH,OAFD,MAEO;AACHF,QAAAA,YAAY,GAAG;AACXC,UAAAA,MAAM,EAAE,OAAOL,aAAa,CAACK,MAArB,KAAgC,SAAhC,GAA4CL,aAAa,CAACK,MAA1D,GAAmE,IADhE;AAEXC,UAAAA,OAAO,EAAEN,aAAa,CAACM,OAAd,IAAyB;AAFvB,SAAf;AAIH;;AAED,UAAIC,IAAI,GAAG,UAAX;AACA,UAAIC,SAAS,GAAG,IAAhB;;AACA,UAAIP,OAAO,IAAIA,OAAO,CAACQ,SAAvB,EAAkC;AAC9B,YAAI,OAAOR,OAAO,CAACQ,SAAR,CAAkBD,SAAzB,KAAuC,WAA3C,EAAwD;AACpDA,UAAAA,SAAS,GAAG,CAAC,CAACP,OAAO,CAACQ,SAAR,CAAkBD,SAAhC;AACH;;AACD,YAAI,OAAOP,OAAO,CAACQ,SAAR,CAAkBF,IAAzB,KAAkC,QAAtC,EAAgD;AAC5CA,UAAAA,IAAI,GAAGN,OAAO,CAACQ,SAAR,CAAkBF,IAAzB;AACH;AACJ;;AAED,UAAMG,cAAc,qFAEJf,MAAM,CAACgB,GAFH,gDAGKC,IAAI,CAACC,SAAL,CAAeT,YAAf,CAHL,oHAOKI,SAPL,2CAQCD,IARD,oDAApB;AAaA;AAAA,eACiBR,GAAG,CAAC,QAAD,EAAW,OAAX,EAAoB,oBAApB;AADpB;AAAA,eAEiBA,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,gCAArB;AAFpB;AAAA,mCAGqC;AAAEe,UAAAA,MAAM,4BAAoBZ,QAApB;AAAR;AAHrC;AAAA,mCAIqC;AAAEY,UAAAA,MAAM,EAAEJ;AAAV;AAJrC,UAKKF,SAAS;AAAA,eAAgBT,GAAG,CAAC,WAAD,EAAc,OAAd,EAAuB,uBAAvB,CAAnB;AAAA,iBAA2E;AAA3E,WAA6F,IAL3G;AAAA,gBAMmBL,IANnB;AAAA,kBAMiCC,MANjC;AAAA,gBAM+CE,IAN/C;AAAA,kBAM6DD,MAN7D;AAAA,gBAM2E;AAN3E;AAAA,eAOiBE,OAAO,CAAC,aAAD,CAPxB;AAAA,iBAOgD;AAPhD;AASH;AAlDL;;AAAA;AAAA,EAA+BV,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "sourcesContent": [
        "const { Component, Fragment } = require('inferno');\nconst Plugins = require('./plugins');\n\nmodule.exports = class extends Component {\n    render() {\n        const { site, config, helper, page } = this.props;\n        const { url_for, cdn } = helper;\n        const { external_link, article } = config;\n        const language = page.lang || page.language || config.language || 'en';\n\n        let externalLink;\n        if (typeof external_link === 'boolean') {\n            externalLink = { enable: external_link, exclude: [] };\n        } else {\n            externalLink = {\n                enable: typeof external_link.enable === 'boolean' ? external_link.enable : true,\n                exclude: external_link.exclude || []\n            };\n        }\n\n        let fold = 'unfolded';\n        let clipboard = true;\n        if (article && article.highlight) {\n            if (typeof article.highlight.clipboard !== 'undefined') {\n                clipboard = !!article.highlight.clipboard;\n            }\n            if (typeof article.highlight.fold === 'string') {\n                fold = article.highlight.fold;\n            }\n        }\n\n        const embeddedConfig = `var IcarusThemeSettings = {\n            site: {\n                url: '${config.url}',\n                external_link: ${JSON.stringify(externalLink)}\n            },\n            article: {\n                highlight: {\n                    clipboard: ${clipboard},\n                    fold: '${fold}'\n                }\n            }\n        };`;\n\n        return <Fragment>\n            <script src={cdn('jquery', '3.3.1', 'dist/jquery.min.js')}></script>\n            <script src={cdn('moment', '2.22.2', 'min/moment-with-locales.min.js')}></script>\n            <script dangerouslySetInnerHTML={{ __html: `moment.locale(\"${language}\");` }}></script>\n            <script dangerouslySetInnerHTML={{ __html: embeddedConfig }}></script>\n            {clipboard ? <script src={cdn('clipboard', '2.0.4', 'dist/clipboard.min.js')} defer={true}></script> : null}\n            <Plugins site={site} config={config} page={page} helper={helper} head={false} />\n            <script src={url_for('/js/main.js')} defer={true}></script>\n        </Fragment>;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/common/search.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/common/search.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/common/search.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/common/search.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
        "sourceFileName": "search.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar logger = require('hexo-log')();\n\nvar _require = require('inferno'),\n    Component = _require.Component;\n\nvar view = require('hexo-component-inferno/lib/core/view');\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          config = _this$props.config,\n          helper = _this$props.helper;\n      var search = config.search;\n\n      if (!search || typeof search.type !== 'string') {\n        return null;\n      }\n\n      try {\n        var Search = view.require('search/' + search.type);\n\n        return (0, _inferno.createComponentVNode)(2, Search, {\n          \"config\": config,\n          \"helper\": helper,\n          \"search\": search\n        });\n      } catch (e) {\n        logger.w(\"Icarus cannot load search \\\"\".concat(search.type, \"\\\"\"));\n        return null;\n      }\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlYXJjaC5qc3giXSwibmFtZXMiOlsibG9nZ2VyIiwicmVxdWlyZSIsIkNvbXBvbmVudCIsInZpZXciLCJtb2R1bGUiLCJleHBvcnRzIiwicHJvcHMiLCJjb25maWciLCJoZWxwZXIiLCJzZWFyY2giLCJ0eXBlIiwiU2VhcmNoIiwiZSIsInciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQVAsRUFBZjs7ZUFDc0JBLE9BQU8sQ0FBQyxTQUFELEM7SUFBckJDLFMsWUFBQUEsUzs7QUFDUixJQUFNQyxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxzQ0FBRCxDQUFwQjs7QUFFQUcsTUFBTSxDQUFDQyxPQUFQO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUEsNkJBQ2E7QUFBQSx3QkFDc0IsS0FBS0MsS0FEM0I7QUFBQSxVQUNHQyxNQURILGVBQ0dBLE1BREg7QUFBQSxVQUNXQyxNQURYLGVBQ1dBLE1BRFg7QUFBQSxVQUVHQyxNQUZILEdBRWNGLE1BRmQsQ0FFR0UsTUFGSDs7QUFHTCxVQUFJLENBQUNBLE1BQUQsSUFBVyxPQUFPQSxNQUFNLENBQUNDLElBQWQsS0FBdUIsUUFBdEMsRUFBZ0Q7QUFDNUMsZUFBTyxJQUFQO0FBQ0g7O0FBRUQsVUFBSTtBQUNBLFlBQU1DLE1BQU0sR0FBR1IsSUFBSSxDQUFDRixPQUFMLENBQWEsWUFBWVEsTUFBTSxDQUFDQyxJQUFoQyxDQUFmOztBQUNBO0FBQUEsb0JBQXVCSCxNQUF2QjtBQUFBLG9CQUF1Q0MsTUFBdkM7QUFBQSxvQkFBdURDO0FBQXZEO0FBQ0gsT0FIRCxDQUdFLE9BQU9HLENBQVAsRUFBVTtBQUNSWixRQUFBQSxNQUFNLENBQUNhLENBQVAsdUNBQXVDSixNQUFNLENBQUNDLElBQTlDO0FBQ0EsZUFBTyxJQUFQO0FBQ0g7QUFDSjtBQWZMOztBQUFBO0FBQUEsRUFBK0JSLFNBQS9CIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1czMvbGF5b3V0L2NvbW1vbiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGxvZ2dlciA9IHJlcXVpcmUoJ2hleG8tbG9nJykoKTtcbmNvbnN0IHsgQ29tcG9uZW50IH0gPSByZXF1aXJlKCdpbmZlcm5vJyk7XG5jb25zdCB2aWV3ID0gcmVxdWlyZSgnaGV4by1jb21wb25lbnQtaW5mZXJuby9saWIvY29yZS92aWV3Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gY2xhc3MgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBjb25maWcsIGhlbHBlciB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgeyBzZWFyY2ggfSA9IGNvbmZpZztcbiAgICAgICAgaWYgKCFzZWFyY2ggfHwgdHlwZW9mIHNlYXJjaC50eXBlICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgU2VhcmNoID0gdmlldy5yZXF1aXJlKCdzZWFyY2gvJyArIHNlYXJjaC50eXBlKTtcbiAgICAgICAgICAgIHJldHVybiA8U2VhcmNoIGNvbmZpZz17Y29uZmlnfSBoZWxwZXI9e2hlbHBlcn0gc2VhcmNoPXtzZWFyY2h9IC8+O1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBsb2dnZXIudyhgSWNhcnVzIGNhbm5vdCBsb2FkIHNlYXJjaCBcIiR7c2VhcmNoLnR5cGV9XCJgKTtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "search.jsx"
      ],
      "names": [
        "logger",
        "require",
        "Component",
        "view",
        "module",
        "exports",
        "props",
        "config",
        "helper",
        "search",
        "type",
        "Search",
        "e",
        "w"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAP,EAAf;;eACsBA,OAAO,CAAC,SAAD,C;IAArBC,S,YAAAA,S;;AACR,IAAMC,IAAI,GAAGF,OAAO,CAAC,sCAAD,CAApB;;AAEAG,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBACsB,KAAKC,KAD3B;AAAA,UACGC,MADH,eACGA,MADH;AAAA,UACWC,MADX,eACWA,MADX;AAAA,UAEGC,MAFH,GAEcF,MAFd,CAEGE,MAFH;;AAGL,UAAI,CAACA,MAAD,IAAW,OAAOA,MAAM,CAACC,IAAd,KAAuB,QAAtC,EAAgD;AAC5C,eAAO,IAAP;AACH;;AAED,UAAI;AACA,YAAMC,MAAM,GAAGR,IAAI,CAACF,OAAL,CAAa,YAAYQ,MAAM,CAACC,IAAhC,CAAf;;AACA;AAAA,oBAAuBH,MAAvB;AAAA,oBAAuCC,MAAvC;AAAA,oBAAuDC;AAAvD;AACH,OAHD,CAGE,OAAOG,CAAP,EAAU;AACRZ,QAAAA,MAAM,CAACa,CAAP,uCAAuCJ,MAAM,CAACC,IAA9C;AACA,eAAO,IAAP;AACH;AACJ;AAfL;;AAAA;AAAA,EAA+BR,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/common",
      "sourcesContent": [
        "const logger = require('hexo-log')();\nconst { Component } = require('inferno');\nconst view = require('hexo-component-inferno/lib/core/view');\n\nmodule.exports = class extends Component {\n    render() {\n        const { config, helper } = this.props;\n        const { search } = config;\n        if (!search || typeof search.type !== 'string') {\n            return null;\n        }\n\n        try {\n            const Search = view.require('search/' + search.type);\n            return <Search config={config} helper={helper} search={search} />;\n        } catch (e) {\n            logger.w(`Icarus cannot load search \"${search.type}\"`);\n            return null;\n        }\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/page.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/page.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/page.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/page.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
        "sourceFileName": "page.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('inferno'),\n    Component = _require.Component;\n\nvar Article = require('./common/article');\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          config = _this$props.config,\n          page = _this$props.page,\n          helper = _this$props.helper;\n      return (0, _inferno.createComponentVNode)(2, Article, {\n        \"config\": config,\n        \"page\": page,\n        \"helper\": helper,\n        \"index\": false\n      });\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2UuanN4Il0sIm5hbWVzIjpbInJlcXVpcmUiLCJDb21wb25lbnQiLCJBcnRpY2xlIiwibW9kdWxlIiwiZXhwb3J0cyIsInByb3BzIiwiY29uZmlnIiwicGFnZSIsImhlbHBlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQUFzQkEsT0FBTyxDQUFDLFNBQUQsQztJQUFyQkMsUyxZQUFBQSxTOztBQUNSLElBQU1DLE9BQU8sR0FBR0YsT0FBTyxDQUFDLGtCQUFELENBQXZCOztBQUVBRyxNQUFNLENBQUNDLE9BQVA7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSw2QkFDYTtBQUFBLHdCQUM0QixLQUFLQyxLQURqQztBQUFBLFVBQ0dDLE1BREgsZUFDR0EsTUFESDtBQUFBLFVBQ1dDLElBRFgsZUFDV0EsSUFEWDtBQUFBLFVBQ2lCQyxNQURqQixlQUNpQkEsTUFEakI7QUFHTDtBQUFBLGtCQUF3QkYsTUFBeEI7QUFBQSxnQkFBc0NDLElBQXRDO0FBQUEsa0JBQW9EQyxNQUFwRDtBQUFBLGlCQUFtRTtBQUFuRTtBQUNIO0FBTEw7O0FBQUE7QUFBQSxFQUErQlAsU0FBL0IiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzMy9sYXlvdXQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IENvbXBvbmVudCB9ID0gcmVxdWlyZSgnaW5mZXJubycpO1xuY29uc3QgQXJ0aWNsZSA9IHJlcXVpcmUoJy4vY29tbW9uL2FydGljbGUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBjbGFzcyBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IGNvbmZpZywgcGFnZSwgaGVscGVyIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIHJldHVybiA8QXJ0aWNsZSBjb25maWc9e2NvbmZpZ30gcGFnZT17cGFnZX0gaGVscGVyPXtoZWxwZXJ9IGluZGV4PXtmYWxzZX0gLz47XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "page.jsx"
      ],
      "names": [
        "require",
        "Component",
        "Article",
        "module",
        "exports",
        "props",
        "config",
        "page",
        "helper"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;eAAsBA,OAAO,CAAC,SAAD,C;IAArBC,S,YAAAA,S;;AACR,IAAMC,OAAO,GAAGF,OAAO,CAAC,kBAAD,CAAvB;;AAEAG,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACGC,MADH,eACGA,MADH;AAAA,UACWC,IADX,eACWA,IADX;AAAA,UACiBC,MADjB,eACiBA,MADjB;AAGL;AAAA,kBAAwBF,MAAxB;AAAA,gBAAsCC,IAAtC;AAAA,kBAAoDC,MAApD;AAAA,iBAAmE;AAAnE;AACH;AALL;;AAAA;AAAA,EAA+BP,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "sourcesContent": [
        "const { Component } = require('inferno');\nconst Article = require('./common/article');\n\nmodule.exports = class extends Component {\n    render() {\n        const { config, page, helper } = this.props;\n\n        return <Article config={config} page={page} helper={helper} index={false} />;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/post.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/post.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/post.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/post.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
        "sourceFileName": "post.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('inferno'),\n    Component = _require.Component;\n\nvar Article = require('./common/article');\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          config = _this$props.config,\n          page = _this$props.page,\n          helper = _this$props.helper;\n      return (0, _inferno.createComponentVNode)(2, Article, {\n        \"config\": config,\n        \"page\": page,\n        \"helper\": helper,\n        \"index\": false\n      });\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3QuanN4Il0sIm5hbWVzIjpbInJlcXVpcmUiLCJDb21wb25lbnQiLCJBcnRpY2xlIiwibW9kdWxlIiwiZXhwb3J0cyIsInByb3BzIiwiY29uZmlnIiwicGFnZSIsImhlbHBlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQUFzQkEsT0FBTyxDQUFDLFNBQUQsQztJQUFyQkMsUyxZQUFBQSxTOztBQUNSLElBQU1DLE9BQU8sR0FBR0YsT0FBTyxDQUFDLGtCQUFELENBQXZCOztBQUVBRyxNQUFNLENBQUNDLE9BQVA7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSw2QkFDYTtBQUFBLHdCQUM0QixLQUFLQyxLQURqQztBQUFBLFVBQ0dDLE1BREgsZUFDR0EsTUFESDtBQUFBLFVBQ1dDLElBRFgsZUFDV0EsSUFEWDtBQUFBLFVBQ2lCQyxNQURqQixlQUNpQkEsTUFEakI7QUFHTDtBQUFBLGtCQUF3QkYsTUFBeEI7QUFBQSxnQkFBc0NDLElBQXRDO0FBQUEsa0JBQW9EQyxNQUFwRDtBQUFBLGlCQUFtRTtBQUFuRTtBQUNIO0FBTEw7O0FBQUE7QUFBQSxFQUErQlAsU0FBL0IiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzMy9sYXlvdXQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IENvbXBvbmVudCB9ID0gcmVxdWlyZSgnaW5mZXJubycpO1xuY29uc3QgQXJ0aWNsZSA9IHJlcXVpcmUoJy4vY29tbW9uL2FydGljbGUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBjbGFzcyBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IGNvbmZpZywgcGFnZSwgaGVscGVyIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIHJldHVybiA8QXJ0aWNsZSBjb25maWc9e2NvbmZpZ30gcGFnZT17cGFnZX0gaGVscGVyPXtoZWxwZXJ9IGluZGV4PXtmYWxzZX0gLz47XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "post.jsx"
      ],
      "names": [
        "require",
        "Component",
        "Article",
        "module",
        "exports",
        "props",
        "config",
        "page",
        "helper"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;eAAsBA,OAAO,CAAC,SAAD,C;IAArBC,S,YAAAA,S;;AACR,IAAMC,OAAO,GAAGF,OAAO,CAAC,kBAAD,CAAvB;;AAEAG,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACGC,MADH,eACGA,MADH;AAAA,UACWC,IADX,eACWA,IADX;AAAA,UACiBC,MADjB,eACiBA,MADjB;AAGL;AAAA,kBAAwBF,MAAxB;AAAA,gBAAsCC,IAAtC;AAAA,kBAAoDC,MAApD;AAAA,iBAAmE;AAAnE;AACH;AALL;;AAAA;AAAA,EAA+BP,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "sourcesContent": [
        "const { Component } = require('inferno');\nconst Article = require('./common/article');\n\nmodule.exports = class extends Component {\n    render() {\n        const { config, page, helper } = this.props;\n\n        return <Article config={config} page={page} helper={helper} index={false} />;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/tag.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/tag.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/tag.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/tag.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
        "sourceFileName": "tag.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('inferno'),\n    Component = _require.Component,\n    Fragment = _require.Fragment;\n\nvar Index = require('./index');\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          config = _this$props.config,\n          page = _this$props.page,\n          helper = _this$props.helper;\n      var url_for = helper.url_for,\n          _p = helper._p;\n      return (0, _inferno.createFragment)([(0, _inferno.createVNode)(1, \"div\", \"card\", (0, _inferno.createVNode)(1, \"div\", \"card-content\", (0, _inferno.createVNode)(1, \"nav\", \"breadcrumb\", (0, _inferno.createVNode)(1, \"ul\", null, [(0, _inferno.createVNode)(1, \"li\", null, (0, _inferno.createVNode)(1, \"a\", null, _p('common.tag', Infinity), 0, {\n        \"href\": url_for('/tags')\n      }), 2), (0, _inferno.createVNode)(1, \"li\", \"is-active\", (0, _inferno.createVNode)(1, \"a\", null, page.tag, 0, {\n        \"href\": \"#\",\n        \"aria-current\": \"page\"\n      }), 2)], 4), 2, {\n        \"aria-label\": \"breadcrumbs\"\n      }), 2), 2), (0, _inferno.createComponentVNode)(2, Index, {\n        \"config\": config,\n        \"page\": page,\n        \"helper\": helper\n      })], 4);\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhZy5qc3giXSwibmFtZXMiOlsicmVxdWlyZSIsIkNvbXBvbmVudCIsIkZyYWdtZW50IiwiSW5kZXgiLCJtb2R1bGUiLCJleHBvcnRzIiwicHJvcHMiLCJjb25maWciLCJwYWdlIiwiaGVscGVyIiwidXJsX2ZvciIsIl9wIiwiSW5maW5pdHkiLCJ0YWciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFBZ0NBLE9BQU8sQ0FBQyxTQUFELEM7SUFBL0JDLFMsWUFBQUEsUztJQUFXQyxRLFlBQUFBLFE7O0FBQ25CLElBQU1DLEtBQUssR0FBR0gsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBRUFJLE1BQU0sQ0FBQ0MsT0FBUDtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBOztBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLDZCQUNhO0FBQUEsd0JBQzRCLEtBQUtDLEtBRGpDO0FBQUEsVUFDR0MsTUFESCxlQUNHQSxNQURIO0FBQUEsVUFDV0MsSUFEWCxlQUNXQSxJQURYO0FBQUEsVUFDaUJDLE1BRGpCLGVBQ2lCQSxNQURqQjtBQUFBLFVBRUdDLE9BRkgsR0FFbUJELE1BRm5CLENBRUdDLE9BRkg7QUFBQSxVQUVZQyxFQUZaLEdBRW1CRixNQUZuQixDQUVZRSxFQUZaO0FBSUwsK0VBQ2UsTUFEZixzQ0FFbUIsY0FGbkIsc0NBR3VCLFlBSHZCLDZIQUtvREEsRUFBRSxDQUFDLFlBQUQsRUFBZUMsUUFBZixDQUx0RDtBQUFBLGdCQUtpQ0YsT0FBTyxDQUFDLE9BQUQ7QUFMeEMsaURBTThCLFdBTjlCLDBDQU0yRUYsSUFBSSxDQUFDSyxHQU5oRjtBQUFBLGdCQU1rRCxHQU5sRDtBQUFBLHdCQU1tRTtBQU5uRTtBQUFBLHNCQUcrQztBQUgvQztBQUFBLGtCQVdtQk4sTUFYbkI7QUFBQSxnQkFXaUNDLElBWGpDO0FBQUEsa0JBVytDQztBQVgvQztBQWFIO0FBbEJMOztBQUFBO0FBQUEsRUFBK0JSLFNBQS9CIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1czMvbGF5b3V0Iiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBDb21wb25lbnQsIEZyYWdtZW50IH0gPSByZXF1aXJlKCdpbmZlcm5vJyk7XG5jb25zdCBJbmRleCA9IHJlcXVpcmUoJy4vaW5kZXgnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBjbGFzcyBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IGNvbmZpZywgcGFnZSwgaGVscGVyIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCB7IHVybF9mb3IsIF9wIH0gPSBoZWxwZXI7XG5cbiAgICAgICAgcmV0dXJuIDxGcmFnbWVudD5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICA8bmF2IGNsYXNzPVwiYnJlYWRjcnVtYlwiIGFyaWEtbGFiZWw9XCJicmVhZGNydW1ic1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPXt1cmxfZm9yKCcvdGFncycpfT57X3AoJ2NvbW1vbi50YWcnLCBJbmZpbml0eSl9PC9hPjwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwiaXMtYWN0aXZlXCI+PGEgaHJlZj1cIiNcIiBhcmlhLWN1cnJlbnQ9XCJwYWdlXCI+e3BhZ2UudGFnfTwvYT48L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICAgICAgPC9uYXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxJbmRleCBjb25maWc9e2NvbmZpZ30gcGFnZT17cGFnZX0gaGVscGVyPXtoZWxwZXJ9IC8+XG4gICAgICAgIDwvRnJhZ21lbnQ+O1xuICAgIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "tag.jsx"
      ],
      "names": [
        "require",
        "Component",
        "Fragment",
        "Index",
        "module",
        "exports",
        "props",
        "config",
        "page",
        "helper",
        "url_for",
        "_p",
        "Infinity",
        "tag"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;eAAgCA,OAAO,CAAC,SAAD,C;IAA/BC,S,YAAAA,S;IAAWC,Q,YAAAA,Q;;AACnB,IAAMC,KAAK,GAAGH,OAAO,CAAC,SAAD,CAArB;;AAEAI,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACGC,MADH,eACGA,MADH;AAAA,UACWC,IADX,eACWA,IADX;AAAA,UACiBC,MADjB,eACiBA,MADjB;AAAA,UAEGC,OAFH,GAEmBD,MAFnB,CAEGC,OAFH;AAAA,UAEYC,EAFZ,GAEmBF,MAFnB,CAEYE,EAFZ;AAIL,+EACe,MADf,sCAEmB,cAFnB,sCAGuB,YAHvB,6HAKoDA,EAAE,CAAC,YAAD,EAAeC,QAAf,CALtD;AAAA,gBAKiCF,OAAO,CAAC,OAAD;AALxC,iDAM8B,WAN9B,0CAM2EF,IAAI,CAACK,GANhF;AAAA,gBAMkD,GANlD;AAAA,wBAMmE;AANnE;AAAA,sBAG+C;AAH/C;AAAA,kBAWmBN,MAXnB;AAAA,gBAWiCC,IAXjC;AAAA,kBAW+CC;AAX/C;AAaH;AAlBL;;AAAA;AAAA,EAA+BR,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "sourcesContent": [
        "const { Component, Fragment } = require('inferno');\nconst Index = require('./index');\n\nmodule.exports = class extends Component {\n    render() {\n        const { config, page, helper } = this.props;\n        const { url_for, _p } = helper;\n\n        return <Fragment>\n            <div class=\"card\">\n                <div class=\"card-content\">\n                    <nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n                        <ul>\n                            <li><a href={url_for('/tags')}>{_p('common.tag', Infinity)}</a></li>\n                            <li class=\"is-active\"><a href=\"#\" aria-current=\"page\">{page.tag}</a></li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n            <Index config={config} page={page} helper={helper} />\n        </Fragment>;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/tags.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/tags.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/tags.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/tags.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
        "sourceFileName": "tags.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('inferno'),\n    Component = _require.Component;\n\nvar Tags = require('hexo-component-inferno/lib/view/widget/tags');\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          site = _this$props.site,\n          helper = _this$props.helper;\n      return (0, _inferno.createComponentVNode)(2, Tags, {\n        \"site\": site,\n        \"helper\": helper\n      });\n    }\n  }]);\n\n  return _class;\n}(Component);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhZ3MuanN4Il0sIm5hbWVzIjpbInJlcXVpcmUiLCJDb21wb25lbnQiLCJUYWdzIiwibW9kdWxlIiwiZXhwb3J0cyIsInByb3BzIiwic2l0ZSIsImhlbHBlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQUFzQkEsT0FBTyxDQUFDLFNBQUQsQztJQUFyQkMsUyxZQUFBQSxTOztBQUNSLElBQU1DLElBQUksR0FBR0YsT0FBTyxDQUFDLDZDQUFELENBQXBCOztBQUVBRyxNQUFNLENBQUNDLE9BQVA7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSw2QkFDYTtBQUFBLHdCQUNvQixLQUFLQyxLQUR6QjtBQUFBLFVBQ0dDLElBREgsZUFDR0EsSUFESDtBQUFBLFVBQ1NDLE1BRFQsZUFDU0EsTUFEVDtBQUdMO0FBQUEsZ0JBQW1CRCxJQUFuQjtBQUFBLGtCQUFpQ0M7QUFBakM7QUFDSDtBQUxMOztBQUFBO0FBQUEsRUFBK0JOLFNBQS9CIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1czMvbGF5b3V0Iiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBDb21wb25lbnQgfSA9IHJlcXVpcmUoJ2luZmVybm8nKTtcbmNvbnN0IFRhZ3MgPSByZXF1aXJlKCdoZXhvLWNvbXBvbmVudC1pbmZlcm5vL2xpYi92aWV3L3dpZGdldC90YWdzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gY2xhc3MgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBzaXRlLCBoZWxwZXIgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgcmV0dXJuIDxUYWdzIHNpdGU9e3NpdGV9IGhlbHBlcj17aGVscGVyfSAvPjtcbiAgICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "tags.jsx"
      ],
      "names": [
        "require",
        "Component",
        "Tags",
        "module",
        "exports",
        "props",
        "site",
        "helper"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;eAAsBA,OAAO,CAAC,SAAD,C;IAArBC,S,YAAAA,S;;AACR,IAAMC,IAAI,GAAGF,OAAO,CAAC,6CAAD,CAApB;;AAEAG,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBACoB,KAAKC,KADzB;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,MADT,eACSA,MADT;AAGL;AAAA,gBAAmBD,IAAnB;AAAA,kBAAiCC;AAAjC;AACH;AALL;;AAAA;AAAA,EAA+BN,SAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout",
      "sourcesContent": [
        "const { Component } = require('inferno');\nconst Tags = require('hexo-component-inferno/lib/view/widget/tags');\n\nmodule.exports = class extends Component {\n    render() {\n        const { site, helper } = this.props;\n\n        return <Tags site={site} helper={helper} />;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout/plugin\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/plugin/animejs.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/plugin",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/plugin/animejs.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/plugin/animejs.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/plugin/animejs.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/plugin",
        "sourceFileName": "animejs.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('inferno'),\n    Component = _require.Component;\n\nvar _require2 = require('hexo-component-inferno/lib/util/cache'),\n    cacheComponent = _require2.cacheComponent;\n\nvar AnimeJs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AnimeJs, _Component);\n\n  function AnimeJs() {\n    _classCallCheck(this, AnimeJs);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AnimeJs).apply(this, arguments));\n  }\n\n  _createClass(AnimeJs, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.head) {\n        return (0, _inferno.createVNode)(1, \"style\", null, null, 1, {\n          \"dangerouslySetInnerHTML\": {\n            __html: 'body>.footer,body>.navbar,body>.section{opacity:0}'\n          }\n        });\n      }\n\n      return (0, _inferno.createVNode)(1, \"script\", null, null, 1, {\n        \"src\": this.props.jsUrl\n      });\n    }\n  }]);\n\n  return AnimeJs;\n}(Component);\n\nmodule.exports = cacheComponent(AnimeJs, 'plugin.animejs', function (props) {\n  var helper = props.helper,\n      head = props.head;\n  return {\n    head: head,\n    jsUrl: helper.url_for('/js/animation.js')\n  };\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuaW1lanMuanN4Il0sIm5hbWVzIjpbInJlcXVpcmUiLCJDb21wb25lbnQiLCJjYWNoZUNvbXBvbmVudCIsIkFuaW1lSnMiLCJwcm9wcyIsImhlYWQiLCJfX2h0bWwiLCJqc1VybCIsIm1vZHVsZSIsImV4cG9ydHMiLCJoZWxwZXIiLCJ1cmxfZm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBQXNCQSxPQUFPLENBQUMsU0FBRCxDO0lBQXJCQyxTLFlBQUFBLFM7O2dCQUNtQkQsT0FBTyxDQUFDLHVDQUFELEM7SUFBMUJFLGMsYUFBQUEsYzs7SUFFRkMsTzs7Ozs7Ozs7Ozs7Ozs2QkFDTztBQUNMLFVBQUksS0FBS0MsS0FBTCxDQUFXQyxJQUFmLEVBQXFCO0FBQ2pCO0FBQUEscUNBQXVDO0FBQUVDLFlBQUFBLE1BQU0sRUFBRTtBQUFWO0FBQXZDO0FBQ0g7O0FBQ0Q7QUFBQSxlQUFvQixLQUFLRixLQUFMLENBQVdHO0FBQS9CO0FBRUg7Ozs7RUFQaUJOLFM7O0FBVXRCTyxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLGNBQWMsQ0FBQ0MsT0FBRCxFQUFVLGdCQUFWLEVBQTRCLFVBQUFDLEtBQUssRUFBSTtBQUFBLE1BQ3hETSxNQUR3RCxHQUN2Q04sS0FEdUMsQ0FDeERNLE1BRHdEO0FBQUEsTUFDaERMLElBRGdELEdBQ3ZDRCxLQUR1QyxDQUNoREMsSUFEZ0Q7QUFFaEUsU0FBTztBQUNIQSxJQUFBQSxJQUFJLEVBQUpBLElBREc7QUFFSEUsSUFBQUEsS0FBSyxFQUFFRyxNQUFNLENBQUNDLE9BQVAsQ0FBZSxrQkFBZjtBQUZKLEdBQVA7QUFJSCxDQU44QixDQUEvQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMzL2xheW91dC9wbHVnaW4iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IENvbXBvbmVudCB9ID0gcmVxdWlyZSgnaW5mZXJubycpO1xuY29uc3QgeyBjYWNoZUNvbXBvbmVudCB9ID0gcmVxdWlyZSgnaGV4by1jb21wb25lbnQtaW5mZXJuby9saWIvdXRpbC9jYWNoZScpO1xuXG5jbGFzcyBBbmltZUpzIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLmhlYWQpIHtcbiAgICAgICAgICAgIHJldHVybiA8c3R5bGUgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiAnYm9keT4uZm9vdGVyLGJvZHk+Lm5hdmJhcixib2R5Pi5zZWN0aW9ue29wYWNpdHk6MH0nIH19Pjwvc3R5bGU+O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiA8c2NyaXB0IHNyYz17dGhpcy5wcm9wcy5qc1VybH0+PC9zY3JpcHQ+O1xuXG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNhY2hlQ29tcG9uZW50KEFuaW1lSnMsICdwbHVnaW4uYW5pbWVqcycsIHByb3BzID0+IHtcbiAgICBjb25zdCB7IGhlbHBlciwgaGVhZCB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaGVhZCxcbiAgICAgICAganNVcmw6IGhlbHBlci51cmxfZm9yKCcvanMvYW5pbWF0aW9uLmpzJylcbiAgICB9O1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "animejs.jsx"
      ],
      "names": [
        "require",
        "Component",
        "cacheComponent",
        "AnimeJs",
        "props",
        "head",
        "__html",
        "jsUrl",
        "module",
        "exports",
        "helper",
        "url_for"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;eAAsBA,OAAO,CAAC,SAAD,C;IAArBC,S,YAAAA,S;;gBACmBD,OAAO,CAAC,uCAAD,C;IAA1BE,c,aAAAA,c;;IAEFC,O;;;;;;;;;;;;;6BACO;AACL,UAAI,KAAKC,KAAL,CAAWC,IAAf,EAAqB;AACjB;AAAA,qCAAuC;AAAEC,YAAAA,MAAM,EAAE;AAAV;AAAvC;AACH;;AACD;AAAA,eAAoB,KAAKF,KAAL,CAAWG;AAA/B;AAEH;;;;EAPiBN,S;;AAUtBO,MAAM,CAACC,OAAP,GAAiBP,cAAc,CAACC,OAAD,EAAU,gBAAV,EAA4B,UAAAC,KAAK,EAAI;AAAA,MACxDM,MADwD,GACvCN,KADuC,CACxDM,MADwD;AAAA,MAChDL,IADgD,GACvCD,KADuC,CAChDC,IADgD;AAEhE,SAAO;AACHA,IAAAA,IAAI,EAAJA,IADG;AAEHE,IAAAA,KAAK,EAAEG,MAAM,CAACC,OAAP,CAAe,kBAAf;AAFJ,GAAP;AAIH,CAN8B,CAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/plugin",
      "sourcesContent": [
        "const { Component } = require('inferno');\nconst { cacheComponent } = require('hexo-component-inferno/lib/util/cache');\n\nclass AnimeJs extends Component {\n    render() {\n        if (this.props.head) {\n            return <style dangerouslySetInnerHTML={{ __html: 'body>.footer,body>.navbar,body>.section{opacity:0}' }}></style>;\n        }\n        return <script src={this.props.jsUrl}></script>;\n\n    }\n}\n\nmodule.exports = cacheComponent(AnimeJs, 'plugin.animejs', props => {\n    const { helper, head } = props;\n    return {\n        head,\n        jsUrl: helper.url_for('/js/animation.js')\n    };\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout/plugin\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/plugin/back_to_top.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/plugin",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/plugin/back_to_top.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/plugin/back_to_top.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/plugin/back_to_top.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/plugin",
        "sourceFileName": "back_to_top.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('inferno'),\n    Component = _require.Component,\n    Fragment = _require.Fragment;\n\nvar _require2 = require('hexo-component-inferno/lib/util/cache'),\n    cacheComponent = _require2.cacheComponent;\n\nvar BackToTop =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BackToTop, _Component);\n\n  function BackToTop() {\n    _classCallCheck(this, BackToTop);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BackToTop).apply(this, arguments));\n  }\n\n  _createClass(BackToTop, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          jsUrl = _this$props.jsUrl;\n      return (0, _inferno.createFragment)([(0, _inferno.createVNode)(1, \"a\", null, (0, _inferno.createVNode)(1, \"i\", \"fas fa-chevron-up\"), 2, {\n        \"id\": \"back-to-top\",\n        \"title\": title,\n        \"href\": \"javascript:;\"\n      }), (0, _inferno.createVNode)(1, \"script\", null, null, 1, {\n        \"src\": jsUrl,\n        \"defer\": true\n      })], 4);\n    }\n  }]);\n\n  return BackToTop;\n}(Component);\n\nmodule.exports = cacheComponent(BackToTop, 'plugin.backtotop', function (props) {\n  var helper = props.helper,\n      head = props.head;\n\n  if (head) {\n    return null;\n  }\n\n  return {\n    title: helper.__('plugin.backtotop'),\n    jsUrl: helper.url_for('/js/back-to-top.js')\n  };\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhY2tfdG9fdG9wLmpzeCJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiQ29tcG9uZW50IiwiRnJhZ21lbnQiLCJjYWNoZUNvbXBvbmVudCIsIkJhY2tUb1RvcCIsInByb3BzIiwidGl0bGUiLCJqc1VybCIsIm1vZHVsZSIsImV4cG9ydHMiLCJoZWxwZXIiLCJoZWFkIiwiX18iLCJ1cmxfZm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBQWdDQSxPQUFPLENBQUMsU0FBRCxDO0lBQS9CQyxTLFlBQUFBLFM7SUFBV0MsUSxZQUFBQSxROztnQkFDUUYsT0FBTyxDQUFDLHVDQUFELEM7SUFBMUJHLGMsYUFBQUEsYzs7SUFFRkMsUzs7Ozs7Ozs7Ozs7Ozs2QkFDTztBQUFBLHdCQUNvQixLQUFLQyxLQUR6QjtBQUFBLFVBQ0dDLEtBREgsZUFDR0EsS0FESDtBQUFBLFVBQ1VDLEtBRFYsZUFDVUEsS0FEVjtBQUdMLHFIQUVpQixtQkFGakI7QUFBQSxjQUNVLGFBRFY7QUFBQSxpQkFDK0JELEtBRC9CO0FBQUEsZ0JBQzJDO0FBRDNDO0FBQUEsZUFJaUJDLEtBSmpCO0FBQUEsaUJBSStCO0FBSi9CO0FBT0g7Ozs7RUFYbUJOLFM7O0FBY3hCTyxNQUFNLENBQUNDLE9BQVAsR0FBaUJOLGNBQWMsQ0FBQ0MsU0FBRCxFQUFZLGtCQUFaLEVBQWdDLFVBQUFDLEtBQUssRUFBSTtBQUFBLE1BQzVESyxNQUQ0RCxHQUMzQ0wsS0FEMkMsQ0FDNURLLE1BRDREO0FBQUEsTUFDcERDLElBRG9ELEdBQzNDTixLQUQyQyxDQUNwRE0sSUFEb0Q7O0FBRXBFLE1BQUlBLElBQUosRUFBVTtBQUNOLFdBQU8sSUFBUDtBQUNIOztBQUNELFNBQU87QUFDSEwsSUFBQUEsS0FBSyxFQUFFSSxNQUFNLENBQUNFLEVBQVAsQ0FBVSxrQkFBVixDQURKO0FBRUhMLElBQUFBLEtBQUssRUFBRUcsTUFBTSxDQUFDRyxPQUFQLENBQWUsb0JBQWY7QUFGSixHQUFQO0FBSUgsQ0FUOEIsQ0FBL0IiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzMy9sYXlvdXQvcGx1Z2luIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBDb21wb25lbnQsIEZyYWdtZW50IH0gPSByZXF1aXJlKCdpbmZlcm5vJyk7XG5jb25zdCB7IGNhY2hlQ29tcG9uZW50IH0gPSByZXF1aXJlKCdoZXhvLWNvbXBvbmVudC1pbmZlcm5vL2xpYi91dGlsL2NhY2hlJyk7XG5cbmNsYXNzIEJhY2tUb1RvcCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IHRpdGxlLCBqc1VybCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICByZXR1cm4gPEZyYWdtZW50PlxuICAgICAgICAgICAgPGEgaWQ9XCJiYWNrLXRvLXRvcFwiIHRpdGxlPXt0aXRsZX0gaHJlZj1cImphdmFzY3JpcHQ6O1wiPlxuICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFzIGZhLWNoZXZyb24tdXBcIj48L2k+XG4gICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICA8c2NyaXB0IHNyYz17anNVcmx9IGRlZmVyPXt0cnVlfT48L3NjcmlwdD5cbiAgICAgICAgPC9GcmFnbWVudD47XG5cbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2FjaGVDb21wb25lbnQoQmFja1RvVG9wLCAncGx1Z2luLmJhY2t0b3RvcCcsIHByb3BzID0+IHtcbiAgICBjb25zdCB7IGhlbHBlciwgaGVhZCB9ID0gcHJvcHM7XG4gICAgaWYgKGhlYWQpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHRpdGxlOiBoZWxwZXIuX18oJ3BsdWdpbi5iYWNrdG90b3AnKSxcbiAgICAgICAganNVcmw6IGhlbHBlci51cmxfZm9yKCcvanMvYmFjay10by10b3AuanMnKVxuICAgIH07XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "back_to_top.jsx"
      ],
      "names": [
        "require",
        "Component",
        "Fragment",
        "cacheComponent",
        "BackToTop",
        "props",
        "title",
        "jsUrl",
        "module",
        "exports",
        "helper",
        "head",
        "__",
        "url_for"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;eAAgCA,OAAO,CAAC,SAAD,C;IAA/BC,S,YAAAA,S;IAAWC,Q,YAAAA,Q;;gBACQF,OAAO,CAAC,uCAAD,C;IAA1BG,c,aAAAA,c;;IAEFC,S;;;;;;;;;;;;;6BACO;AAAA,wBACoB,KAAKC,KADzB;AAAA,UACGC,KADH,eACGA,KADH;AAAA,UACUC,KADV,eACUA,KADV;AAGL,qHAEiB,mBAFjB;AAAA,cACU,aADV;AAAA,iBAC+BD,KAD/B;AAAA,gBAC2C;AAD3C;AAAA,eAIiBC,KAJjB;AAAA,iBAI+B;AAJ/B;AAOH;;;;EAXmBN,S;;AAcxBO,MAAM,CAACC,OAAP,GAAiBN,cAAc,CAACC,SAAD,EAAY,kBAAZ,EAAgC,UAAAC,KAAK,EAAI;AAAA,MAC5DK,MAD4D,GAC3CL,KAD2C,CAC5DK,MAD4D;AAAA,MACpDC,IADoD,GAC3CN,KAD2C,CACpDM,IADoD;;AAEpE,MAAIA,IAAJ,EAAU;AACN,WAAO,IAAP;AACH;;AACD,SAAO;AACHL,IAAAA,KAAK,EAAEI,MAAM,CAACE,EAAP,CAAU,kBAAV,CADJ;AAEHL,IAAAA,KAAK,EAAEG,MAAM,CAACG,OAAP,CAAe,oBAAf;AAFJ,GAAP;AAIH,CAT8B,CAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/plugin",
      "sourcesContent": [
        "const { Component, Fragment } = require('inferno');\nconst { cacheComponent } = require('hexo-component-inferno/lib/util/cache');\n\nclass BackToTop extends Component {\n    render() {\n        const { title, jsUrl } = this.props;\n\n        return <Fragment>\n            <a id=\"back-to-top\" title={title} href=\"javascript:;\">\n                <i class=\"fas fa-chevron-up\"></i>\n            </a>\n            <script src={jsUrl} defer={true}></script>\n        </Fragment>;\n\n    }\n}\n\nmodule.exports = cacheComponent(BackToTop, 'plugin.backtotop', props => {\n    const { helper, head } = props;\n    if (head) {\n        return null;\n    }\n    return {\n        title: helper.__('plugin.backtotop'),\n        jsUrl: helper.url_for('/js/back-to-top.js')\n    };\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout/search\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/search/insight.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/search",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/search/insight.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/search/insight.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/search/insight.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/search",
        "sourceFileName": "insight.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('inferno'),\n    Component = _require.Component,\n    Fragment = _require.Fragment;\n\nvar _require2 = require('hexo-component-inferno/lib/util/cache'),\n    cacheComponent = _require2.cacheComponent;\n\nvar Insight =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Insight, _Component);\n\n  function Insight() {\n    _classCallCheck(this, Insight);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Insight).apply(this, arguments));\n  }\n\n  _createClass(Insight, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          hint = _this$props.hint,\n          translation = _this$props.translation,\n          contentUrl = _this$props.contentUrl,\n          jsUrl = _this$props.jsUrl,\n          cssUrl = _this$props.cssUrl;\n      var js = \"(function (window) {\\n            var INSIGHT_CONFIG = {\\n                TRANSLATION: {\\n                    POSTS: '\".concat(translation.posts, \"',\\n                    PAGES: '\").concat(translation.pages, \"',\\n                    CATEGORIES: '\").concat(translation.categories, \"',\\n                    TAGS: '\").concat(translation.tags, \"',\\n                    UNTITLED: '\").concat(translation.untitled, \"',\\n                },\\n                CONTENT_URL: '\").concat(contentUrl, \"',\\n            };\\n            window.INSIGHT_CONFIG = INSIGHT_CONFIG;\\n        })(window);\");\n      return (0, _inferno.createFragment)([(0, _inferno.createVNode)(1, \"link\", null, null, 1, {\n        \"rel\": \"stylesheet\",\n        \"href\": cssUrl\n      }), (0, _inferno.createVNode)(1, \"div\", \"searchbox ins-search\", (0, _inferno.createVNode)(1, \"div\", \"searchbox-container ins-search-container\", [(0, _inferno.createVNode)(1, \"div\", \"searchbox-input-wrapper\", [(0, _inferno.createVNode)(64, \"input\", \"searchbox-input ins-search-input\", null, 1, {\n        \"type\": \"text\",\n        \"placeholder\": hint\n      }), (0, _inferno.createVNode)(1, \"span\", \"searchbox-close ins-close ins-selectable\", (0, _inferno.createVNode)(1, \"i\", \"fa fa-times-circle\"), 2)], 4), (0, _inferno.createVNode)(1, \"div\", \"searchbox-result-wrapper ins-section-wrapper\", (0, _inferno.createVNode)(1, \"div\", \"ins-section-container\"), 2)], 4), 2), (0, _inferno.createVNode)(1, \"script\", null, null, 1, {\n        \"dangerouslySetInnerHTML\": {\n          __html: js\n        }\n      }), (0, _inferno.createVNode)(1, \"script\", null, null, 1, {\n        \"src\": jsUrl,\n        \"defer\": true\n      })], 4);\n    }\n  }]);\n\n  return Insight;\n}(Component);\n\nmodule.exports = cacheComponent(Insight, 'search.insight', function (props) {\n  var helper = props.helper;\n  return {\n    hint: helper.__('search.hint'),\n    translation: {\n      posts: helper.__('insight.posts'),\n      pages: helper.__('insight.pages'),\n      categories: helper.__('insight.categories'),\n      tags: helper.__('insight.tags'),\n      untitled: helper.__('insight.untitled')\n    },\n    contentUrl: helper.url_for('/content.json'),\n    jsUrl: helper.url_for('/js/insight.js'),\n    cssUrl: helper.url_for('/css/insight.css')\n  };\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluc2lnaHQuanN4Il0sIm5hbWVzIjpbInJlcXVpcmUiLCJDb21wb25lbnQiLCJGcmFnbWVudCIsImNhY2hlQ29tcG9uZW50IiwiSW5zaWdodCIsInByb3BzIiwiaGludCIsInRyYW5zbGF0aW9uIiwiY29udGVudFVybCIsImpzVXJsIiwiY3NzVXJsIiwianMiLCJwb3N0cyIsInBhZ2VzIiwiY2F0ZWdvcmllcyIsInRhZ3MiLCJ1bnRpdGxlZCIsIl9faHRtbCIsIm1vZHVsZSIsImV4cG9ydHMiLCJoZWxwZXIiLCJfXyIsInVybF9mb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFBZ0NBLE9BQU8sQ0FBQyxTQUFELEM7SUFBL0JDLFMsWUFBQUEsUztJQUFXQyxRLFlBQUFBLFE7O2dCQUNRRixPQUFPLENBQUMsdUNBQUQsQztJQUExQkcsYyxhQUFBQSxjOztJQUVGQyxPOzs7Ozs7Ozs7Ozs7OzZCQUNPO0FBQUEsd0JBQ29ELEtBQUtDLEtBRHpEO0FBQUEsVUFDR0MsSUFESCxlQUNHQSxJQURIO0FBQUEsVUFDU0MsV0FEVCxlQUNTQSxXQURUO0FBQUEsVUFDc0JDLFVBRHRCLGVBQ3NCQSxVQUR0QjtBQUFBLFVBQ2tDQyxLQURsQyxlQUNrQ0EsS0FEbEM7QUFBQSxVQUN5Q0MsTUFEekMsZUFDeUNBLE1BRHpDO0FBR0wsVUFBTUMsRUFBRSxtSUFHY0osV0FBVyxDQUFDSyxLQUgxQiw2Q0FJY0wsV0FBVyxDQUFDTSxLQUoxQixrREFLbUJOLFdBQVcsQ0FBQ08sVUFML0IsNENBTWFQLFdBQVcsQ0FBQ1EsSUFOekIsZ0RBT2lCUixXQUFXLENBQUNTLFFBUDdCLG1FQVNnQlIsVUFUaEIsaUdBQVI7QUFjQTtBQUFBLGVBQ2MsWUFEZDtBQUFBLGdCQUNpQ0U7QUFEakMsOENBRWUsc0JBRmYsc0NBR21CLDBDQUhuQix1Q0FJdUIseUJBSnZCLDBDQUt5QyxrQ0FMekM7QUFBQSxnQkFLNEIsTUFMNUI7QUFBQSx1QkFLeUZKO0FBTHpGLCtDQU00QiwwQ0FONUIsb0NBTWdGLG9CQU5oRixnREFRdUIsOENBUnZCLHNDQVMyQix1QkFUM0I7QUFBQSxtQ0FhcUM7QUFBRVcsVUFBQUEsTUFBTSxFQUFFTjtBQUFWO0FBYnJDO0FBQUEsZUFjaUJGLEtBZGpCO0FBQUEsaUJBYytCO0FBZC9CO0FBZ0JIOzs7O0VBbENpQlIsUzs7QUFxQ3RCaUIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCaEIsY0FBYyxDQUFDQyxPQUFELEVBQVUsZ0JBQVYsRUFBNEIsVUFBQUMsS0FBSyxFQUFJO0FBQUEsTUFDeERlLE1BRHdELEdBQzdDZixLQUQ2QyxDQUN4RGUsTUFEd0Q7QUFHaEUsU0FBTztBQUNIZCxJQUFBQSxJQUFJLEVBQUVjLE1BQU0sQ0FBQ0MsRUFBUCxDQUFVLGFBQVYsQ0FESDtBQUVIZCxJQUFBQSxXQUFXLEVBQUU7QUFDVEssTUFBQUEsS0FBSyxFQUFFUSxNQUFNLENBQUNDLEVBQVAsQ0FBVSxlQUFWLENBREU7QUFFVFIsTUFBQUEsS0FBSyxFQUFFTyxNQUFNLENBQUNDLEVBQVAsQ0FBVSxlQUFWLENBRkU7QUFHVFAsTUFBQUEsVUFBVSxFQUFFTSxNQUFNLENBQUNDLEVBQVAsQ0FBVSxvQkFBVixDQUhIO0FBSVROLE1BQUFBLElBQUksRUFBRUssTUFBTSxDQUFDQyxFQUFQLENBQVUsY0FBVixDQUpHO0FBS1RMLE1BQUFBLFFBQVEsRUFBRUksTUFBTSxDQUFDQyxFQUFQLENBQVUsa0JBQVY7QUFMRCxLQUZWO0FBU0hiLElBQUFBLFVBQVUsRUFBRVksTUFBTSxDQUFDRSxPQUFQLENBQWUsZUFBZixDQVRUO0FBVUhiLElBQUFBLEtBQUssRUFBRVcsTUFBTSxDQUFDRSxPQUFQLENBQWUsZ0JBQWYsQ0FWSjtBQVdIWixJQUFBQSxNQUFNLEVBQUVVLE1BQU0sQ0FBQ0UsT0FBUCxDQUFlLGtCQUFmO0FBWEwsR0FBUDtBQWFILENBaEI4QixDQUEvQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMzL2xheW91dC9zZWFyY2giLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IENvbXBvbmVudCwgRnJhZ21lbnQgfSA9IHJlcXVpcmUoJ2luZmVybm8nKTtcbmNvbnN0IHsgY2FjaGVDb21wb25lbnQgfSA9IHJlcXVpcmUoJ2hleG8tY29tcG9uZW50LWluZmVybm8vbGliL3V0aWwvY2FjaGUnKTtcblxuY2xhc3MgSW5zaWdodCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IGhpbnQsIHRyYW5zbGF0aW9uLCBjb250ZW50VXJsLCBqc1VybCwgY3NzVXJsIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIGNvbnN0IGpzID0gYChmdW5jdGlvbiAod2luZG93KSB7XG4gICAgICAgICAgICB2YXIgSU5TSUdIVF9DT05GSUcgPSB7XG4gICAgICAgICAgICAgICAgVFJBTlNMQVRJT046IHtcbiAgICAgICAgICAgICAgICAgICAgUE9TVFM6ICcke3RyYW5zbGF0aW9uLnBvc3RzfScsXG4gICAgICAgICAgICAgICAgICAgIFBBR0VTOiAnJHt0cmFuc2xhdGlvbi5wYWdlc30nLFxuICAgICAgICAgICAgICAgICAgICBDQVRFR09SSUVTOiAnJHt0cmFuc2xhdGlvbi5jYXRlZ29yaWVzfScsXG4gICAgICAgICAgICAgICAgICAgIFRBR1M6ICcke3RyYW5zbGF0aW9uLnRhZ3N9JyxcbiAgICAgICAgICAgICAgICAgICAgVU5USVRMRUQ6ICcke3RyYW5zbGF0aW9uLnVudGl0bGVkfScsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBDT05URU5UX1VSTDogJyR7Y29udGVudFVybH0nLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHdpbmRvdy5JTlNJR0hUX0NPTkZJRyA9IElOU0lHSFRfQ09ORklHO1xuICAgICAgICB9KSh3aW5kb3cpO2A7XG5cbiAgICAgICAgcmV0dXJuIDxGcmFnbWVudD5cbiAgICAgICAgICAgIDxsaW5rIHJlbD1cInN0eWxlc2hlZXRcIiBocmVmPXtjc3NVcmx9IC8+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2VhcmNoYm94IGlucy1zZWFyY2hcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2VhcmNoYm94LWNvbnRhaW5lciBpbnMtc2VhcmNoLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2VhcmNoYm94LWlucHV0LXdyYXBwZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwic2VhcmNoYm94LWlucHV0IGlucy1zZWFyY2gtaW5wdXRcIiBwbGFjZWhvbGRlcj17aGludH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwic2VhcmNoYm94LWNsb3NlIGlucy1jbG9zZSBpbnMtc2VsZWN0YWJsZVwiPjxpIGNsYXNzPVwiZmEgZmEtdGltZXMtY2lyY2xlXCI+PC9pPjwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzZWFyY2hib3gtcmVzdWx0LXdyYXBwZXIgaW5zLXNlY3Rpb24td3JhcHBlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImlucy1zZWN0aW9uLWNvbnRhaW5lclwiPjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPHNjcmlwdCBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGpzIH19Pjwvc2NyaXB0PlxuICAgICAgICAgICAgPHNjcmlwdCBzcmM9e2pzVXJsfSBkZWZlcj17dHJ1ZX0+PC9zY3JpcHQ+XG4gICAgICAgIDwvRnJhZ21lbnQ+O1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjYWNoZUNvbXBvbmVudChJbnNpZ2h0LCAnc2VhcmNoLmluc2lnaHQnLCBwcm9wcyA9PiB7XG4gICAgY29uc3QgeyBoZWxwZXIgfSA9IHByb3BzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgaGludDogaGVscGVyLl9fKCdzZWFyY2guaGludCcpLFxuICAgICAgICB0cmFuc2xhdGlvbjoge1xuICAgICAgICAgICAgcG9zdHM6IGhlbHBlci5fXygnaW5zaWdodC5wb3N0cycpLFxuICAgICAgICAgICAgcGFnZXM6IGhlbHBlci5fXygnaW5zaWdodC5wYWdlcycpLFxuICAgICAgICAgICAgY2F0ZWdvcmllczogaGVscGVyLl9fKCdpbnNpZ2h0LmNhdGVnb3JpZXMnKSxcbiAgICAgICAgICAgIHRhZ3M6IGhlbHBlci5fXygnaW5zaWdodC50YWdzJyksXG4gICAgICAgICAgICB1bnRpdGxlZDogaGVscGVyLl9fKCdpbnNpZ2h0LnVudGl0bGVkJylcbiAgICAgICAgfSxcbiAgICAgICAgY29udGVudFVybDogaGVscGVyLnVybF9mb3IoJy9jb250ZW50Lmpzb24nKSxcbiAgICAgICAganNVcmw6IGhlbHBlci51cmxfZm9yKCcvanMvaW5zaWdodC5qcycpLFxuICAgICAgICBjc3NVcmw6IGhlbHBlci51cmxfZm9yKCcvY3NzL2luc2lnaHQuY3NzJylcbiAgICB9O1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "insight.jsx"
      ],
      "names": [
        "require",
        "Component",
        "Fragment",
        "cacheComponent",
        "Insight",
        "props",
        "hint",
        "translation",
        "contentUrl",
        "jsUrl",
        "cssUrl",
        "js",
        "posts",
        "pages",
        "categories",
        "tags",
        "untitled",
        "__html",
        "module",
        "exports",
        "helper",
        "__",
        "url_for"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;eAAgCA,OAAO,CAAC,SAAD,C;IAA/BC,S,YAAAA,S;IAAWC,Q,YAAAA,Q;;gBACQF,OAAO,CAAC,uCAAD,C;IAA1BG,c,aAAAA,c;;IAEFC,O;;;;;;;;;;;;;6BACO;AAAA,wBACoD,KAAKC,KADzD;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,WADT,eACSA,WADT;AAAA,UACsBC,UADtB,eACsBA,UADtB;AAAA,UACkCC,KADlC,eACkCA,KADlC;AAAA,UACyCC,MADzC,eACyCA,MADzC;AAGL,UAAMC,EAAE,mIAGcJ,WAAW,CAACK,KAH1B,6CAIcL,WAAW,CAACM,KAJ1B,kDAKmBN,WAAW,CAACO,UAL/B,4CAMaP,WAAW,CAACQ,IANzB,gDAOiBR,WAAW,CAACS,QAP7B,mEASgBR,UAThB,iGAAR;AAcA;AAAA,eACc,YADd;AAAA,gBACiCE;AADjC,8CAEe,sBAFf,sCAGmB,0CAHnB,uCAIuB,yBAJvB,0CAKyC,kCALzC;AAAA,gBAK4B,MAL5B;AAAA,uBAKyFJ;AALzF,+CAM4B,0CAN5B,oCAMgF,oBANhF,gDAQuB,8CARvB,sCAS2B,uBAT3B;AAAA,mCAaqC;AAAEW,UAAAA,MAAM,EAAEN;AAAV;AAbrC;AAAA,eAciBF,KAdjB;AAAA,iBAc+B;AAd/B;AAgBH;;;;EAlCiBR,S;;AAqCtBiB,MAAM,CAACC,OAAP,GAAiBhB,cAAc,CAACC,OAAD,EAAU,gBAAV,EAA4B,UAAAC,KAAK,EAAI;AAAA,MACxDe,MADwD,GAC7Cf,KAD6C,CACxDe,MADwD;AAGhE,SAAO;AACHd,IAAAA,IAAI,EAAEc,MAAM,CAACC,EAAP,CAAU,aAAV,CADH;AAEHd,IAAAA,WAAW,EAAE;AACTK,MAAAA,KAAK,EAAEQ,MAAM,CAACC,EAAP,CAAU,eAAV,CADE;AAETR,MAAAA,KAAK,EAAEO,MAAM,CAACC,EAAP,CAAU,eAAV,CAFE;AAGTP,MAAAA,UAAU,EAAEM,MAAM,CAACC,EAAP,CAAU,oBAAV,CAHH;AAITN,MAAAA,IAAI,EAAEK,MAAM,CAACC,EAAP,CAAU,cAAV,CAJG;AAKTL,MAAAA,QAAQ,EAAEI,MAAM,CAACC,EAAP,CAAU,kBAAV;AALD,KAFV;AASHb,IAAAA,UAAU,EAAEY,MAAM,CAACE,OAAP,CAAe,eAAf,CATT;AAUHb,IAAAA,KAAK,EAAEW,MAAM,CAACE,OAAP,CAAe,gBAAf,CAVJ;AAWHZ,IAAAA,MAAM,EAAEU,MAAM,CAACE,OAAP,CAAe,kBAAf;AAXL,GAAP;AAaH,CAhB8B,CAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/search",
      "sourcesContent": [
        "const { Component, Fragment } = require('inferno');\nconst { cacheComponent } = require('hexo-component-inferno/lib/util/cache');\n\nclass Insight extends Component {\n    render() {\n        const { hint, translation, contentUrl, jsUrl, cssUrl } = this.props;\n\n        const js = `(function (window) {\n            var INSIGHT_CONFIG = {\n                TRANSLATION: {\n                    POSTS: '${translation.posts}',\n                    PAGES: '${translation.pages}',\n                    CATEGORIES: '${translation.categories}',\n                    TAGS: '${translation.tags}',\n                    UNTITLED: '${translation.untitled}',\n                },\n                CONTENT_URL: '${contentUrl}',\n            };\n            window.INSIGHT_CONFIG = INSIGHT_CONFIG;\n        })(window);`;\n\n        return <Fragment>\n            <link rel=\"stylesheet\" href={cssUrl} />\n            <div class=\"searchbox ins-search\">\n                <div class=\"searchbox-container ins-search-container\">\n                    <div class=\"searchbox-input-wrapper\">\n                        <input type=\"text\" class=\"searchbox-input ins-search-input\" placeholder={hint} />\n                        <span class=\"searchbox-close ins-close ins-selectable\"><i class=\"fa fa-times-circle\"></i></span>\n                    </div>\n                    <div class=\"searchbox-result-wrapper ins-section-wrapper\">\n                        <div class=\"ins-section-container\"></div>\n                    </div>\n                </div>\n            </div>\n            <script dangerouslySetInnerHTML={{ __html: js }}></script>\n            <script src={jsUrl} defer={true}></script>\n        </Fragment>;\n    }\n}\n\nmodule.exports = cacheComponent(Insight, 'search.insight', props => {\n    const { helper } = props;\n\n    return {\n        hint: helper.__('search.hint'),\n        translation: {\n            posts: helper.__('insight.posts'),\n            pages: helper.__('insight.pages'),\n            categories: helper.__('insight.categories'),\n            tags: helper.__('insight.tags'),\n            untitled: helper.__('insight.untitled')\n        },\n        contentUrl: helper.url_for('/content.json'),\n        jsUrl: helper.url_for('/js/insight.js'),\n        cssUrl: helper.url_for('/css/insight.css')\n    };\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus3/layout/widget\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus3/layout/widget/profile.jsx\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/widget",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus3/layout/widget/profile.jsx",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus3/layout/widget/profile.jsx",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus3/layout/widget/profile.jsx",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/widget",
        "sourceFileName": "profile.jsx"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _inferno = require(\"inferno\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('inferno'),\n    Component = _require.Component;\n\nvar gravatrHelper = require('hexo-util').gravatar;\n\nvar _require2 = require('hexo-component-inferno/lib/util/cache'),\n    cacheComponent = _require2.cacheComponent;\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile() {\n    _classCallCheck(this, Profile);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Profile).apply(this, arguments));\n  }\n\n  _createClass(Profile, [{\n    key: \"renderSocialLinks\",\n    value: function renderSocialLinks(links) {\n      if (!links.length) {\n        return null;\n      }\n\n      return (0, _inferno.createVNode)(1, \"div\", \"level is-mobile\", links.filter(function (link) {\n        return _typeof(link) === 'object';\n      }).map(function (link) {\n        return (0, _inferno.createVNode)(1, \"a\", \"level-item button is-transparent is-marginless\", 'icon' in link ? (0, _inferno.createVNode)(1, \"i\", link.icon) : link.name, 0, {\n          \"target\": \"_blank\",\n          \"rel\": \"noopener\",\n          \"title\": link.name,\n          \"href\": link.url\n        });\n      }), 0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          avatar = _this$props.avatar,\n          avatarRounded = _this$props.avatarRounded,\n          author = _this$props.author,\n          authorTitle = _this$props.authorTitle,\n          location = _this$props.location,\n          counter = _this$props.counter,\n          followLink = _this$props.followLink,\n          followTitle = _this$props.followTitle,\n          socialLinks = _this$props.socialLinks;\n      return (0, _inferno.createVNode)(1, \"div\", \"card widget\", (0, _inferno.createVNode)(1, \"div\", \"card-content\", [(0, _inferno.createVNode)(1, \"nav\", \"level\", (0, _inferno.createVNode)(1, \"div\", \"level-item has-text-centered flex-shrink-1\", (0, _inferno.createVNode)(1, \"div\", null, [(0, _inferno.createVNode)(1, \"figure\", \"image is-128x128 mx-auto mb-2\", (0, _inferno.createVNode)(1, \"img\", avatarRounded ? 'is-rounded' : '', null, 1, {\n        \"src\": avatar,\n        \"alt\": author\n      }), 2), author ? (0, _inferno.createVNode)(1, \"p\", \"title is-size-4 is-block line-height-inherit\", author, 0) : null, authorTitle ? (0, _inferno.createVNode)(1, \"p\", \"is-size-6 is-block\", authorTitle, 0) : null, location ? (0, _inferno.createVNode)(1, \"p\", \"is-size-6 is-flex justify-content-center\", [(0, _inferno.createVNode)(1, \"i\", \"fas fa-map-marker-alt mr-1\"), (0, _inferno.createVNode)(1, \"span\", null, location, 0)], 4) : null], 0), 2), 2), (0, _inferno.createVNode)(1, \"nav\", \"level is-mobile\", [(0, _inferno.createVNode)(1, \"div\", \"level-item has-text-centered is-marginless\", (0, _inferno.createVNode)(1, \"div\", null, [(0, _inferno.createVNode)(1, \"p\", \"heading\", counter.post.title, 0), (0, _inferno.createVNode)(1, \"a\", null, (0, _inferno.createVNode)(1, \"p\", \"title\", counter.post.count, 0), 2, {\n        \"href\": counter.post.url\n      })], 4), 2), (0, _inferno.createVNode)(1, \"div\", \"level-item has-text-centered is-marginless\", (0, _inferno.createVNode)(1, \"div\", null, [(0, _inferno.createVNode)(1, \"p\", \"heading\", counter.category.title, 0), (0, _inferno.createVNode)(1, \"a\", null, (0, _inferno.createVNode)(1, \"p\", \"title\", counter.category.count, 0), 2, {\n        \"href\": counter.category.url\n      })], 4), 2), (0, _inferno.createVNode)(1, \"div\", \"level-item has-text-centered is-marginless\", (0, _inferno.createVNode)(1, \"div\", null, [(0, _inferno.createVNode)(1, \"p\", \"heading\", counter.tag.title, 0), (0, _inferno.createVNode)(1, \"a\", null, (0, _inferno.createVNode)(1, \"p\", \"title\", counter.tag.count, 0), 2, {\n        \"href\": counter.tag.url\n      })], 4), 2)], 4), followLink ? (0, _inferno.createVNode)(1, \"div\", \"level\", (0, _inferno.createVNode)(1, \"a\", \"level-item button is-primary is-rounded\", followTitle, 0, {\n        \"href\": followLink,\n        \"target\": \"_blank\",\n        \"rel\": \"noopener\"\n      }), 2) : null, this.renderSocialLinks(socialLinks)], 0), 2);\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nmodule.exports = cacheComponent(Profile, 'widget.profile', function (props) {\n  var site = props.site,\n      helper = props.helper,\n      widget = props.widget;\n  var avatar = widget.avatar,\n      gravatar = widget.gravatar,\n      _widget$avatar_rounde = widget.avatar_rounded,\n      avatar_rounded = _widget$avatar_rounde === void 0 ? false : _widget$avatar_rounde,\n      _widget$author = widget.author,\n      author = _widget$author === void 0 ? props.config.author : _widget$author,\n      author_title = widget.author_title,\n      location = widget.location,\n      follow_link = widget.follow_link,\n      social_links = widget.social_links;\n  var url_for = helper.url_for,\n      _p = helper._p,\n      __ = helper.__;\n\n  function getAvatar() {\n    if (gravatar) {\n      return gravatrHelper(gravatar, 128);\n    }\n\n    if (avatar) {\n      return url_for(avatar);\n    }\n\n    return url_for('/img/avatar.png');\n  }\n\n  var postCount = site.posts.length;\n  var categoryCount = site.categories.filter(function (category) {\n    return category.length;\n  }).length;\n  var tagCount = site.tags.filter(function (tag) {\n    return tag.length;\n  }).length;\n  var socialLinks = Object.keys(social_links).map(function (name) {\n    var link = social_links[name];\n\n    if (typeof link === 'string') {\n      return {\n        name: name,\n        url: url_for(link)\n      };\n    }\n\n    return {\n      name: name,\n      url: url_for(link.url),\n      icon: link.icon\n    };\n  });\n  return {\n    avatar: getAvatar(),\n    avatarRounded: avatar_rounded,\n    author: author,\n    authorTitle: author_title,\n    location: location,\n    counter: {\n      post: {\n        count: postCount,\n        title: _p('common.post', postCount),\n        url: url_for('/archives')\n      },\n      category: {\n        count: categoryCount,\n        title: _p('common.category', categoryCount),\n        url: url_for('/categories')\n      },\n      tag: {\n        count: tagCount,\n        title: _p('common.tag', tagCount),\n        url: url_for('/tags')\n      }\n    },\n    followLink: url_for(follow_link),\n    followTitle: __('widget.follow'),\n    socialLinks: socialLinks\n  };\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "profile.jsx"
      ],
      "names": [
        "require",
        "Component",
        "gravatrHelper",
        "gravatar",
        "cacheComponent",
        "Profile",
        "links",
        "length",
        "filter",
        "link",
        "map",
        "icon",
        "name",
        "url",
        "props",
        "avatar",
        "avatarRounded",
        "author",
        "authorTitle",
        "location",
        "counter",
        "followLink",
        "followTitle",
        "socialLinks",
        "post",
        "title",
        "count",
        "category",
        "tag",
        "renderSocialLinks",
        "module",
        "exports",
        "site",
        "helper",
        "widget",
        "avatar_rounded",
        "config",
        "author_title",
        "follow_link",
        "social_links",
        "url_for",
        "_p",
        "__",
        "getAvatar",
        "postCount",
        "posts",
        "categoryCount",
        "categories",
        "tagCount",
        "tags",
        "Object",
        "keys"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;eAAsBA,OAAO,CAAC,SAAD,C;IAArBC,S,YAAAA,S;;AACR,IAAMC,aAAa,GAAGF,OAAO,CAAC,WAAD,CAAP,CAAqBG,QAA3C;;gBAC2BH,OAAO,CAAC,uCAAD,C;IAA1BI,c,aAAAA,c;;IAEFC,O;;;;;;;;;;;;;sCACgBC,K,EAAO;AACrB,UAAI,CAACA,KAAK,CAACC,MAAX,EAAmB;AACf,eAAO,IAAP;AACH;;AACD,iDAAkB,iBAAlB,EACKD,KAAK,CAACE,MAAN,CAAa,UAAAC,IAAI;AAAA,eAAI,QAAOA,IAAP,MAAgB,QAApB;AAAA,OAAjB,EAA+CC,GAA/C,CAAmD,UAAAD,IAAI,EAAI;AACxD,iDAAgB,gDAAhB,EAEK,UAAUA,IAAV,qCAA2BA,IAAI,CAACE,IAAhC,IAA6CF,IAAI,CAACG,IAFvD;AAAA,oBACW,QADX;AAAA,iBACwB,UADxB;AAAA,mBAC0CH,IAAI,CAACG,IAD/C;AAAA,kBAC2DH,IAAI,CAACI;AADhE;AAIH,OALA,CADL;AAQH;;;6BAEQ;AAAA,wBAWD,KAAKC,KAXJ;AAAA,UAEDC,MAFC,eAEDA,MAFC;AAAA,UAGDC,aAHC,eAGDA,aAHC;AAAA,UAIDC,MAJC,eAIDA,MAJC;AAAA,UAKDC,WALC,eAKDA,WALC;AAAA,UAMDC,QANC,eAMDA,QANC;AAAA,UAODC,OAPC,eAODA,OAPC;AAAA,UAQDC,UARC,eAQDA,UARC;AAAA,UASDC,WATC,eASDA,WATC;AAAA,UAUDC,WAVC,eAUDA,WAVC;AAYL,iDAAkB,aAAlB,sCACe,cADf,uCAEmB,OAFnB,sCAGuB,4CAHvB,oFAKkC,+BALlC,sCAMoCP,aAAa,GAAG,YAAH,GAAkB,EANnE;AAAA,eAM4ED,MAN5E;AAAA,eAMyFE;AANzF,cAQqBA,MAAM,qCAAY,8CAAZ,EAA4DA,MAA5D,OAA0E,IARrG,EASqBC,WAAW,qCAAY,oBAAZ,EAAkCA,WAAlC,OAAqD,IATrF,EAUqBC,QAAQ,qCAAY,0CAAZ,qCACI,4BADJ,8CAEEA,QAFF,YAGF,IAb3B,mDAiBmB,iBAjBnB,uCAkBuB,4CAlBvB,+EAoB6B,SApB7B,EAoBwCC,OAAO,CAACI,IAAR,CAAaC,KApBrD,gFAsBiC,OAtBjC,EAsB0CL,OAAO,CAACI,IAAR,CAAaE,KAtBvD;AAAA,gBAqB6BN,OAAO,CAACI,IAAR,CAAaX;AArB1C,uDA0BuB,4CA1BvB,+EA4B6B,SA5B7B,EA4BwCO,OAAO,CAACO,QAAR,CAAiBF,KA5BzD,gFA8BiC,OA9BjC,EA8B0CL,OAAO,CAACO,QAAR,CAAiBD,KA9B3D;AAAA,gBA6B6BN,OAAO,CAACO,QAAR,CAAiBd;AA7B9C,uDAkCuB,4CAlCvB,+EAoC6B,SApC7B,EAoCwCO,OAAO,CAACQ,GAAR,CAAYH,KApCpD,gFAsCiC,OAtCjC,EAsC0CL,OAAO,CAACQ,GAAR,CAAYF,KAtCtD;AAAA,gBAqC6BN,OAAO,CAACQ,GAAR,CAAYf;AArCzC,wBA2CSQ,UAAU,uCAAc,OAAd,oCACE,yCADF,EAC8FC,WAD9F;AAAA,gBACkDD,UADlD;AAAA,kBACqE,QADrE;AAAA,eACkF;AADlF,eAEF,IA7CjB,EA8CS,KAAKQ,iBAAL,CAAuBN,WAAvB,CA9CT;AAiDH;;;;EA5EiBtB,S;;AA+EtB6B,MAAM,CAACC,OAAP,GAAiB3B,cAAc,CAACC,OAAD,EAAU,gBAAV,EAA4B,UAAAS,KAAK,EAAI;AAAA,MACxDkB,IADwD,GAC/BlB,KAD+B,CACxDkB,IADwD;AAAA,MAClDC,MADkD,GAC/BnB,KAD+B,CAClDmB,MADkD;AAAA,MAC1CC,MAD0C,GAC/BpB,KAD+B,CAC1CoB,MAD0C;AAAA,MAG5DnB,MAH4D,GAW5DmB,MAX4D,CAG5DnB,MAH4D;AAAA,MAI5DZ,QAJ4D,GAW5D+B,MAX4D,CAI5D/B,QAJ4D;AAAA,8BAW5D+B,MAX4D,CAK5DC,cAL4D;AAAA,MAK5DA,cAL4D,sCAK3C,KAL2C;AAAA,uBAW5DD,MAX4D,CAM5DjB,MAN4D;AAAA,MAM5DA,MAN4D,+BAMnDH,KAAK,CAACsB,MAAN,CAAanB,MANsC;AAAA,MAO5DoB,YAP4D,GAW5DH,MAX4D,CAO5DG,YAP4D;AAAA,MAQ5DlB,QAR4D,GAW5De,MAX4D,CAQ5Df,QAR4D;AAAA,MAS5DmB,WAT4D,GAW5DJ,MAX4D,CAS5DI,WAT4D;AAAA,MAU5DC,YAV4D,GAW5DL,MAX4D,CAU5DK,YAV4D;AAAA,MAYxDC,OAZwD,GAYpCP,MAZoC,CAYxDO,OAZwD;AAAA,MAY/CC,EAZ+C,GAYpCR,MAZoC,CAY/CQ,EAZ+C;AAAA,MAY3CC,EAZ2C,GAYpCT,MAZoC,CAY3CS,EAZ2C;;AAchE,WAASC,SAAT,GAAqB;AACjB,QAAIxC,QAAJ,EAAc;AACV,aAAOD,aAAa,CAACC,QAAD,EAAW,GAAX,CAApB;AACH;;AACD,QAAIY,MAAJ,EAAY;AACR,aAAOyB,OAAO,CAACzB,MAAD,CAAd;AACH;;AACD,WAAOyB,OAAO,CAAC,iBAAD,CAAd;AACH;;AAED,MAAMI,SAAS,GAAGZ,IAAI,CAACa,KAAL,CAAWtC,MAA7B;AACA,MAAMuC,aAAa,GAAGd,IAAI,CAACe,UAAL,CAAgBvC,MAAhB,CAAuB,UAAAmB,QAAQ;AAAA,WAAIA,QAAQ,CAACpB,MAAb;AAAA,GAA/B,EAAoDA,MAA1E;AACA,MAAMyC,QAAQ,GAAGhB,IAAI,CAACiB,IAAL,CAAUzC,MAAV,CAAiB,UAAAoB,GAAG;AAAA,WAAIA,GAAG,CAACrB,MAAR;AAAA,GAApB,EAAoCA,MAArD;AAEA,MAAMgB,WAAW,GAAG2B,MAAM,CAACC,IAAP,CAAYZ,YAAZ,EAA0B7B,GAA1B,CAA8B,UAAAE,IAAI,EAAI;AACtD,QAAMH,IAAI,GAAG8B,YAAY,CAAC3B,IAAD,CAAzB;;AACA,QAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAC1B,aAAO;AACHG,QAAAA,IAAI,EAAJA,IADG;AAEHC,QAAAA,GAAG,EAAE2B,OAAO,CAAC/B,IAAD;AAFT,OAAP;AAIH;;AACD,WAAO;AACHG,MAAAA,IAAI,EAAJA,IADG;AAEHC,MAAAA,GAAG,EAAE2B,OAAO,CAAC/B,IAAI,CAACI,GAAN,CAFT;AAGHF,MAAAA,IAAI,EAAEF,IAAI,CAACE;AAHR,KAAP;AAKH,GAbmB,CAApB;AAeA,SAAO;AACHI,IAAAA,MAAM,EAAE4B,SAAS,EADd;AAEH3B,IAAAA,aAAa,EAAEmB,cAFZ;AAGHlB,IAAAA,MAAM,EAANA,MAHG;AAIHC,IAAAA,WAAW,EAAEmB,YAJV;AAKHlB,IAAAA,QAAQ,EAARA,QALG;AAMHC,IAAAA,OAAO,EAAE;AACLI,MAAAA,IAAI,EAAE;AACFE,QAAAA,KAAK,EAAEkB,SADL;AAEFnB,QAAAA,KAAK,EAAEgB,EAAE,CAAC,aAAD,EAAgBG,SAAhB,CAFP;AAGF/B,QAAAA,GAAG,EAAE2B,OAAO,CAAC,WAAD;AAHV,OADD;AAMLb,MAAAA,QAAQ,EAAE;AACND,QAAAA,KAAK,EAAEoB,aADD;AAENrB,QAAAA,KAAK,EAAEgB,EAAE,CAAC,iBAAD,EAAoBK,aAApB,CAFH;AAGNjC,QAAAA,GAAG,EAAE2B,OAAO,CAAC,aAAD;AAHN,OANL;AAWLZ,MAAAA,GAAG,EAAE;AACDF,QAAAA,KAAK,EAAEsB,QADN;AAEDvB,QAAAA,KAAK,EAAEgB,EAAE,CAAC,YAAD,EAAeO,QAAf,CAFR;AAGDnC,QAAAA,GAAG,EAAE2B,OAAO,CAAC,OAAD;AAHX;AAXA,KANN;AAuBHnB,IAAAA,UAAU,EAAEmB,OAAO,CAACF,WAAD,CAvBhB;AAwBHhB,IAAAA,WAAW,EAAEoB,EAAE,CAAC,eAAD,CAxBZ;AAyBHnB,IAAAA,WAAW,EAAXA;AAzBG,GAAP;AA2BH,CAtE8B,CAA/B",
      "sourceRoot": "/home/coding/workspace/themes/icarus3/layout/widget",
      "sourcesContent": [
        "const { Component } = require('inferno');\nconst gravatrHelper = require('hexo-util').gravatar;\nconst { cacheComponent } = require('hexo-component-inferno/lib/util/cache');\n\nclass Profile extends Component {\n    renderSocialLinks(links) {\n        if (!links.length) {\n            return null;\n        }\n        return <div class=\"level is-mobile\">\n            {links.filter(link => typeof link === 'object').map(link => {\n                return <a class=\"level-item button is-transparent is-marginless\"\n                    target=\"_blank\" rel=\"noopener\" title={link.name} href={link.url}>\n                    {'icon' in link ? <i class={link.icon}></i> : link.name}\n                </a>;\n            })}\n        </div>;\n    }\n\n    render() {\n        const {\n            avatar,\n            avatarRounded,\n            author,\n            authorTitle,\n            location,\n            counter,\n            followLink,\n            followTitle,\n            socialLinks\n        } = this.props;\n        return <div class=\"card widget\">\n            <div class=\"card-content\">\n                <nav class=\"level\">\n                    <div class=\"level-item has-text-centered flex-shrink-1\">\n                        <div>\n                            <figure class=\"image is-128x128 mx-auto mb-2\">\n                                <img class={avatarRounded ? 'is-rounded' : ''} src={avatar} alt={author} />\n                            </figure>\n                            {author ? <p class=\"title is-size-4 is-block line-height-inherit\">{author}</p> : null}\n                            {authorTitle ? <p class=\"is-size-6 is-block\">{authorTitle}</p> : null}\n                            {location ? <p class=\"is-size-6 is-flex justify-content-center\">\n                                <i class=\"fas fa-map-marker-alt mr-1\"></i>\n                                <span>{location}</span>\n                            </p> : null}\n                        </div>\n                    </div>\n                </nav>\n                <nav class=\"level is-mobile\">\n                    <div class=\"level-item has-text-centered is-marginless\">\n                        <div>\n                            <p class=\"heading\">{counter.post.title}</p>\n                            <a href={counter.post.url}>\n                                <p class=\"title\">{counter.post.count}</p>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"level-item has-text-centered is-marginless\">\n                        <div>\n                            <p class=\"heading\">{counter.category.title}</p>\n                            <a href={counter.category.url}>\n                                <p class=\"title\">{counter.category.count}</p>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"level-item has-text-centered is-marginless\">\n                        <div>\n                            <p class=\"heading\">{counter.tag.title}</p>\n                            <a href={counter.tag.url}>\n                                <p class=\"title\">{counter.tag.count}</p>\n                            </a>\n                        </div>\n                    </div>\n                </nav>\n                {followLink ? <div class=\"level\">\n                    <a class=\"level-item button is-primary is-rounded\" href={followLink} target=\"_blank\" rel=\"noopener\">{followTitle}</a>\n                </div> : null}\n                {this.renderSocialLinks(socialLinks)}\n            </div>\n        </div>;\n    }\n}\n\nmodule.exports = cacheComponent(Profile, 'widget.profile', props => {\n    const { site, helper, widget } = props;\n    const {\n        avatar,\n        gravatar,\n        avatar_rounded = false,\n        author = props.config.author,\n        author_title,\n        location,\n        follow_link,\n        social_links\n    } = widget;\n    const { url_for, _p, __ } = helper;\n\n    function getAvatar() {\n        if (gravatar) {\n            return gravatrHelper(gravatar, 128);\n        }\n        if (avatar) {\n            return url_for(avatar);\n        }\n        return url_for('/img/avatar.png');\n    }\n\n    const postCount = site.posts.length;\n    const categoryCount = site.categories.filter(category => category.length).length;\n    const tagCount = site.tags.filter(tag => tag.length).length;\n\n    const socialLinks = Object.keys(social_links).map(name => {\n        const link = social_links[name];\n        if (typeof link === 'string') {\n            return {\n                name,\n                url: url_for(link)\n            };\n        }\n        return {\n            name,\n            url: url_for(link.url),\n            icon: link.icon\n        };\n    });\n\n    return {\n        avatar: getAvatar(),\n        avatarRounded: avatar_rounded,\n        author,\n        authorTitle: author_title,\n        location,\n        counter: {\n            post: {\n                count: postCount,\n                title: _p('common.post', postCount),\n                url: url_for('/archives')\n            },\n            category: {\n                count: categoryCount,\n                title: _p('common.category', categoryCount),\n                url: url_for('/categories')\n            },\n            tag: {\n                count: tagCount,\n                title: _p('common.tag', tagCount),\n                url: url_for('/tags')\n            }\n        },\n        followLink: url_for(follow_link),\n        followTitle: __('widget.follow'),\n        socialLinks\n    };\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581402200907
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/tasks\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/tasks/welcome.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/tasks/welcome.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/tasks/welcome.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/tasks/welcome.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
        "sourceFileName": "welcome.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar logger = require('hexo-log')();\n\nlogger.info(\"Welcome\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlbGNvbWUuanMiXSwibmFtZXMiOlsibG9nZ2VyIiwicmVxdWlyZSIsImluZm8iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUFQLEVBQWY7O0FBRUFELE1BQU0sQ0FBQ0UsSUFBUCIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvdGFza3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBsb2dnZXIgPSByZXF1aXJlKCdoZXhvLWxvZycpKCk7XG5cbmxvZ2dlci5pbmZvKGBXZWxjb21lYCk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "welcome.js"
      ],
      "names": [
        "logger",
        "require",
        "info"
      ],
      "mappings": ";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAP,EAAf;;AAEAD,MAAM,CAACE,IAAP",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
      "sourcesContent": [
        "const logger = require('hexo-log')();\n\nlogger.info(`Welcome`);"
      ]
    },
    "sourceType": "script",
    "mtime": 1575438244770
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/tasks\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/tasks/check_deps.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/tasks/check_deps.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/tasks/check_deps.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/tasks/check_deps.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
        "sourceFileName": "check_deps.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar logger = require('hexo-log')();\n\nfunction checkDependency(name) {\n  try {\n    require.resolve(name);\n\n    return true;\n  } catch (e) {\n    logger.error(\"Package \".concat(name, \" is not installed.\"));\n  }\n\n  return false;\n}\n\nlogger.info('Checking dependencies');\nvar missingDeps = ['js-yaml', 'moment', 'cheerio', 'hexo-util', 'hexo-log', 'hexo-pagination'].map(checkDependency).some(function (installed) {\n  return !installed;\n});\n\nif (missingDeps) {\n  logger.error('Please install the missing dependencies from the root directory of your Hexo site.');\n  process.exit(-1);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrX2RlcHMuanMiXSwibmFtZXMiOlsibG9nZ2VyIiwicmVxdWlyZSIsImNoZWNrRGVwZW5kZW5jeSIsIm5hbWUiLCJyZXNvbHZlIiwiZSIsImVycm9yIiwiaW5mbyIsIm1pc3NpbmdEZXBzIiwibWFwIiwic29tZSIsImluc3RhbGxlZCIsInByb2Nlc3MiLCJleGl0Il0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBUCxFQUFmOztBQUVBLFNBQVNDLGVBQVQsQ0FBeUJDLElBQXpCLEVBQStCO0FBQzNCLE1BQUk7QUFDQUYsSUFBQUEsT0FBTyxDQUFDRyxPQUFSLENBQWdCRCxJQUFoQjs7QUFDQSxXQUFPLElBQVA7QUFDSCxHQUhELENBR0UsT0FBTUUsQ0FBTixFQUFTO0FBQ1BMLElBQUFBLE1BQU0sQ0FBQ00sS0FBUCxtQkFBd0JILElBQXhCO0FBQ0g7O0FBQ0QsU0FBTyxLQUFQO0FBQ0g7O0FBRURILE1BQU0sQ0FBQ08sSUFBUCxDQUFZLHVCQUFaO0FBQ0EsSUFBTUMsV0FBVyxHQUFHLENBQ2hCLFNBRGdCLEVBRWhCLFFBRmdCLEVBR2hCLFNBSGdCLEVBSWhCLFdBSmdCLEVBS2hCLFVBTGdCLEVBTWhCLGlCQU5nQixFQU9sQkMsR0FQa0IsQ0FPZFAsZUFQYyxFQU9HUSxJQVBILENBT1EsVUFBQUMsU0FBUztBQUFBLFNBQUksQ0FBQ0EsU0FBTDtBQUFBLENBUGpCLENBQXBCOztBQVFBLElBQUlILFdBQUosRUFBaUI7QUFDYlIsRUFBQUEsTUFBTSxDQUFDTSxLQUFQLENBQWEsb0ZBQWI7QUFDQU0sRUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWEsQ0FBQyxDQUFkO0FBQ0giLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2luY2x1ZGVzL3Rhc2tzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbG9nZ2VyID0gcmVxdWlyZSgnaGV4by1sb2cnKSgpO1xuXG5mdW5jdGlvbiBjaGVja0RlcGVuZGVuY3kobmFtZSkge1xuICAgIHRyeSB7XG4gICAgICAgIHJlcXVpcmUucmVzb2x2ZShuYW1lKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaChlKSB7XG4gICAgICAgIGxvZ2dlci5lcnJvcihgUGFja2FnZSAke25hbWV9IGlzIG5vdCBpbnN0YWxsZWQuYClcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5sb2dnZXIuaW5mbygnQ2hlY2tpbmcgZGVwZW5kZW5jaWVzJyk7XG5jb25zdCBtaXNzaW5nRGVwcyA9IFtcbiAgICAnanMteWFtbCcsXG4gICAgJ21vbWVudCcsXG4gICAgJ2NoZWVyaW8nLFxuICAgICdoZXhvLXV0aWwnLFxuICAgICdoZXhvLWxvZycsXG4gICAgJ2hleG8tcGFnaW5hdGlvbicsXG5dLm1hcChjaGVja0RlcGVuZGVuY3kpLnNvbWUoaW5zdGFsbGVkID0+ICFpbnN0YWxsZWQpO1xuaWYgKG1pc3NpbmdEZXBzKSB7XG4gICAgbG9nZ2VyLmVycm9yKCdQbGVhc2UgaW5zdGFsbCB0aGUgbWlzc2luZyBkZXBlbmRlbmNpZXMgZnJvbSB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgeW91ciBIZXhvIHNpdGUuJyk7XG4gICAgcHJvY2Vzcy5leGl0KC0xKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "check_deps.js"
      ],
      "names": [
        "logger",
        "require",
        "checkDependency",
        "name",
        "resolve",
        "e",
        "error",
        "info",
        "missingDeps",
        "map",
        "some",
        "installed",
        "process",
        "exit"
      ],
      "mappings": ";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAP,EAAf;;AAEA,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC3B,MAAI;AACAF,IAAAA,OAAO,CAACG,OAAR,CAAgBD,IAAhB;;AACA,WAAO,IAAP;AACH,GAHD,CAGE,OAAME,CAAN,EAAS;AACPL,IAAAA,MAAM,CAACM,KAAP,mBAAwBH,IAAxB;AACH;;AACD,SAAO,KAAP;AACH;;AAEDH,MAAM,CAACO,IAAP,CAAY,uBAAZ;AACA,IAAMC,WAAW,GAAG,CAChB,SADgB,EAEhB,QAFgB,EAGhB,SAHgB,EAIhB,WAJgB,EAKhB,UALgB,EAMhB,iBANgB,EAOlBC,GAPkB,CAOdP,eAPc,EAOGQ,IAPH,CAOQ,UAAAC,SAAS;AAAA,SAAI,CAACA,SAAL;AAAA,CAPjB,CAApB;;AAQA,IAAIH,WAAJ,EAAiB;AACbR,EAAAA,MAAM,CAACM,KAAP,CAAa,oFAAb;AACAM,EAAAA,OAAO,CAACC,IAAR,CAAa,CAAC,CAAd;AACH",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
      "sourcesContent": [
        "const logger = require('hexo-log')();\n\nfunction checkDependency(name) {\n    try {\n        require.resolve(name);\n        return true;\n    } catch(e) {\n        logger.error(`Package ${name} is not installed.`)\n    }\n    return false;\n}\n\nlogger.info('Checking dependencies');\nconst missingDeps = [\n    'js-yaml',\n    'moment',\n    'cheerio',\n    'hexo-util',\n    'hexo-log',\n    'hexo-pagination',\n].map(checkDependency).some(installed => !installed);\nif (missingDeps) {\n    logger.error('Please install the missing dependencies from the root directory of your Hexo site.');\n    process.exit(-1);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1576402034974
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/tasks\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/tasks/check_config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/tasks/check_config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/tasks/check_config.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/tasks/check_config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
        "sourceFileName": "check_config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar fs = require('fs');\n\nvar util = require('util');\n\nvar path = require('path');\n\nvar logger = require('hexo-log')();\n\nvar yaml = require('js-yaml');\n\nvar _require = require('../common/utils'),\n    errors = _require.errors;\n\nvar rootSpec = require('../specs/config.spec');\n\nvar ConfigValidator = require('../common/ConfigValidator');\n\nvar ConfigGenerator = require('../common/ConfigGenerator');\n\nvar CONFIG_PATH = path.join(__dirname, '../..', '_config.yml');\nlogger.info('Validating the configuration file');\n\nif (!fs.existsSync(CONFIG_PATH)) {\n  var relativePath = path.relative(process.cwd(), CONFIG_PATH);\n  logger.warn(\"\".concat(relativePath, \" is not found. We are creating one for you...\"));\n  fs.writeFileSync(CONFIG_PATH, new ConfigGenerator(rootSpec).generate());\n  logger.info(\"\".concat(relativePath, \" is created. Please restart Hexo to apply changes.\"));\n  process.exit(0);\n}\n\nvar validator = new ConfigValidator(rootSpec);\nvar config = yaml.safeLoad(fs.readFileSync(CONFIG_PATH));\n\ntry {\n  validator.validate(config);\n} catch (e) {\n  if (e instanceof errors.ConfigError) {\n    logger.error(e.message);\n\n    if (e.hasOwnProperty('spec')) {\n      logger.error('The specification of this configuration is:');\n      logger.error(util.inspect(e.spec));\n    }\n\n    if (e.hasOwnProperty('config')) {\n      logger.error('Configuration value is:');\n      logger.error(util.inspect(e.config));\n    }\n  } else if (e instanceof errors.VersionError) {\n    logger.error(e.message);\n    logger.warn(\"To let us create a fresh configuration file for you, please rename or delete the following file:\");\n    logger.warn(CONFIG_PATH);\n  } else {\n    throw e;\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrX2NvbmZpZy5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJ1dGlsIiwicGF0aCIsImxvZ2dlciIsInlhbWwiLCJlcnJvcnMiLCJyb290U3BlYyIsIkNvbmZpZ1ZhbGlkYXRvciIsIkNvbmZpZ0dlbmVyYXRvciIsIkNPTkZJR19QQVRIIiwiam9pbiIsIl9fZGlybmFtZSIsImluZm8iLCJleGlzdHNTeW5jIiwicmVsYXRpdmVQYXRoIiwicmVsYXRpdmUiLCJwcm9jZXNzIiwiY3dkIiwid2FybiIsIndyaXRlRmlsZVN5bmMiLCJnZW5lcmF0ZSIsImV4aXQiLCJ2YWxpZGF0b3IiLCJjb25maWciLCJzYWZlTG9hZCIsInJlYWRGaWxlU3luYyIsInZhbGlkYXRlIiwiZSIsIkNvbmZpZ0Vycm9yIiwiZXJyb3IiLCJtZXNzYWdlIiwiaGFzT3duUHJvcGVydHkiLCJpbnNwZWN0Iiwic3BlYyIsIlZlcnNpb25FcnJvciJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNRyxNQUFNLEdBQUdILE9BQU8sQ0FBQyxVQUFELENBQVAsRUFBZjs7QUFDQSxJQUFNSSxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxTQUFELENBQXBCOztlQUVtQkEsT0FBTyxDQUFDLGlCQUFELEM7SUFBbEJLLE0sWUFBQUEsTTs7QUFDUixJQUFNQyxRQUFRLEdBQUdOLE9BQU8sQ0FBQyxzQkFBRCxDQUF4Qjs7QUFDQSxJQUFNTyxlQUFlLEdBQUdQLE9BQU8sQ0FBQywyQkFBRCxDQUEvQjs7QUFDQSxJQUFNUSxlQUFlLEdBQUdSLE9BQU8sQ0FBQywyQkFBRCxDQUEvQjs7QUFFQSxJQUFNUyxXQUFXLEdBQUdQLElBQUksQ0FBQ1EsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLE9BQXJCLEVBQThCLGFBQTlCLENBQXBCO0FBRUFSLE1BQU0sQ0FBQ1MsSUFBUCxDQUFZLG1DQUFaOztBQUVBLElBQUksQ0FBQ2IsRUFBRSxDQUFDYyxVQUFILENBQWNKLFdBQWQsQ0FBTCxFQUFpQztBQUM3QixNQUFNSyxZQUFZLEdBQUdaLElBQUksQ0FBQ2EsUUFBTCxDQUFjQyxPQUFPLENBQUNDLEdBQVIsRUFBZCxFQUE2QlIsV0FBN0IsQ0FBckI7QUFDQU4sRUFBQUEsTUFBTSxDQUFDZSxJQUFQLFdBQWVKLFlBQWY7QUFDQWYsRUFBQUEsRUFBRSxDQUFDb0IsYUFBSCxDQUFpQlYsV0FBakIsRUFBOEIsSUFBSUQsZUFBSixDQUFvQkYsUUFBcEIsRUFBOEJjLFFBQTlCLEVBQTlCO0FBQ0FqQixFQUFBQSxNQUFNLENBQUNTLElBQVAsV0FBZUUsWUFBZjtBQUNBRSxFQUFBQSxPQUFPLENBQUNLLElBQVIsQ0FBYSxDQUFiO0FBQ0g7O0FBRUQsSUFBTUMsU0FBUyxHQUFHLElBQUlmLGVBQUosQ0FBb0JELFFBQXBCLENBQWxCO0FBQ0EsSUFBTWlCLE1BQU0sR0FBR25CLElBQUksQ0FBQ29CLFFBQUwsQ0FBY3pCLEVBQUUsQ0FBQzBCLFlBQUgsQ0FBZ0JoQixXQUFoQixDQUFkLENBQWY7O0FBQ0EsSUFBSTtBQUNBYSxFQUFBQSxTQUFTLENBQUNJLFFBQVYsQ0FBbUJILE1BQW5CO0FBQ0gsQ0FGRCxDQUVFLE9BQU9JLENBQVAsRUFBVTtBQUNSLE1BQUlBLENBQUMsWUFBWXRCLE1BQU0sQ0FBQ3VCLFdBQXhCLEVBQXFDO0FBQ2pDekIsSUFBQUEsTUFBTSxDQUFDMEIsS0FBUCxDQUFhRixDQUFDLENBQUNHLE9BQWY7O0FBQ0EsUUFBSUgsQ0FBQyxDQUFDSSxjQUFGLENBQWlCLE1BQWpCLENBQUosRUFBOEI7QUFDMUI1QixNQUFBQSxNQUFNLENBQUMwQixLQUFQLENBQWEsNkNBQWI7QUFDQTFCLE1BQUFBLE1BQU0sQ0FBQzBCLEtBQVAsQ0FBYTVCLElBQUksQ0FBQytCLE9BQUwsQ0FBYUwsQ0FBQyxDQUFDTSxJQUFmLENBQWI7QUFDSDs7QUFDRCxRQUFJTixDQUFDLENBQUNJLGNBQUYsQ0FBaUIsUUFBakIsQ0FBSixFQUFnQztBQUM1QjVCLE1BQUFBLE1BQU0sQ0FBQzBCLEtBQVAsQ0FBYSx5QkFBYjtBQUNBMUIsTUFBQUEsTUFBTSxDQUFDMEIsS0FBUCxDQUFhNUIsSUFBSSxDQUFDK0IsT0FBTCxDQUFhTCxDQUFDLENBQUNKLE1BQWYsQ0FBYjtBQUNIO0FBQ0osR0FWRCxNQVVPLElBQUlJLENBQUMsWUFBWXRCLE1BQU0sQ0FBQzZCLFlBQXhCLEVBQXNDO0FBQ3pDL0IsSUFBQUEsTUFBTSxDQUFDMEIsS0FBUCxDQUFhRixDQUFDLENBQUNHLE9BQWY7QUFDQTNCLElBQUFBLE1BQU0sQ0FBQ2UsSUFBUDtBQUNBZixJQUFBQSxNQUFNLENBQUNlLElBQVAsQ0FBWVQsV0FBWjtBQUNILEdBSk0sTUFJQTtBQUNILFVBQU1rQixDQUFOO0FBQ0g7QUFDSiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvdGFza3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCB1dGlsID0gcmVxdWlyZSgndXRpbCcpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGxvZ2dlciA9IHJlcXVpcmUoJ2hleG8tbG9nJykoKTtcbmNvbnN0IHlhbWwgPSByZXF1aXJlKCdqcy15YW1sJyk7XG5cbmNvbnN0IHsgZXJyb3JzIH0gPSByZXF1aXJlKCcuLi9jb21tb24vdXRpbHMnKTtcbmNvbnN0IHJvb3RTcGVjID0gcmVxdWlyZSgnLi4vc3BlY3MvY29uZmlnLnNwZWMnKTtcbmNvbnN0IENvbmZpZ1ZhbGlkYXRvciA9IHJlcXVpcmUoJy4uL2NvbW1vbi9Db25maWdWYWxpZGF0b3InKTtcbmNvbnN0IENvbmZpZ0dlbmVyYXRvciA9IHJlcXVpcmUoJy4uL2NvbW1vbi9Db25maWdHZW5lcmF0b3InKTtcblxuY29uc3QgQ09ORklHX1BBVEggPSBwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vLi4nLCAnX2NvbmZpZy55bWwnKTtcblxubG9nZ2VyLmluZm8oJ1ZhbGlkYXRpbmcgdGhlIGNvbmZpZ3VyYXRpb24gZmlsZScpO1xuXG5pZiAoIWZzLmV4aXN0c1N5bmMoQ09ORklHX1BBVEgpKSB7XG4gICAgY29uc3QgcmVsYXRpdmVQYXRoID0gcGF0aC5yZWxhdGl2ZShwcm9jZXNzLmN3ZCgpLCBDT05GSUdfUEFUSCk7XG4gICAgbG9nZ2VyLndhcm4oYCR7cmVsYXRpdmVQYXRofSBpcyBub3QgZm91bmQuIFdlIGFyZSBjcmVhdGluZyBvbmUgZm9yIHlvdS4uLmApO1xuICAgIGZzLndyaXRlRmlsZVN5bmMoQ09ORklHX1BBVEgsIG5ldyBDb25maWdHZW5lcmF0b3Iocm9vdFNwZWMpLmdlbmVyYXRlKCkpO1xuICAgIGxvZ2dlci5pbmZvKGAke3JlbGF0aXZlUGF0aH0gaXMgY3JlYXRlZC4gUGxlYXNlIHJlc3RhcnQgSGV4byB0byBhcHBseSBjaGFuZ2VzLmApO1xuICAgIHByb2Nlc3MuZXhpdCgwKTtcbn1cblxuY29uc3QgdmFsaWRhdG9yID0gbmV3IENvbmZpZ1ZhbGlkYXRvcihyb290U3BlYyk7XG5jb25zdCBjb25maWcgPSB5YW1sLnNhZmVMb2FkKGZzLnJlYWRGaWxlU3luYyhDT05GSUdfUEFUSCkpO1xudHJ5IHtcbiAgICB2YWxpZGF0b3IudmFsaWRhdGUoY29uZmlnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIGVycm9ycy5Db25maWdFcnJvcikge1xuICAgICAgICBsb2dnZXIuZXJyb3IoZS5tZXNzYWdlKTtcbiAgICAgICAgaWYgKGUuaGFzT3duUHJvcGVydHkoJ3NwZWMnKSkge1xuICAgICAgICAgICAgbG9nZ2VyLmVycm9yKCdUaGUgc3BlY2lmaWNhdGlvbiBvZiB0aGlzIGNvbmZpZ3VyYXRpb24gaXM6Jyk7XG4gICAgICAgICAgICBsb2dnZXIuZXJyb3IodXRpbC5pbnNwZWN0KGUuc3BlYykpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlLmhhc093blByb3BlcnR5KCdjb25maWcnKSkge1xuICAgICAgICAgICAgbG9nZ2VyLmVycm9yKCdDb25maWd1cmF0aW9uIHZhbHVlIGlzOicpO1xuICAgICAgICAgICAgbG9nZ2VyLmVycm9yKHV0aWwuaW5zcGVjdChlLmNvbmZpZykpO1xuICAgICAgICB9XG4gICAgfSBlbHNlIGlmIChlIGluc3RhbmNlb2YgZXJyb3JzLlZlcnNpb25FcnJvcikge1xuICAgICAgICBsb2dnZXIuZXJyb3IoZS5tZXNzYWdlKTtcbiAgICAgICAgbG9nZ2VyLndhcm4oYFRvIGxldCB1cyBjcmVhdGUgYSBmcmVzaCBjb25maWd1cmF0aW9uIGZpbGUgZm9yIHlvdSwgcGxlYXNlIHJlbmFtZSBvciBkZWxldGUgdGhlIGZvbGxvd2luZyBmaWxlOmApO1xuICAgICAgICBsb2dnZXIud2FybihDT05GSUdfUEFUSCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgZTtcbiAgICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "check_config.js"
      ],
      "names": [
        "fs",
        "require",
        "util",
        "path",
        "logger",
        "yaml",
        "errors",
        "rootSpec",
        "ConfigValidator",
        "ConfigGenerator",
        "CONFIG_PATH",
        "join",
        "__dirname",
        "info",
        "existsSync",
        "relativePath",
        "relative",
        "process",
        "cwd",
        "warn",
        "writeFileSync",
        "generate",
        "exit",
        "validator",
        "config",
        "safeLoad",
        "readFileSync",
        "validate",
        "e",
        "ConfigError",
        "error",
        "message",
        "hasOwnProperty",
        "inspect",
        "spec",
        "VersionError"
      ],
      "mappings": ";;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,UAAD,CAAP,EAAf;;AACA,IAAMI,IAAI,GAAGJ,OAAO,CAAC,SAAD,CAApB;;eAEmBA,OAAO,CAAC,iBAAD,C;IAAlBK,M,YAAAA,M;;AACR,IAAMC,QAAQ,GAAGN,OAAO,CAAC,sBAAD,CAAxB;;AACA,IAAMO,eAAe,GAAGP,OAAO,CAAC,2BAAD,CAA/B;;AACA,IAAMQ,eAAe,GAAGR,OAAO,CAAC,2BAAD,CAA/B;;AAEA,IAAMS,WAAW,GAAGP,IAAI,CAACQ,IAAL,CAAUC,SAAV,EAAqB,OAArB,EAA8B,aAA9B,CAApB;AAEAR,MAAM,CAACS,IAAP,CAAY,mCAAZ;;AAEA,IAAI,CAACb,EAAE,CAACc,UAAH,CAAcJ,WAAd,CAAL,EAAiC;AAC7B,MAAMK,YAAY,GAAGZ,IAAI,CAACa,QAAL,CAAcC,OAAO,CAACC,GAAR,EAAd,EAA6BR,WAA7B,CAArB;AACAN,EAAAA,MAAM,CAACe,IAAP,WAAeJ,YAAf;AACAf,EAAAA,EAAE,CAACoB,aAAH,CAAiBV,WAAjB,EAA8B,IAAID,eAAJ,CAAoBF,QAApB,EAA8Bc,QAA9B,EAA9B;AACAjB,EAAAA,MAAM,CAACS,IAAP,WAAeE,YAAf;AACAE,EAAAA,OAAO,CAACK,IAAR,CAAa,CAAb;AACH;;AAED,IAAMC,SAAS,GAAG,IAAIf,eAAJ,CAAoBD,QAApB,CAAlB;AACA,IAAMiB,MAAM,GAAGnB,IAAI,CAACoB,QAAL,CAAczB,EAAE,CAAC0B,YAAH,CAAgBhB,WAAhB,CAAd,CAAf;;AACA,IAAI;AACAa,EAAAA,SAAS,CAACI,QAAV,CAAmBH,MAAnB;AACH,CAFD,CAEE,OAAOI,CAAP,EAAU;AACR,MAAIA,CAAC,YAAYtB,MAAM,CAACuB,WAAxB,EAAqC;AACjCzB,IAAAA,MAAM,CAAC0B,KAAP,CAAaF,CAAC,CAACG,OAAf;;AACA,QAAIH,CAAC,CAACI,cAAF,CAAiB,MAAjB,CAAJ,EAA8B;AAC1B5B,MAAAA,MAAM,CAAC0B,KAAP,CAAa,6CAAb;AACA1B,MAAAA,MAAM,CAAC0B,KAAP,CAAa5B,IAAI,CAAC+B,OAAL,CAAaL,CAAC,CAACM,IAAf,CAAb;AACH;;AACD,QAAIN,CAAC,CAACI,cAAF,CAAiB,QAAjB,CAAJ,EAAgC;AAC5B5B,MAAAA,MAAM,CAAC0B,KAAP,CAAa,yBAAb;AACA1B,MAAAA,MAAM,CAAC0B,KAAP,CAAa5B,IAAI,CAAC+B,OAAL,CAAaL,CAAC,CAACJ,MAAf,CAAb;AACH;AACJ,GAVD,MAUO,IAAII,CAAC,YAAYtB,MAAM,CAAC6B,YAAxB,EAAsC;AACzC/B,IAAAA,MAAM,CAAC0B,KAAP,CAAaF,CAAC,CAACG,OAAf;AACA3B,IAAAA,MAAM,CAACe,IAAP;AACAf,IAAAA,MAAM,CAACe,IAAP,CAAYT,WAAZ;AACH,GAJM,MAIA;AACH,UAAMkB,CAAN;AACH;AACJ",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
      "sourcesContent": [
        "const fs = require('fs');\nconst util = require('util');\nconst path = require('path');\nconst logger = require('hexo-log')();\nconst yaml = require('js-yaml');\n\nconst { errors } = require('../common/utils');\nconst rootSpec = require('../specs/config.spec');\nconst ConfigValidator = require('../common/ConfigValidator');\nconst ConfigGenerator = require('../common/ConfigGenerator');\n\nconst CONFIG_PATH = path.join(__dirname, '../..', '_config.yml');\n\nlogger.info('Validating the configuration file');\n\nif (!fs.existsSync(CONFIG_PATH)) {\n    const relativePath = path.relative(process.cwd(), CONFIG_PATH);\n    logger.warn(`${relativePath} is not found. We are creating one for you...`);\n    fs.writeFileSync(CONFIG_PATH, new ConfigGenerator(rootSpec).generate());\n    logger.info(`${relativePath} is created. Please restart Hexo to apply changes.`);\n    process.exit(0);\n}\n\nconst validator = new ConfigValidator(rootSpec);\nconst config = yaml.safeLoad(fs.readFileSync(CONFIG_PATH));\ntry {\n    validator.validate(config);\n} catch (e) {\n    if (e instanceof errors.ConfigError) {\n        logger.error(e.message);\n        if (e.hasOwnProperty('spec')) {\n            logger.error('The specification of this configuration is:');\n            logger.error(util.inspect(e.spec));\n        }\n        if (e.hasOwnProperty('config')) {\n            logger.error('Configuration value is:');\n            logger.error(util.inspect(e.config));\n        }\n    } else if (e instanceof errors.VersionError) {\n        logger.error(e.message);\n        logger.warn(`To let us create a fresh configuration file for you, please rename or delete the following file:`);\n        logger.warn(CONFIG_PATH);\n    } else {\n        throw e;\n    }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525729
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/common/utils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/common/utils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/common/utils.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/common/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar doc = Symbol('@doc');\nvar type = Symbol('@type');\nvar format = Symbol('@format');\nvar required = Symbol('@required');\nvar requires = Symbol('@requires');\nvar defaultValue = Symbol('@default');\nvar descriptors = {\n  doc: doc,\n  type: type,\n  format: format,\n  requires: requires,\n  required: required,\n  defaultValue: defaultValue\n};\n\nvar is = function () {\n  return {\n    number: function number(value) {\n      return typeof value === 'number';\n    },\n    string: function string(value) {\n      return typeof value === 'string';\n    },\n    array: function array(value) {\n      return Array.isArray(value);\n    },\n    \"boolean\": function boolean(value) {\n      return typeof value === 'boolean';\n    },\n    object: function object(value) {\n      return _typeof(value) === 'object' && value.constructor == Object;\n    },\n    \"function\": function _function(value) {\n      return typeof value === 'function';\n    },\n    regexp: function regexp(value) {\n      return value instanceof RegExp;\n    },\n    undefined: function undefined(value) {\n      return typeof value === 'undefined';\n    },\n    \"null\": function _null(value) {\n      return value === null;\n    },\n    spec: function spec(value) {\n      if (!value.hasOwnProperty(type)) {\n        return false;\n      }\n\n      if (!is.string(value[type]) && !is.array(value[type])) {\n        return false;\n      }\n\n      if (value.hasOwnProperty(doc) && !is.string(value[doc])) {\n        return false;\n      }\n\n      if (value.hasOwnProperty(required) && !is[\"boolean\"](value[required])) {\n        return false;\n      }\n\n      if (value.hasOwnProperty(requires) && !is[\"function\"](value[requires])) {\n        return false;\n      }\n\n      if (value.hasOwnProperty(format) && !is.regexp(value[format])) {\n        return false;\n      }\n\n      return true;\n    }\n  };\n}();\n\nvar ConfigError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(ConfigError, _Error);\n\n  function ConfigError(spec, path) {\n    var _this;\n\n    _classCallCheck(this, ConfigError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConfigError).call(this));\n    _this.spec = spec;\n    _this.path = path;\n    return _this;\n  }\n\n  return ConfigError;\n}(_wrapNativeSuper(Error));\n\nvar InvalidSpecError =\n/*#__PURE__*/\nfunction (_ConfigError) {\n  _inherits(InvalidSpecError, _ConfigError);\n\n  function InvalidSpecError(spec, path) {\n    var _this2;\n\n    _classCallCheck(this, InvalidSpecError);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(InvalidSpecError).call(this, spec, path));\n    _this2.message = \"The specification '\".concat(path.join('.'), \"' is invalid.\");\n    return _this2;\n  }\n\n  return InvalidSpecError;\n}(ConfigError);\n\nvar MissingRequiredError =\n/*#__PURE__*/\nfunction (_ConfigError2) {\n  _inherits(MissingRequiredError, _ConfigError2);\n\n  function MissingRequiredError(spec, path) {\n    var _this3;\n\n    _classCallCheck(this, MissingRequiredError);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(MissingRequiredError).call(this, spec, path));\n    _this3.message = \"Configuration file do not have the required '\".concat(path.join('.'), \"' field.\");\n    return _this3;\n  }\n\n  return MissingRequiredError;\n}(ConfigError);\n\nvar TypeMismatchError =\n/*#__PURE__*/\nfunction (_ConfigError3) {\n  _inherits(TypeMismatchError, _ConfigError3);\n\n  function TypeMismatchError(spec, path, config) {\n    var _this4;\n\n    _classCallCheck(this, TypeMismatchError);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(TypeMismatchError).call(this, spec, path));\n    _this4.config = config;\n    _this4.message = \"Configuration '\".concat(path.join('.'), \"' is not one of the '\").concat(spec[type], \"' type.\");\n    return _this4;\n  }\n\n  return TypeMismatchError;\n}(ConfigError);\n\nvar FormatMismatchError =\n/*#__PURE__*/\nfunction (_ConfigError4) {\n  _inherits(FormatMismatchError, _ConfigError4);\n\n  function FormatMismatchError(spec, path, config) {\n    var _this5;\n\n    _classCallCheck(this, FormatMismatchError);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(FormatMismatchError).call(this, spec, path));\n    _this5.config = config;\n    _this5.message = \"Configuration '\".concat(path.join('.'), \"' do not match the format '\").concat(spec[format], \"'.\");\n    return _this5;\n  }\n\n  return FormatMismatchError;\n}(ConfigError);\n\nvar VersionError =\n/*#__PURE__*/\nfunction (_Error2) {\n  _inherits(VersionError, _Error2);\n\n  function VersionError() {\n    _classCallCheck(this, VersionError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(VersionError).apply(this, arguments));\n  }\n\n  return VersionError;\n}(_wrapNativeSuper(Error));\n\nvar VersionNotFoundError =\n/*#__PURE__*/\nfunction (_VersionError) {\n  _inherits(VersionNotFoundError, _VersionError);\n\n  function VersionNotFoundError() {\n    _classCallCheck(this, VersionNotFoundError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(VersionNotFoundError).call(this, \"Version number is not found in the configuration file.\"));\n  }\n\n  return VersionNotFoundError;\n}(VersionError);\n\nvar VersionMalformedError =\n/*#__PURE__*/\nfunction (_VersionError2) {\n  _inherits(VersionMalformedError, _VersionError2);\n\n  function VersionMalformedError(version) {\n    var _this6;\n\n    _classCallCheck(this, VersionMalformedError);\n\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(VersionMalformedError).call(this, \"Version number \".concat(version, \" is malformed.\")));\n    _this6.version = version;\n    return _this6;\n  }\n\n  return VersionMalformedError;\n}(VersionError);\n\nvar VersionMismatchError =\n/*#__PURE__*/\nfunction (_VersionError3) {\n  _inherits(VersionMismatchError, _VersionError3);\n\n  function VersionMismatchError(specVersion, configVersion, isConfigVersionSmaller) {\n    var _this7;\n\n    _classCallCheck(this, VersionMismatchError);\n\n    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(VersionMismatchError).call(this));\n    _this7.specVersion = specVersion;\n    _this7.configVersion = configVersion;\n\n    if (isConfigVersionSmaller) {\n      _this7.message = \"The configuration version \".concat(configVersion, \" is far behind the specification version \").concat(specVersion, \".\");\n    } else {\n      _this7.message = \"The configuration version \".concat(configVersion, \" is way ahead of the specification version \").concat(specVersion, \".\");\n    }\n\n    return _this7;\n  }\n\n  return VersionMismatchError;\n}(VersionError);\n\nvar errors = {\n  ConfigError: ConfigError,\n  InvalidSpecError: InvalidSpecError,\n  MissingRequiredError: MissingRequiredError,\n  TypeMismatchError: TypeMismatchError,\n  FormatMismatchError: FormatMismatchError,\n  VersionError: VersionError,\n  VersionMalformedError: VersionMalformedError,\n  VersionNotFoundError: VersionNotFoundError,\n  VersionMismatchError: VersionMismatchError\n};\nmodule.exports = {\n  is: is,\n  descriptors: descriptors,\n  errors: errors\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "doc",
        "Symbol",
        "type",
        "format",
        "required",
        "requires",
        "defaultValue",
        "descriptors",
        "is",
        "number",
        "value",
        "string",
        "array",
        "Array",
        "isArray",
        "object",
        "constructor",
        "Object",
        "regexp",
        "RegExp",
        "undefined",
        "spec",
        "hasOwnProperty",
        "ConfigError",
        "path",
        "Error",
        "InvalidSpecError",
        "message",
        "join",
        "MissingRequiredError",
        "TypeMismatchError",
        "config",
        "FormatMismatchError",
        "VersionError",
        "VersionNotFoundError",
        "VersionMalformedError",
        "version",
        "VersionMismatchError",
        "specVersion",
        "configVersion",
        "isConfigVersionSmaller",
        "errors",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,GAAG,GAAGC,MAAM,CAAC,MAAD,CAAlB;AACA,IAAMC,IAAI,GAAGD,MAAM,CAAC,OAAD,CAAnB;AACA,IAAME,MAAM,GAAGF,MAAM,CAAC,SAAD,CAArB;AACA,IAAMG,QAAQ,GAAGH,MAAM,CAAC,WAAD,CAAvB;AACA,IAAMI,QAAQ,GAAGJ,MAAM,CAAC,WAAD,CAAvB;AACA,IAAMK,YAAY,GAAGL,MAAM,CAAC,UAAD,CAA3B;AAEA,IAAMM,WAAW,GAAG;AAChBP,EAAAA,GAAG,EAAHA,GADgB;AAEhBE,EAAAA,IAAI,EAAJA,IAFgB;AAGhBC,EAAAA,MAAM,EAANA,MAHgB;AAIhBE,EAAAA,QAAQ,EAARA,QAJgB;AAKhBD,EAAAA,QAAQ,EAARA,QALgB;AAMhBE,EAAAA,YAAY,EAAZA;AANgB,CAApB;;AASA,IAAME,EAAE,GAAI;AAAA,SAAO;AACfC,IAAAA,MADe,kBACRC,KADQ,EACD;AACV,aAAO,OAAQA,KAAR,KAAmB,QAA1B;AACH,KAHc;AAIfC,IAAAA,MAJe,kBAIRD,KAJQ,EAID;AACV,aAAO,OAAQA,KAAR,KAAmB,QAA1B;AACH,KANc;AAOfE,IAAAA,KAPe,iBAOTF,KAPS,EAOF;AACT,aAAOG,KAAK,CAACC,OAAN,CAAcJ,KAAd,CAAP;AACH,KATc;AAAA,gCAUPA,KAVO,EAUA;AACX,aAAO,OAAQA,KAAR,KAAmB,SAA1B;AACH,KAZc;AAafK,IAAAA,MAbe,kBAaRL,KAbQ,EAaD;AACV,aAAO,QAAQA,KAAR,MAAmB,QAAnB,IAA+BA,KAAK,CAACM,WAAN,IAAqBC,MAA3D;AACH,KAfc;AAAA,mCAgBNP,KAhBM,EAgBC;AACZ,aAAO,OAAQA,KAAR,KAAmB,UAA1B;AACH,KAlBc;AAmBfQ,IAAAA,MAnBe,kBAmBRR,KAnBQ,EAmBD;AACV,aAAOA,KAAK,YAAYS,MAAxB;AACH,KArBc;AAsBfC,IAAAA,SAtBe,qBAsBLV,KAtBK,EAsBE;AACb,aAAO,OAAQA,KAAR,KAAmB,WAA1B;AACH,KAxBc;AAAA,2BAyBVA,KAzBU,EAyBH;AACR,aAAOA,KAAK,KAAK,IAAjB;AACH,KA3Bc;AA4BfW,IAAAA,IA5Be,gBA4BVX,KA5BU,EA4BH;AACR,UAAI,CAACA,KAAK,CAACY,cAAN,CAAqBpB,IAArB,CAAL,EAAiC;AAC7B,eAAO,KAAP;AACH;;AACD,UAAI,CAACM,EAAE,CAACG,MAAH,CAAUD,KAAK,CAACR,IAAD,CAAf,CAAD,IAA2B,CAACM,EAAE,CAACI,KAAH,CAASF,KAAK,CAACR,IAAD,CAAd,CAAhC,EAAuD;AACnD,eAAO,KAAP;AACH;;AACD,UAAIQ,KAAK,CAACY,cAAN,CAAqBtB,GAArB,KAA6B,CAACQ,EAAE,CAACG,MAAH,CAAUD,KAAK,CAACV,GAAD,CAAf,CAAlC,EAAyD;AACrD,eAAO,KAAP;AACH;;AACD,UAAIU,KAAK,CAACY,cAAN,CAAqBlB,QAArB,KAAkC,CAACI,EAAE,WAAF,CAAWE,KAAK,CAACN,QAAD,CAAhB,CAAvC,EAAoE;AAChE,eAAO,KAAP;AACH;;AACD,UAAIM,KAAK,CAACY,cAAN,CAAqBjB,QAArB,KAAkC,CAACG,EAAE,YAAF,CAAYE,KAAK,CAACL,QAAD,CAAjB,CAAvC,EAAqE;AACjE,eAAO,KAAP;AACH;;AACD,UAAIK,KAAK,CAACY,cAAN,CAAqBnB,MAArB,KAAgC,CAACK,EAAE,CAACU,MAAH,CAAUR,KAAK,CAACP,MAAD,CAAf,CAArC,EAA+D;AAC3D,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH;AAhDc,GAAP;AAAA,CAAD,EAAX;;IAmDMoB,W;;;;;AACF,uBAAYF,IAAZ,EAAkBG,IAAlB,EAAwB;AAAA;;AAAA;;AACpB;AACA,UAAKH,IAAL,GAAYA,IAAZ;AACA,UAAKG,IAAL,GAAYA,IAAZ;AAHoB;AAIvB;;;mBALqBC,K;;IAQpBC,gB;;;;;AACF,4BAAYL,IAAZ,EAAkBG,IAAlB,EAAwB;AAAA;;AAAA;;AACpB,2FAAMH,IAAN,EAAYG,IAAZ;AACA,WAAKG,OAAL,gCAAqCH,IAAI,CAACI,IAAL,CAAU,GAAV,CAArC;AAFoB;AAGvB;;;EAJ0BL,W;;IAOzBM,oB;;;;;AACF,gCAAYR,IAAZ,EAAkBG,IAAlB,EAAwB;AAAA;;AAAA;;AACpB,+FAAMH,IAAN,EAAYG,IAAZ;AACA,WAAKG,OAAL,0DAA+DH,IAAI,CAACI,IAAL,CAAU,GAAV,CAA/D;AAFoB;AAGvB;;;EAJ8BL,W;;IAO7BO,iB;;;;;AACF,6BAAYT,IAAZ,EAAkBG,IAAlB,EAAwBO,MAAxB,EAAgC;AAAA;;AAAA;;AAC5B,4FAAMV,IAAN,EAAYG,IAAZ;AACA,WAAKO,MAAL,GAAcA,MAAd;AACA,WAAKJ,OAAL,4BAAiCH,IAAI,CAACI,IAAL,CAAU,GAAV,CAAjC,kCAAuEP,IAAI,CAACnB,IAAD,CAA3E;AAH4B;AAI/B;;;EAL2BqB,W;;IAQ1BS,mB;;;;;AACF,+BAAYX,IAAZ,EAAkBG,IAAlB,EAAwBO,MAAxB,EAAgC;AAAA;;AAAA;;AAC5B,8FAAMV,IAAN,EAAYG,IAAZ;AACA,WAAKO,MAAL,GAAcA,MAAd;AACA,WAAKJ,OAAL,4BAAiCH,IAAI,CAACI,IAAL,CAAU,GAAV,CAAjC,wCAA6EP,IAAI,CAAClB,MAAD,CAAjF;AAH4B;AAI/B;;;EAL6BoB,W;;IAQ5BU,Y;;;;;;;;;;;;mBAAqBR,K;;IAGrBS,oB;;;;;AACF,kCAAc;AAAA;;AAAA;AAEb;;;EAH8BD,Y;;IAM7BE,qB;;;;;AACF,iCAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACjB,yHAAwBA,OAAxB;AACA,WAAKA,OAAL,GAAeA,OAAf;AAFiB;AAGpB;;;EAJ+BH,Y;;IAO9BI,oB;;;;;AACF,gCAAYC,WAAZ,EAAyBC,aAAzB,EAAwCC,sBAAxC,EAAgE;AAAA;;AAAA;;AAC5D;AACA,WAAKF,WAAL,GAAmBA,WAAnB;AACA,WAAKC,aAAL,GAAqBA,aAArB;;AACA,QAAIC,sBAAJ,EAA4B;AACxB,aAAKb,OAAL,uCAA4CY,aAA5C,sDAAqGD,WAArG;AACH,KAFD,MAEO;AACH,aAAKX,OAAL,uCAA4CY,aAA5C,wDAAuGD,WAAvG;AACH;;AAR2D;AAS/D;;;EAV8BL,Y;;AAanC,IAAMQ,MAAM,GAAG;AACXlB,EAAAA,WAAW,EAAXA,WADW;AAEXG,EAAAA,gBAAgB,EAAhBA,gBAFW;AAGXG,EAAAA,oBAAoB,EAApBA,oBAHW;AAIXC,EAAAA,iBAAiB,EAAjBA,iBAJW;AAKXE,EAAAA,mBAAmB,EAAnBA,mBALW;AAMXC,EAAAA,YAAY,EAAZA,YANW;AAOXE,EAAAA,qBAAqB,EAArBA,qBAPW;AAQXD,EAAAA,oBAAoB,EAApBA,oBARW;AASXG,EAAAA,oBAAoB,EAApBA;AATW,CAAf;AAYAK,MAAM,CAACC,OAAP,GAAiB;AACbnC,EAAAA,EAAE,EAAFA,EADa;AAEbD,EAAAA,WAAW,EAAXA,WAFa;AAGbkC,EAAAA,MAAM,EAANA;AAHa,CAAjB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
      "sourcesContent": [
        "const doc = Symbol('@doc');\nconst type = Symbol('@type');\nconst format = Symbol('@format');\nconst required = Symbol('@required');\nconst requires = Symbol('@requires');\nconst defaultValue = Symbol('@default');\n\nconst descriptors = {\n    doc,\n    type,\n    format,\n    requires,\n    required,\n    defaultValue\n};\n\nconst is = (() => ({\n    number(value) {\n        return typeof (value) === 'number';\n    },\n    string(value) {\n        return typeof (value) === 'string';\n    },\n    array(value) {\n        return Array.isArray(value);\n    },\n    boolean(value) {\n        return typeof (value) === 'boolean';\n    },\n    object(value) {\n        return typeof (value) === 'object' && value.constructor == Object;\n    },\n    function(value) {\n        return typeof (value) === 'function';\n    },\n    regexp(value) {\n        return value instanceof RegExp;\n    },\n    undefined(value) {\n        return typeof (value) === 'undefined';\n    },\n    null(value) {\n        return value === null;\n    },\n    spec(value) {\n        if (!value.hasOwnProperty(type)) {\n            return false;\n        }\n        if (!is.string(value[type]) && !is.array(value[type])) {\n            return false;\n        }\n        if (value.hasOwnProperty(doc) && !is.string(value[doc])) {\n            return false;\n        }\n        if (value.hasOwnProperty(required) && !is.boolean(value[required])) {\n            return false;\n        }\n        if (value.hasOwnProperty(requires) && !is.function(value[requires])) {\n            return false;\n        }\n        if (value.hasOwnProperty(format) && !is.regexp(value[format])) {\n            return false;\n        }\n        return true;\n    }\n}))();\n\nclass ConfigError extends Error {\n    constructor(spec, path) {\n        super();\n        this.spec = spec;\n        this.path = path;\n    }\n}\n\nclass InvalidSpecError extends ConfigError {\n    constructor(spec, path) {\n        super(spec, path);\n        this.message = `The specification '${path.join('.')}' is invalid.`;\n    }\n}\n\nclass MissingRequiredError extends ConfigError {\n    constructor(spec, path) {\n        super(spec, path);\n        this.message = `Configuration file do not have the required '${path.join('.')}' field.`;\n    }\n}\n\nclass TypeMismatchError extends ConfigError {\n    constructor(spec, path, config) {\n        super(spec, path);\n        this.config = config;\n        this.message = `Configuration '${path.join('.')}' is not one of the '${spec[type]}' type.`;\n    }\n}\n\nclass FormatMismatchError extends ConfigError {\n    constructor(spec, path, config) {\n        super(spec, path);\n        this.config = config;\n        this.message = `Configuration '${path.join('.')}' do not match the format '${spec[format]}'.`;\n    }\n}\n\nclass VersionError extends Error {\n}\n\nclass VersionNotFoundError extends VersionError {\n    constructor() {\n        super(`Version number is not found in the configuration file.`);\n    }\n}\n\nclass VersionMalformedError extends VersionError {\n    constructor(version) {\n        super(`Version number ${version} is malformed.`);\n        this.version = version;\n    }\n}\n\nclass VersionMismatchError extends VersionError {\n    constructor(specVersion, configVersion, isConfigVersionSmaller) {\n        super();\n        this.specVersion = specVersion;\n        this.configVersion = configVersion;\n        if (isConfigVersionSmaller) {\n            this.message = `The configuration version ${configVersion} is far behind the specification version ${specVersion}.`;\n        } else {\n            this.message = `The configuration version ${configVersion} is way ahead of the specification version ${specVersion}.`;\n        }\n    }\n}\n\nconst errors = {\n    ConfigError,\n    InvalidSpecError,\n    MissingRequiredError,\n    TypeMismatchError,\n    FormatMismatchError,\n    VersionError,\n    VersionMalformedError,\n    VersionNotFoundError,\n    VersionMismatchError\n}\n\nmodule.exports = {\n    is,\n    descriptors,\n    errors\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525709
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/config.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/config.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/config.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/config.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "config.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _version, _objectSpread2;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require = require('../../package.json'),\n    version = _require.version;\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    type = _require$descriptors.type,\n    required = _require$descriptors.required,\n    defaultValue = _require$descriptors.defaultValue,\n    doc = _require$descriptors.doc;\n\nmodule.exports = _objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, type, 'object'), _defineProperty(_objectSpread2, doc, 'Root of the configuration file'), _defineProperty(_objectSpread2, required, true), _defineProperty(_objectSpread2, \"version\", (_version = {}, _defineProperty(_version, type, 'string'), _defineProperty(_version, doc, 'Version of the Icarus theme that is currently used'), _defineProperty(_version, required, true), _defineProperty(_version, defaultValue, version), _version)), _objectSpread2), require('./meta.spec'), {\n  navbar: require('./navbar.spec'),\n  footer: require('./footer.spec'),\n  article: require('./article.spec'),\n  search: require('./search.spec'),\n  comment: require('./comment.spec'),\n  donate: require('./donate.spec'),\n  share: require('./share.spec'),\n  sidebar: require('./sidebar.spec'),\n  widgets: require('./widgets.spec'),\n  plugins: require('./plugins.spec'),\n  providers: require('./providers.spec')\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5zcGVjLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJ2ZXJzaW9uIiwiZGVzY3JpcHRvcnMiLCJ0eXBlIiwicmVxdWlyZWQiLCJkZWZhdWx0VmFsdWUiLCJkb2MiLCJtb2R1bGUiLCJleHBvcnRzIiwibmF2YmFyIiwiZm9vdGVyIiwiYXJ0aWNsZSIsInNlYXJjaCIsImNvbW1lbnQiLCJkb25hdGUiLCJzaGFyZSIsInNpZGViYXIiLCJ3aWRnZXRzIiwicGx1Z2lucyIsInByb3ZpZGVycyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztlQUFvQkEsT0FBTyxDQUFDLG9CQUFELEM7SUFBbkJDLE8sWUFBQUEsTzs7MkJBQ3NDRCxPQUFPLENBQUMsaUJBQUQsQ0FBUCxDQUEyQkUsVztJQUFqRUMsSSx3QkFBQUEsSTtJQUFNQyxRLHdCQUFBQSxRO0lBQVVDLFksd0JBQUFBLFk7SUFBY0MsRyx3QkFBQUEsRzs7QUFFdENDLE1BQU0sQ0FBQ0MsT0FBUCx1RUFDS0wsSUFETCxFQUNZLFFBRFosbUNBRUtHLEdBRkwsRUFFVyxnQ0FGWCxtQ0FHS0YsUUFITCxFQUdnQixJQUhoQix3RkFLU0QsSUFMVCxFQUtnQixRQUxoQiw2QkFNU0csR0FOVCxFQU1lLG9EQU5mLDZCQU9TRixRQVBULEVBT29CLElBUHBCLDZCQVFTQyxZQVJULEVBUXdCSixPQVJ4QixnQ0FVT0QsT0FBTyxDQUFDLGFBQUQsQ0FWZDtBQVdJUyxFQUFBQSxNQUFNLEVBQUVULE9BQU8sQ0FBQyxlQUFELENBWG5CO0FBWUlVLEVBQUFBLE1BQU0sRUFBRVYsT0FBTyxDQUFDLGVBQUQsQ0FabkI7QUFhSVcsRUFBQUEsT0FBTyxFQUFFWCxPQUFPLENBQUMsZ0JBQUQsQ0FicEI7QUFjSVksRUFBQUEsTUFBTSxFQUFFWixPQUFPLENBQUMsZUFBRCxDQWRuQjtBQWVJYSxFQUFBQSxPQUFPLEVBQUViLE9BQU8sQ0FBQyxnQkFBRCxDQWZwQjtBQWdCSWMsRUFBQUEsTUFBTSxFQUFFZCxPQUFPLENBQUMsZUFBRCxDQWhCbkI7QUFpQkllLEVBQUFBLEtBQUssRUFBRWYsT0FBTyxDQUFDLGNBQUQsQ0FqQmxCO0FBa0JJZ0IsRUFBQUEsT0FBTyxFQUFFaEIsT0FBTyxDQUFDLGdCQUFELENBbEJwQjtBQW1CSWlCLEVBQUFBLE9BQU8sRUFBRWpCLE9BQU8sQ0FBQyxnQkFBRCxDQW5CcEI7QUFvQklrQixFQUFBQSxPQUFPLEVBQUVsQixPQUFPLENBQUMsZ0JBQUQsQ0FwQnBCO0FBcUJJbUIsRUFBQUEsU0FBUyxFQUFFbkIsT0FBTyxDQUFDLGtCQUFEO0FBckJ0QiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvc3BlY3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IHZlcnNpb24gfSA9IHJlcXVpcmUoJy4uLy4uL3BhY2thZ2UuanNvbicpO1xuY29uc3QgeyB0eXBlLCByZXF1aXJlZCwgZGVmYXVsdFZhbHVlLCBkb2MgfSA9IHJlcXVpcmUoJy4uL2NvbW1vbi91dGlscycpLmRlc2NyaXB0b3JzO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBbdHlwZV06ICdvYmplY3QnLFxuICAgIFtkb2NdOiAnUm9vdCBvZiB0aGUgY29uZmlndXJhdGlvbiBmaWxlJyxcbiAgICBbcmVxdWlyZWRdOiB0cnVlLFxuICAgIHZlcnNpb246IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdWZXJzaW9uIG9mIHRoZSBJY2FydXMgdGhlbWUgdGhhdCBpcyBjdXJyZW50bHkgdXNlZCcsXG4gICAgICAgIFtyZXF1aXJlZF06IHRydWUsXG4gICAgICAgIFtkZWZhdWx0VmFsdWVdOiB2ZXJzaW9uXG4gICAgfSxcbiAgICAuLi5yZXF1aXJlKCcuL21ldGEuc3BlYycpLFxuICAgIG5hdmJhcjogcmVxdWlyZSgnLi9uYXZiYXIuc3BlYycpLFxuICAgIGZvb3RlcjogcmVxdWlyZSgnLi9mb290ZXIuc3BlYycpLFxuICAgIGFydGljbGU6IHJlcXVpcmUoJy4vYXJ0aWNsZS5zcGVjJyksXG4gICAgc2VhcmNoOiByZXF1aXJlKCcuL3NlYXJjaC5zcGVjJyksXG4gICAgY29tbWVudDogcmVxdWlyZSgnLi9jb21tZW50LnNwZWMnKSxcbiAgICBkb25hdGU6IHJlcXVpcmUoJy4vZG9uYXRlLnNwZWMnKSxcbiAgICBzaGFyZTogcmVxdWlyZSgnLi9zaGFyZS5zcGVjJyksXG4gICAgc2lkZWJhcjogcmVxdWlyZSgnLi9zaWRlYmFyLnNwZWMnKSxcbiAgICB3aWRnZXRzOiByZXF1aXJlKCcuL3dpZGdldHMuc3BlYycpLFxuICAgIHBsdWdpbnM6IHJlcXVpcmUoJy4vcGx1Z2lucy5zcGVjJyksXG4gICAgcHJvdmlkZXJzOiByZXF1aXJlKCcuL3Byb3ZpZGVycy5zcGVjJylcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "config.spec.js"
      ],
      "names": [
        "require",
        "version",
        "descriptors",
        "type",
        "required",
        "defaultValue",
        "doc",
        "module",
        "exports",
        "navbar",
        "footer",
        "article",
        "search",
        "comment",
        "donate",
        "share",
        "sidebar",
        "widgets",
        "plugins",
        "providers"
      ],
      "mappings": ";;;;;;;;;;eAAoBA,OAAO,CAAC,oBAAD,C;IAAnBC,O,YAAAA,O;;2BACsCD,OAAO,CAAC,iBAAD,CAAP,CAA2BE,W;IAAjEC,I,wBAAAA,I;IAAMC,Q,wBAAAA,Q;IAAUC,Y,wBAAAA,Y;IAAcC,G,wBAAAA,G;;AAEtCC,MAAM,CAACC,OAAP,uEACKL,IADL,EACY,QADZ,mCAEKG,GAFL,EAEW,gCAFX,mCAGKF,QAHL,EAGgB,IAHhB,wFAKSD,IALT,EAKgB,QALhB,6BAMSG,GANT,EAMe,oDANf,6BAOSF,QAPT,EAOoB,IAPpB,6BAQSC,YART,EAQwBJ,OARxB,gCAUOD,OAAO,CAAC,aAAD,CAVd;AAWIS,EAAAA,MAAM,EAAET,OAAO,CAAC,eAAD,CAXnB;AAYIU,EAAAA,MAAM,EAAEV,OAAO,CAAC,eAAD,CAZnB;AAaIW,EAAAA,OAAO,EAAEX,OAAO,CAAC,gBAAD,CAbpB;AAcIY,EAAAA,MAAM,EAAEZ,OAAO,CAAC,eAAD,CAdnB;AAeIa,EAAAA,OAAO,EAAEb,OAAO,CAAC,gBAAD,CAfpB;AAgBIc,EAAAA,MAAM,EAAEd,OAAO,CAAC,eAAD,CAhBnB;AAiBIe,EAAAA,KAAK,EAAEf,OAAO,CAAC,cAAD,CAjBlB;AAkBIgB,EAAAA,OAAO,EAAEhB,OAAO,CAAC,gBAAD,CAlBpB;AAmBIiB,EAAAA,OAAO,EAAEjB,OAAO,CAAC,gBAAD,CAnBpB;AAoBIkB,EAAAA,OAAO,EAAElB,OAAO,CAAC,gBAAD,CApBpB;AAqBImB,EAAAA,SAAS,EAAEnB,OAAO,CAAC,kBAAD;AArBtB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { version } = require('../../package.json');\nconst { type, required, defaultValue, doc } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Root of the configuration file',\n    [required]: true,\n    version: {\n        [type]: 'string',\n        [doc]: 'Version of the Icarus theme that is currently used',\n        [required]: true,\n        [defaultValue]: version\n    },\n    ...require('./meta.spec'),\n    navbar: require('./navbar.spec'),\n    footer: require('./footer.spec'),\n    article: require('./article.spec'),\n    search: require('./search.spec'),\n    comment: require('./comment.spec'),\n    donate: require('./donate.spec'),\n    share: require('./share.spec'),\n    sidebar: require('./sidebar.spec'),\n    widgets: require('./widgets.spec'),\n    plugins: require('./plugins.spec'),\n    providers: require('./providers.spec')\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525717
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/meta.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/meta.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/meta.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/meta.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "meta.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _favicon, _, _meta, _rss, _text, _logo, _fb_app_id, _fb_admins, _twitter_id, _twitter_site, _google_plus, _open_graph;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue;\n\nmodule.exports = {\n  favicon: (_favicon = {}, _defineProperty(_favicon, type, 'string'), _defineProperty(_favicon, doc, 'Path or URL to the website\\'s icon'), _defineProperty(_favicon, defaultValue, '/images/favicon.svg'), _favicon),\n  meta: (_meta = {}, _defineProperty(_meta, type, 'array'), _defineProperty(_meta, doc, 'Additional HTML meta tags in an array.'), _defineProperty(_meta, defaultValue, null), _defineProperty(_meta, '*', (_ = {}, _defineProperty(_, type, 'string'), _defineProperty(_, doc, 'Meta tag specified in <attribute>=<value> style.\\nE.g., name=theme-color;content=#123456 => <meta name=\"theme-color\" content=\"#123456\">'), _)), _meta),\n  rss: (_rss = {}, _defineProperty(_rss, type, 'string'), _defineProperty(_rss, doc, 'Path or URL to RSS atom.xml'), _defineProperty(_rss, defaultValue, null), _rss),\n  logo: (_logo = {}, _defineProperty(_logo, type, ['string', 'object']), _defineProperty(_logo, defaultValue, '/images/logo.svg'), _defineProperty(_logo, doc, 'Path or URL to the website\\'s logo to be shown on the left of the navigation bar or footer'), _defineProperty(_logo, \"text\", (_text = {}, _defineProperty(_text, type, 'string'), _defineProperty(_text, doc, 'Text to be shown in place of the logo image'), _text)), _logo),\n  open_graph: (_open_graph = {}, _defineProperty(_open_graph, type, 'object'), _defineProperty(_open_graph, doc, 'Open Graph metadata\\nhttps://hexo.io/docs/helpers.html#open-graph'), _defineProperty(_open_graph, \"fb_app_id\", (_fb_app_id = {}, _defineProperty(_fb_app_id, type, 'string'), _defineProperty(_fb_app_id, doc, 'Facebook App ID'), _defineProperty(_fb_app_id, defaultValue, null), _fb_app_id)), _defineProperty(_open_graph, \"fb_admins\", (_fb_admins = {}, _defineProperty(_fb_admins, type, 'string'), _defineProperty(_fb_admins, doc, 'Facebook Admin ID'), _defineProperty(_fb_admins, defaultValue, null), _fb_admins)), _defineProperty(_open_graph, \"twitter_id\", (_twitter_id = {}, _defineProperty(_twitter_id, type, 'string'), _defineProperty(_twitter_id, doc, 'Twitter ID'), _defineProperty(_twitter_id, defaultValue, null), _twitter_id)), _defineProperty(_open_graph, \"twitter_site\", (_twitter_site = {}, _defineProperty(_twitter_site, type, 'string'), _defineProperty(_twitter_site, doc, 'Twitter site'), _defineProperty(_twitter_site, defaultValue, null), _twitter_site)), _defineProperty(_open_graph, \"google_plus\", (_google_plus = {}, _defineProperty(_google_plus, type, 'string'), _defineProperty(_google_plus, doc, 'Google+ profile link'), _defineProperty(_google_plus, defaultValue, null), _google_plus)), _open_graph)\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ldGEuc3BlYy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiZGVzY3JpcHRvcnMiLCJkb2MiLCJ0eXBlIiwiZGVmYXVsdFZhbHVlIiwibW9kdWxlIiwiZXhwb3J0cyIsImZhdmljb24iLCJtZXRhIiwicnNzIiwibG9nbyIsIm9wZW5fZ3JhcGgiXSwibWFwcGluZ3MiOiI7Ozs7OzsyQkFBb0NBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCQyxXO0lBQXZEQyxHLHdCQUFBQSxHO0lBQUtDLEksd0JBQUFBLEk7SUFBTUMsWSx3QkFBQUEsWTs7QUFFbkJDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxPQUFPLDRDQUNGSixJQURFLEVBQ0ssUUFETCw2QkFFRkQsR0FGRSxFQUVJLG9DQUZKLDZCQUdGRSxZQUhFLEVBR2EscUJBSGIsWUFETTtBQU1iSSxFQUFBQSxJQUFJLHNDQUNDTCxJQURELEVBQ1EsT0FEUiwwQkFFQ0QsR0FGRCxFQUVPLHdDQUZQLDBCQUdDRSxZQUhELEVBR2dCLElBSGhCLDBCQUlBLEdBSkEsOEJBS0tELElBTEwsRUFLWSxRQUxaLHNCQU1LRCxHQU5MLEVBTVcseUlBTlgsY0FOUztBQWViTyxFQUFBQSxHQUFHLG9DQUNFTixJQURGLEVBQ1MsUUFEVCx5QkFFRUQsR0FGRixFQUVRLDZCQUZSLHlCQUdFRSxZQUhGLEVBR2lCLElBSGpCLFFBZlU7QUFvQmJNLEVBQUFBLElBQUksc0NBQ0NQLElBREQsRUFDUSxDQUFDLFFBQUQsRUFBVyxRQUFYLENBRFIsMEJBRUNDLFlBRkQsRUFFZ0Isa0JBRmhCLDBCQUdDRixHQUhELEVBR08sNEZBSFAsc0VBS0tDLElBTEwsRUFLWSxRQUxaLDBCQU1LRCxHQU5MLEVBTVcsNkNBTlgsa0JBcEJTO0FBNkJiUyxFQUFBQSxVQUFVLGtEQUNMUixJQURLLEVBQ0UsUUFERixnQ0FFTEQsR0FGSyxFQUVDLG1FQUZELDJGQUlEQyxJQUpDLEVBSU0sUUFKTiwrQkFLREQsR0FMQyxFQUtLLGlCQUxMLCtCQU1ERSxZQU5DLEVBTWMsSUFOZCx5R0FTREQsSUFUQyxFQVNNLFFBVE4sK0JBVURELEdBVkMsRUFVSyxtQkFWTCwrQkFXREUsWUFYQyxFQVdjLElBWGQsNEdBY0RELElBZEMsRUFjTSxRQWROLGdDQWVERCxHQWZDLEVBZUssWUFmTCxnQ0FnQkRFLFlBaEJDLEVBZ0JjLElBaEJkLG1IQW1CREQsSUFuQkMsRUFtQk0sUUFuQk4sa0NBb0JERCxHQXBCQyxFQW9CSyxjQXBCTCxrQ0FxQkRFLFlBckJDLEVBcUJjLElBckJkLGtIQXdCREQsSUF4QkMsRUF3Qk0sUUF4Qk4saUNBeUJERCxHQXpCQyxFQXlCSyxzQkF6QkwsaUNBMEJERSxZQTFCQyxFQTBCYyxJQTFCZDtBQTdCRyxDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvc3BlY3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGRvYywgdHlwZSwgZGVmYXVsdFZhbHVlIH0gPSByZXF1aXJlKCcuLi9jb21tb24vdXRpbHMnKS5kZXNjcmlwdG9ycztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZmF2aWNvbjoge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ1BhdGggb3IgVVJMIHRvIHRoZSB3ZWJzaXRlXFwncyBpY29uJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06ICcvaW1hZ2VzL2Zhdmljb24uc3ZnJyxcbiAgICB9LFxuICAgIG1ldGE6IHtcbiAgICAgICAgW3R5cGVdOiAnYXJyYXknLFxuICAgICAgICBbZG9jXTogJ0FkZGl0aW9uYWwgSFRNTCBtZXRhIHRhZ3MgaW4gYW4gYXJyYXkuJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IG51bGwsXG4gICAgICAgICcqJzoge1xuICAgICAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgICAgIFtkb2NdOiAnTWV0YSB0YWcgc3BlY2lmaWVkIGluIDxhdHRyaWJ1dGU+PTx2YWx1ZT4gc3R5bGUuXFxuRS5nLiwgbmFtZT10aGVtZS1jb2xvcjtjb250ZW50PSMxMjM0NTYgPT4gPG1ldGEgbmFtZT1cInRoZW1lLWNvbG9yXCIgY29udGVudD1cIiMxMjM0NTZcIj4nXG4gICAgICAgIH1cbiAgICB9LFxuICAgIHJzczoge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ1BhdGggb3IgVVJMIHRvIFJTUyBhdG9tLnhtbCcsXG4gICAgICAgIFtkZWZhdWx0VmFsdWVdOiBudWxsXG4gICAgfSxcbiAgICBsb2dvOiB7XG4gICAgICAgIFt0eXBlXTogWydzdHJpbmcnLCAnb2JqZWN0J10sXG4gICAgICAgIFtkZWZhdWx0VmFsdWVdOiAnL2ltYWdlcy9sb2dvLnN2ZycsXG4gICAgICAgIFtkb2NdOiAnUGF0aCBvciBVUkwgdG8gdGhlIHdlYnNpdGVcXCdzIGxvZ28gdG8gYmUgc2hvd24gb24gdGhlIGxlZnQgb2YgdGhlIG5hdmlnYXRpb24gYmFyIG9yIGZvb3RlcicsXG4gICAgICAgIHRleHQ6IHtcbiAgICAgICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgICAgICBbZG9jXTogJ1RleHQgdG8gYmUgc2hvd24gaW4gcGxhY2Ugb2YgdGhlIGxvZ28gaW1hZ2UnXG4gICAgICAgIH1cbiAgICB9LFxuICAgIG9wZW5fZ3JhcGg6IHtcbiAgICAgICAgW3R5cGVdOiAnb2JqZWN0JyxcbiAgICAgICAgW2RvY106ICdPcGVuIEdyYXBoIG1ldGFkYXRhXFxuaHR0cHM6Ly9oZXhvLmlvL2RvY3MvaGVscGVycy5odG1sI29wZW4tZ3JhcGgnLFxuICAgICAgICBmYl9hcHBfaWQ6IHtcbiAgICAgICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgICAgICBbZG9jXTogJ0ZhY2Vib29rIEFwcCBJRCcsXG4gICAgICAgICAgICBbZGVmYXVsdFZhbHVlXTogbnVsbFxuICAgICAgICB9LFxuICAgICAgICBmYl9hZG1pbnM6IHtcbiAgICAgICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgICAgICBbZG9jXTogJ0ZhY2Vib29rIEFkbWluIElEJyxcbiAgICAgICAgICAgIFtkZWZhdWx0VmFsdWVdOiBudWxsXG4gICAgICAgIH0sXG4gICAgICAgIHR3aXR0ZXJfaWQ6IHtcbiAgICAgICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgICAgICBbZG9jXTogJ1R3aXR0ZXIgSUQnLFxuICAgICAgICAgICAgW2RlZmF1bHRWYWx1ZV06IG51bGxcbiAgICAgICAgfSxcbiAgICAgICAgdHdpdHRlcl9zaXRlOiB7XG4gICAgICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICAgICAgW2RvY106ICdUd2l0dGVyIHNpdGUnLFxuICAgICAgICAgICAgW2RlZmF1bHRWYWx1ZV06IG51bGxcbiAgICAgICAgfSxcbiAgICAgICAgZ29vZ2xlX3BsdXM6IHtcbiAgICAgICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgICAgICBbZG9jXTogJ0dvb2dsZSsgcHJvZmlsZSBsaW5rJyxcbiAgICAgICAgICAgIFtkZWZhdWx0VmFsdWVdOiBudWxsXG4gICAgICAgIH1cbiAgICB9XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "meta.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "module",
        "exports",
        "favicon",
        "meta",
        "rss",
        "logo",
        "open_graph"
      ],
      "mappings": ";;;;;;2BAAoCA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAvDC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;;AAEnBC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,OAAO,4CACFJ,IADE,EACK,QADL,6BAEFD,GAFE,EAEI,oCAFJ,6BAGFE,YAHE,EAGa,qBAHb,YADM;AAMbI,EAAAA,IAAI,sCACCL,IADD,EACQ,OADR,0BAECD,GAFD,EAEO,wCAFP,0BAGCE,YAHD,EAGgB,IAHhB,0BAIA,GAJA,8BAKKD,IALL,EAKY,QALZ,sBAMKD,GANL,EAMW,yIANX,cANS;AAebO,EAAAA,GAAG,oCACEN,IADF,EACS,QADT,yBAEED,GAFF,EAEQ,6BAFR,yBAGEE,YAHF,EAGiB,IAHjB,QAfU;AAoBbM,EAAAA,IAAI,sCACCP,IADD,EACQ,CAAC,QAAD,EAAW,QAAX,CADR,0BAECC,YAFD,EAEgB,kBAFhB,0BAGCF,GAHD,EAGO,4FAHP,sEAKKC,IALL,EAKY,QALZ,0BAMKD,GANL,EAMW,6CANX,kBApBS;AA6BbS,EAAAA,UAAU,kDACLR,IADK,EACE,QADF,gCAELD,GAFK,EAEC,mEAFD,2FAIDC,IAJC,EAIM,QAJN,+BAKDD,GALC,EAKK,iBALL,+BAMDE,YANC,EAMc,IANd,yGASDD,IATC,EASM,QATN,+BAUDD,GAVC,EAUK,mBAVL,+BAWDE,YAXC,EAWc,IAXd,4GAcDD,IAdC,EAcM,QAdN,gCAeDD,GAfC,EAeK,YAfL,gCAgBDE,YAhBC,EAgBc,IAhBd,mHAmBDD,IAnBC,EAmBM,QAnBN,kCAoBDD,GApBC,EAoBK,cApBL,kCAqBDE,YArBC,EAqBc,IArBd,kHAwBDD,IAxBC,EAwBM,QAxBN,iCAyBDD,GAzBC,EAyBK,sBAzBL,iCA0BDE,YA1BC,EA0Bc,IA1Bd;AA7BG,CAAjB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    favicon: {\n        [type]: 'string',\n        [doc]: 'Path or URL to the website\\'s icon',\n        [defaultValue]: '/images/favicon.svg',\n    },\n    meta: {\n        [type]: 'array',\n        [doc]: 'Additional HTML meta tags in an array.',\n        [defaultValue]: null,\n        '*': {\n            [type]: 'string',\n            [doc]: 'Meta tag specified in <attribute>=<value> style.\\nE.g., name=theme-color;content=#123456 => <meta name=\"theme-color\" content=\"#123456\">'\n        }\n    },\n    rss: {\n        [type]: 'string',\n        [doc]: 'Path or URL to RSS atom.xml',\n        [defaultValue]: null\n    },\n    logo: {\n        [type]: ['string', 'object'],\n        [defaultValue]: '/images/logo.svg',\n        [doc]: 'Path or URL to the website\\'s logo to be shown on the left of the navigation bar or footer',\n        text: {\n            [type]: 'string',\n            [doc]: 'Text to be shown in place of the logo image'\n        }\n    },\n    open_graph: {\n        [type]: 'object',\n        [doc]: 'Open Graph metadata\\nhttps://hexo.io/docs/helpers.html#open-graph',\n        fb_app_id: {\n            [type]: 'string',\n            [doc]: 'Facebook App ID',\n            [defaultValue]: null\n        },\n        fb_admins: {\n            [type]: 'string',\n            [doc]: 'Facebook Admin ID',\n            [defaultValue]: null\n        },\n        twitter_id: {\n            [type]: 'string',\n            [doc]: 'Twitter ID',\n            [defaultValue]: null\n        },\n        twitter_site: {\n            [type]: 'string',\n            [doc]: 'Twitter site',\n            [defaultValue]: null\n        },\n        google_plus: {\n            [type]: 'string',\n            [doc]: 'Google+ profile link',\n            [defaultValue]: null\n        }\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525721
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/navbar.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/navbar.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/navbar.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/navbar.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "navbar.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _, _menu, _objectSpread2, _module$exports;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue;\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'Navigation bar link settings'), _defineProperty(_module$exports, \"menu\", (_menu = {}, _defineProperty(_menu, type, 'object'), _defineProperty(_menu, doc, 'Navigation bar menu links'), _defineProperty(_menu, defaultValue, {\n  Home: '/',\n  Archives: '/archives',\n  Categories: '/categories',\n  Tags: '/tags',\n  About: '/about'\n}), _defineProperty(_menu, '*', (_ = {}, _defineProperty(_, type, 'string'), _defineProperty(_, doc, 'Path or URL to the menu item'), _)), _menu)), _defineProperty(_module$exports, \"links\", _objectSpread({}, require('./icon_link.spec'), (_objectSpread2 = {}, _defineProperty(_objectSpread2, doc, 'Navigation bar links to be shown on the right'), _defineProperty(_objectSpread2, defaultValue, {\n  'Download on GitHub': {\n    icon: 'fab fa-github',\n    url: 'https://github.com/ppoffice/hexo-theme-icarus'\n  }\n}), _objectSpread2))), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5hdmJhci5zcGVjLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJkZXNjcmlwdG9ycyIsImRvYyIsInR5cGUiLCJkZWZhdWx0VmFsdWUiLCJtb2R1bGUiLCJleHBvcnRzIiwiSG9tZSIsIkFyY2hpdmVzIiwiQ2F0ZWdvcmllcyIsIlRhZ3MiLCJBYm91dCIsImljb24iLCJ1cmwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7MkJBQW9DQSxPQUFPLENBQUMsaUJBQUQsQ0FBUCxDQUEyQkMsVztJQUF2REMsRyx3QkFBQUEsRztJQUFLQyxJLHdCQUFBQSxJO0lBQU1DLFksd0JBQUFBLFk7O0FBRW5CQyxNQUFNLENBQUNDLE9BQVAsMkRBQ0tILElBREwsRUFDWSxRQURaLG9DQUVLRCxHQUZMLEVBRVcsOEJBRlgsZ0ZBSVNDLElBSlQsRUFJZ0IsUUFKaEIsMEJBS1NELEdBTFQsRUFLZSwyQkFMZiwwQkFNU0UsWUFOVCxFQU13QjtBQUNaRyxFQUFBQSxJQUFJLEVBQUUsR0FETTtBQUVaQyxFQUFBQSxRQUFRLEVBQUUsV0FGRTtBQUdaQyxFQUFBQSxVQUFVLEVBQUUsYUFIQTtBQUlaQyxFQUFBQSxJQUFJLEVBQUUsT0FKTTtBQUtaQyxFQUFBQSxLQUFLLEVBQUU7QUFMSyxDQU54QiwwQkFhUSxHQWJSLDhCQWNhUixJQWRiLEVBY29CLFFBZHBCLHNCQWVhRCxHQWZiLEVBZW1CLDhCQWZuQiw2RUFtQldGLE9BQU8sQ0FBQyxrQkFBRCxDQW5CbEIsd0RBb0JTRSxHQXBCVCxFQW9CZSwrQ0FwQmYsbUNBcUJTRSxZQXJCVCxFQXFCd0I7QUFDWix3QkFBc0I7QUFDbEJRLElBQUFBLElBQUksRUFBRSxlQURZO0FBRWxCQyxJQUFBQSxHQUFHLEVBQUU7QUFGYTtBQURWLENBckJ4QiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvc3BlY3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGRvYywgdHlwZSwgZGVmYXVsdFZhbHVlIH0gPSByZXF1aXJlKCcuLi9jb21tb24vdXRpbHMnKS5kZXNjcmlwdG9ycztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgW3R5cGVdOiAnb2JqZWN0JyxcbiAgICBbZG9jXTogJ05hdmlnYXRpb24gYmFyIGxpbmsgc2V0dGluZ3MnLFxuICAgIG1lbnU6IHtcbiAgICAgICAgW3R5cGVdOiAnb2JqZWN0JyxcbiAgICAgICAgW2RvY106ICdOYXZpZ2F0aW9uIGJhciBtZW51IGxpbmtzJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IHtcbiAgICAgICAgICAgIEhvbWU6ICcvJyxcbiAgICAgICAgICAgIEFyY2hpdmVzOiAnL2FyY2hpdmVzJyxcbiAgICAgICAgICAgIENhdGVnb3JpZXM6ICcvY2F0ZWdvcmllcycsXG4gICAgICAgICAgICBUYWdzOiAnL3RhZ3MnLFxuICAgICAgICAgICAgQWJvdXQ6ICcvYWJvdXQnXG4gICAgICAgIH0sXG4gICAgICAgICcqJzoge1xuICAgICAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgICAgIFtkb2NdOiAnUGF0aCBvciBVUkwgdG8gdGhlIG1lbnUgaXRlbSdcbiAgICAgICAgfVxuICAgIH0sXG4gICAgbGlua3M6IHtcbiAgICAgICAgLi4ucmVxdWlyZSgnLi9pY29uX2xpbmsuc3BlYycpLFxuICAgICAgICBbZG9jXTogJ05hdmlnYXRpb24gYmFyIGxpbmtzIHRvIGJlIHNob3duIG9uIHRoZSByaWdodCcsXG4gICAgICAgIFtkZWZhdWx0VmFsdWVdOiB7XG4gICAgICAgICAgICAnRG93bmxvYWQgb24gR2l0SHViJzoge1xuICAgICAgICAgICAgICAgIGljb246ICdmYWIgZmEtZ2l0aHViJyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL2dpdGh1Yi5jb20vcHBvZmZpY2UvaGV4by10aGVtZS1pY2FydXMnXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "navbar.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "module",
        "exports",
        "Home",
        "Archives",
        "Categories",
        "Tags",
        "About",
        "icon",
        "url"
      ],
      "mappings": ";;;;;;;;;;2BAAoCA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAvDC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;;AAEnBC,MAAM,CAACC,OAAP,2DACKH,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,8BAFX,gFAISC,IAJT,EAIgB,QAJhB,0BAKSD,GALT,EAKe,2BALf,0BAMSE,YANT,EAMwB;AACZG,EAAAA,IAAI,EAAE,GADM;AAEZC,EAAAA,QAAQ,EAAE,WAFE;AAGZC,EAAAA,UAAU,EAAE,aAHA;AAIZC,EAAAA,IAAI,EAAE,OAJM;AAKZC,EAAAA,KAAK,EAAE;AALK,CANxB,0BAaQ,GAbR,8BAcaR,IAdb,EAcoB,QAdpB,sBAeaD,GAfb,EAemB,8BAfnB,6EAmBWF,OAAO,CAAC,kBAAD,CAnBlB,wDAoBSE,GApBT,EAoBe,+CApBf,mCAqBSE,YArBT,EAqBwB;AACZ,wBAAsB;AAClBQ,IAAAA,IAAI,EAAE,eADY;AAElBC,IAAAA,GAAG,EAAE;AAFa;AADV,CArBxB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Navigation bar link settings',\n    menu: {\n        [type]: 'object',\n        [doc]: 'Navigation bar menu links',\n        [defaultValue]: {\n            Home: '/',\n            Archives: '/archives',\n            Categories: '/categories',\n            Tags: '/tags',\n            About: '/about'\n        },\n        '*': {\n            [type]: 'string',\n            [doc]: 'Path or URL to the menu item'\n        }\n    },\n    links: {\n        ...require('./icon_link.spec'),\n        [doc]: 'Navigation bar links to be shown on the right',\n        [defaultValue]: {\n            'Download on GitHub': {\n                icon: 'fab fa-github',\n                url: 'https://github.com/ppoffice/hexo-theme-icarus'\n            }\n        }\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525725
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/icon_link.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/icon_link.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/icon_link.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/icon_link.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "icon_link.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _icon, _url, _, _module$exports;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    required = _require$descriptors.required;\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'Link icon settings'), _defineProperty(_module$exports, '*', (_ = {}, _defineProperty(_, type, ['string', 'object']), _defineProperty(_, doc, 'Path or URL to the menu item, and/or link icon class names'), _defineProperty(_, \"icon\", (_icon = {}, _defineProperty(_icon, required, true), _defineProperty(_icon, type, 'string'), _defineProperty(_icon, doc, 'Link icon class names'), _icon)), _defineProperty(_, \"url\", (_url = {}, _defineProperty(_url, required, true), _defineProperty(_url, type, 'string'), _defineProperty(_url, doc, 'Path or URL to the menu item'), _url)), _)), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImljb25fbGluay5zcGVjLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJkZXNjcmlwdG9ycyIsImRvYyIsInR5cGUiLCJyZXF1aXJlZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7OzsyQkFBZ0NBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCQyxXO0lBQW5EQyxHLHdCQUFBQSxHO0lBQUtDLEksd0JBQUFBLEk7SUFBTUMsUSx3QkFBQUEsUTs7QUFFbkJDLE1BQU0sQ0FBQ0MsT0FBUCwyREFDS0gsSUFETCxFQUNZLFFBRFosb0NBRUtELEdBRkwsRUFFVyxvQkFGWCxvQ0FHSSxHQUhKLDhCQUlTQyxJQUpULEVBSWdCLENBQUMsUUFBRCxFQUFXLFFBQVgsQ0FKaEIsc0JBS1NELEdBTFQsRUFLZSw0REFMZixrRUFPYUUsUUFQYixFQU93QixJQVB4QiwwQkFRYUQsSUFSYixFQVFvQixRQVJwQiwwQkFTYUQsR0FUYixFQVNtQix1QkFUbkIsd0VBWWFFLFFBWmIsRUFZd0IsSUFaeEIseUJBYWFELElBYmIsRUFhb0IsUUFicEIseUJBY2FELEdBZGIsRUFjbUIsOEJBZG5CIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1cy9pbmNsdWRlcy9zcGVjcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZG9jLCB0eXBlLCByZXF1aXJlZCB9ID0gcmVxdWlyZSgnLi4vY29tbW9uL3V0aWxzJykuZGVzY3JpcHRvcnM7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFt0eXBlXTogJ29iamVjdCcsXG4gICAgW2RvY106ICdMaW5rIGljb24gc2V0dGluZ3MnLFxuICAgICcqJzoge1xuICAgICAgICBbdHlwZV06IFsnc3RyaW5nJywgJ29iamVjdCddLFxuICAgICAgICBbZG9jXTogJ1BhdGggb3IgVVJMIHRvIHRoZSBtZW51IGl0ZW0sIGFuZC9vciBsaW5rIGljb24gY2xhc3MgbmFtZXMnLFxuICAgICAgICBpY29uOiB7XG4gICAgICAgICAgICBbcmVxdWlyZWRdOiB0cnVlLFxuICAgICAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgICAgIFtkb2NdOiAnTGluayBpY29uIGNsYXNzIG5hbWVzJ1xuICAgICAgICB9LFxuICAgICAgICB1cmw6IHtcbiAgICAgICAgICAgIFtyZXF1aXJlZF06IHRydWUsXG4gICAgICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICAgICAgW2RvY106ICdQYXRoIG9yIFVSTCB0byB0aGUgbWVudSBpdGVtJ1xuICAgICAgICB9XG4gICAgfVxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "icon_link.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "required",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;2BAAgCA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAnDC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Q,wBAAAA,Q;;AAEnBC,MAAM,CAACC,OAAP,2DACKH,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,oBAFX,oCAGI,GAHJ,8BAISC,IAJT,EAIgB,CAAC,QAAD,EAAW,QAAX,CAJhB,sBAKSD,GALT,EAKe,4DALf,kEAOaE,QAPb,EAOwB,IAPxB,0BAQaD,IARb,EAQoB,QARpB,0BASaD,GATb,EASmB,uBATnB,wEAYaE,QAZb,EAYwB,IAZxB,yBAaaD,IAbb,EAaoB,QAbpB,yBAcaD,GAdb,EAcmB,8BAdnB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, required } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Link icon settings',\n    '*': {\n        [type]: ['string', 'object'],\n        [doc]: 'Path or URL to the menu item, and/or link icon class names',\n        icon: {\n            [required]: true,\n            [type]: 'string',\n            [doc]: 'Link icon class names'\n        },\n        url: {\n            [required]: true,\n            [type]: 'string',\n            [doc]: 'Path or URL to the menu item'\n        }\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525721
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/footer.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/footer.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/footer.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/footer.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "footer.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _objectSpread2, _module$exports;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue;\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'Footer section link settings'), _defineProperty(_module$exports, \"links\", _objectSpread({}, require('./icon_link.spec'), (_objectSpread2 = {}, _defineProperty(_objectSpread2, doc, 'Links to be shown on the right of the footer section'), _defineProperty(_objectSpread2, defaultValue, {\n  'Creative Commons': {\n    icon: 'fab fa-creative-commons',\n    url: 'https://creativecommons.org/'\n  },\n  'Attribution 4.0 International': {\n    icon: 'fab fa-creative-commons-by',\n    url: 'https://creativecommons.org/licenses/by/4.0/'\n  },\n  'Download on GitHub': {\n    icon: 'fab fa-github',\n    url: 'https://github.com/ppoffice/hexo-theme-icarus'\n  }\n}), _objectSpread2))), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvb3Rlci5zcGVjLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJkZXNjcmlwdG9ycyIsImRvYyIsInR5cGUiLCJkZWZhdWx0VmFsdWUiLCJtb2R1bGUiLCJleHBvcnRzIiwiaWNvbiIsInVybCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OzsyQkFBb0NBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCQyxXO0lBQXZEQyxHLHdCQUFBQSxHO0lBQUtDLEksd0JBQUFBLEk7SUFBTUMsWSx3QkFBQUEsWTs7QUFFbkJDLE1BQU0sQ0FBQ0MsT0FBUCwyREFDS0gsSUFETCxFQUNZLFFBRFosb0NBRUtELEdBRkwsRUFFVyw4QkFGWCwrREFJV0YsT0FBTyxDQUFDLGtCQUFELENBSmxCLHdEQUtTRSxHQUxULEVBS2Usc0RBTGYsbUNBTVNFLFlBTlQsRUFNd0I7QUFDWixzQkFBb0I7QUFDaEJHLElBQUFBLElBQUksRUFBRSx5QkFEVTtBQUVoQkMsSUFBQUEsR0FBRyxFQUFFO0FBRlcsR0FEUjtBQUtaLG1DQUFpQztBQUM3QkQsSUFBQUEsSUFBSSxFQUFFLDRCQUR1QjtBQUU3QkMsSUFBQUEsR0FBRyxFQUFFO0FBRndCLEdBTHJCO0FBU1osd0JBQXNCO0FBQ2xCRCxJQUFBQSxJQUFJLEVBQUUsZUFEWTtBQUVsQkMsSUFBQUEsR0FBRyxFQUFFO0FBRmE7QUFUVixDQU54QiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvc3BlY3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGRvYywgdHlwZSwgZGVmYXVsdFZhbHVlIH0gPSByZXF1aXJlKCcuLi9jb21tb24vdXRpbHMnKS5kZXNjcmlwdG9ycztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgW3R5cGVdOiAnb2JqZWN0JyxcbiAgICBbZG9jXTogJ0Zvb3RlciBzZWN0aW9uIGxpbmsgc2V0dGluZ3MnLFxuICAgIGxpbmtzOiB7XG4gICAgICAgIC4uLnJlcXVpcmUoJy4vaWNvbl9saW5rLnNwZWMnKSxcbiAgICAgICAgW2RvY106ICdMaW5rcyB0byBiZSBzaG93biBvbiB0aGUgcmlnaHQgb2YgdGhlIGZvb3RlciBzZWN0aW9uJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IHtcbiAgICAgICAgICAgICdDcmVhdGl2ZSBDb21tb25zJzoge1xuICAgICAgICAgICAgICAgIGljb246ICdmYWIgZmEtY3JlYXRpdmUtY29tbW9ucycsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnLydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnQXR0cmlidXRpb24gNC4wIEludGVybmF0aW9uYWwnOiB7XG4gICAgICAgICAgICAgICAgaWNvbjogJ2ZhYiBmYS1jcmVhdGl2ZS1jb21tb25zLWJ5JyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wLydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnRG93bmxvYWQgb24gR2l0SHViJzoge1xuICAgICAgICAgICAgICAgIGljb246ICdmYWIgZmEtZ2l0aHViJyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL2dpdGh1Yi5jb20vcHBvZmZpY2UvaGV4by10aGVtZS1pY2FydXMnXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "footer.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "module",
        "exports",
        "icon",
        "url"
      ],
      "mappings": ";;;;;;;;;;2BAAoCA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAvDC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;;AAEnBC,MAAM,CAACC,OAAP,2DACKH,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,8BAFX,+DAIWF,OAAO,CAAC,kBAAD,CAJlB,wDAKSE,GALT,EAKe,sDALf,mCAMSE,YANT,EAMwB;AACZ,sBAAoB;AAChBG,IAAAA,IAAI,EAAE,yBADU;AAEhBC,IAAAA,GAAG,EAAE;AAFW,GADR;AAKZ,mCAAiC;AAC7BD,IAAAA,IAAI,EAAE,4BADuB;AAE7BC,IAAAA,GAAG,EAAE;AAFwB,GALrB;AASZ,wBAAsB;AAClBD,IAAAA,IAAI,EAAE,eADY;AAElBC,IAAAA,GAAG,EAAE;AAFa;AATV,CANxB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Footer section link settings',\n    links: {\n        ...require('./icon_link.spec'),\n        [doc]: 'Links to be shown on the right of the footer section',\n        [defaultValue]: {\n            'Creative Commons': {\n                icon: 'fab fa-creative-commons',\n                url: 'https://creativecommons.org/'\n            },\n            'Attribution 4.0 International': {\n                icon: 'fab fa-creative-commons-by',\n                url: 'https://creativecommons.org/licenses/by/4.0/'\n            },\n            'Download on GitHub': {\n                icon: 'fab fa-github',\n                url: 'https://github.com/ppoffice/hexo-theme-icarus'\n            }\n        }\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525721
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/article.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/article.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/article.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/article.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "article.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _theme, _clipboard, _fold, _highlight, _thumbnail, _readtime, _module$exports;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue;\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'Article display settings'), _defineProperty(_module$exports, \"highlight\", (_highlight = {}, _defineProperty(_highlight, type, 'object'), _defineProperty(_highlight, doc, 'Code highlight settings'), _defineProperty(_highlight, \"theme\", (_theme = {}, _defineProperty(_theme, type, 'string'), _defineProperty(_theme, doc, 'Code highlight themes\\nhttps://github.com/highlightjs/highlight.js/tree/master/src/styles'), _defineProperty(_theme, defaultValue, 'atom-one-light'), _theme)), _defineProperty(_highlight, \"clipboard\", (_clipboard = {}, _defineProperty(_clipboard, type, 'boolean'), _defineProperty(_clipboard, doc, 'Show code copying button'), _defineProperty(_clipboard, defaultValue, true), _clipboard)), _defineProperty(_highlight, \"fold\", (_fold = {}, _defineProperty(_fold, type, 'string'), _defineProperty(_fold, doc, 'Default folding status of the code blocks. Can be \"\", \"folded\", \"unfolded\"'), _defineProperty(_fold, defaultValue, 'unfolded'), _fold)), _highlight)), _defineProperty(_module$exports, \"thumbnail\", (_thumbnail = {}, _defineProperty(_thumbnail, type, 'boolean'), _defineProperty(_thumbnail, doc, 'Whether to show article thumbnail images'), _defineProperty(_thumbnail, defaultValue, true), _thumbnail)), _defineProperty(_module$exports, \"readtime\", (_readtime = {}, _defineProperty(_readtime, type, 'boolean'), _defineProperty(_readtime, doc, 'Whether to show estimate article reading time'), _defineProperty(_readtime, defaultValue, true), _readtime)), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFydGljbGUuc3BlYy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiZGVzY3JpcHRvcnMiLCJkb2MiLCJ0eXBlIiwiZGVmYXVsdFZhbHVlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OzJCQUFvQ0EsT0FBTyxDQUFDLGlCQUFELENBQVAsQ0FBMkJDLFc7SUFBdkRDLEcsd0JBQUFBLEc7SUFBS0MsSSx3QkFBQUEsSTtJQUFNQyxZLHdCQUFBQSxZOztBQUVuQkMsTUFBTSxDQUFDQyxPQUFQLDJEQUNLSCxJQURMLEVBQ1ksUUFEWixvQ0FFS0QsR0FGTCxFQUVXLDBCQUZYLCtGQUlTQyxJQUpULEVBSWdCLFFBSmhCLCtCQUtTRCxHQUxULEVBS2UseUJBTGYsOEVBT2FDLElBUGIsRUFPb0IsUUFQcEIsMkJBUWFELEdBUmIsRUFRbUIsMkZBUm5CLDJCQVNhRSxZQVRiLEVBUzRCLGdCQVQ1QixvR0FZYUQsSUFaYixFQVlvQixTQVpwQiwrQkFhYUQsR0FiYixFQWFtQiwwQkFibkIsK0JBY2FFLFlBZGIsRUFjNEIsSUFkNUIseUZBaUJhRCxJQWpCYixFQWlCb0IsUUFqQnBCLDBCQWtCYUQsR0FsQmIsRUFrQm1CLDRFQWxCbkIsMEJBbUJhRSxZQW5CYixFQW1CNEIsVUFuQjVCLHNIQXVCU0QsSUF2QlQsRUF1QmdCLFNBdkJoQiwrQkF3QlNELEdBeEJULEVBd0JlLDBDQXhCZiwrQkF5QlNFLFlBekJULEVBeUJ3QixJQXpCeEIsMEdBNEJTRCxJQTVCVCxFQTRCZ0IsU0E1QmhCLDhCQTZCU0QsR0E3QlQsRUE2QmUsK0NBN0JmLDhCQThCU0UsWUE5QlQsRUE4QndCLElBOUJ4QiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvc3BlY3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGRvYywgdHlwZSwgZGVmYXVsdFZhbHVlIH0gPSByZXF1aXJlKCcuLi9jb21tb24vdXRpbHMnKS5kZXNjcmlwdG9ycztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgW3R5cGVdOiAnb2JqZWN0JyxcbiAgICBbZG9jXTogJ0FydGljbGUgZGlzcGxheSBzZXR0aW5ncycsXG4gICAgaGlnaGxpZ2h0OiB7XG4gICAgICAgIFt0eXBlXTogJ29iamVjdCcsXG4gICAgICAgIFtkb2NdOiAnQ29kZSBoaWdobGlnaHQgc2V0dGluZ3MnLFxuICAgICAgICB0aGVtZToge1xuICAgICAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgICAgIFtkb2NdOiAnQ29kZSBoaWdobGlnaHQgdGhlbWVzXFxuaHR0cHM6Ly9naXRodWIuY29tL2hpZ2hsaWdodGpzL2hpZ2hsaWdodC5qcy90cmVlL21hc3Rlci9zcmMvc3R5bGVzJyxcbiAgICAgICAgICAgIFtkZWZhdWx0VmFsdWVdOiAnYXRvbS1vbmUtbGlnaHQnXG4gICAgICAgIH0sXG4gICAgICAgIGNsaXBib2FyZDoge1xuICAgICAgICAgICAgW3R5cGVdOiAnYm9vbGVhbicsXG4gICAgICAgICAgICBbZG9jXTogJ1Nob3cgY29kZSBjb3B5aW5nIGJ1dHRvbicsXG4gICAgICAgICAgICBbZGVmYXVsdFZhbHVlXTogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBmb2xkOiB7XG4gICAgICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICAgICAgW2RvY106ICdEZWZhdWx0IGZvbGRpbmcgc3RhdHVzIG9mIHRoZSBjb2RlIGJsb2Nrcy4gQ2FuIGJlIFwiXCIsIFwiZm9sZGVkXCIsIFwidW5mb2xkZWRcIicsXG4gICAgICAgICAgICBbZGVmYXVsdFZhbHVlXTogJ3VuZm9sZGVkJ1xuICAgICAgICB9XG4gICAgfSxcbiAgICB0aHVtYm5haWw6IHtcbiAgICAgICAgW3R5cGVdOiAnYm9vbGVhbicsXG4gICAgICAgIFtkb2NdOiAnV2hldGhlciB0byBzaG93IGFydGljbGUgdGh1bWJuYWlsIGltYWdlcycsXG4gICAgICAgIFtkZWZhdWx0VmFsdWVdOiB0cnVlXG4gICAgfSxcbiAgICByZWFkdGltZToge1xuICAgICAgICBbdHlwZV06ICdib29sZWFuJyxcbiAgICAgICAgW2RvY106ICdXaGV0aGVyIHRvIHNob3cgZXN0aW1hdGUgYXJ0aWNsZSByZWFkaW5nIHRpbWUnLFxuICAgICAgICBbZGVmYXVsdFZhbHVlXTogdHJ1ZVxuICAgIH1cbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "article.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;2BAAoCA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAvDC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;;AAEnBC,MAAM,CAACC,OAAP,2DACKH,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,0BAFX,+FAISC,IAJT,EAIgB,QAJhB,+BAKSD,GALT,EAKe,yBALf,8EAOaC,IAPb,EAOoB,QAPpB,2BAQaD,GARb,EAQmB,2FARnB,2BASaE,YATb,EAS4B,gBAT5B,oGAYaD,IAZb,EAYoB,SAZpB,+BAaaD,GAbb,EAamB,0BAbnB,+BAcaE,YAdb,EAc4B,IAd5B,yFAiBaD,IAjBb,EAiBoB,QAjBpB,0BAkBaD,GAlBb,EAkBmB,4EAlBnB,0BAmBaE,YAnBb,EAmB4B,UAnB5B,sHAuBSD,IAvBT,EAuBgB,SAvBhB,+BAwBSD,GAxBT,EAwBe,0CAxBf,+BAyBSE,YAzBT,EAyBwB,IAzBxB,0GA4BSD,IA5BT,EA4BgB,SA5BhB,8BA6BSD,GA7BT,EA6Be,+CA7Bf,8BA8BSE,YA9BT,EA8BwB,IA9BxB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Article display settings',\n    highlight: {\n        [type]: 'object',\n        [doc]: 'Code highlight settings',\n        theme: {\n            [type]: 'string',\n            [doc]: 'Code highlight themes\\nhttps://github.com/highlightjs/highlight.js/tree/master/src/styles',\n            [defaultValue]: 'atom-one-light'\n        },\n        clipboard: {\n            [type]: 'boolean',\n            [doc]: 'Show code copying button',\n            [defaultValue]: true\n        },\n        fold: {\n            [type]: 'string',\n            [doc]: 'Default folding status of the code blocks. Can be \"\", \"folded\", \"unfolded\"',\n            [defaultValue]: 'unfolded'\n        }\n    },\n    thumbnail: {\n        [type]: 'boolean',\n        [doc]: 'Whether to show article thumbnail images',\n        [defaultValue]: true\n    },\n    readtime: {\n        [type]: 'boolean',\n        [doc]: 'Whether to show estimate article reading time',\n        [defaultValue]: true\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525717
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/search.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/search.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/search.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/search.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "search.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _type, _cx, _module$exports;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue,\n    required = _require$descriptors.required,\n    requires = _require$descriptors.requires;\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'Search plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Search'), _defineProperty(_module$exports, \"type\", (_type = {}, _defineProperty(_type, type, 'string'), _defineProperty(_type, doc, 'Name of the search plugin'), _defineProperty(_type, defaultValue, 'insight'), _type)), _defineProperty(_module$exports, \"cx\", (_cx = {}, _defineProperty(_cx, type, 'string'), _defineProperty(_cx, doc, 'Google CSE cx value'), _defineProperty(_cx, required, true), _defineProperty(_cx, requires, function (search) {\n  return search.type === 'google-cse';\n}), _cx)), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlYXJjaC5zcGVjLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJkZXNjcmlwdG9ycyIsImRvYyIsInR5cGUiLCJkZWZhdWx0VmFsdWUiLCJyZXF1aXJlZCIsInJlcXVpcmVzIiwibW9kdWxlIiwiZXhwb3J0cyIsInNlYXJjaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OzJCQUF3REEsT0FBTyxDQUFDLGlCQUFELENBQVAsQ0FBMkJDLFc7SUFBM0VDLEcsd0JBQUFBLEc7SUFBS0MsSSx3QkFBQUEsSTtJQUFNQyxZLHdCQUFBQSxZO0lBQWNDLFEsd0JBQUFBLFE7SUFBVUMsUSx3QkFBQUEsUTs7QUFFM0NDLE1BQU0sQ0FBQ0MsT0FBUCwyREFDS0wsSUFETCxFQUNZLFFBRFosb0NBRUtELEdBRkwsRUFFVyxnR0FGWCxnRkFJU0MsSUFKVCxFQUlnQixRQUpoQiwwQkFLU0QsR0FMVCxFQUtlLDJCQUxmLDBCQU1TRSxZQU5ULEVBTXdCLFNBTnhCLG1GQVNTRCxJQVRULEVBU2dCLFFBVGhCLHdCQVVTRCxHQVZULEVBVWUscUJBVmYsd0JBV1NHLFFBWFQsRUFXb0IsSUFYcEIsd0JBWVNDLFFBWlQsRUFZb0IsVUFBQUcsTUFBTTtBQUFBLFNBQUlBLE1BQU0sQ0FBQ04sSUFBUCxLQUFnQixZQUFwQjtBQUFBLENBWjFCIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1cy9pbmNsdWRlcy9zcGVjcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZG9jLCB0eXBlLCBkZWZhdWx0VmFsdWUsIHJlcXVpcmVkLCByZXF1aXJlcyB9ID0gcmVxdWlyZSgnLi4vY29tbW9uL3V0aWxzJykuZGVzY3JpcHRvcnM7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFt0eXBlXTogJ29iamVjdCcsXG4gICAgW2RvY106ICdTZWFyY2ggcGx1Z2luIHNldHRpbmdzXFxuaHR0cHM6Ly9wcG9mZmljZS5naXRodWIuaW8vaGV4by10aGVtZS1pY2FydXMvY2F0ZWdvcmllcy9QbHVnaW5zL1NlYXJjaCcsXG4gICAgdHlwZToge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ05hbWUgb2YgdGhlIHNlYXJjaCBwbHVnaW4nLFxuICAgICAgICBbZGVmYXVsdFZhbHVlXTogJ2luc2lnaHQnXG4gICAgfSxcbiAgICBjeDoge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ0dvb2dsZSBDU0UgY3ggdmFsdWUnLFxuICAgICAgICBbcmVxdWlyZWRdOiB0cnVlLFxuICAgICAgICBbcmVxdWlyZXNdOiBzZWFyY2ggPT4gc2VhcmNoLnR5cGUgPT09ICdnb29nbGUtY3NlJ1xuICAgIH1cbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "search.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "required",
        "requires",
        "module",
        "exports",
        "search"
      ],
      "mappings": ";;;;;;2BAAwDA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAA3EC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;IAAcC,Q,wBAAAA,Q;IAAUC,Q,wBAAAA,Q;;AAE3CC,MAAM,CAACC,OAAP,2DACKL,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,gGAFX,gFAISC,IAJT,EAIgB,QAJhB,0BAKSD,GALT,EAKe,2BALf,0BAMSE,YANT,EAMwB,SANxB,mFASSD,IATT,EASgB,QAThB,wBAUSD,GAVT,EAUe,qBAVf,wBAWSG,QAXT,EAWoB,IAXpB,wBAYSC,QAZT,EAYoB,UAAAG,MAAM;AAAA,SAAIA,MAAM,CAACN,IAAP,KAAgB,YAApB;AAAA,CAZ1B",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue, required, requires } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Search plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Search',\n    type: {\n        [type]: 'string',\n        [doc]: 'Name of the search plugin',\n        [defaultValue]: 'insight'\n    },\n    cx: {\n        [type]: 'string',\n        [doc]: 'Google CSE cx value',\n        [required]: true,\n        [requires]: search => search.type === 'google-cse'\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525725
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/comment.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/comment.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/comment.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/comment.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "comment.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _appid, _conf, _shortname, _owner, _repo, _client_id, _client_secret, _, _admin, _create_issue_manuall, _distraction_free_mod, _url, _uid, _app_id, _app_key, _notify, _verify, _placeholder, _type, _objectSpread2;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue,\n    required = _require$descriptors.required,\n    requires = _require$descriptors.requires;\n\nvar ChangYanSpec = {\n  appid: (_appid = {}, _defineProperty(_appid, type, 'string'), _defineProperty(_appid, doc, 'Changyan comment app ID'), _defineProperty(_appid, required, true), _defineProperty(_appid, requires, function (comment) {\n    return comment.type === 'changyan';\n  }), _appid),\n  conf: (_conf = {}, _defineProperty(_conf, type, 'string'), _defineProperty(_conf, doc, 'Changyan comment configuration ID'), _defineProperty(_conf, required, true), _defineProperty(_conf, requires, function (comment) {\n    return comment.type === 'changyan';\n  }), _conf)\n};\nvar DisqusSpec = {\n  shortname: (_shortname = {}, _defineProperty(_shortname, type, 'string'), _defineProperty(_shortname, doc, 'Disqus shortname'), _defineProperty(_shortname, required, true), _defineProperty(_shortname, requires, function (comment) {\n    return comment.type === 'disqus';\n  }), _shortname)\n};\nvar GitmentGitalkSpec = {\n  owner: (_owner = {}, _defineProperty(_owner, type, 'string'), _defineProperty(_owner, doc, 'GitHub user ID'), _defineProperty(_owner, required, true), _defineProperty(_owner, requires, function (comment) {\n    return comment.type === 'gitment' || comment.type === 'gitalk';\n  }), _owner),\n  repo: (_repo = {}, _defineProperty(_repo, type, 'string'), _defineProperty(_repo, doc, 'GitHub repo name to store comments'), _defineProperty(_repo, required, true), _defineProperty(_repo, requires, function (comment) {\n    return comment.type === 'gitment' || comment.type === 'gitalk';\n  }), _repo),\n  client_id: (_client_id = {}, _defineProperty(_client_id, type, 'string'), _defineProperty(_client_id, doc, 'GitHub application client ID'), _defineProperty(_client_id, required, true), _defineProperty(_client_id, requires, function (comment) {\n    return comment.type === 'gitment' || comment.type === 'gitalk';\n  }), _client_id),\n  client_secret: (_client_secret = {}, _defineProperty(_client_secret, type, 'string'), _defineProperty(_client_secret, doc, 'GitHub application client secret'), _defineProperty(_client_secret, required, true), _defineProperty(_client_secret, requires, function (comment) {\n    return comment.type === 'gitment' || comment.type === 'gitalk';\n  }), _client_secret),\n  admin: (_admin = {}, _defineProperty(_admin, type, ['string', 'array']), _defineProperty(_admin, doc, 'GitHub repo owner and collaborators who can can initialize github issues'), _defineProperty(_admin, required, true), _defineProperty(_admin, requires, function (comment) {\n    return comment.type === 'gitalk';\n  }), _defineProperty(_admin, '*', (_ = {}, _defineProperty(_, type, 'string'), _defineProperty(_, required, true), _)), _admin),\n  create_issue_manually: (_create_issue_manuall = {}, _defineProperty(_create_issue_manuall, type, 'boolean'), _defineProperty(_create_issue_manuall, doc, 'Create GitHub issue manually for each page'), _defineProperty(_create_issue_manuall, defaultValue, false), _defineProperty(_create_issue_manuall, requires, function (comment) {\n    return comment.type === 'gitalk';\n  }), _create_issue_manuall),\n  distraction_free_mode: (_distraction_free_mod = {}, _defineProperty(_distraction_free_mod, type, 'boolean'), _defineProperty(_distraction_free_mod, doc, 'Facebook-like distraction free mode'), _defineProperty(_distraction_free_mod, defaultValue, false), _defineProperty(_distraction_free_mod, requires, function (comment) {\n    return comment.type === 'gitalk';\n  }), _distraction_free_mod)\n};\nvar IssoSpec = {\n  url: (_url = {}, _defineProperty(_url, type, 'string'), _defineProperty(_url, doc, 'URL to your Isso comment service'), _defineProperty(_url, required, true), _defineProperty(_url, requires, function (comment) {\n    return comment.type === 'isso';\n  }), _url)\n};\nvar LiveReSpec = {\n  uid: (_uid = {}, _defineProperty(_uid, type, 'string'), _defineProperty(_uid, doc, 'LiveRe comment service UID'), _defineProperty(_uid, required, true), _defineProperty(_uid, requires, function (comment) {\n    return comment.type === 'livere';\n  }), _uid)\n};\nvar ValineSpec = {\n  app_id: (_app_id = {}, _defineProperty(_app_id, type, 'string'), _defineProperty(_app_id, doc, 'LeanCloud APP ID'), _defineProperty(_app_id, required, true), _defineProperty(_app_id, requires, function (comment) {\n    return comment.type === 'valine';\n  }), _app_id),\n  app_key: (_app_key = {}, _defineProperty(_app_key, type, 'string'), _defineProperty(_app_key, doc, 'LeanCloud APP key'), _defineProperty(_app_key, required, true), _defineProperty(_app_key, requires, function (comment) {\n    return comment.type === 'valine';\n  }), _app_key),\n  notify: (_notify = {}, _defineProperty(_notify, type, 'boolean'), _defineProperty(_notify, doc, 'Enable email notification when someone comments'), _defineProperty(_notify, defaultValue, false), _defineProperty(_notify, requires, function (comment) {\n    return comment.type === 'valine';\n  }), _notify),\n  verify: (_verify = {}, _defineProperty(_verify, type, 'boolean'), _defineProperty(_verify, doc, 'Enable verification code service'), _defineProperty(_verify, defaultValue, false), _defineProperty(_verify, requires, function (comment) {\n    return comment.type === 'valine';\n  }), _verify),\n  placeholder: (_placeholder = {}, _defineProperty(_placeholder, type, 'string'), _defineProperty(_placeholder, doc, 'Placeholder text in the comment box'), _defineProperty(_placeholder, defaultValue, 'Say something...'), _defineProperty(_placeholder, requires, function (comment) {\n    return comment.type === 'valine';\n  }), _placeholder)\n};\nmodule.exports = _objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, type, 'object'), _defineProperty(_objectSpread2, doc, 'Comment plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Comment'), _defineProperty(_objectSpread2, \"type\", (_type = {}, _defineProperty(_type, type, 'string'), _defineProperty(_type, doc, 'Name of the comment plugin'), _defineProperty(_type, defaultValue, null), _type)), _objectSpread2), ChangYanSpec, {}, DisqusSpec, {}, GitmentGitalkSpec, {}, IssoSpec, {}, LiveReSpec, {}, ValineSpec);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "comment.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "required",
        "requires",
        "ChangYanSpec",
        "appid",
        "comment",
        "conf",
        "DisqusSpec",
        "shortname",
        "GitmentGitalkSpec",
        "owner",
        "repo",
        "client_id",
        "client_secret",
        "admin",
        "create_issue_manually",
        "distraction_free_mode",
        "IssoSpec",
        "url",
        "LiveReSpec",
        "uid",
        "ValineSpec",
        "app_id",
        "app_key",
        "notify",
        "verify",
        "placeholder",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;2BAAwDA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAA3EC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;IAAcC,Q,wBAAAA,Q;IAAUC,Q,wBAAAA,Q;;AAE3C,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,wCACAL,IADA,EACO,QADP,2BAEAD,GAFA,EAEM,yBAFN,2BAGAG,QAHA,EAGW,IAHX,2BAIAC,QAJA,EAIW,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,UAArB;AAAA,GAJlB,UADY;AAOjBO,EAAAA,IAAI,sCACCP,IADD,EACQ,QADR,0BAECD,GAFD,EAEO,mCAFP,0BAGCG,QAHD,EAGY,IAHZ,0BAICC,QAJD,EAIY,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,UAArB;AAAA,GAJnB;AAPa,CAArB;AAeA,IAAMQ,UAAU,GAAG;AACfC,EAAAA,SAAS,gDACJT,IADI,EACG,QADH,+BAEJD,GAFI,EAEE,kBAFF,+BAGJG,QAHI,EAGO,IAHP,+BAIJC,QAJI,EAIO,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJd;AADM,CAAnB;AASA,IAAMU,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,wCACAX,IADA,EACO,QADP,2BAEAD,GAFA,EAEM,gBAFN,2BAGAG,QAHA,EAGW,IAHX,2BAIAC,QAJA,EAIW,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,SAAjB,IAA8BM,OAAO,CAACN,IAAR,KAAiB,QAAnD;AAAA,GAJlB,UADiB;AAOtBY,EAAAA,IAAI,sCACCZ,IADD,EACQ,QADR,0BAECD,GAFD,EAEO,oCAFP,0BAGCG,QAHD,EAGY,IAHZ,0BAICC,QAJD,EAIY,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,SAAjB,IAA8BM,OAAO,CAACN,IAAR,KAAiB,QAAnD;AAAA,GAJnB,SAPkB;AAatBa,EAAAA,SAAS,gDACJb,IADI,EACG,QADH,+BAEJD,GAFI,EAEE,8BAFF,+BAGJG,QAHI,EAGO,IAHP,+BAIJC,QAJI,EAIO,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,SAAjB,IAA8BM,OAAO,CAACN,IAAR,KAAiB,QAAnD;AAAA,GAJd,cAba;AAmBtBc,EAAAA,aAAa,wDACRd,IADQ,EACD,QADC,mCAERD,GAFQ,EAEF,kCAFE,mCAGRG,QAHQ,EAGG,IAHH,mCAIRC,QAJQ,EAIG,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,SAAjB,IAA8BM,OAAO,CAACN,IAAR,KAAiB,QAAnD;AAAA,GAJV,kBAnBS;AAyBtBe,EAAAA,KAAK,wCACAf,IADA,EACO,CAAC,QAAD,EAAW,OAAX,CADP,2BAEAD,GAFA,EAEM,0EAFN,2BAGAG,QAHA,EAGW,IAHX,2BAIAC,QAJA,EAIW,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJlB,2BAKD,GALC,8BAMIA,IANJ,EAMW,QANX,sBAOIE,QAPJ,EAOe,IAPf,eAzBiB;AAmCtBc,EAAAA,qBAAqB,sEAChBhB,IADgB,EACT,SADS,0CAEhBD,GAFgB,EAEV,4CAFU,0CAGhBE,YAHgB,EAGD,KAHC,0CAIhBE,QAJgB,EAIL,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJF,yBAnCC;AAyCtBiB,EAAAA,qBAAqB,sEAChBjB,IADgB,EACT,SADS,0CAEhBD,GAFgB,EAEV,qCAFU,0CAGhBE,YAHgB,EAGD,KAHC,0CAIhBE,QAJgB,EAIL,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJF;AAzCC,CAA1B;AAiDA,IAAMkB,QAAQ,GAAG;AACbC,EAAAA,GAAG,oCACEnB,IADF,EACS,QADT,yBAEED,GAFF,EAEQ,kCAFR,yBAGEG,QAHF,EAGa,IAHb,yBAIEC,QAJF,EAIa,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,MAArB;AAAA,GAJpB;AADU,CAAjB;AASA,IAAMoB,UAAU,GAAG;AACfC,EAAAA,GAAG,oCACErB,IADF,EACS,QADT,yBAEED,GAFF,EAEQ,4BAFR,yBAGEG,QAHF,EAGa,IAHb,yBAIEC,QAJF,EAIa,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJpB;AADY,CAAnB;AASA,IAAMsB,UAAU,GAAG;AACfC,EAAAA,MAAM,0CACDvB,IADC,EACM,QADN,4BAEDD,GAFC,EAEK,kBAFL,4BAGDG,QAHC,EAGU,IAHV,4BAIDC,QAJC,EAIU,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJjB,WADS;AAOfwB,EAAAA,OAAO,4CACFxB,IADE,EACK,QADL,6BAEFD,GAFE,EAEI,mBAFJ,6BAGFG,QAHE,EAGS,IAHT,6BAIFC,QAJE,EAIS,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJhB,YAPQ;AAafyB,EAAAA,MAAM,0CACDzB,IADC,EACM,SADN,4BAEDD,GAFC,EAEK,iDAFL,4BAGDE,YAHC,EAGc,KAHd,4BAIDE,QAJC,EAIU,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJjB,WAbS;AAmBf0B,EAAAA,MAAM,0CACD1B,IADC,EACM,SADN,4BAEDD,GAFC,EAEK,kCAFL,4BAGDE,YAHC,EAGc,KAHd,4BAIDE,QAJC,EAIU,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJjB,WAnBS;AAyBf2B,EAAAA,WAAW,oDACN3B,IADM,EACC,QADD,iCAEND,GAFM,EAEA,qCAFA,iCAGNE,YAHM,EAGS,kBAHT,iCAINE,QAJM,EAIK,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJZ;AAzBI,CAAnB;AAiCA4B,MAAM,CAACC,OAAP,uEACK7B,IADL,EACY,QADZ,mCAEKD,GAFL,EAEW,kGAFX,+EAISC,IAJT,EAIgB,QAJhB,0BAKSD,GALT,EAKe,4BALf,0BAMSE,YANT,EAMwB,IANxB,6BAQOG,YARP,MASOI,UATP,MAUOE,iBAVP,MAWOQ,QAXP,MAYOE,UAZP,MAaOE,UAbP",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue, required, requires } = require('../common/utils').descriptors;\n\nconst ChangYanSpec = {\n    appid: {\n        [type]: 'string',\n        [doc]: 'Changyan comment app ID',\n        [required]: true,\n        [requires]: comment => comment.type === 'changyan'\n    },\n    conf: {\n        [type]: 'string',\n        [doc]: 'Changyan comment configuration ID',\n        [required]: true,\n        [requires]: comment => comment.type === 'changyan'\n    }\n};\n\nconst DisqusSpec = {\n    shortname: {\n        [type]: 'string',\n        [doc]: 'Disqus shortname',\n        [required]: true,\n        [requires]: comment => comment.type === 'disqus'\n    }\n};\n\nconst GitmentGitalkSpec = {\n    owner: {\n        [type]: 'string',\n        [doc]: 'GitHub user ID',\n        [required]: true,\n        [requires]: comment => comment.type === 'gitment' || comment.type === 'gitalk'\n    },\n    repo: {\n        [type]: 'string',\n        [doc]: 'GitHub repo name to store comments',\n        [required]: true,\n        [requires]: comment => comment.type === 'gitment' || comment.type === 'gitalk'\n    },\n    client_id: {\n        [type]: 'string',\n        [doc]: 'GitHub application client ID',\n        [required]: true,\n        [requires]: comment => comment.type === 'gitment' || comment.type === 'gitalk'\n    },\n    client_secret: {\n        [type]: 'string',\n        [doc]: 'GitHub application client secret',\n        [required]: true,\n        [requires]: comment => comment.type === 'gitment' || comment.type === 'gitalk'\n    },\n    admin: {\n        [type]: ['string', 'array'],\n        [doc]: 'GitHub repo owner and collaborators who can can initialize github issues',\n        [required]: true,\n        [requires]: comment => comment.type === 'gitalk',\n        '*': {\n            [type]: 'string',\n            [required]: true\n        }\n    },\n    create_issue_manually: {\n        [type]: 'boolean',\n        [doc]: 'Create GitHub issue manually for each page',\n        [defaultValue]: false,\n        [requires]: comment => comment.type === 'gitalk'\n    },\n    distraction_free_mode: {\n        [type]: 'boolean',\n        [doc]: 'Facebook-like distraction free mode',\n        [defaultValue]: false,\n        [requires]: comment => comment.type === 'gitalk'\n    }\n};\n\nconst IssoSpec = {\n    url: {\n        [type]: 'string',\n        [doc]: 'URL to your Isso comment service',\n        [required]: true,\n        [requires]: comment => comment.type === 'isso'\n    }\n};\n\nconst LiveReSpec = {\n    uid: {\n        [type]: 'string',\n        [doc]: 'LiveRe comment service UID',\n        [required]: true,\n        [requires]: comment => comment.type === 'livere'\n    }\n};\n\nconst ValineSpec = {\n    app_id: {\n        [type]: 'string',\n        [doc]: 'LeanCloud APP ID',\n        [required]: true,\n        [requires]: comment => comment.type === 'valine'\n    },\n    app_key: {\n        [type]: 'string',\n        [doc]: 'LeanCloud APP key',\n        [required]: true,\n        [requires]: comment => comment.type === 'valine'\n    },\n    notify: {\n        [type]: 'boolean',\n        [doc]: 'Enable email notification when someone comments',\n        [defaultValue]: false,\n        [requires]: comment => comment.type === 'valine'\n    },\n    verify: {\n        [type]: 'boolean',\n        [doc]: 'Enable verification code service',\n        [defaultValue]: false,\n        [requires]: comment => comment.type === 'valine'\n    },\n    placeholder: {\n        [type]: 'string',\n        [doc]: 'Placeholder text in the comment box',\n        [defaultValue]: 'Say something...',\n        [requires]: comment => comment.type === 'valine'\n    }\n};\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Comment plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Comment',\n    type: {\n        [type]: 'string',\n        [doc]: 'Name of the comment plugin',\n        [defaultValue]: null\n    },\n    ...ChangYanSpec,\n    ...DisqusSpec,\n    ...GitmentGitalkSpec,\n    ...IssoSpec,\n    ...LiveReSpec,\n    ...ValineSpec\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525717
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/donate.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/donate.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/donate.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/donate.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "donate.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _qrcode, _business, _currency_code, _url, _type, _objectSpread2, _module$exports;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue,\n    required = _require$descriptors.required,\n    requires = _require$descriptors.requires,\n    format = _require$descriptors.format;\n\nvar DEFAULT_DONATE = [{\n  type: 'alipay',\n  qrcode: ''\n}, {\n  type: 'wechat',\n  qrcode: ''\n}, {\n  type: 'paypal',\n  business: '',\n  currency_code: 'USD'\n}, {\n  type: 'patreon',\n  url: ''\n}];\nvar QrcodeSpec = {\n  qrcode: (_qrcode = {}, _defineProperty(_qrcode, type, 'string'), _defineProperty(_qrcode, doc, 'Qrcode image URL'), _defineProperty(_qrcode, required, true), _defineProperty(_qrcode, requires, function (donate) {\n    return donate.type === 'alipay' || donate.type === 'wechat';\n  }), _qrcode)\n};\nvar PaypalSpec = {\n  business: (_business = {}, _defineProperty(_business, type, 'string'), _defineProperty(_business, doc, 'Paypal business ID or email address'), _defineProperty(_business, required, true), _defineProperty(_business, requires, function (donate) {\n    return donate.type === 'paypal';\n  }), _business),\n  currency_code: (_currency_code = {}, _defineProperty(_currency_code, type, 'string'), _defineProperty(_currency_code, doc, 'Currency code'), _defineProperty(_currency_code, required, true), _defineProperty(_currency_code, requires, function (donate) {\n    return donate.type === 'paypal';\n  }), _currency_code)\n};\nvar PatreonSpec = {\n  url: (_url = {}, _defineProperty(_url, type, 'string'), _defineProperty(_url, doc, 'URL to the Patreon page'), _defineProperty(_url, required, true), _defineProperty(_url, requires, function (donate) {\n    return donate.type === 'patreon';\n  }), _url)\n};\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'array'), _defineProperty(_module$exports, doc, 'Donation entries\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Donation/'), _defineProperty(_module$exports, defaultValue, DEFAULT_DONATE), _defineProperty(_module$exports, '*', _objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, type, 'object'), _defineProperty(_objectSpread2, doc, 'Single donation entry settings'), _defineProperty(_objectSpread2, \"type\", (_type = {}, _defineProperty(_type, type, 'string'), _defineProperty(_type, doc, 'Donation entry name'), _defineProperty(_type, required, true), _type)), _objectSpread2), QrcodeSpec, {}, PaypalSpec, {}, PatreonSpec)), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbmF0ZS5zcGVjLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJkZXNjcmlwdG9ycyIsImRvYyIsInR5cGUiLCJkZWZhdWx0VmFsdWUiLCJyZXF1aXJlZCIsInJlcXVpcmVzIiwiZm9ybWF0IiwiREVGQVVMVF9ET05BVEUiLCJxcmNvZGUiLCJidXNpbmVzcyIsImN1cnJlbmN5X2NvZGUiLCJ1cmwiLCJRcmNvZGVTcGVjIiwiZG9uYXRlIiwiUGF5cGFsU3BlYyIsIlBhdHJlb25TcGVjIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OzsyQkFBZ0VBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCQyxXO0lBQW5GQyxHLHdCQUFBQSxHO0lBQUtDLEksd0JBQUFBLEk7SUFBTUMsWSx3QkFBQUEsWTtJQUFjQyxRLHdCQUFBQSxRO0lBQVVDLFEsd0JBQUFBLFE7SUFBVUMsTSx3QkFBQUEsTTs7QUFFckQsSUFBTUMsY0FBYyxHQUFHLENBQ25CO0FBQ0lMLEVBQUFBLElBQUksRUFBRSxRQURWO0FBRUlNLEVBQUFBLE1BQU0sRUFBRTtBQUZaLENBRG1CLEVBS25CO0FBQ0lOLEVBQUFBLElBQUksRUFBRSxRQURWO0FBRUlNLEVBQUFBLE1BQU0sRUFBRTtBQUZaLENBTG1CLEVBU25CO0FBQ0lOLEVBQUFBLElBQUksRUFBRSxRQURWO0FBRUlPLEVBQUFBLFFBQVEsRUFBRSxFQUZkO0FBR0lDLEVBQUFBLGFBQWEsRUFBRTtBQUhuQixDQVRtQixFQWNuQjtBQUNJUixFQUFBQSxJQUFJLEVBQUUsU0FEVjtBQUVJUyxFQUFBQSxHQUFHLEVBQUU7QUFGVCxDQWRtQixDQUF2QjtBQW9CQSxJQUFNQyxVQUFVLEdBQUc7QUFDZkosRUFBQUEsTUFBTSwwQ0FDRE4sSUFEQyxFQUNNLFFBRE4sNEJBRURELEdBRkMsRUFFSyxrQkFGTCw0QkFHREcsUUFIQyxFQUdVLElBSFYsNEJBSURDLFFBSkMsRUFJVSxVQUFBUSxNQUFNO0FBQUEsV0FBSUEsTUFBTSxDQUFDWCxJQUFQLEtBQWdCLFFBQWhCLElBQTRCVyxNQUFNLENBQUNYLElBQVAsS0FBZ0IsUUFBaEQ7QUFBQSxHQUpoQjtBQURTLENBQW5CO0FBU0EsSUFBTVksVUFBVSxHQUFHO0FBQ2ZMLEVBQUFBLFFBQVEsOENBQ0hQLElBREcsRUFDSSxRQURKLDhCQUVIRCxHQUZHLEVBRUcscUNBRkgsOEJBR0hHLFFBSEcsRUFHUSxJQUhSLDhCQUlIQyxRQUpHLEVBSVEsVUFBQVEsTUFBTTtBQUFBLFdBQUlBLE1BQU0sQ0FBQ1gsSUFBUCxLQUFnQixRQUFwQjtBQUFBLEdBSmQsYUFETztBQU9mUSxFQUFBQSxhQUFhLHdEQUNSUixJQURRLEVBQ0QsUUFEQyxtQ0FFUkQsR0FGUSxFQUVGLGVBRkUsbUNBR1JHLFFBSFEsRUFHRyxJQUhILG1DQUlSQyxRQUpRLEVBSUcsVUFBQVEsTUFBTTtBQUFBLFdBQUlBLE1BQU0sQ0FBQ1gsSUFBUCxLQUFnQixRQUFwQjtBQUFBLEdBSlQ7QUFQRSxDQUFuQjtBQWVBLElBQU1hLFdBQVcsR0FBRztBQUNoQkosRUFBQUEsR0FBRyxvQ0FDRVQsSUFERixFQUNTLFFBRFQseUJBRUVELEdBRkYsRUFFUSx5QkFGUix5QkFHRUcsUUFIRixFQUdhLElBSGIseUJBSUVDLFFBSkYsRUFJYSxVQUFBUSxNQUFNO0FBQUEsV0FBSUEsTUFBTSxDQUFDWCxJQUFQLEtBQWdCLFNBQXBCO0FBQUEsR0FKbkI7QUFEYSxDQUFwQjtBQVNBYyxNQUFNLENBQUNDLE9BQVAsMkRBQ0tmLElBREwsRUFDWSxPQURaLG9DQUVLRCxHQUZMLEVBRVcscUZBRlgsb0NBR0tFLFlBSEwsRUFHb0JJLGNBSHBCLG9DQUlJLEdBSkosc0VBS1NMLElBTFQsRUFLZ0IsUUFMaEIsbUNBTVNELEdBTlQsRUFNZSxnQ0FOZiwrRUFRYUMsSUFSYixFQVFvQixRQVJwQiwwQkFTYUQsR0FUYixFQVNtQixxQkFUbkIsMEJBVWFHLFFBVmIsRUFVd0IsSUFWeEIsNkJBWVdRLFVBWlgsTUFhV0UsVUFiWCxNQWNXQyxXQWRYIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1cy9pbmNsdWRlcy9zcGVjcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZG9jLCB0eXBlLCBkZWZhdWx0VmFsdWUsIHJlcXVpcmVkLCByZXF1aXJlcywgZm9ybWF0IH0gPSByZXF1aXJlKCcuLi9jb21tb24vdXRpbHMnKS5kZXNjcmlwdG9ycztcblxuY29uc3QgREVGQVVMVF9ET05BVEUgPSBbXG4gICAge1xuICAgICAgICB0eXBlOiAnYWxpcGF5JyxcbiAgICAgICAgcXJjb2RlOiAnJ1xuICAgIH0sXG4gICAge1xuICAgICAgICB0eXBlOiAnd2VjaGF0JyxcbiAgICAgICAgcXJjb2RlOiAnJ1xuICAgIH0sXG4gICAge1xuICAgICAgICB0eXBlOiAncGF5cGFsJyxcbiAgICAgICAgYnVzaW5lc3M6ICcnLFxuICAgICAgICBjdXJyZW5jeV9jb2RlOiAnVVNEJ1xuICAgIH0sXG4gICAge1xuICAgICAgICB0eXBlOiAncGF0cmVvbicsXG4gICAgICAgIHVybDogJydcbiAgICB9XG5dO1xuXG5jb25zdCBRcmNvZGVTcGVjID0ge1xuICAgIHFyY29kZToge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ1FyY29kZSBpbWFnZSBVUkwnLFxuICAgICAgICBbcmVxdWlyZWRdOiB0cnVlLFxuICAgICAgICBbcmVxdWlyZXNdOiBkb25hdGUgPT4gZG9uYXRlLnR5cGUgPT09ICdhbGlwYXknIHx8IGRvbmF0ZS50eXBlID09PSAnd2VjaGF0J1xuICAgIH1cbn07XG5cbmNvbnN0IFBheXBhbFNwZWMgPSB7XG4gICAgYnVzaW5lc3M6IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdQYXlwYWwgYnVzaW5lc3MgSUQgb3IgZW1haWwgYWRkcmVzcycsXG4gICAgICAgIFtyZXF1aXJlZF06IHRydWUsXG4gICAgICAgIFtyZXF1aXJlc106IGRvbmF0ZSA9PiBkb25hdGUudHlwZSA9PT0gJ3BheXBhbCdcbiAgICB9LFxuICAgIGN1cnJlbmN5X2NvZGU6IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdDdXJyZW5jeSBjb2RlJyxcbiAgICAgICAgW3JlcXVpcmVkXTogdHJ1ZSxcbiAgICAgICAgW3JlcXVpcmVzXTogZG9uYXRlID0+IGRvbmF0ZS50eXBlID09PSAncGF5cGFsJ1xuICAgIH1cbn07XG5cbmNvbnN0IFBhdHJlb25TcGVjID0ge1xuICAgIHVybDoge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ1VSTCB0byB0aGUgUGF0cmVvbiBwYWdlJyxcbiAgICAgICAgW3JlcXVpcmVkXTogdHJ1ZSxcbiAgICAgICAgW3JlcXVpcmVzXTogZG9uYXRlID0+IGRvbmF0ZS50eXBlID09PSAncGF0cmVvbidcbiAgICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBbdHlwZV06ICdhcnJheScsXG4gICAgW2RvY106ICdEb25hdGlvbiBlbnRyaWVzXFxuaHR0cHM6Ly9wcG9mZmljZS5naXRodWIuaW8vaGV4by10aGVtZS1pY2FydXMvY2F0ZWdvcmllcy9Eb25hdGlvbi8nLFxuICAgIFtkZWZhdWx0VmFsdWVdOiBERUZBVUxUX0RPTkFURSxcbiAgICAnKic6IHtcbiAgICAgICAgW3R5cGVdOiAnb2JqZWN0JyxcbiAgICAgICAgW2RvY106ICdTaW5nbGUgZG9uYXRpb24gZW50cnkgc2V0dGluZ3MnLFxuICAgICAgICB0eXBlOiB7XG4gICAgICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICAgICAgW2RvY106ICdEb25hdGlvbiBlbnRyeSBuYW1lJyxcbiAgICAgICAgICAgIFtyZXF1aXJlZF06IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgLi4uUXJjb2RlU3BlYyxcbiAgICAgICAgLi4uUGF5cGFsU3BlYyxcbiAgICAgICAgLi4uUGF0cmVvblNwZWNcbiAgICB9XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "donate.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "required",
        "requires",
        "format",
        "DEFAULT_DONATE",
        "qrcode",
        "business",
        "currency_code",
        "url",
        "QrcodeSpec",
        "donate",
        "PaypalSpec",
        "PatreonSpec",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;2BAAgEA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAnFC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;IAAcC,Q,wBAAAA,Q;IAAUC,Q,wBAAAA,Q;IAAUC,M,wBAAAA,M;;AAErD,IAAMC,cAAc,GAAG,CACnB;AACIL,EAAAA,IAAI,EAAE,QADV;AAEIM,EAAAA,MAAM,EAAE;AAFZ,CADmB,EAKnB;AACIN,EAAAA,IAAI,EAAE,QADV;AAEIM,EAAAA,MAAM,EAAE;AAFZ,CALmB,EASnB;AACIN,EAAAA,IAAI,EAAE,QADV;AAEIO,EAAAA,QAAQ,EAAE,EAFd;AAGIC,EAAAA,aAAa,EAAE;AAHnB,CATmB,EAcnB;AACIR,EAAAA,IAAI,EAAE,SADV;AAEIS,EAAAA,GAAG,EAAE;AAFT,CAdmB,CAAvB;AAoBA,IAAMC,UAAU,GAAG;AACfJ,EAAAA,MAAM,0CACDN,IADC,EACM,QADN,4BAEDD,GAFC,EAEK,kBAFL,4BAGDG,QAHC,EAGU,IAHV,4BAIDC,QAJC,EAIU,UAAAQ,MAAM;AAAA,WAAIA,MAAM,CAACX,IAAP,KAAgB,QAAhB,IAA4BW,MAAM,CAACX,IAAP,KAAgB,QAAhD;AAAA,GAJhB;AADS,CAAnB;AASA,IAAMY,UAAU,GAAG;AACfL,EAAAA,QAAQ,8CACHP,IADG,EACI,QADJ,8BAEHD,GAFG,EAEG,qCAFH,8BAGHG,QAHG,EAGQ,IAHR,8BAIHC,QAJG,EAIQ,UAAAQ,MAAM;AAAA,WAAIA,MAAM,CAACX,IAAP,KAAgB,QAApB;AAAA,GAJd,aADO;AAOfQ,EAAAA,aAAa,wDACRR,IADQ,EACD,QADC,mCAERD,GAFQ,EAEF,eAFE,mCAGRG,QAHQ,EAGG,IAHH,mCAIRC,QAJQ,EAIG,UAAAQ,MAAM;AAAA,WAAIA,MAAM,CAACX,IAAP,KAAgB,QAApB;AAAA,GAJT;AAPE,CAAnB;AAeA,IAAMa,WAAW,GAAG;AAChBJ,EAAAA,GAAG,oCACET,IADF,EACS,QADT,yBAEED,GAFF,EAEQ,yBAFR,yBAGEG,QAHF,EAGa,IAHb,yBAIEC,QAJF,EAIa,UAAAQ,MAAM;AAAA,WAAIA,MAAM,CAACX,IAAP,KAAgB,SAApB;AAAA,GAJnB;AADa,CAApB;AASAc,MAAM,CAACC,OAAP,2DACKf,IADL,EACY,OADZ,oCAEKD,GAFL,EAEW,qFAFX,oCAGKE,YAHL,EAGoBI,cAHpB,oCAII,GAJJ,sEAKSL,IALT,EAKgB,QALhB,mCAMSD,GANT,EAMe,gCANf,+EAQaC,IARb,EAQoB,QARpB,0BASaD,GATb,EASmB,qBATnB,0BAUaG,QAVb,EAUwB,IAVxB,6BAYWQ,UAZX,MAaWE,UAbX,MAcWC,WAdX",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue, required, requires, format } = require('../common/utils').descriptors;\n\nconst DEFAULT_DONATE = [\n    {\n        type: 'alipay',\n        qrcode: ''\n    },\n    {\n        type: 'wechat',\n        qrcode: ''\n    },\n    {\n        type: 'paypal',\n        business: '',\n        currency_code: 'USD'\n    },\n    {\n        type: 'patreon',\n        url: ''\n    }\n];\n\nconst QrcodeSpec = {\n    qrcode: {\n        [type]: 'string',\n        [doc]: 'Qrcode image URL',\n        [required]: true,\n        [requires]: donate => donate.type === 'alipay' || donate.type === 'wechat'\n    }\n};\n\nconst PaypalSpec = {\n    business: {\n        [type]: 'string',\n        [doc]: 'Paypal business ID or email address',\n        [required]: true,\n        [requires]: donate => donate.type === 'paypal'\n    },\n    currency_code: {\n        [type]: 'string',\n        [doc]: 'Currency code',\n        [required]: true,\n        [requires]: donate => donate.type === 'paypal'\n    }\n};\n\nconst PatreonSpec = {\n    url: {\n        [type]: 'string',\n        [doc]: 'URL to the Patreon page',\n        [required]: true,\n        [requires]: donate => donate.type === 'patreon'\n    }\n};\n\nmodule.exports = {\n    [type]: 'array',\n    [doc]: 'Donation entries\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Donation/',\n    [defaultValue]: DEFAULT_DONATE,\n    '*': {\n        [type]: 'object',\n        [doc]: 'Single donation entry settings',\n        type: {\n            [type]: 'string',\n            [doc]: 'Donation entry name',\n            [required]: true\n        },\n        ...QrcodeSpec,\n        ...PaypalSpec,\n        ...PatreonSpec\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525721
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/share.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/share.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/share.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/share.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "share.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _type, _install_url, _module$exports;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue,\n    required = _require$descriptors.required,\n    requires = _require$descriptors.requires;\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'Share plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Share'), _defineProperty(_module$exports, \"type\", (_type = {}, _defineProperty(_type, type, 'string'), _defineProperty(_type, doc, 'Share plugin name'), _defineProperty(_type, defaultValue, null), _type)), _defineProperty(_module$exports, \"install_url\", (_install_url = {}, _defineProperty(_install_url, type, 'string'), _defineProperty(_install_url, doc, 'URL to the share plugin script provided by share plugin service provider'), _defineProperty(_install_url, required, true), _defineProperty(_install_url, requires, function (share) {\n  return share.type === 'sharethis' || share.type === 'addthis';\n}), _install_url)), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNoYXJlLnNwZWMuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsImRlc2NyaXB0b3JzIiwiZG9jIiwidHlwZSIsImRlZmF1bHRWYWx1ZSIsInJlcXVpcmVkIiwicmVxdWlyZXMiLCJtb2R1bGUiLCJleHBvcnRzIiwic2hhcmUiXSwibWFwcGluZ3MiOiI7Ozs7OzsyQkFBd0RBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCQyxXO0lBQTNFQyxHLHdCQUFBQSxHO0lBQUtDLEksd0JBQUFBLEk7SUFBTUMsWSx3QkFBQUEsWTtJQUFjQyxRLHdCQUFBQSxRO0lBQVVDLFEsd0JBQUFBLFE7O0FBRTNDQyxNQUFNLENBQUNDLE9BQVAsMkRBQ0tMLElBREwsRUFDWSxRQURaLG9DQUVLRCxHQUZMLEVBRVcsOEZBRlgsZ0ZBSVNDLElBSlQsRUFJZ0IsUUFKaEIsMEJBS1NELEdBTFQsRUFLZSxtQkFMZiwwQkFNU0UsWUFOVCxFQU13QixJQU54Qiw4R0FTU0QsSUFUVCxFQVNnQixRQVRoQixpQ0FVU0QsR0FWVCxFQVVlLDBFQVZmLGlDQVdTRyxRQVhULEVBV29CLElBWHBCLGlDQVlTQyxRQVpULEVBWW9CLFVBQUFHLEtBQUs7QUFBQSxTQUFJQSxLQUFLLENBQUNOLElBQU4sS0FBZSxXQUFmLElBQThCTSxLQUFLLENBQUNOLElBQU4sS0FBZSxTQUFqRDtBQUFBLENBWnpCIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1cy9pbmNsdWRlcy9zcGVjcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZG9jLCB0eXBlLCBkZWZhdWx0VmFsdWUsIHJlcXVpcmVkLCByZXF1aXJlcyB9ID0gcmVxdWlyZSgnLi4vY29tbW9uL3V0aWxzJykuZGVzY3JpcHRvcnM7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFt0eXBlXTogJ29iamVjdCcsXG4gICAgW2RvY106ICdTaGFyZSBwbHVnaW4gc2V0dGluZ3NcXG5odHRwczovL3Bwb2ZmaWNlLmdpdGh1Yi5pby9oZXhvLXRoZW1lLWljYXJ1cy9jYXRlZ29yaWVzL1BsdWdpbnMvU2hhcmUnLFxuICAgIHR5cGU6IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdTaGFyZSBwbHVnaW4gbmFtZScsXG4gICAgICAgIFtkZWZhdWx0VmFsdWVdOiBudWxsXG4gICAgfSxcbiAgICBpbnN0YWxsX3VybDoge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ1VSTCB0byB0aGUgc2hhcmUgcGx1Z2luIHNjcmlwdCBwcm92aWRlZCBieSBzaGFyZSBwbHVnaW4gc2VydmljZSBwcm92aWRlcicsXG4gICAgICAgIFtyZXF1aXJlZF06IHRydWUsXG4gICAgICAgIFtyZXF1aXJlc106IHNoYXJlID0+IHNoYXJlLnR5cGUgPT09ICdzaGFyZXRoaXMnIHx8IHNoYXJlLnR5cGUgPT09ICdhZGR0aGlzJ1xuICAgIH1cbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "share.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "required",
        "requires",
        "module",
        "exports",
        "share"
      ],
      "mappings": ";;;;;;2BAAwDA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAA3EC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;IAAcC,Q,wBAAAA,Q;IAAUC,Q,wBAAAA,Q;;AAE3CC,MAAM,CAACC,OAAP,2DACKL,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,8FAFX,gFAISC,IAJT,EAIgB,QAJhB,0BAKSD,GALT,EAKe,mBALf,0BAMSE,YANT,EAMwB,IANxB,8GASSD,IATT,EASgB,QAThB,iCAUSD,GAVT,EAUe,0EAVf,iCAWSG,QAXT,EAWoB,IAXpB,iCAYSC,QAZT,EAYoB,UAAAG,KAAK;AAAA,SAAIA,KAAK,CAACN,IAAN,KAAe,WAAf,IAA8BM,KAAK,CAACN,IAAN,KAAe,SAAjD;AAAA,CAZzB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue, required, requires } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Share plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Share',\n    type: {\n        [type]: 'string',\n        [doc]: 'Share plugin name',\n        [defaultValue]: null\n    },\n    install_url: {\n        [type]: 'string',\n        [doc]: 'URL to the share plugin script provided by share plugin service provider',\n        [required]: true,\n        [requires]: share => share.type === 'sharethis' || share.type === 'addthis'\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525725
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/sidebar.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/sidebar.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/sidebar.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/sidebar.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "sidebar.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _module$exports;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue,\n    required = _require$descriptors.required,\n    requires = _require$descriptors.requires,\n    format = _require$descriptors.format;\n\nfunction commonSettings(position) {\n  var _sticky, _ref;\n\n  return _ref = {}, _defineProperty(_ref, type, 'object'), _defineProperty(_ref, doc, position + ' sidebar settings'), _defineProperty(_ref, \"sticky\", (_sticky = {}, _defineProperty(_sticky, type, 'boolean'), _defineProperty(_sticky, doc, 'Whether the ' + position + ' sidebar is sticky when page scrolls\\nhttps://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/'), _defineProperty(_sticky, defaultValue, false), _sticky)), _ref;\n}\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'Sidebar settings.\\nPlease be noted that a sidebar is only visible when it has at least one widget'), _defineProperty(_module$exports, \"left\", commonSettings('left')), _defineProperty(_module$exports, \"right\", commonSettings('right')), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZGViYXIuc3BlYy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiZGVzY3JpcHRvcnMiLCJkb2MiLCJ0eXBlIiwiZGVmYXVsdFZhbHVlIiwicmVxdWlyZWQiLCJyZXF1aXJlcyIsImZvcm1hdCIsImNvbW1vblNldHRpbmdzIiwicG9zaXRpb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7MkJBQWdFQSxPQUFPLENBQUMsaUJBQUQsQ0FBUCxDQUEyQkMsVztJQUFuRkMsRyx3QkFBQUEsRztJQUFLQyxJLHdCQUFBQSxJO0lBQU1DLFksd0JBQUFBLFk7SUFBY0MsUSx3QkFBQUEsUTtJQUFVQyxRLHdCQUFBQSxRO0lBQVVDLE0sd0JBQUFBLE07O0FBRXJELFNBQVNDLGNBQVQsQ0FBd0JDLFFBQXhCLEVBQWtDO0FBQUE7O0FBQzlCLDBDQUNLTixJQURMLEVBQ1ksUUFEWix5QkFFS0QsR0FGTCxFQUVXTyxRQUFRLEdBQUcsbUJBRnRCLDJFQUlTTixJQUpULEVBSWdCLFNBSmhCLDRCQUtTRCxHQUxULEVBS2UsaUJBQWlCTyxRQUFqQixHQUE0QixpSkFMM0MsNEJBTVNMLFlBTlQsRUFNd0IsS0FOeEI7QUFTSDs7QUFFRE0sTUFBTSxDQUFDQyxPQUFQLDJEQUNLUixJQURMLEVBQ1ksUUFEWixvQ0FFS0QsR0FGTCxFQUVXLG1HQUZYLDRDQUdVTSxjQUFjLENBQUMsTUFBRCxDQUh4Qiw2Q0FJV0EsY0FBYyxDQUFDLE9BQUQsQ0FKekIiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2luY2x1ZGVzL3NwZWNzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBkb2MsIHR5cGUsIGRlZmF1bHRWYWx1ZSwgcmVxdWlyZWQsIHJlcXVpcmVzLCBmb3JtYXQgfSA9IHJlcXVpcmUoJy4uL2NvbW1vbi91dGlscycpLmRlc2NyaXB0b3JzO1xuXG5mdW5jdGlvbiBjb21tb25TZXR0aW5ncyhwb3NpdGlvbikge1xuICAgIHJldHVybiB7XG4gICAgICAgIFt0eXBlXTogJ29iamVjdCcsXG4gICAgICAgIFtkb2NdOiBwb3NpdGlvbiArICcgc2lkZWJhciBzZXR0aW5ncycsXG4gICAgICAgIHN0aWNreToge1xuICAgICAgICAgICAgW3R5cGVdOiAnYm9vbGVhbicsXG4gICAgICAgICAgICBbZG9jXTogJ1doZXRoZXIgdGhlICcgKyBwb3NpdGlvbiArICcgc2lkZWJhciBpcyBzdGlja3kgd2hlbiBwYWdlIHNjcm9sbHNcXG5odHRwczovL3Bwb2ZmaWNlLmdpdGh1Yi5pby9oZXhvLXRoZW1lLWljYXJ1cy9Db25maWd1cmF0aW9uL1RoZW1lL21ha2UtYS1zaWRlYmFyLXN0aWNreS13aGVuLXBhZ2Utc2Nyb2xscy8nLFxuICAgICAgICAgICAgW2RlZmF1bHRWYWx1ZV06IGZhbHNlXG4gICAgICAgIH1cbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFt0eXBlXTogJ29iamVjdCcsXG4gICAgW2RvY106ICdTaWRlYmFyIHNldHRpbmdzLlxcblBsZWFzZSBiZSBub3RlZCB0aGF0IGEgc2lkZWJhciBpcyBvbmx5IHZpc2libGUgd2hlbiBpdCBoYXMgYXQgbGVhc3Qgb25lIHdpZGdldCcsXG4gICAgbGVmdDogY29tbW9uU2V0dGluZ3MoJ2xlZnQnKSxcbiAgICByaWdodDogY29tbW9uU2V0dGluZ3MoJ3JpZ2h0Jylcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "sidebar.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "required",
        "requires",
        "format",
        "commonSettings",
        "position",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;2BAAgEA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAnFC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;IAAcC,Q,wBAAAA,Q;IAAUC,Q,wBAAAA,Q;IAAUC,M,wBAAAA,M;;AAErD,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAAA;;AAC9B,0CACKN,IADL,EACY,QADZ,yBAEKD,GAFL,EAEWO,QAAQ,GAAG,mBAFtB,2EAISN,IAJT,EAIgB,SAJhB,4BAKSD,GALT,EAKe,iBAAiBO,QAAjB,GAA4B,iJAL3C,4BAMSL,YANT,EAMwB,KANxB;AASH;;AAEDM,MAAM,CAACC,OAAP,2DACKR,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,mGAFX,4CAGUM,cAAc,CAAC,MAAD,CAHxB,6CAIWA,cAAc,CAAC,OAAD,CAJzB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue, required, requires, format } = require('../common/utils').descriptors;\n\nfunction commonSettings(position) {\n    return {\n        [type]: 'object',\n        [doc]: position + ' sidebar settings',\n        sticky: {\n            [type]: 'boolean',\n            [doc]: 'Whether the ' + position + ' sidebar is sticky when page scrolls\\nhttps://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/',\n            [defaultValue]: false\n        }\n    }\n}\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Sidebar settings.\\nPlease be noted that a sidebar is only visible when it has at least one widget',\n    left: commonSettings('left'),\n    right: commonSettings('right')\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525729
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/widgets.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/widgets.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/widgets.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/widgets.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "widgets.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _author, _author_title, _location, _avatar, _avatar_rounded, _gravatar, _follow_link, _, _links, _feedburner_id, _description, _type, _position, _objectSpread3, _module$exports;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue,\n    required = _require$descriptors.required,\n    requires = _require$descriptors.requires,\n    format = _require$descriptors.format;\n\nvar DEFAULT_WIDGETS = [{\n  type: 'profile',\n  position: 'left',\n  author: 'Your name',\n  author_title: 'Your title',\n  location: 'Your location',\n  avatar: null,\n  gravatar: null,\n  avatar_rounded: false,\n  follow_link: 'https://github.com/ppoffice',\n  social_links: {\n    Github: {\n      icon: 'fab fa-github',\n      url: 'https://github.com/ppoffice'\n    },\n    Facebook: {\n      icon: 'fab fa-facebook',\n      url: 'https://facebook.com'\n    },\n    Twitter: {\n      icon: 'fab fa-twitter',\n      url: 'https://twitter.com'\n    },\n    Dribbble: {\n      icon: 'fab fa-dribbble',\n      url: 'https://dribbble.com'\n    },\n    RSS: {\n      icon: 'fas fa-rss',\n      url: '/'\n    }\n  }\n}, {\n  type: 'toc',\n  position: 'left'\n}, {\n  type: 'links',\n  position: 'left',\n  links: {\n    Hexo: 'https://hexo.io',\n    PPOffice: 'https://github.com/ppoffice'\n  }\n}, {\n  type: 'category',\n  position: 'left'\n}, {\n  type: 'tagcloud',\n  position: 'left'\n}, {\n  type: 'recent_posts',\n  position: 'right'\n}, {\n  type: 'archive',\n  position: 'right'\n}, {\n  type: 'tag',\n  position: 'right'\n}];\nvar ProfileSpec = {\n  author: (_author = {}, _defineProperty(_author, type, 'string'), _defineProperty(_author, doc, 'Author name to be shown in the profile widget'), _defineProperty(_author, defaultValue, 'Your name'), _author),\n  author_title: (_author_title = {}, _defineProperty(_author_title, type, 'string'), _defineProperty(_author_title, doc, 'Title of the author to be shown in the profile widget'), _defineProperty(_author_title, defaultValue, 'Your title'), _author_title),\n  location: (_location = {}, _defineProperty(_location, type, 'string'), _defineProperty(_location, doc, 'Author\\'s current location to be shown in the profile widget'), _defineProperty(_location, defaultValue, 'Your location'), _location),\n  avatar: (_avatar = {}, _defineProperty(_avatar, type, 'string'), _defineProperty(_avatar, doc, 'Path or URL to the avatar to be shown in the profile widget'), _defineProperty(_avatar, defaultValue, '/images/avatar.png'), _avatar),\n  avatar_rounded: (_avatar_rounded = {}, _defineProperty(_avatar_rounded, type, 'boolean'), _defineProperty(_avatar_rounded, doc, 'Whether to show avatar image rounded or square'), _defineProperty(_avatar_rounded, defaultValue, false), _avatar_rounded),\n  gravatar: (_gravatar = {}, _defineProperty(_gravatar, type, 'string'), _defineProperty(_gravatar, doc, 'Email address for the Gravatar to be shown in the profile widget'), _gravatar),\n  follow_link: (_follow_link = {}, _defineProperty(_follow_link, type, 'string'), _defineProperty(_follow_link, doc, 'Path or URL for the follow button'), _follow_link),\n  social_links: _objectSpread({}, require('./icon_link.spec'), _defineProperty({}, doc, 'Links to be shown on the bottom of the profile widget'))\n};\n\nfor (var key in ProfileSpec) {\n  ProfileSpec[key][requires] = function (widget) {\n    return widget.type === 'profile';\n  };\n}\n\nvar LinksSpec = {\n  links: (_links = {}, _defineProperty(_links, type, 'object'), _defineProperty(_links, doc, 'Links to be shown in the links widget'), _defineProperty(_links, requires, function (parent) {\n    return parent.type === 'links';\n  }), _defineProperty(_links, '*', (_ = {}, _defineProperty(_, type, 'string'), _defineProperty(_, doc, 'Path or URL to the link'), _defineProperty(_, required, true), _)), _links)\n};\nvar SubscrbieEmailSpec = {\n  feedburner_id: (_feedburner_id = {}, _defineProperty(_feedburner_id, type, 'string'), _defineProperty(_feedburner_id, doc, 'Feedburner ID'), _defineProperty(_feedburner_id, required, true), _defineProperty(_feedburner_id, requires, function (parent) {\n    return parent.type === 'subscribe_email';\n  }), _feedburner_id),\n  description: (_description = {}, _defineProperty(_description, type, 'string'), _defineProperty(_description, doc, 'Hint text under the subscription input'), _defineProperty(_description, requires, function (parent) {\n    return parent.type === 'subscribe_email';\n  }), _description)\n};\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'array'), _defineProperty(_module$exports, doc, 'Sidebar widget settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Widgets/'), _defineProperty(_module$exports, defaultValue, DEFAULT_WIDGETS), _defineProperty(_module$exports, '*', _objectSpread((_objectSpread3 = {}, _defineProperty(_objectSpread3, type, 'object'), _defineProperty(_objectSpread3, doc, 'Single widget settings'), _defineProperty(_objectSpread3, \"type\", (_type = {}, _defineProperty(_type, type, 'string'), _defineProperty(_type, doc, 'Widget name'), _defineProperty(_type, required, true), _defineProperty(_type, defaultValue, 'profile'), _type)), _defineProperty(_objectSpread3, \"position\", (_position = {}, _defineProperty(_position, type, 'string'), _defineProperty(_position, doc, 'Where should the widget be placed, left or right'), _defineProperty(_position, format, /^(left|right)$/), _defineProperty(_position, required, true), _defineProperty(_position, defaultValue, 'left'), _position)), _objectSpread3), ProfileSpec, {}, LinksSpec, {}, SubscrbieEmailSpec)), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndpZGdldHMuc3BlYy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiZGVzY3JpcHRvcnMiLCJkb2MiLCJ0eXBlIiwiZGVmYXVsdFZhbHVlIiwicmVxdWlyZWQiLCJyZXF1aXJlcyIsImZvcm1hdCIsIkRFRkFVTFRfV0lER0VUUyIsInBvc2l0aW9uIiwiYXV0aG9yIiwiYXV0aG9yX3RpdGxlIiwibG9jYXRpb24iLCJhdmF0YXIiLCJncmF2YXRhciIsImF2YXRhcl9yb3VuZGVkIiwiZm9sbG93X2xpbmsiLCJzb2NpYWxfbGlua3MiLCJHaXRodWIiLCJpY29uIiwidXJsIiwiRmFjZWJvb2siLCJUd2l0dGVyIiwiRHJpYmJibGUiLCJSU1MiLCJsaW5rcyIsIkhleG8iLCJQUE9mZmljZSIsIlByb2ZpbGVTcGVjIiwia2V5Iiwid2lkZ2V0IiwiTGlua3NTcGVjIiwicGFyZW50IiwiU3Vic2NyYmllRW1haWxTcGVjIiwiZmVlZGJ1cm5lcl9pZCIsImRlc2NyaXB0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OzsyQkFBZ0VBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCQyxXO0lBQW5GQyxHLHdCQUFBQSxHO0lBQUtDLEksd0JBQUFBLEk7SUFBTUMsWSx3QkFBQUEsWTtJQUFjQyxRLHdCQUFBQSxRO0lBQVVDLFEsd0JBQUFBLFE7SUFBVUMsTSx3QkFBQUEsTTs7QUFFckQsSUFBTUMsZUFBZSxHQUFHLENBQ3BCO0FBQ0lMLEVBQUFBLElBQUksRUFBRSxTQURWO0FBRUlNLEVBQUFBLFFBQVEsRUFBRSxNQUZkO0FBR0lDLEVBQUFBLE1BQU0sRUFBRSxXQUhaO0FBSUlDLEVBQUFBLFlBQVksRUFBRSxZQUpsQjtBQUtJQyxFQUFBQSxRQUFRLEVBQUUsZUFMZDtBQU1JQyxFQUFBQSxNQUFNLEVBQUUsSUFOWjtBQU9JQyxFQUFBQSxRQUFRLEVBQUUsSUFQZDtBQVFJQyxFQUFBQSxjQUFjLEVBQUUsS0FScEI7QUFTSUMsRUFBQUEsV0FBVyxFQUFFLDZCQVRqQjtBQVVJQyxFQUFBQSxZQUFZLEVBQUU7QUFDVkMsSUFBQUEsTUFBTSxFQUFFO0FBQ0pDLE1BQUFBLElBQUksRUFBRSxlQURGO0FBRUpDLE1BQUFBLEdBQUcsRUFBRTtBQUZELEtBREU7QUFLVkMsSUFBQUEsUUFBUSxFQUFFO0FBQ05GLE1BQUFBLElBQUksRUFBRSxpQkFEQTtBQUVOQyxNQUFBQSxHQUFHLEVBQUU7QUFGQyxLQUxBO0FBU1ZFLElBQUFBLE9BQU8sRUFBRTtBQUNMSCxNQUFBQSxJQUFJLEVBQUUsZ0JBREQ7QUFFTEMsTUFBQUEsR0FBRyxFQUFFO0FBRkEsS0FUQztBQWFWRyxJQUFBQSxRQUFRLEVBQUU7QUFDTkosTUFBQUEsSUFBSSxFQUFFLGlCQURBO0FBRU5DLE1BQUFBLEdBQUcsRUFBRTtBQUZDLEtBYkE7QUFpQlZJLElBQUFBLEdBQUcsRUFBRTtBQUNETCxNQUFBQSxJQUFJLEVBQUUsWUFETDtBQUVEQyxNQUFBQSxHQUFHLEVBQUU7QUFGSjtBQWpCSztBQVZsQixDQURvQixFQWtDcEI7QUFDSWpCLEVBQUFBLElBQUksRUFBRSxLQURWO0FBRUlNLEVBQUFBLFFBQVEsRUFBRTtBQUZkLENBbENvQixFQXNDcEI7QUFDSU4sRUFBQUEsSUFBSSxFQUFFLE9BRFY7QUFFSU0sRUFBQUEsUUFBUSxFQUFFLE1BRmQ7QUFHSWdCLEVBQUFBLEtBQUssRUFBRTtBQUNIQyxJQUFBQSxJQUFJLEVBQUUsaUJBREg7QUFFSEMsSUFBQUEsUUFBUSxFQUFFO0FBRlA7QUFIWCxDQXRDb0IsRUE4Q3BCO0FBQ0l4QixFQUFBQSxJQUFJLEVBQUUsVUFEVjtBQUVJTSxFQUFBQSxRQUFRLEVBQUU7QUFGZCxDQTlDb0IsRUFrRHBCO0FBQ0lOLEVBQUFBLElBQUksRUFBRSxVQURWO0FBRUlNLEVBQUFBLFFBQVEsRUFBRTtBQUZkLENBbERvQixFQXNEcEI7QUFDSU4sRUFBQUEsSUFBSSxFQUFFLGNBRFY7QUFFSU0sRUFBQUEsUUFBUSxFQUFFO0FBRmQsQ0F0RG9CLEVBMERwQjtBQUNJTixFQUFBQSxJQUFJLEVBQUUsU0FEVjtBQUVJTSxFQUFBQSxRQUFRLEVBQUU7QUFGZCxDQTFEb0IsRUE4RHBCO0FBQ0lOLEVBQUFBLElBQUksRUFBRSxLQURWO0FBRUlNLEVBQUFBLFFBQVEsRUFBRTtBQUZkLENBOURvQixDQUF4QjtBQW9FQSxJQUFNbUIsV0FBVyxHQUFHO0FBQ2hCbEIsRUFBQUEsTUFBTSwwQ0FDRFAsSUFEQyxFQUNNLFFBRE4sNEJBRURELEdBRkMsRUFFSywrQ0FGTCw0QkFHREUsWUFIQyxFQUdjLFdBSGQsV0FEVTtBQU1oQk8sRUFBQUEsWUFBWSxzREFDUFIsSUFETyxFQUNBLFFBREEsa0NBRVBELEdBRk8sRUFFRCx1REFGQyxrQ0FHUEUsWUFITyxFQUdRLFlBSFIsaUJBTkk7QUFXaEJRLEVBQUFBLFFBQVEsOENBQ0hULElBREcsRUFDSSxRQURKLDhCQUVIRCxHQUZHLEVBRUcsOERBRkgsOEJBR0hFLFlBSEcsRUFHWSxlQUhaLGFBWFE7QUFnQmhCUyxFQUFBQSxNQUFNLDBDQUNEVixJQURDLEVBQ00sUUFETiw0QkFFREQsR0FGQyxFQUVLLDZEQUZMLDRCQUdERSxZQUhDLEVBR2Msb0JBSGQsV0FoQlU7QUFxQmhCVyxFQUFBQSxjQUFjLDBEQUNUWixJQURTLEVBQ0YsU0FERSxvQ0FFVEQsR0FGUyxFQUVILGdEQUZHLG9DQUdURSxZQUhTLEVBR00sS0FITixtQkFyQkU7QUEwQmhCVSxFQUFBQSxRQUFRLDhDQUNIWCxJQURHLEVBQ0ksUUFESiw4QkFFSEQsR0FGRyxFQUVHLGtFQUZILGFBMUJRO0FBOEJoQmMsRUFBQUEsV0FBVyxvREFDTmIsSUFETSxFQUNDLFFBREQsaUNBRU5ELEdBRk0sRUFFQSxtQ0FGQSxnQkE5Qks7QUFrQ2hCZSxFQUFBQSxZQUFZLG9CQUNMakIsT0FBTyxDQUFDLGtCQUFELENBREYsc0JBRVBFLEdBRk8sRUFFRCx1REFGQztBQWxDSSxDQUFwQjs7QUF3Q0EsS0FBSyxJQUFJMkIsR0FBVCxJQUFnQkQsV0FBaEIsRUFBNkI7QUFDekJBLEVBQUFBLFdBQVcsQ0FBQ0MsR0FBRCxDQUFYLENBQWlCdkIsUUFBakIsSUFBNkIsVUFBQXdCLE1BQU07QUFBQSxXQUFJQSxNQUFNLENBQUMzQixJQUFQLEtBQWdCLFNBQXBCO0FBQUEsR0FBbkM7QUFDSDs7QUFFRCxJQUFNNEIsU0FBUyxHQUFHO0FBQ2ROLEVBQUFBLEtBQUssd0NBQ0F0QixJQURBLEVBQ08sUUFEUCwyQkFFQUQsR0FGQSxFQUVNLHVDQUZOLDJCQUdBSSxRQUhBLEVBR1csVUFBQTBCLE1BQU07QUFBQSxXQUFJQSxNQUFNLENBQUM3QixJQUFQLEtBQWdCLE9BQXBCO0FBQUEsR0FIakIsMkJBSUQsR0FKQyw4QkFLSUEsSUFMSixFQUtXLFFBTFgsc0JBTUlELEdBTkosRUFNVSx5QkFOVixzQkFPSUcsUUFQSixFQU9lLElBUGY7QUFEUyxDQUFsQjtBQWFBLElBQU00QixrQkFBa0IsR0FBRztBQUN2QkMsRUFBQUEsYUFBYSx3REFDUi9CLElBRFEsRUFDRCxRQURDLG1DQUVSRCxHQUZRLEVBRUYsZUFGRSxtQ0FHUkcsUUFIUSxFQUdHLElBSEgsbUNBSVJDLFFBSlEsRUFJRyxVQUFBMEIsTUFBTTtBQUFBLFdBQUlBLE1BQU0sQ0FBQzdCLElBQVAsS0FBZ0IsaUJBQXBCO0FBQUEsR0FKVCxrQkFEVTtBQU92QmdDLEVBQUFBLFdBQVcsb0RBQ05oQyxJQURNLEVBQ0MsUUFERCxpQ0FFTkQsR0FGTSxFQUVBLHdDQUZBLGlDQUdOSSxRQUhNLEVBR0ssVUFBQTBCLE1BQU07QUFBQSxXQUFJQSxNQUFNLENBQUM3QixJQUFQLEtBQWdCLGlCQUFwQjtBQUFBLEdBSFg7QUFQWSxDQUEzQjtBQWNBaUMsTUFBTSxDQUFDQyxPQUFQLDJEQUNLbEMsSUFETCxFQUNZLE9BRFosb0NBRUtELEdBRkwsRUFFVywyRkFGWCxvQ0FHS0UsWUFITCxFQUdvQkksZUFIcEIsb0NBSUksR0FKSixzRUFLU0wsSUFMVCxFQUtnQixRQUxoQixtQ0FNU0QsR0FOVCxFQU1lLHdCQU5mLCtFQVFhQyxJQVJiLEVBUW9CLFFBUnBCLDBCQVNhRCxHQVRiLEVBU21CLGFBVG5CLDBCQVVhRyxRQVZiLEVBVXdCLElBVnhCLDBCQVdhRCxZQVhiLEVBVzRCLFNBWDVCLG9HQWNhRCxJQWRiLEVBY29CLFFBZHBCLDhCQWVhRCxHQWZiLEVBZW1CLGtEQWZuQiw4QkFnQmFLLE1BaEJiLEVBZ0JzQixnQkFoQnRCLDhCQWlCYUYsUUFqQmIsRUFpQndCLElBakJ4Qiw4QkFrQmFELFlBbEJiLEVBa0I0QixNQWxCNUIsaUNBb0JXd0IsV0FwQlgsTUFxQldHLFNBckJYLE1Bc0JXRSxrQkF0QlgiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2luY2x1ZGVzL3NwZWNzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBkb2MsIHR5cGUsIGRlZmF1bHRWYWx1ZSwgcmVxdWlyZWQsIHJlcXVpcmVzLCBmb3JtYXQgfSA9IHJlcXVpcmUoJy4uL2NvbW1vbi91dGlscycpLmRlc2NyaXB0b3JzO1xuXG5jb25zdCBERUZBVUxUX1dJREdFVFMgPSBbXG4gICAge1xuICAgICAgICB0eXBlOiAncHJvZmlsZScsXG4gICAgICAgIHBvc2l0aW9uOiAnbGVmdCcsXG4gICAgICAgIGF1dGhvcjogJ1lvdXIgbmFtZScsXG4gICAgICAgIGF1dGhvcl90aXRsZTogJ1lvdXIgdGl0bGUnLFxuICAgICAgICBsb2NhdGlvbjogJ1lvdXIgbG9jYXRpb24nLFxuICAgICAgICBhdmF0YXI6IG51bGwsXG4gICAgICAgIGdyYXZhdGFyOiBudWxsLFxuICAgICAgICBhdmF0YXJfcm91bmRlZDogZmFsc2UsXG4gICAgICAgIGZvbGxvd19saW5rOiAnaHR0cHM6Ly9naXRodWIuY29tL3Bwb2ZmaWNlJyxcbiAgICAgICAgc29jaWFsX2xpbmtzOiB7XG4gICAgICAgICAgICBHaXRodWI6IHtcbiAgICAgICAgICAgICAgICBpY29uOiAnZmFiIGZhLWdpdGh1YicsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly9naXRodWIuY29tL3Bwb2ZmaWNlJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIEZhY2Vib29rOiB7XG4gICAgICAgICAgICAgICAgaWNvbjogJ2ZhYiBmYS1mYWNlYm9vaycsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly9mYWNlYm9vay5jb20nXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgVHdpdHRlcjoge1xuICAgICAgICAgICAgICAgIGljb246ICdmYWIgZmEtdHdpdHRlcicsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly90d2l0dGVyLmNvbSdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBEcmliYmJsZToge1xuICAgICAgICAgICAgICAgIGljb246ICdmYWIgZmEtZHJpYmJibGUnLFxuICAgICAgICAgICAgICAgIHVybDogJ2h0dHBzOi8vZHJpYmJibGUuY29tJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFJTUzoge1xuICAgICAgICAgICAgICAgIGljb246ICdmYXMgZmEtcnNzJyxcbiAgICAgICAgICAgICAgICB1cmw6ICcvJ1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcbiAgICB7XG4gICAgICAgIHR5cGU6ICd0b2MnLFxuICAgICAgICBwb3NpdGlvbjogJ2xlZnQnXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHR5cGU6ICdsaW5rcycsXG4gICAgICAgIHBvc2l0aW9uOiAnbGVmdCcsXG4gICAgICAgIGxpbmtzOiB7XG4gICAgICAgICAgICBIZXhvOiAnaHR0cHM6Ly9oZXhvLmlvJyxcbiAgICAgICAgICAgIFBQT2ZmaWNlOiAnaHR0cHM6Ly9naXRodWIuY29tL3Bwb2ZmaWNlJ1xuICAgICAgICB9XG4gICAgfSxcbiAgICB7XG4gICAgICAgIHR5cGU6ICdjYXRlZ29yeScsXG4gICAgICAgIHBvc2l0aW9uOiAnbGVmdCdcbiAgICB9LFxuICAgIHtcbiAgICAgICAgdHlwZTogJ3RhZ2Nsb3VkJyxcbiAgICAgICAgcG9zaXRpb246ICdsZWZ0J1xuICAgIH0sXG4gICAge1xuICAgICAgICB0eXBlOiAncmVjZW50X3Bvc3RzJyxcbiAgICAgICAgcG9zaXRpb246ICdyaWdodCdcbiAgICB9LFxuICAgIHtcbiAgICAgICAgdHlwZTogJ2FyY2hpdmUnLFxuICAgICAgICBwb3NpdGlvbjogJ3JpZ2h0J1xuICAgIH0sXG4gICAge1xuICAgICAgICB0eXBlOiAndGFnJyxcbiAgICAgICAgcG9zaXRpb246ICdyaWdodCdcbiAgICB9XG5dO1xuXG5jb25zdCBQcm9maWxlU3BlYyA9IHtcbiAgICBhdXRob3I6IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdBdXRob3IgbmFtZSB0byBiZSBzaG93biBpbiB0aGUgcHJvZmlsZSB3aWRnZXQnLFxuICAgICAgICBbZGVmYXVsdFZhbHVlXTogJ1lvdXIgbmFtZSdcbiAgICB9LFxuICAgIGF1dGhvcl90aXRsZToge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ1RpdGxlIG9mIHRoZSBhdXRob3IgdG8gYmUgc2hvd24gaW4gdGhlIHByb2ZpbGUgd2lkZ2V0JyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06ICdZb3VyIHRpdGxlJ1xuICAgIH0sXG4gICAgbG9jYXRpb246IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdBdXRob3JcXCdzIGN1cnJlbnQgbG9jYXRpb24gdG8gYmUgc2hvd24gaW4gdGhlIHByb2ZpbGUgd2lkZ2V0JyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06ICdZb3VyIGxvY2F0aW9uJ1xuICAgIH0sXG4gICAgYXZhdGFyOiB7XG4gICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgIFtkb2NdOiAnUGF0aCBvciBVUkwgdG8gdGhlIGF2YXRhciB0byBiZSBzaG93biBpbiB0aGUgcHJvZmlsZSB3aWRnZXQnLFxuICAgICAgICBbZGVmYXVsdFZhbHVlXTogJy9pbWFnZXMvYXZhdGFyLnBuZydcbiAgICB9LFxuICAgIGF2YXRhcl9yb3VuZGVkOiB7XG4gICAgICAgIFt0eXBlXTogJ2Jvb2xlYW4nLFxuICAgICAgICBbZG9jXTogJ1doZXRoZXIgdG8gc2hvdyBhdmF0YXIgaW1hZ2Ugcm91bmRlZCBvciBzcXVhcmUnLFxuICAgICAgICBbZGVmYXVsdFZhbHVlXTogZmFsc2VcbiAgICB9LFxuICAgIGdyYXZhdGFyOiB7XG4gICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgIFtkb2NdOiAnRW1haWwgYWRkcmVzcyBmb3IgdGhlIEdyYXZhdGFyIHRvIGJlIHNob3duIGluIHRoZSBwcm9maWxlIHdpZGdldCcsXG4gICAgfSxcbiAgICBmb2xsb3dfbGluazoge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ1BhdGggb3IgVVJMIGZvciB0aGUgZm9sbG93IGJ1dHRvbicsXG4gICAgfSxcbiAgICBzb2NpYWxfbGlua3M6IHtcbiAgICAgICAgLi4ucmVxdWlyZSgnLi9pY29uX2xpbmsuc3BlYycpLFxuICAgICAgICBbZG9jXTogJ0xpbmtzIHRvIGJlIHNob3duIG9uIHRoZSBib3R0b20gb2YgdGhlIHByb2ZpbGUgd2lkZ2V0JyxcbiAgICB9XG59O1xuXG5mb3IgKGxldCBrZXkgaW4gUHJvZmlsZVNwZWMpIHtcbiAgICBQcm9maWxlU3BlY1trZXldW3JlcXVpcmVzXSA9IHdpZGdldCA9PiB3aWRnZXQudHlwZSA9PT0gJ3Byb2ZpbGUnO1xufVxuXG5jb25zdCBMaW5rc1NwZWMgPSB7XG4gICAgbGlua3M6IHtcbiAgICAgICAgW3R5cGVdOiAnb2JqZWN0JyxcbiAgICAgICAgW2RvY106ICdMaW5rcyB0byBiZSBzaG93biBpbiB0aGUgbGlua3Mgd2lkZ2V0JyxcbiAgICAgICAgW3JlcXVpcmVzXTogcGFyZW50ID0+IHBhcmVudC50eXBlID09PSAnbGlua3MnLFxuICAgICAgICAnKic6IHtcbiAgICAgICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgICAgICBbZG9jXTogJ1BhdGggb3IgVVJMIHRvIHRoZSBsaW5rJyxcbiAgICAgICAgICAgIFtyZXF1aXJlZF06IHRydWVcbiAgICAgICAgfVxuICAgIH1cbn07XG5cbmNvbnN0IFN1YnNjcmJpZUVtYWlsU3BlYyA9IHtcbiAgICBmZWVkYnVybmVyX2lkOiB7XG4gICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgIFtkb2NdOiAnRmVlZGJ1cm5lciBJRCcsXG4gICAgICAgIFtyZXF1aXJlZF06IHRydWUsXG4gICAgICAgIFtyZXF1aXJlc106IHBhcmVudCA9PiBwYXJlbnQudHlwZSA9PT0gJ3N1YnNjcmliZV9lbWFpbCdcbiAgICB9LFxuICAgIGRlc2NyaXB0aW9uOiB7XG4gICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgIFtkb2NdOiAnSGludCB0ZXh0IHVuZGVyIHRoZSBzdWJzY3JpcHRpb24gaW5wdXQnLFxuICAgICAgICBbcmVxdWlyZXNdOiBwYXJlbnQgPT4gcGFyZW50LnR5cGUgPT09ICdzdWJzY3JpYmVfZW1haWwnXG4gICAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgW3R5cGVdOiAnYXJyYXknLFxuICAgIFtkb2NdOiAnU2lkZWJhciB3aWRnZXQgc2V0dGluZ3NcXG5odHRwczovL3Bwb2ZmaWNlLmdpdGh1Yi5pby9oZXhvLXRoZW1lLWljYXJ1cy9jYXRlZ29yaWVzL1dpZGdldHMvJyxcbiAgICBbZGVmYXVsdFZhbHVlXTogREVGQVVMVF9XSURHRVRTLFxuICAgICcqJzoge1xuICAgICAgICBbdHlwZV06ICdvYmplY3QnLFxuICAgICAgICBbZG9jXTogJ1NpbmdsZSB3aWRnZXQgc2V0dGluZ3MnLFxuICAgICAgICB0eXBlOiB7XG4gICAgICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICAgICAgW2RvY106ICdXaWRnZXQgbmFtZScsXG4gICAgICAgICAgICBbcmVxdWlyZWRdOiB0cnVlLFxuICAgICAgICAgICAgW2RlZmF1bHRWYWx1ZV06ICdwcm9maWxlJ1xuICAgICAgICB9LFxuICAgICAgICBwb3NpdGlvbjoge1xuICAgICAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgICAgIFtkb2NdOiAnV2hlcmUgc2hvdWxkIHRoZSB3aWRnZXQgYmUgcGxhY2VkLCBsZWZ0IG9yIHJpZ2h0JyxcbiAgICAgICAgICAgIFtmb3JtYXRdOiAvXihsZWZ0fHJpZ2h0KSQvLFxuICAgICAgICAgICAgW3JlcXVpcmVkXTogdHJ1ZSxcbiAgICAgICAgICAgIFtkZWZhdWx0VmFsdWVdOiAnbGVmdCdcbiAgICAgICAgfSxcbiAgICAgICAgLi4uUHJvZmlsZVNwZWMsXG4gICAgICAgIC4uLkxpbmtzU3BlYyxcbiAgICAgICAgLi4uU3Vic2NyYmllRW1haWxTcGVjXG4gICAgfVxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "widgets.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "required",
        "requires",
        "format",
        "DEFAULT_WIDGETS",
        "position",
        "author",
        "author_title",
        "location",
        "avatar",
        "gravatar",
        "avatar_rounded",
        "follow_link",
        "social_links",
        "Github",
        "icon",
        "url",
        "Facebook",
        "Twitter",
        "Dribbble",
        "RSS",
        "links",
        "Hexo",
        "PPOffice",
        "ProfileSpec",
        "key",
        "widget",
        "LinksSpec",
        "parent",
        "SubscrbieEmailSpec",
        "feedburner_id",
        "description",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;2BAAgEA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAnFC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;IAAcC,Q,wBAAAA,Q;IAAUC,Q,wBAAAA,Q;IAAUC,M,wBAAAA,M;;AAErD,IAAMC,eAAe,GAAG,CACpB;AACIL,EAAAA,IAAI,EAAE,SADV;AAEIM,EAAAA,QAAQ,EAAE,MAFd;AAGIC,EAAAA,MAAM,EAAE,WAHZ;AAIIC,EAAAA,YAAY,EAAE,YAJlB;AAKIC,EAAAA,QAAQ,EAAE,eALd;AAMIC,EAAAA,MAAM,EAAE,IANZ;AAOIC,EAAAA,QAAQ,EAAE,IAPd;AAQIC,EAAAA,cAAc,EAAE,KARpB;AASIC,EAAAA,WAAW,EAAE,6BATjB;AAUIC,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE,eADF;AAEJC,MAAAA,GAAG,EAAE;AAFD,KADE;AAKVC,IAAAA,QAAQ,EAAE;AACNF,MAAAA,IAAI,EAAE,iBADA;AAENC,MAAAA,GAAG,EAAE;AAFC,KALA;AASVE,IAAAA,OAAO,EAAE;AACLH,MAAAA,IAAI,EAAE,gBADD;AAELC,MAAAA,GAAG,EAAE;AAFA,KATC;AAaVG,IAAAA,QAAQ,EAAE;AACNJ,MAAAA,IAAI,EAAE,iBADA;AAENC,MAAAA,GAAG,EAAE;AAFC,KAbA;AAiBVI,IAAAA,GAAG,EAAE;AACDL,MAAAA,IAAI,EAAE,YADL;AAEDC,MAAAA,GAAG,EAAE;AAFJ;AAjBK;AAVlB,CADoB,EAkCpB;AACIjB,EAAAA,IAAI,EAAE,KADV;AAEIM,EAAAA,QAAQ,EAAE;AAFd,CAlCoB,EAsCpB;AACIN,EAAAA,IAAI,EAAE,OADV;AAEIM,EAAAA,QAAQ,EAAE,MAFd;AAGIgB,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE,iBADH;AAEHC,IAAAA,QAAQ,EAAE;AAFP;AAHX,CAtCoB,EA8CpB;AACIxB,EAAAA,IAAI,EAAE,UADV;AAEIM,EAAAA,QAAQ,EAAE;AAFd,CA9CoB,EAkDpB;AACIN,EAAAA,IAAI,EAAE,UADV;AAEIM,EAAAA,QAAQ,EAAE;AAFd,CAlDoB,EAsDpB;AACIN,EAAAA,IAAI,EAAE,cADV;AAEIM,EAAAA,QAAQ,EAAE;AAFd,CAtDoB,EA0DpB;AACIN,EAAAA,IAAI,EAAE,SADV;AAEIM,EAAAA,QAAQ,EAAE;AAFd,CA1DoB,EA8DpB;AACIN,EAAAA,IAAI,EAAE,KADV;AAEIM,EAAAA,QAAQ,EAAE;AAFd,CA9DoB,CAAxB;AAoEA,IAAMmB,WAAW,GAAG;AAChBlB,EAAAA,MAAM,0CACDP,IADC,EACM,QADN,4BAEDD,GAFC,EAEK,+CAFL,4BAGDE,YAHC,EAGc,WAHd,WADU;AAMhBO,EAAAA,YAAY,sDACPR,IADO,EACA,QADA,kCAEPD,GAFO,EAED,uDAFC,kCAGPE,YAHO,EAGQ,YAHR,iBANI;AAWhBQ,EAAAA,QAAQ,8CACHT,IADG,EACI,QADJ,8BAEHD,GAFG,EAEG,8DAFH,8BAGHE,YAHG,EAGY,eAHZ,aAXQ;AAgBhBS,EAAAA,MAAM,0CACDV,IADC,EACM,QADN,4BAEDD,GAFC,EAEK,6DAFL,4BAGDE,YAHC,EAGc,oBAHd,WAhBU;AAqBhBW,EAAAA,cAAc,0DACTZ,IADS,EACF,SADE,oCAETD,GAFS,EAEH,gDAFG,oCAGTE,YAHS,EAGM,KAHN,mBArBE;AA0BhBU,EAAAA,QAAQ,8CACHX,IADG,EACI,QADJ,8BAEHD,GAFG,EAEG,kEAFH,aA1BQ;AA8BhBc,EAAAA,WAAW,oDACNb,IADM,EACC,QADD,iCAEND,GAFM,EAEA,mCAFA,gBA9BK;AAkChBe,EAAAA,YAAY,oBACLjB,OAAO,CAAC,kBAAD,CADF,sBAEPE,GAFO,EAED,uDAFC;AAlCI,CAApB;;AAwCA,KAAK,IAAI2B,GAAT,IAAgBD,WAAhB,EAA6B;AACzBA,EAAAA,WAAW,CAACC,GAAD,CAAX,CAAiBvB,QAAjB,IAA6B,UAAAwB,MAAM;AAAA,WAAIA,MAAM,CAAC3B,IAAP,KAAgB,SAApB;AAAA,GAAnC;AACH;;AAED,IAAM4B,SAAS,GAAG;AACdN,EAAAA,KAAK,wCACAtB,IADA,EACO,QADP,2BAEAD,GAFA,EAEM,uCAFN,2BAGAI,QAHA,EAGW,UAAA0B,MAAM;AAAA,WAAIA,MAAM,CAAC7B,IAAP,KAAgB,OAApB;AAAA,GAHjB,2BAID,GAJC,8BAKIA,IALJ,EAKW,QALX,sBAMID,GANJ,EAMU,yBANV,sBAOIG,QAPJ,EAOe,IAPf;AADS,CAAlB;AAaA,IAAM4B,kBAAkB,GAAG;AACvBC,EAAAA,aAAa,wDACR/B,IADQ,EACD,QADC,mCAERD,GAFQ,EAEF,eAFE,mCAGRG,QAHQ,EAGG,IAHH,mCAIRC,QAJQ,EAIG,UAAA0B,MAAM;AAAA,WAAIA,MAAM,CAAC7B,IAAP,KAAgB,iBAApB;AAAA,GAJT,kBADU;AAOvBgC,EAAAA,WAAW,oDACNhC,IADM,EACC,QADD,iCAEND,GAFM,EAEA,wCAFA,iCAGNI,QAHM,EAGK,UAAA0B,MAAM;AAAA,WAAIA,MAAM,CAAC7B,IAAP,KAAgB,iBAApB;AAAA,GAHX;AAPY,CAA3B;AAcAiC,MAAM,CAACC,OAAP,2DACKlC,IADL,EACY,OADZ,oCAEKD,GAFL,EAEW,2FAFX,oCAGKE,YAHL,EAGoBI,eAHpB,oCAII,GAJJ,sEAKSL,IALT,EAKgB,QALhB,mCAMSD,GANT,EAMe,wBANf,+EAQaC,IARb,EAQoB,QARpB,0BASaD,GATb,EASmB,aATnB,0BAUaG,QAVb,EAUwB,IAVxB,0BAWaD,YAXb,EAW4B,SAX5B,oGAcaD,IAdb,EAcoB,QAdpB,8BAeaD,GAfb,EAemB,kDAfnB,8BAgBaK,MAhBb,EAgBsB,gBAhBtB,8BAiBaF,QAjBb,EAiBwB,IAjBxB,8BAkBaD,YAlBb,EAkB4B,MAlB5B,iCAoBWwB,WApBX,MAqBWG,SArBX,MAsBWE,kBAtBX",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue, required, requires, format } = require('../common/utils').descriptors;\n\nconst DEFAULT_WIDGETS = [\n    {\n        type: 'profile',\n        position: 'left',\n        author: 'Your name',\n        author_title: 'Your title',\n        location: 'Your location',\n        avatar: null,\n        gravatar: null,\n        avatar_rounded: false,\n        follow_link: 'https://github.com/ppoffice',\n        social_links: {\n            Github: {\n                icon: 'fab fa-github',\n                url: 'https://github.com/ppoffice'\n            },\n            Facebook: {\n                icon: 'fab fa-facebook',\n                url: 'https://facebook.com'\n            },\n            Twitter: {\n                icon: 'fab fa-twitter',\n                url: 'https://twitter.com'\n            },\n            Dribbble: {\n                icon: 'fab fa-dribbble',\n                url: 'https://dribbble.com'\n            },\n            RSS: {\n                icon: 'fas fa-rss',\n                url: '/'\n            }\n        }\n    },\n    {\n        type: 'toc',\n        position: 'left'\n    },\n    {\n        type: 'links',\n        position: 'left',\n        links: {\n            Hexo: 'https://hexo.io',\n            PPOffice: 'https://github.com/ppoffice'\n        }\n    },\n    {\n        type: 'category',\n        position: 'left'\n    },\n    {\n        type: 'tagcloud',\n        position: 'left'\n    },\n    {\n        type: 'recent_posts',\n        position: 'right'\n    },\n    {\n        type: 'archive',\n        position: 'right'\n    },\n    {\n        type: 'tag',\n        position: 'right'\n    }\n];\n\nconst ProfileSpec = {\n    author: {\n        [type]: 'string',\n        [doc]: 'Author name to be shown in the profile widget',\n        [defaultValue]: 'Your name'\n    },\n    author_title: {\n        [type]: 'string',\n        [doc]: 'Title of the author to be shown in the profile widget',\n        [defaultValue]: 'Your title'\n    },\n    location: {\n        [type]: 'string',\n        [doc]: 'Author\\'s current location to be shown in the profile widget',\n        [defaultValue]: 'Your location'\n    },\n    avatar: {\n        [type]: 'string',\n        [doc]: 'Path or URL to the avatar to be shown in the profile widget',\n        [defaultValue]: '/images/avatar.png'\n    },\n    avatar_rounded: {\n        [type]: 'boolean',\n        [doc]: 'Whether to show avatar image rounded or square',\n        [defaultValue]: false\n    },\n    gravatar: {\n        [type]: 'string',\n        [doc]: 'Email address for the Gravatar to be shown in the profile widget',\n    },\n    follow_link: {\n        [type]: 'string',\n        [doc]: 'Path or URL for the follow button',\n    },\n    social_links: {\n        ...require('./icon_link.spec'),\n        [doc]: 'Links to be shown on the bottom of the profile widget',\n    }\n};\n\nfor (let key in ProfileSpec) {\n    ProfileSpec[key][requires] = widget => widget.type === 'profile';\n}\n\nconst LinksSpec = {\n    links: {\n        [type]: 'object',\n        [doc]: 'Links to be shown in the links widget',\n        [requires]: parent => parent.type === 'links',\n        '*': {\n            [type]: 'string',\n            [doc]: 'Path or URL to the link',\n            [required]: true\n        }\n    }\n};\n\nconst SubscrbieEmailSpec = {\n    feedburner_id: {\n        [type]: 'string',\n        [doc]: 'Feedburner ID',\n        [required]: true,\n        [requires]: parent => parent.type === 'subscribe_email'\n    },\n    description: {\n        [type]: 'string',\n        [doc]: 'Hint text under the subscription input',\n        [requires]: parent => parent.type === 'subscribe_email'\n    }\n};\n\nmodule.exports = {\n    [type]: 'array',\n    [doc]: 'Sidebar widget settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Widgets/',\n    [defaultValue]: DEFAULT_WIDGETS,\n    '*': {\n        [type]: 'object',\n        [doc]: 'Single widget settings',\n        type: {\n            [type]: 'string',\n            [doc]: 'Widget name',\n            [required]: true,\n            [defaultValue]: 'profile'\n        },\n        position: {\n            [type]: 'string',\n            [doc]: 'Where should the widget be placed, left or right',\n            [format]: /^(left|right)$/,\n            [required]: true,\n            [defaultValue]: 'left'\n        },\n        ...ProfileSpec,\n        ...LinksSpec,\n        ...SubscrbieEmailSpec\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525729
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/plugins.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/plugins.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/plugins.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/plugins.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "plugins.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _animejs, _gallery, _outdatedBrowser, _mathjax, _backToTop, _tracking_id, _googleAnalytics, _tracking_id2, _baiduAnalytics, _site_id, _hotjar, _progressbar, _busuanzi, _module$exports;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue;\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'Other plugin settings'), _defineProperty(_module$exports, \"animejs\", (_animejs = {}, _defineProperty(_animejs, type, 'boolean'), _defineProperty(_animejs, doc, 'Enable page animations'), _defineProperty(_animejs, defaultValue, true), _animejs)), _defineProperty(_module$exports, \"gallery\", (_gallery = {}, _defineProperty(_gallery, type, 'boolean'), _defineProperty(_gallery, doc, 'Enable the lightGallery and Justified Gallery plugins\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/gallery-plugin/'), _defineProperty(_gallery, defaultValue, true), _gallery)), _defineProperty(_module$exports, 'outdated-browser', (_outdatedBrowser = {}, _defineProperty(_outdatedBrowser, type, 'boolean'), _defineProperty(_outdatedBrowser, doc, 'Enable the Outdated Browser plugin\\nhttp://outdatedbrowser.com/'), _defineProperty(_outdatedBrowser, defaultValue, true), _outdatedBrowser)), _defineProperty(_module$exports, \"mathjax\", (_mathjax = {}, _defineProperty(_mathjax, type, 'boolean'), _defineProperty(_mathjax, doc, 'Enable the MathJax plugin\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/mathjax-plugin/'), _defineProperty(_mathjax, defaultValue, true), _mathjax)), _defineProperty(_module$exports, 'back-to-top', (_backToTop = {}, _defineProperty(_backToTop, type, 'boolean'), _defineProperty(_backToTop, doc, 'Show the back to top button on mobile devices'), _defineProperty(_backToTop, defaultValue, true), _backToTop)), _defineProperty(_module$exports, 'google-analytics', (_googleAnalytics = {}, _defineProperty(_googleAnalytics, type, ['boolean', 'object']), _defineProperty(_googleAnalytics, doc, 'Google Analytics plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Google-Analytics'), _defineProperty(_googleAnalytics, \"tracking_id\", (_tracking_id = {}, _defineProperty(_tracking_id, type, 'string'), _defineProperty(_tracking_id, doc, 'Google Analytics tracking id'), _defineProperty(_tracking_id, defaultValue, null), _tracking_id)), _googleAnalytics)), _defineProperty(_module$exports, 'baidu-analytics', (_baiduAnalytics = {}, _defineProperty(_baiduAnalytics, type, ['boolean', 'object']), _defineProperty(_baiduAnalytics, doc, 'Baidu Analytics plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Baidu-Analytics'), _defineProperty(_baiduAnalytics, \"tracking_id\", (_tracking_id2 = {}, _defineProperty(_tracking_id2, type, 'string'), _defineProperty(_tracking_id2, doc, 'Baidu Analytics tracking id'), _defineProperty(_tracking_id2, defaultValue, null), _tracking_id2)), _baiduAnalytics)), _defineProperty(_module$exports, \"hotjar\", (_hotjar = {}, _defineProperty(_hotjar, type, ['boolean', 'object']), _defineProperty(_hotjar, doc, 'Hotjar user feedback plugin\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Hotjar'), _defineProperty(_hotjar, \"site_id\", (_site_id = {}, _defineProperty(_site_id, type, ['string', 'number']), _defineProperty(_site_id, doc, 'Hotjar site id'), _defineProperty(_site_id, defaultValue, null), _site_id)), _hotjar)), _defineProperty(_module$exports, \"progressbar\", (_progressbar = {}, _defineProperty(_progressbar, type, 'boolean'), _defineProperty(_progressbar, doc, 'Show a loading progress bar at top of the page'), _defineProperty(_progressbar, defaultValue, true), _progressbar)), _defineProperty(_module$exports, \"busuanzi\", (_busuanzi = {}, _defineProperty(_busuanzi, type, 'boolean'), _defineProperty(_busuanzi, doc, 'BuSuanZi site/page view counter\\nhttps://busuanzi.ibruce.info'), _defineProperty(_busuanzi, defaultValue, false), _busuanzi)), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsdWdpbnMuc3BlYy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiZGVzY3JpcHRvcnMiLCJkb2MiLCJ0eXBlIiwiZGVmYXVsdFZhbHVlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OzJCQUFvQ0EsT0FBTyxDQUFDLGlCQUFELENBQVAsQ0FBMkJDLFc7SUFBdkRDLEcsd0JBQUFBLEc7SUFBS0MsSSx3QkFBQUEsSTtJQUFNQyxZLHdCQUFBQSxZOztBQUVuQkMsTUFBTSxDQUFDQyxPQUFQLDJEQUNLSCxJQURMLEVBQ1ksUUFEWixvQ0FFS0QsR0FGTCxFQUVXLHVCQUZYLHlGQUlTQyxJQUpULEVBSWdCLFNBSmhCLDZCQUtTRCxHQUxULEVBS2Usd0JBTGYsNkJBTVNFLFlBTlQsRUFNd0IsSUFOeEIscUdBU1NELElBVFQsRUFTZ0IsU0FUaEIsNkJBVVNELEdBVlQsRUFVZSxxSUFWZiw2QkFXU0UsWUFYVCxFQVd3QixJQVh4QixnREFhSSxrQkFiSiw0REFjU0QsSUFkVCxFQWNnQixTQWRoQixxQ0FlU0QsR0FmVCxFQWVlLGlFQWZmLHFDQWdCU0UsWUFoQlQsRUFnQndCLElBaEJ4Qiw2R0FtQlNELElBbkJULEVBbUJnQixTQW5CaEIsNkJBb0JTRCxHQXBCVCxFQW9CZSx5R0FwQmYsNkJBcUJTRSxZQXJCVCxFQXFCd0IsSUFyQnhCLGdEQXVCSSxhQXZCSixnREF3QlNELElBeEJULEVBd0JnQixTQXhCaEIsK0JBeUJTRCxHQXpCVCxFQXlCZSwrQ0F6QmYsK0JBMEJTRSxZQTFCVCxFQTBCd0IsSUExQnhCLGtEQTRCSSxrQkE1QkosNERBNkJTRCxJQTdCVCxFQTZCZ0IsQ0FBQyxTQUFELEVBQVksUUFBWixDQTdCaEIscUNBOEJTRCxHQTlCVCxFQThCZSx3SUE5QmYsc0dBZ0NhQyxJQWhDYixFQWdDb0IsUUFoQ3BCLGlDQWlDYUQsR0FqQ2IsRUFpQ21CLDhCQWpDbkIsaUNBa0NhRSxZQWxDYixFQWtDNEIsSUFsQzVCLHdFQXFDSSxpQkFyQ0osMERBc0NTRCxJQXRDVCxFQXNDZ0IsQ0FBQyxTQUFELEVBQVksUUFBWixDQXRDaEIsb0NBdUNTRCxHQXZDVCxFQXVDZSxzSUF2Q2YsdUdBeUNhQyxJQXpDYixFQXlDb0IsUUF6Q3BCLGtDQTBDYUQsR0ExQ2IsRUEwQ21CLDZCQTFDbkIsa0NBMkNhRSxZQTNDYixFQTJDNEIsSUEzQzVCLDBIQStDU0QsSUEvQ1QsRUErQ2dCLENBQUMsU0FBRCxFQUFZLFFBQVosQ0EvQ2hCLDRCQWdEU0QsR0FoRFQsRUFnRGUseUhBaERmLGlGQWtEYUMsSUFsRGIsRUFrRG9CLENBQUMsUUFBRCxFQUFXLFFBQVgsQ0FsRHBCLDZCQW1EYUQsR0FuRGIsRUFtRG1CLGdCQW5EbkIsNkJBb0RhRSxZQXBEYixFQW9ENEIsSUFwRDVCLDRIQXdEU0QsSUF4RFQsRUF3RGdCLFNBeERoQixpQ0F5RFNELEdBekRULEVBeURlLGdEQXpEZixpQ0EwRFNFLFlBMURULEVBMER3QixJQTFEeEIsNEdBNkRTRCxJQTdEVCxFQTZEZ0IsU0E3RGhCLDhCQThEU0QsR0E5RFQsRUE4RGUsK0RBOURmLDhCQStEU0UsWUEvRFQsRUErRHdCLEtBL0R4QiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvc3BlY3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGRvYywgdHlwZSwgZGVmYXVsdFZhbHVlIH0gPSByZXF1aXJlKCcuLi9jb21tb24vdXRpbHMnKS5kZXNjcmlwdG9ycztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgW3R5cGVdOiAnb2JqZWN0JyxcbiAgICBbZG9jXTogJ090aGVyIHBsdWdpbiBzZXR0aW5ncycsXG4gICAgYW5pbWVqczoge1xuICAgICAgICBbdHlwZV06ICdib29sZWFuJyxcbiAgICAgICAgW2RvY106ICdFbmFibGUgcGFnZSBhbmltYXRpb25zJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IHRydWVcbiAgICB9LFxuICAgIGdhbGxlcnk6IHtcbiAgICAgICAgW3R5cGVdOiAnYm9vbGVhbicsXG4gICAgICAgIFtkb2NdOiAnRW5hYmxlIHRoZSBsaWdodEdhbGxlcnkgYW5kIEp1c3RpZmllZCBHYWxsZXJ5IHBsdWdpbnNcXG5odHRwczovL3Bwb2ZmaWNlLmdpdGh1Yi5pby9oZXhvLXRoZW1lLWljYXJ1cy9QbHVnaW5zL0dlbmVyYWwvZ2FsbGVyeS1wbHVnaW4vJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IHRydWVcbiAgICB9LFxuICAgICdvdXRkYXRlZC1icm93c2VyJzoge1xuICAgICAgICBbdHlwZV06ICdib29sZWFuJyxcbiAgICAgICAgW2RvY106ICdFbmFibGUgdGhlIE91dGRhdGVkIEJyb3dzZXIgcGx1Z2luXFxuaHR0cDovL291dGRhdGVkYnJvd3Nlci5jb20vJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IHRydWVcbiAgICB9LFxuICAgIG1hdGhqYXg6IHtcbiAgICAgICAgW3R5cGVdOiAnYm9vbGVhbicsXG4gICAgICAgIFtkb2NdOiAnRW5hYmxlIHRoZSBNYXRoSmF4IHBsdWdpblxcbmh0dHBzOi8vcHBvZmZpY2UuZ2l0aHViLmlvL2hleG8tdGhlbWUtaWNhcnVzL1BsdWdpbnMvR2VuZXJhbC9tYXRoamF4LXBsdWdpbi8nLFxuICAgICAgICBbZGVmYXVsdFZhbHVlXTogdHJ1ZVxuICAgIH0sXG4gICAgJ2JhY2stdG8tdG9wJzoge1xuICAgICAgICBbdHlwZV06ICdib29sZWFuJyxcbiAgICAgICAgW2RvY106ICdTaG93IHRoZSBiYWNrIHRvIHRvcCBidXR0b24gb24gbW9iaWxlIGRldmljZXMnLFxuICAgICAgICBbZGVmYXVsdFZhbHVlXTogdHJ1ZVxuICAgIH0sXG4gICAgJ2dvb2dsZS1hbmFseXRpY3MnOiB7XG4gICAgICAgIFt0eXBlXTogWydib29sZWFuJywgJ29iamVjdCddLFxuICAgICAgICBbZG9jXTogJ0dvb2dsZSBBbmFseXRpY3MgcGx1Z2luIHNldHRpbmdzXFxuaHR0cHM6Ly9wcG9mZmljZS5naXRodWIuaW8vaGV4by10aGVtZS1pY2FydXMvUGx1Z2lucy9HZW5lcmFsL3NpdGUtYW5hbHl0aWNzLXBsdWdpbi8jR29vZ2xlLUFuYWx5dGljcycsXG4gICAgICAgIHRyYWNraW5nX2lkOiB7XG4gICAgICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICAgICAgW2RvY106ICdHb29nbGUgQW5hbHl0aWNzIHRyYWNraW5nIGlkJyxcbiAgICAgICAgICAgIFtkZWZhdWx0VmFsdWVdOiBudWxsXG4gICAgICAgIH1cbiAgICB9LFxuICAgICdiYWlkdS1hbmFseXRpY3MnOiB7XG4gICAgICAgIFt0eXBlXTogWydib29sZWFuJywgJ29iamVjdCddLFxuICAgICAgICBbZG9jXTogJ0JhaWR1IEFuYWx5dGljcyBwbHVnaW4gc2V0dGluZ3NcXG5odHRwczovL3Bwb2ZmaWNlLmdpdGh1Yi5pby9oZXhvLXRoZW1lLWljYXJ1cy9QbHVnaW5zL0dlbmVyYWwvc2l0ZS1hbmFseXRpY3MtcGx1Z2luLyNCYWlkdS1BbmFseXRpY3MnLFxuICAgICAgICB0cmFja2luZ19pZDoge1xuICAgICAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgICAgIFtkb2NdOiAnQmFpZHUgQW5hbHl0aWNzIHRyYWNraW5nIGlkJyxcbiAgICAgICAgICAgIFtkZWZhdWx0VmFsdWVdOiBudWxsXG4gICAgICAgIH1cbiAgICB9LFxuICAgIGhvdGphcjoge1xuICAgICAgICBbdHlwZV06IFsnYm9vbGVhbicsICdvYmplY3QnXSxcbiAgICAgICAgW2RvY106ICdIb3RqYXIgdXNlciBmZWVkYmFjayBwbHVnaW5cXG5odHRwczovL3Bwb2ZmaWNlLmdpdGh1Yi5pby9oZXhvLXRoZW1lLWljYXJ1cy9QbHVnaW5zL0dlbmVyYWwvc2l0ZS1hbmFseXRpY3MtcGx1Z2luLyNIb3RqYXInLFxuICAgICAgICBzaXRlX2lkOiB7XG4gICAgICAgICAgICBbdHlwZV06IFsnc3RyaW5nJywgJ251bWJlciddLFxuICAgICAgICAgICAgW2RvY106ICdIb3RqYXIgc2l0ZSBpZCcsXG4gICAgICAgICAgICBbZGVmYXVsdFZhbHVlXTogbnVsbFxuICAgICAgICB9XG4gICAgfSxcbiAgICBwcm9ncmVzc2Jhcjoge1xuICAgICAgICBbdHlwZV06ICdib29sZWFuJyxcbiAgICAgICAgW2RvY106ICdTaG93IGEgbG9hZGluZyBwcm9ncmVzcyBiYXIgYXQgdG9wIG9mIHRoZSBwYWdlJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IHRydWVcbiAgICB9LFxuICAgIGJ1c3VhbnppOiB7XG4gICAgICAgIFt0eXBlXTogJ2Jvb2xlYW4nLFxuICAgICAgICBbZG9jXTogJ0J1U3VhblppIHNpdGUvcGFnZSB2aWV3IGNvdW50ZXJcXG5odHRwczovL2J1c3VhbnppLmlicnVjZS5pbmZvJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IGZhbHNlXG4gICAgfVxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "plugins.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;2BAAoCA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAvDC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;;AAEnBC,MAAM,CAACC,OAAP,2DACKH,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,uBAFX,yFAISC,IAJT,EAIgB,SAJhB,6BAKSD,GALT,EAKe,wBALf,6BAMSE,YANT,EAMwB,IANxB,qGASSD,IATT,EASgB,SAThB,6BAUSD,GAVT,EAUe,qIAVf,6BAWSE,YAXT,EAWwB,IAXxB,gDAaI,kBAbJ,4DAcSD,IAdT,EAcgB,SAdhB,qCAeSD,GAfT,EAee,iEAff,qCAgBSE,YAhBT,EAgBwB,IAhBxB,6GAmBSD,IAnBT,EAmBgB,SAnBhB,6BAoBSD,GApBT,EAoBe,yGApBf,6BAqBSE,YArBT,EAqBwB,IArBxB,gDAuBI,aAvBJ,gDAwBSD,IAxBT,EAwBgB,SAxBhB,+BAyBSD,GAzBT,EAyBe,+CAzBf,+BA0BSE,YA1BT,EA0BwB,IA1BxB,kDA4BI,kBA5BJ,4DA6BSD,IA7BT,EA6BgB,CAAC,SAAD,EAAY,QAAZ,CA7BhB,qCA8BSD,GA9BT,EA8Be,wIA9Bf,sGAgCaC,IAhCb,EAgCoB,QAhCpB,iCAiCaD,GAjCb,EAiCmB,8BAjCnB,iCAkCaE,YAlCb,EAkC4B,IAlC5B,wEAqCI,iBArCJ,0DAsCSD,IAtCT,EAsCgB,CAAC,SAAD,EAAY,QAAZ,CAtChB,oCAuCSD,GAvCT,EAuCe,sIAvCf,uGAyCaC,IAzCb,EAyCoB,QAzCpB,kCA0CaD,GA1Cb,EA0CmB,6BA1CnB,kCA2CaE,YA3Cb,EA2C4B,IA3C5B,0HA+CSD,IA/CT,EA+CgB,CAAC,SAAD,EAAY,QAAZ,CA/ChB,4BAgDSD,GAhDT,EAgDe,yHAhDf,iFAkDaC,IAlDb,EAkDoB,CAAC,QAAD,EAAW,QAAX,CAlDpB,6BAmDaD,GAnDb,EAmDmB,gBAnDnB,6BAoDaE,YApDb,EAoD4B,IApD5B,4HAwDSD,IAxDT,EAwDgB,SAxDhB,iCAyDSD,GAzDT,EAyDe,gDAzDf,iCA0DSE,YA1DT,EA0DwB,IA1DxB,4GA6DSD,IA7DT,EA6DgB,SA7DhB,8BA8DSD,GA9DT,EA8De,+DA9Df,8BA+DSE,YA/DT,EA+DwB,KA/DxB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Other plugin settings',\n    animejs: {\n        [type]: 'boolean',\n        [doc]: 'Enable page animations',\n        [defaultValue]: true\n    },\n    gallery: {\n        [type]: 'boolean',\n        [doc]: 'Enable the lightGallery and Justified Gallery plugins\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/gallery-plugin/',\n        [defaultValue]: true\n    },\n    'outdated-browser': {\n        [type]: 'boolean',\n        [doc]: 'Enable the Outdated Browser plugin\\nhttp://outdatedbrowser.com/',\n        [defaultValue]: true\n    },\n    mathjax: {\n        [type]: 'boolean',\n        [doc]: 'Enable the MathJax plugin\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/mathjax-plugin/',\n        [defaultValue]: true\n    },\n    'back-to-top': {\n        [type]: 'boolean',\n        [doc]: 'Show the back to top button on mobile devices',\n        [defaultValue]: true\n    },\n    'google-analytics': {\n        [type]: ['boolean', 'object'],\n        [doc]: 'Google Analytics plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Google-Analytics',\n        tracking_id: {\n            [type]: 'string',\n            [doc]: 'Google Analytics tracking id',\n            [defaultValue]: null\n        }\n    },\n    'baidu-analytics': {\n        [type]: ['boolean', 'object'],\n        [doc]: 'Baidu Analytics plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Baidu-Analytics',\n        tracking_id: {\n            [type]: 'string',\n            [doc]: 'Baidu Analytics tracking id',\n            [defaultValue]: null\n        }\n    },\n    hotjar: {\n        [type]: ['boolean', 'object'],\n        [doc]: 'Hotjar user feedback plugin\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Hotjar',\n        site_id: {\n            [type]: ['string', 'number'],\n            [doc]: 'Hotjar site id',\n            [defaultValue]: null\n        }\n    },\n    progressbar: {\n        [type]: 'boolean',\n        [doc]: 'Show a loading progress bar at top of the page',\n        [defaultValue]: true\n    },\n    busuanzi: {\n        [type]: 'boolean',\n        [doc]: 'BuSuanZi site/page view counter\\nhttps://busuanzi.ibruce.info',\n        [defaultValue]: false\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525725
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/providers.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/providers.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/providers.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/providers.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "providers.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _cdn, _fontcdn, _iconcdn, _module$exports;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue;\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'CDN provider settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/speed-up-your-site-with-custom-cdn/'), _defineProperty(_module$exports, \"cdn\", (_cdn = {}, _defineProperty(_cdn, type, 'string'), _defineProperty(_cdn, doc, 'Name or URL of the JavaScript and/or stylesheet CDN provider'), _defineProperty(_cdn, defaultValue, 'jsdelivr'), _cdn)), _defineProperty(_module$exports, \"fontcdn\", (_fontcdn = {}, _defineProperty(_fontcdn, type, 'string'), _defineProperty(_fontcdn, doc, 'Name or URL of the webfont CDN provider'), _defineProperty(_fontcdn, defaultValue, 'google'), _fontcdn)), _defineProperty(_module$exports, \"iconcdn\", (_iconcdn = {}, _defineProperty(_iconcdn, type, 'string'), _defineProperty(_iconcdn, doc, 'Name or URL of the webfont Icon CDN provider'), _defineProperty(_iconcdn, defaultValue, 'fontawesome'), _iconcdn)), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3ZpZGVycy5zcGVjLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJkZXNjcmlwdG9ycyIsImRvYyIsInR5cGUiLCJkZWZhdWx0VmFsdWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7MkJBQW9DQSxPQUFPLENBQUMsaUJBQUQsQ0FBUCxDQUEyQkMsVztJQUF2REMsRyx3QkFBQUEsRztJQUFLQyxJLHdCQUFBQSxJO0lBQU1DLFksd0JBQUFBLFk7O0FBRW5CQyxNQUFNLENBQUNDLE9BQVAsMkRBQ0tILElBREwsRUFDWSxRQURaLG9DQUVLRCxHQUZMLEVBRVcsNkhBRlgsNkVBSVNDLElBSlQsRUFJZ0IsUUFKaEIseUJBS1NELEdBTFQsRUFLZSw4REFMZix5QkFNU0UsWUFOVCxFQU13QixVQU54QixpR0FTU0QsSUFUVCxFQVNnQixRQVRoQiw2QkFVU0QsR0FWVCxFQVVlLHlDQVZmLDZCQVdTRSxZQVhULEVBV3dCLFFBWHhCLHFHQWNTRCxJQWRULEVBY2dCLFFBZGhCLDZCQWVTRCxHQWZULEVBZWUsOENBZmYsNkJBZ0JTRSxZQWhCVCxFQWdCd0IsYUFoQnhCIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1cy9pbmNsdWRlcy9zcGVjcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZG9jLCB0eXBlLCBkZWZhdWx0VmFsdWUgfSA9IHJlcXVpcmUoJy4uL2NvbW1vbi91dGlscycpLmRlc2NyaXB0b3JzO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBbdHlwZV06ICdvYmplY3QnLFxuICAgIFtkb2NdOiAnQ0ROIHByb3ZpZGVyIHNldHRpbmdzXFxuaHR0cHM6Ly9wcG9mZmljZS5naXRodWIuaW8vaGV4by10aGVtZS1pY2FydXMvQ29uZmlndXJhdGlvbi9UaGVtZS9zcGVlZC11cC15b3VyLXNpdGUtd2l0aC1jdXN0b20tY2RuLycsXG4gICAgY2RuOiB7XG4gICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgIFtkb2NdOiAnTmFtZSBvciBVUkwgb2YgdGhlIEphdmFTY3JpcHQgYW5kL29yIHN0eWxlc2hlZXQgQ0ROIHByb3ZpZGVyJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06ICdqc2RlbGl2cidcbiAgICB9LFxuICAgIGZvbnRjZG46IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdOYW1lIG9yIFVSTCBvZiB0aGUgd2ViZm9udCBDRE4gcHJvdmlkZXInLFxuICAgICAgICBbZGVmYXVsdFZhbHVlXTogJ2dvb2dsZSdcbiAgICB9LFxuICAgIGljb25jZG46IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdOYW1lIG9yIFVSTCBvZiB0aGUgd2ViZm9udCBJY29uIENETiBwcm92aWRlcicsXG4gICAgICAgIFtkZWZhdWx0VmFsdWVdOiAnZm9udGF3ZXNvbWUnXG4gICAgfVxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "providers.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;2BAAoCA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAvDC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;;AAEnBC,MAAM,CAACC,OAAP,2DACKH,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,6HAFX,6EAISC,IAJT,EAIgB,QAJhB,yBAKSD,GALT,EAKe,8DALf,yBAMSE,YANT,EAMwB,UANxB,iGASSD,IATT,EASgB,QAThB,6BAUSD,GAVT,EAUe,yCAVf,6BAWSE,YAXT,EAWwB,QAXxB,qGAcSD,IAdT,EAcgB,QAdhB,6BAeSD,GAfT,EAee,8CAff,6BAgBSE,YAhBT,EAgBwB,aAhBxB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'CDN provider settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/speed-up-your-site-with-custom-cdn/',\n    cdn: {\n        [type]: 'string',\n        [doc]: 'Name or URL of the JavaScript and/or stylesheet CDN provider',\n        [defaultValue]: 'jsdelivr'\n    },\n    fontcdn: {\n        [type]: 'string',\n        [doc]: 'Name or URL of the webfont CDN provider',\n        [defaultValue]: 'google'\n    },\n    iconcdn: {\n        [type]: 'string',\n        [doc]: 'Name or URL of the webfont Icon CDN provider',\n        [defaultValue]: 'fontawesome'\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525725
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/common/ConfigValidator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/common/ConfigValidator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/common/ConfigValidator.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/common/ConfigValidator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
        "sourceFileName": "ConfigValidator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('./utils'),\n    is = _require.is,\n    descriptors = _require.descriptors;\n\nvar type = descriptors.type,\n    required = descriptors.required,\n    requires = descriptors.requires,\n    format = descriptors.format,\n    defaultValue = descriptors.defaultValue;\n\nvar _require$errors = require('./utils').errors,\n    InvalidSpecError = _require$errors.InvalidSpecError,\n    MissingRequiredError = _require$errors.MissingRequiredError,\n    TypeMismatchError = _require$errors.TypeMismatchError,\n    FormatMismatchError = _require$errors.FormatMismatchError,\n    VersionMalformedError = _require$errors.VersionMalformedError,\n    VersionNotFoundError = _require$errors.VersionNotFoundError,\n    VersionMismatchError = _require$errors.VersionMismatchError;\n\nfunction isRequiresSatisfied(spec, config) {\n  try {\n    if (!spec.hasOwnProperty(requires) || spec[requires](config) === true) {\n      return true;\n    }\n  } catch (e) {}\n\n  return false;\n}\n\nfunction getConfigType(spec, config) {\n  var specTypes = is.array(spec[type]) ? spec[type] : [spec[type]];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = specTypes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var specType = _step.value;\n\n      if (is[specType](config)) {\n        return specType;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction hasFormat(spec, config) {\n  if (!spec.hasOwnProperty(format)) {\n    return true;\n  }\n\n  return spec[format].test(config);\n}\n\nfunction _validate(spec, config, parentConfig, path) {\n  if (!is.spec(spec)) {\n    throw new InvalidSpecError(spec, path);\n  }\n\n  if (!isRequiresSatisfied(spec, parentConfig)) {\n    return;\n  }\n\n  if (is.undefined(config) || is[\"null\"](config)) {\n    if (spec[required] === true) {\n      throw new MissingRequiredError(spec, path);\n    }\n\n    return;\n  }\n\n  var type = getConfigType(spec, config);\n\n  if (type === null) {\n    throw new TypeMismatchError(spec, path, config);\n  }\n\n  if (type === 'string') {\n    if (!hasFormat(spec, config)) {\n      throw new FormatMismatchError(spec, path, config);\n    }\n  } else if (type === 'array' && spec.hasOwnProperty('*')) {\n    config.forEach(function (child, i) {\n      return _validate(spec['*'], child, config, path.concat(\"[\".concat(i, \"]\")));\n    });\n  } else if (type === 'object') {\n    for (var key in spec) {\n      if (key === '*') {\n        Object.keys(config).forEach(function (k) {\n          return _validate(spec['*'], config[k], config, path.concat(k));\n        });\n      } else {\n        _validate(spec[key], config[key], config, path.concat(key));\n      }\n    }\n  }\n}\n\nfunction formatVersion(ver) {\n  var m = /^(\\d)+\\.(\\d)+\\.(\\d)+(?:-([0-9A-Za-z-]+))*$/.exec(ver);\n\n  if (m === null) {\n    throw new VersionMalformedError(ver);\n  }\n\n  return {\n    major: m[1],\n    minor: m[2],\n    patch: m[3],\n    identifier: m.length > 4 ? m[4] : null\n  };\n}\n\nfunction compareVersion(ver1, ver2) {\n  for (var _i = 0, _arr = ['major', 'minor', 'patch']; _i < _arr.length; _i++) {\n    var section = _arr[_i];\n\n    if (ver1[section] !== ver2[section]) {\n      return Math.sign(ver1[section] - ver2[section]);\n    }\n  }\n\n  var id1 = ver1.hasOwnProperty('identifier') ? ver1.identifier : null;\n  var id2 = ver2.hasOwnProperty('identifier') ? ver2.identifier : null;\n\n  if (id1 === id2) {\n    return 0;\n  }\n\n  if (id1 === null) {\n    return 1;\n  }\n\n  if (id2 === null) {\n    return -1;\n  }\n\n  return id1.localeCompare(id2);\n}\n\nfunction isBreakingChange(base, ver) {\n  return base.major !== ver.major || base.minor !== ver.minor;\n}\n\nfunction checkVersion(spec, config) {\n  if (!config.hasOwnProperty('version')) {\n    throw new VersionNotFoundError();\n  }\n\n  var configVersion = formatVersion(config.version);\n  var specVersion = formatVersion(spec.version[defaultValue]);\n\n  if (isBreakingChange(specVersion, configVersion)) {\n    throw new VersionMismatchError(spec.version[defaultValue], config.version, compareVersion(specVersion, configVersion) > 0);\n  }\n}\n\nvar ConfigValidator =\n/*#__PURE__*/\nfunction () {\n  function ConfigValidator(spec) {\n    _classCallCheck(this, ConfigValidator);\n\n    this.spec = spec;\n  }\n\n  _createClass(ConfigValidator, [{\n    key: \"validate\",\n    value: function validate(config) {\n      checkVersion(this.spec, config);\n\n      _validate(this.spec, config, null, []);\n    }\n  }]);\n\n  return ConfigValidator;\n}();\n\nmodule.exports = ConfigValidator;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbmZpZ1ZhbGlkYXRvci5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiaXMiLCJkZXNjcmlwdG9ycyIsInR5cGUiLCJyZXF1aXJlZCIsInJlcXVpcmVzIiwiZm9ybWF0IiwiZGVmYXVsdFZhbHVlIiwiZXJyb3JzIiwiSW52YWxpZFNwZWNFcnJvciIsIk1pc3NpbmdSZXF1aXJlZEVycm9yIiwiVHlwZU1pc21hdGNoRXJyb3IiLCJGb3JtYXRNaXNtYXRjaEVycm9yIiwiVmVyc2lvbk1hbGZvcm1lZEVycm9yIiwiVmVyc2lvbk5vdEZvdW5kRXJyb3IiLCJWZXJzaW9uTWlzbWF0Y2hFcnJvciIsImlzUmVxdWlyZXNTYXRpc2ZpZWQiLCJzcGVjIiwiY29uZmlnIiwiaGFzT3duUHJvcGVydHkiLCJlIiwiZ2V0Q29uZmlnVHlwZSIsInNwZWNUeXBlcyIsImFycmF5Iiwic3BlY1R5cGUiLCJoYXNGb3JtYXQiLCJ0ZXN0IiwidmFsaWRhdGUiLCJwYXJlbnRDb25maWciLCJwYXRoIiwidW5kZWZpbmVkIiwiZm9yRWFjaCIsImNoaWxkIiwiaSIsImNvbmNhdCIsImtleSIsIk9iamVjdCIsImtleXMiLCJrIiwiZm9ybWF0VmVyc2lvbiIsInZlciIsIm0iLCJleGVjIiwibWFqb3IiLCJtaW5vciIsInBhdGNoIiwiaWRlbnRpZmllciIsImxlbmd0aCIsImNvbXBhcmVWZXJzaW9uIiwidmVyMSIsInZlcjIiLCJzZWN0aW9uIiwiTWF0aCIsInNpZ24iLCJpZDEiLCJpZDIiLCJsb2NhbGVDb21wYXJlIiwiaXNCcmVha2luZ0NoYW5nZSIsImJhc2UiLCJjaGVja1ZlcnNpb24iLCJjb25maWdWZXJzaW9uIiwidmVyc2lvbiIsInNwZWNWZXJzaW9uIiwiQ29uZmlnVmFsaWRhdG9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7ZUFBNEJBLE9BQU8sQ0FBQyxTQUFELEM7SUFBM0JDLEUsWUFBQUEsRTtJQUFJQyxXLFlBQUFBLFc7O0lBQ0pDLEksR0FBbURELFcsQ0FBbkRDLEk7SUFBTUMsUSxHQUE2Q0YsVyxDQUE3Q0UsUTtJQUFVQyxRLEdBQW1DSCxXLENBQW5DRyxRO0lBQVVDLE0sR0FBeUJKLFcsQ0FBekJJLE07SUFBUUMsWSxHQUFpQkwsVyxDQUFqQkssWTs7c0JBUWJQLE9BQU8sQ0FBQyxTQUFELENBQVAsQ0FBbUJRLE07SUFONUNDLGdCLG1CQUFBQSxnQjtJQUNBQyxvQixtQkFBQUEsb0I7SUFDQUMsaUIsbUJBQUFBLGlCO0lBQ0FDLG1CLG1CQUFBQSxtQjtJQUNBQyxxQixtQkFBQUEscUI7SUFDQUMsb0IsbUJBQUFBLG9CO0lBQ0FDLG9CLG1CQUFBQSxvQjs7QUFFSixTQUFTQyxtQkFBVCxDQUE2QkMsSUFBN0IsRUFBbUNDLE1BQW5DLEVBQTJDO0FBQ3ZDLE1BQUk7QUFDQSxRQUFJLENBQUNELElBQUksQ0FBQ0UsY0FBTCxDQUFvQmQsUUFBcEIsQ0FBRCxJQUFrQ1ksSUFBSSxDQUFDWixRQUFELENBQUosQ0FBZWEsTUFBZixNQUEyQixJQUFqRSxFQUF1RTtBQUNuRSxhQUFPLElBQVA7QUFDSDtBQUNKLEdBSkQsQ0FJRSxPQUFPRSxDQUFQLEVBQVUsQ0FBRzs7QUFDZixTQUFPLEtBQVA7QUFDSDs7QUFFRCxTQUFTQyxhQUFULENBQXVCSixJQUF2QixFQUE2QkMsTUFBN0IsRUFBcUM7QUFDakMsTUFBTUksU0FBUyxHQUFHckIsRUFBRSxDQUFDc0IsS0FBSCxDQUFTTixJQUFJLENBQUNkLElBQUQsQ0FBYixJQUF1QmMsSUFBSSxDQUFDZCxJQUFELENBQTNCLEdBQW9DLENBQUNjLElBQUksQ0FBQ2QsSUFBRCxDQUFMLENBQXREO0FBRGlDO0FBQUE7QUFBQTs7QUFBQTtBQUVqQyx5QkFBcUJtQixTQUFyQiw4SEFBZ0M7QUFBQSxVQUF2QkUsUUFBdUI7O0FBQzVCLFVBQUl2QixFQUFFLENBQUN1QixRQUFELENBQUYsQ0FBYU4sTUFBYixDQUFKLEVBQTBCO0FBQ3RCLGVBQU9NLFFBQVA7QUFDSDtBQUNKO0FBTmdDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBT2pDLFNBQU8sSUFBUDtBQUNIOztBQUVELFNBQVNDLFNBQVQsQ0FBbUJSLElBQW5CLEVBQXlCQyxNQUF6QixFQUFpQztBQUM3QixNQUFJLENBQUNELElBQUksQ0FBQ0UsY0FBTCxDQUFvQmIsTUFBcEIsQ0FBTCxFQUFrQztBQUM5QixXQUFPLElBQVA7QUFDSDs7QUFDRCxTQUFPVyxJQUFJLENBQUNYLE1BQUQsQ0FBSixDQUFhb0IsSUFBYixDQUFrQlIsTUFBbEIsQ0FBUDtBQUNIOztBQUVELFNBQVNTLFNBQVQsQ0FBa0JWLElBQWxCLEVBQXdCQyxNQUF4QixFQUFnQ1UsWUFBaEMsRUFBOENDLElBQTlDLEVBQW9EO0FBQ2hELE1BQUksQ0FBQzVCLEVBQUUsQ0FBQ2dCLElBQUgsQ0FBUUEsSUFBUixDQUFMLEVBQW9CO0FBQ2hCLFVBQU0sSUFBSVIsZ0JBQUosQ0FBcUJRLElBQXJCLEVBQTJCWSxJQUEzQixDQUFOO0FBQ0g7O0FBQ0QsTUFBSSxDQUFDYixtQkFBbUIsQ0FBQ0MsSUFBRCxFQUFPVyxZQUFQLENBQXhCLEVBQThDO0FBQzFDO0FBQ0g7O0FBQ0QsTUFBSTNCLEVBQUUsQ0FBQzZCLFNBQUgsQ0FBYVosTUFBYixLQUF3QmpCLEVBQUUsUUFBRixDQUFRaUIsTUFBUixDQUE1QixFQUE2QztBQUN6QyxRQUFJRCxJQUFJLENBQUNiLFFBQUQsQ0FBSixLQUFtQixJQUF2QixFQUE2QjtBQUN6QixZQUFNLElBQUlNLG9CQUFKLENBQXlCTyxJQUF6QixFQUErQlksSUFBL0IsQ0FBTjtBQUNIOztBQUNEO0FBQ0g7O0FBQ0QsTUFBTTFCLElBQUksR0FBR2tCLGFBQWEsQ0FBQ0osSUFBRCxFQUFPQyxNQUFQLENBQTFCOztBQUNBLE1BQUlmLElBQUksS0FBSyxJQUFiLEVBQW1CO0FBQ2YsVUFBTSxJQUFJUSxpQkFBSixDQUFzQk0sSUFBdEIsRUFBNEJZLElBQTVCLEVBQWtDWCxNQUFsQyxDQUFOO0FBQ0g7O0FBQ0QsTUFBSWYsSUFBSSxLQUFLLFFBQWIsRUFBdUI7QUFDbkIsUUFBSSxDQUFDc0IsU0FBUyxDQUFDUixJQUFELEVBQU9DLE1BQVAsQ0FBZCxFQUE4QjtBQUMxQixZQUFNLElBQUlOLG1CQUFKLENBQXdCSyxJQUF4QixFQUE4QlksSUFBOUIsRUFBb0NYLE1BQXBDLENBQU47QUFDSDtBQUNKLEdBSkQsTUFJTyxJQUFJZixJQUFJLEtBQUssT0FBVCxJQUFvQmMsSUFBSSxDQUFDRSxjQUFMLENBQW9CLEdBQXBCLENBQXhCLEVBQWtEO0FBQ3JERCxJQUFBQSxNQUFNLENBQUNhLE9BQVAsQ0FBZSxVQUFDQyxLQUFELEVBQVFDLENBQVI7QUFBQSxhQUFjTixTQUFRLENBQUNWLElBQUksQ0FBQyxHQUFELENBQUwsRUFBWWUsS0FBWixFQUFtQmQsTUFBbkIsRUFBMkJXLElBQUksQ0FBQ0ssTUFBTCxZQUFnQkQsQ0FBaEIsT0FBM0IsQ0FBdEI7QUFBQSxLQUFmO0FBQ0gsR0FGTSxNQUVBLElBQUk5QixJQUFJLEtBQUssUUFBYixFQUF1QjtBQUMxQixTQUFLLElBQUlnQyxHQUFULElBQWdCbEIsSUFBaEIsRUFBc0I7QUFDbEIsVUFBSWtCLEdBQUcsS0FBSyxHQUFaLEVBQWlCO0FBQ2JDLFFBQUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZbkIsTUFBWixFQUFvQmEsT0FBcEIsQ0FBNEIsVUFBQU8sQ0FBQztBQUFBLGlCQUFJWCxTQUFRLENBQUNWLElBQUksQ0FBQyxHQUFELENBQUwsRUFBWUMsTUFBTSxDQUFDb0IsQ0FBRCxDQUFsQixFQUF1QnBCLE1BQXZCLEVBQStCVyxJQUFJLENBQUNLLE1BQUwsQ0FBWUksQ0FBWixDQUEvQixDQUFaO0FBQUEsU0FBN0I7QUFDSCxPQUZELE1BRU87QUFDSFgsUUFBQUEsU0FBUSxDQUFDVixJQUFJLENBQUNrQixHQUFELENBQUwsRUFBWWpCLE1BQU0sQ0FBQ2lCLEdBQUQsQ0FBbEIsRUFBeUJqQixNQUF6QixFQUFpQ1csSUFBSSxDQUFDSyxNQUFMLENBQVlDLEdBQVosQ0FBakMsQ0FBUjtBQUNIO0FBQ0o7QUFDSjtBQUNKOztBQUVELFNBQVNJLGFBQVQsQ0FBdUJDLEdBQXZCLEVBQTRCO0FBQ3hCLE1BQU1DLENBQUMsR0FBRyw2Q0FBNkNDLElBQTdDLENBQWtERixHQUFsRCxDQUFWOztBQUNBLE1BQUlDLENBQUMsS0FBSyxJQUFWLEVBQWdCO0FBQ1osVUFBTSxJQUFJNUIscUJBQUosQ0FBMEIyQixHQUExQixDQUFOO0FBQ0g7O0FBQ0QsU0FBTztBQUNIRyxJQUFBQSxLQUFLLEVBQUVGLENBQUMsQ0FBQyxDQUFELENBREw7QUFFSEcsSUFBQUEsS0FBSyxFQUFFSCxDQUFDLENBQUMsQ0FBRCxDQUZMO0FBR0hJLElBQUFBLEtBQUssRUFBRUosQ0FBQyxDQUFDLENBQUQsQ0FITDtBQUlISyxJQUFBQSxVQUFVLEVBQUVMLENBQUMsQ0FBQ00sTUFBRixHQUFXLENBQVgsR0FBZU4sQ0FBQyxDQUFDLENBQUQsQ0FBaEIsR0FBc0I7QUFKL0IsR0FBUDtBQU1IOztBQUVELFNBQVNPLGNBQVQsQ0FBd0JDLElBQXhCLEVBQThCQyxJQUE5QixFQUFvQztBQUNoQywwQkFBb0IsQ0FBQyxPQUFELEVBQVUsT0FBVixFQUFtQixPQUFuQixDQUFwQiwwQkFBaUQ7QUFBNUMsUUFBSUMsT0FBTyxXQUFYOztBQUNELFFBQUlGLElBQUksQ0FBQ0UsT0FBRCxDQUFKLEtBQWtCRCxJQUFJLENBQUNDLE9BQUQsQ0FBMUIsRUFBcUM7QUFDakMsYUFBT0MsSUFBSSxDQUFDQyxJQUFMLENBQVVKLElBQUksQ0FBQ0UsT0FBRCxDQUFKLEdBQWdCRCxJQUFJLENBQUNDLE9BQUQsQ0FBOUIsQ0FBUDtBQUNIO0FBQ0o7O0FBQ0QsTUFBTUcsR0FBRyxHQUFHTCxJQUFJLENBQUM5QixjQUFMLENBQW9CLFlBQXBCLElBQW9DOEIsSUFBSSxDQUFDSCxVQUF6QyxHQUFzRCxJQUFsRTtBQUNBLE1BQU1TLEdBQUcsR0FBR0wsSUFBSSxDQUFDL0IsY0FBTCxDQUFvQixZQUFwQixJQUFvQytCLElBQUksQ0FBQ0osVUFBekMsR0FBc0QsSUFBbEU7O0FBQ0EsTUFBSVEsR0FBRyxLQUFLQyxHQUFaLEVBQWlCO0FBQ2IsV0FBTyxDQUFQO0FBQ0g7O0FBQ0QsTUFBSUQsR0FBRyxLQUFLLElBQVosRUFBa0I7QUFDZCxXQUFPLENBQVA7QUFDSDs7QUFDRCxNQUFJQyxHQUFHLEtBQUssSUFBWixFQUFrQjtBQUNkLFdBQU8sQ0FBQyxDQUFSO0FBQ0g7O0FBQ0QsU0FBT0QsR0FBRyxDQUFDRSxhQUFKLENBQWtCRCxHQUFsQixDQUFQO0FBQ0g7O0FBRUQsU0FBU0UsZ0JBQVQsQ0FBMEJDLElBQTFCLEVBQWdDbEIsR0FBaEMsRUFBcUM7QUFDakMsU0FBT2tCLElBQUksQ0FBQ2YsS0FBTCxLQUFlSCxHQUFHLENBQUNHLEtBQW5CLElBQTRCZSxJQUFJLENBQUNkLEtBQUwsS0FBZUosR0FBRyxDQUFDSSxLQUF0RDtBQUNIOztBQUdELFNBQVNlLFlBQVQsQ0FBc0IxQyxJQUF0QixFQUE0QkMsTUFBNUIsRUFBb0M7QUFDaEMsTUFBSSxDQUFDQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0IsU0FBdEIsQ0FBTCxFQUF1QztBQUNuQyxVQUFNLElBQUlMLG9CQUFKLEVBQU47QUFDSDs7QUFDRCxNQUFNOEMsYUFBYSxHQUFHckIsYUFBYSxDQUFDckIsTUFBTSxDQUFDMkMsT0FBUixDQUFuQztBQUNBLE1BQU1DLFdBQVcsR0FBR3ZCLGFBQWEsQ0FBQ3RCLElBQUksQ0FBQzRDLE9BQUwsQ0FBYXRELFlBQWIsQ0FBRCxDQUFqQzs7QUFDQSxNQUFJa0QsZ0JBQWdCLENBQUNLLFdBQUQsRUFBY0YsYUFBZCxDQUFwQixFQUFrRDtBQUM5QyxVQUFNLElBQUk3QyxvQkFBSixDQUF5QkUsSUFBSSxDQUFDNEMsT0FBTCxDQUFhdEQsWUFBYixDQUF6QixFQUFxRFcsTUFBTSxDQUFDMkMsT0FBNUQsRUFBcUViLGNBQWMsQ0FBQ2MsV0FBRCxFQUFjRixhQUFkLENBQWQsR0FBNkMsQ0FBbEgsQ0FBTjtBQUNIO0FBQ0o7O0lBRUtHLGU7OztBQUNGLDJCQUFZOUMsSUFBWixFQUFrQjtBQUFBOztBQUNkLFNBQUtBLElBQUwsR0FBWUEsSUFBWjtBQUNIOzs7OzZCQUVRQyxNLEVBQVE7QUFDYnlDLE1BQUFBLFlBQVksQ0FBQyxLQUFLMUMsSUFBTixFQUFZQyxNQUFaLENBQVo7O0FBQ0FTLE1BQUFBLFNBQVEsQ0FBQyxLQUFLVixJQUFOLEVBQVlDLE1BQVosRUFBb0IsSUFBcEIsRUFBMEIsRUFBMUIsQ0FBUjtBQUNIOzs7Ozs7QUFHTDhDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkYsZUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2luY2x1ZGVzL2NvbW1vbiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgaXMsIGRlc2NyaXB0b3JzIH0gPSByZXF1aXJlKCcuL3V0aWxzJyk7XG5jb25zdCB7IHR5cGUsIHJlcXVpcmVkLCByZXF1aXJlcywgZm9ybWF0LCBkZWZhdWx0VmFsdWUgfSA9IGRlc2NyaXB0b3JzO1xuY29uc3Qge1xuICAgIEludmFsaWRTcGVjRXJyb3IsXG4gICAgTWlzc2luZ1JlcXVpcmVkRXJyb3IsXG4gICAgVHlwZU1pc21hdGNoRXJyb3IsXG4gICAgRm9ybWF0TWlzbWF0Y2hFcnJvcixcbiAgICBWZXJzaW9uTWFsZm9ybWVkRXJyb3IsXG4gICAgVmVyc2lvbk5vdEZvdW5kRXJyb3IsXG4gICAgVmVyc2lvbk1pc21hdGNoRXJyb3IgfSA9IHJlcXVpcmUoJy4vdXRpbHMnKS5lcnJvcnM7XG5cbmZ1bmN0aW9uIGlzUmVxdWlyZXNTYXRpc2ZpZWQoc3BlYywgY29uZmlnKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKCFzcGVjLmhhc093blByb3BlcnR5KHJlcXVpcmVzKSB8fCBzcGVjW3JlcXVpcmVzXShjb25maWcpID09PSB0cnVlKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHsgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gZ2V0Q29uZmlnVHlwZShzcGVjLCBjb25maWcpIHtcbiAgICBjb25zdCBzcGVjVHlwZXMgPSBpcy5hcnJheShzcGVjW3R5cGVdKSA/IHNwZWNbdHlwZV0gOiBbc3BlY1t0eXBlXV07XG4gICAgZm9yIChsZXQgc3BlY1R5cGUgb2Ygc3BlY1R5cGVzKSB7XG4gICAgICAgIGlmIChpc1tzcGVjVHlwZV0oY29uZmlnKSkge1xuICAgICAgICAgICAgcmV0dXJuIHNwZWNUeXBlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiBoYXNGb3JtYXQoc3BlYywgY29uZmlnKSB7XG4gICAgaWYgKCFzcGVjLmhhc093blByb3BlcnR5KGZvcm1hdCkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBzcGVjW2Zvcm1hdF0udGVzdChjb25maWcpO1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZShzcGVjLCBjb25maWcsIHBhcmVudENvbmZpZywgcGF0aCkge1xuICAgIGlmICghaXMuc3BlYyhzcGVjKSkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZFNwZWNFcnJvcihzcGVjLCBwYXRoKTtcbiAgICB9XG4gICAgaWYgKCFpc1JlcXVpcmVzU2F0aXNmaWVkKHNwZWMsIHBhcmVudENvbmZpZykpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoaXMudW5kZWZpbmVkKGNvbmZpZykgfHwgaXMubnVsbChjb25maWcpKSB7XG4gICAgICAgIGlmIChzcGVjW3JlcXVpcmVkXSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IE1pc3NpbmdSZXF1aXJlZEVycm9yKHNwZWMsIHBhdGgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgdHlwZSA9IGdldENvbmZpZ1R5cGUoc3BlYywgY29uZmlnKTtcbiAgICBpZiAodHlwZSA9PT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZU1pc21hdGNoRXJyb3Ioc3BlYywgcGF0aCwgY29uZmlnKTtcbiAgICB9XG4gICAgaWYgKHR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmICghaGFzRm9ybWF0KHNwZWMsIGNvbmZpZykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBGb3JtYXRNaXNtYXRjaEVycm9yKHNwZWMsIHBhdGgsIGNvbmZpZyk7XG4gICAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICdhcnJheScgJiYgc3BlYy5oYXNPd25Qcm9wZXJ0eSgnKicpKSB7XG4gICAgICAgIGNvbmZpZy5mb3JFYWNoKChjaGlsZCwgaSkgPT4gdmFsaWRhdGUoc3BlY1snKiddLCBjaGlsZCwgY29uZmlnLCBwYXRoLmNvbmNhdChgWyR7aX1dYCkpKTtcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGZvciAobGV0IGtleSBpbiBzcGVjKSB7XG4gICAgICAgICAgICBpZiAoa2V5ID09PSAnKicpIHtcbiAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhjb25maWcpLmZvckVhY2goayA9PiB2YWxpZGF0ZShzcGVjWycqJ10sIGNvbmZpZ1trXSwgY29uZmlnLCBwYXRoLmNvbmNhdChrKSkpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YWxpZGF0ZShzcGVjW2tleV0sIGNvbmZpZ1trZXldLCBjb25maWcsIHBhdGguY29uY2F0KGtleSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5mdW5jdGlvbiBmb3JtYXRWZXJzaW9uKHZlcikge1xuICAgIGNvbnN0IG0gPSAvXihcXGQpK1xcLihcXGQpK1xcLihcXGQpKyg/Oi0oWzAtOUEtWmEtei1dKykpKiQvLmV4ZWModmVyKTtcbiAgICBpZiAobSA9PT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgVmVyc2lvbk1hbGZvcm1lZEVycm9yKHZlcik7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIG1ham9yOiBtWzFdLFxuICAgICAgICBtaW5vcjogbVsyXSxcbiAgICAgICAgcGF0Y2g6IG1bM10sXG4gICAgICAgIGlkZW50aWZpZXI6IG0ubGVuZ3RoID4gNCA/IG1bNF0gOiBudWxsXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gY29tcGFyZVZlcnNpb24odmVyMSwgdmVyMikge1xuICAgIGZvciAobGV0IHNlY3Rpb24gb2YgWydtYWpvcicsICdtaW5vcicsICdwYXRjaCddKSB7XG4gICAgICAgIGlmICh2ZXIxW3NlY3Rpb25dICE9PSB2ZXIyW3NlY3Rpb25dKSB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5zaWduKHZlcjFbc2VjdGlvbl0gLSB2ZXIyW3NlY3Rpb25dKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBpZDEgPSB2ZXIxLmhhc093blByb3BlcnR5KCdpZGVudGlmaWVyJykgPyB2ZXIxLmlkZW50aWZpZXIgOiBudWxsO1xuICAgIGNvbnN0IGlkMiA9IHZlcjIuaGFzT3duUHJvcGVydHkoJ2lkZW50aWZpZXInKSA/IHZlcjIuaWRlbnRpZmllciA6IG51bGw7XG4gICAgaWYgKGlkMSA9PT0gaWQyKSB7XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICBpZiAoaWQxID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgICBpZiAoaWQyID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiAtMTtcbiAgICB9XG4gICAgcmV0dXJuIGlkMS5sb2NhbGVDb21wYXJlKGlkMik7XG59XG5cbmZ1bmN0aW9uIGlzQnJlYWtpbmdDaGFuZ2UoYmFzZSwgdmVyKSB7XG4gICAgcmV0dXJuIGJhc2UubWFqb3IgIT09IHZlci5tYWpvciB8fCBiYXNlLm1pbm9yICE9PSB2ZXIubWlub3I7XG59XG5cblxuZnVuY3Rpb24gY2hlY2tWZXJzaW9uKHNwZWMsIGNvbmZpZykge1xuICAgIGlmICghY29uZmlnLmhhc093blByb3BlcnR5KCd2ZXJzaW9uJykpIHtcbiAgICAgICAgdGhyb3cgbmV3IFZlcnNpb25Ob3RGb3VuZEVycm9yKCk7XG4gICAgfVxuICAgIGNvbnN0IGNvbmZpZ1ZlcnNpb24gPSBmb3JtYXRWZXJzaW9uKGNvbmZpZy52ZXJzaW9uKTtcbiAgICBjb25zdCBzcGVjVmVyc2lvbiA9IGZvcm1hdFZlcnNpb24oc3BlYy52ZXJzaW9uW2RlZmF1bHRWYWx1ZV0pO1xuICAgIGlmIChpc0JyZWFraW5nQ2hhbmdlKHNwZWNWZXJzaW9uLCBjb25maWdWZXJzaW9uKSkge1xuICAgICAgICB0aHJvdyBuZXcgVmVyc2lvbk1pc21hdGNoRXJyb3Ioc3BlYy52ZXJzaW9uW2RlZmF1bHRWYWx1ZV0sIGNvbmZpZy52ZXJzaW9uLCBjb21wYXJlVmVyc2lvbihzcGVjVmVyc2lvbiwgY29uZmlnVmVyc2lvbikgPiAwKTtcbiAgICB9XG59XG5cbmNsYXNzIENvbmZpZ1ZhbGlkYXRvciB7XG4gICAgY29uc3RydWN0b3Ioc3BlYykge1xuICAgICAgICB0aGlzLnNwZWMgPSBzcGVjO1xuICAgIH1cblxuICAgIHZhbGlkYXRlKGNvbmZpZykge1xuICAgICAgICBjaGVja1ZlcnNpb24odGhpcy5zcGVjLCBjb25maWcpO1xuICAgICAgICB2YWxpZGF0ZSh0aGlzLnNwZWMsIGNvbmZpZywgbnVsbCwgW10pO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBDb25maWdWYWxpZGF0b3I7Il19",
    "map": {
      "version": 3,
      "sources": [
        "ConfigValidator.js"
      ],
      "names": [
        "require",
        "is",
        "descriptors",
        "type",
        "required",
        "requires",
        "format",
        "defaultValue",
        "errors",
        "InvalidSpecError",
        "MissingRequiredError",
        "TypeMismatchError",
        "FormatMismatchError",
        "VersionMalformedError",
        "VersionNotFoundError",
        "VersionMismatchError",
        "isRequiresSatisfied",
        "spec",
        "config",
        "hasOwnProperty",
        "e",
        "getConfigType",
        "specTypes",
        "array",
        "specType",
        "hasFormat",
        "test",
        "validate",
        "parentConfig",
        "path",
        "undefined",
        "forEach",
        "child",
        "i",
        "concat",
        "key",
        "Object",
        "keys",
        "k",
        "formatVersion",
        "ver",
        "m",
        "exec",
        "major",
        "minor",
        "patch",
        "identifier",
        "length",
        "compareVersion",
        "ver1",
        "ver2",
        "section",
        "Math",
        "sign",
        "id1",
        "id2",
        "localeCompare",
        "isBreakingChange",
        "base",
        "checkVersion",
        "configVersion",
        "version",
        "specVersion",
        "ConfigValidator",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;eAA4BA,OAAO,CAAC,SAAD,C;IAA3BC,E,YAAAA,E;IAAIC,W,YAAAA,W;;IACJC,I,GAAmDD,W,CAAnDC,I;IAAMC,Q,GAA6CF,W,CAA7CE,Q;IAAUC,Q,GAAmCH,W,CAAnCG,Q;IAAUC,M,GAAyBJ,W,CAAzBI,M;IAAQC,Y,GAAiBL,W,CAAjBK,Y;;sBAQbP,OAAO,CAAC,SAAD,CAAP,CAAmBQ,M;IAN5CC,gB,mBAAAA,gB;IACAC,oB,mBAAAA,oB;IACAC,iB,mBAAAA,iB;IACAC,mB,mBAAAA,mB;IACAC,qB,mBAAAA,qB;IACAC,oB,mBAAAA,oB;IACAC,oB,mBAAAA,oB;;AAEJ,SAASC,mBAAT,CAA6BC,IAA7B,EAAmCC,MAAnC,EAA2C;AACvC,MAAI;AACA,QAAI,CAACD,IAAI,CAACE,cAAL,CAAoBd,QAApB,CAAD,IAAkCY,IAAI,CAACZ,QAAD,CAAJ,CAAea,MAAf,MAA2B,IAAjE,EAAuE;AACnE,aAAO,IAAP;AACH;AACJ,GAJD,CAIE,OAAOE,CAAP,EAAU,CAAG;;AACf,SAAO,KAAP;AACH;;AAED,SAASC,aAAT,CAAuBJ,IAAvB,EAA6BC,MAA7B,EAAqC;AACjC,MAAMI,SAAS,GAAGrB,EAAE,CAACsB,KAAH,CAASN,IAAI,CAACd,IAAD,CAAb,IAAuBc,IAAI,CAACd,IAAD,CAA3B,GAAoC,CAACc,IAAI,CAACd,IAAD,CAAL,CAAtD;AADiC;AAAA;AAAA;;AAAA;AAEjC,yBAAqBmB,SAArB,8HAAgC;AAAA,UAAvBE,QAAuB;;AAC5B,UAAIvB,EAAE,CAACuB,QAAD,CAAF,CAAaN,MAAb,CAAJ,EAA0B;AACtB,eAAOM,QAAP;AACH;AACJ;AANgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOjC,SAAO,IAAP;AACH;;AAED,SAASC,SAAT,CAAmBR,IAAnB,EAAyBC,MAAzB,EAAiC;AAC7B,MAAI,CAACD,IAAI,CAACE,cAAL,CAAoBb,MAApB,CAAL,EAAkC;AAC9B,WAAO,IAAP;AACH;;AACD,SAAOW,IAAI,CAACX,MAAD,CAAJ,CAAaoB,IAAb,CAAkBR,MAAlB,CAAP;AACH;;AAED,SAASS,SAAT,CAAkBV,IAAlB,EAAwBC,MAAxB,EAAgCU,YAAhC,EAA8CC,IAA9C,EAAoD;AAChD,MAAI,CAAC5B,EAAE,CAACgB,IAAH,CAAQA,IAAR,CAAL,EAAoB;AAChB,UAAM,IAAIR,gBAAJ,CAAqBQ,IAArB,EAA2BY,IAA3B,CAAN;AACH;;AACD,MAAI,CAACb,mBAAmB,CAACC,IAAD,EAAOW,YAAP,CAAxB,EAA8C;AAC1C;AACH;;AACD,MAAI3B,EAAE,CAAC6B,SAAH,CAAaZ,MAAb,KAAwBjB,EAAE,QAAF,CAAQiB,MAAR,CAA5B,EAA6C;AACzC,QAAID,IAAI,CAACb,QAAD,CAAJ,KAAmB,IAAvB,EAA6B;AACzB,YAAM,IAAIM,oBAAJ,CAAyBO,IAAzB,EAA+BY,IAA/B,CAAN;AACH;;AACD;AACH;;AACD,MAAM1B,IAAI,GAAGkB,aAAa,CAACJ,IAAD,EAAOC,MAAP,CAA1B;;AACA,MAAIf,IAAI,KAAK,IAAb,EAAmB;AACf,UAAM,IAAIQ,iBAAJ,CAAsBM,IAAtB,EAA4BY,IAA5B,EAAkCX,MAAlC,CAAN;AACH;;AACD,MAAIf,IAAI,KAAK,QAAb,EAAuB;AACnB,QAAI,CAACsB,SAAS,CAACR,IAAD,EAAOC,MAAP,CAAd,EAA8B;AAC1B,YAAM,IAAIN,mBAAJ,CAAwBK,IAAxB,EAA8BY,IAA9B,EAAoCX,MAApC,CAAN;AACH;AACJ,GAJD,MAIO,IAAIf,IAAI,KAAK,OAAT,IAAoBc,IAAI,CAACE,cAAL,CAAoB,GAApB,CAAxB,EAAkD;AACrDD,IAAAA,MAAM,CAACa,OAAP,CAAe,UAACC,KAAD,EAAQC,CAAR;AAAA,aAAcN,SAAQ,CAACV,IAAI,CAAC,GAAD,CAAL,EAAYe,KAAZ,EAAmBd,MAAnB,EAA2BW,IAAI,CAACK,MAAL,YAAgBD,CAAhB,OAA3B,CAAtB;AAAA,KAAf;AACH,GAFM,MAEA,IAAI9B,IAAI,KAAK,QAAb,EAAuB;AAC1B,SAAK,IAAIgC,GAAT,IAAgBlB,IAAhB,EAAsB;AAClB,UAAIkB,GAAG,KAAK,GAAZ,EAAiB;AACbC,QAAAA,MAAM,CAACC,IAAP,CAAYnB,MAAZ,EAAoBa,OAApB,CAA4B,UAAAO,CAAC;AAAA,iBAAIX,SAAQ,CAACV,IAAI,CAAC,GAAD,CAAL,EAAYC,MAAM,CAACoB,CAAD,CAAlB,EAAuBpB,MAAvB,EAA+BW,IAAI,CAACK,MAAL,CAAYI,CAAZ,CAA/B,CAAZ;AAAA,SAA7B;AACH,OAFD,MAEO;AACHX,QAAAA,SAAQ,CAACV,IAAI,CAACkB,GAAD,CAAL,EAAYjB,MAAM,CAACiB,GAAD,CAAlB,EAAyBjB,MAAzB,EAAiCW,IAAI,CAACK,MAAL,CAAYC,GAAZ,CAAjC,CAAR;AACH;AACJ;AACJ;AACJ;;AAED,SAASI,aAAT,CAAuBC,GAAvB,EAA4B;AACxB,MAAMC,CAAC,GAAG,6CAA6CC,IAA7C,CAAkDF,GAAlD,CAAV;;AACA,MAAIC,CAAC,KAAK,IAAV,EAAgB;AACZ,UAAM,IAAI5B,qBAAJ,CAA0B2B,GAA1B,CAAN;AACH;;AACD,SAAO;AACHG,IAAAA,KAAK,EAAEF,CAAC,CAAC,CAAD,CADL;AAEHG,IAAAA,KAAK,EAAEH,CAAC,CAAC,CAAD,CAFL;AAGHI,IAAAA,KAAK,EAAEJ,CAAC,CAAC,CAAD,CAHL;AAIHK,IAAAA,UAAU,EAAEL,CAAC,CAACM,MAAF,GAAW,CAAX,GAAeN,CAAC,CAAC,CAAD,CAAhB,GAAsB;AAJ/B,GAAP;AAMH;;AAED,SAASO,cAAT,CAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;AAChC,0BAAoB,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAApB,0BAAiD;AAA5C,QAAIC,OAAO,WAAX;;AACD,QAAIF,IAAI,CAACE,OAAD,CAAJ,KAAkBD,IAAI,CAACC,OAAD,CAA1B,EAAqC;AACjC,aAAOC,IAAI,CAACC,IAAL,CAAUJ,IAAI,CAACE,OAAD,CAAJ,GAAgBD,IAAI,CAACC,OAAD,CAA9B,CAAP;AACH;AACJ;;AACD,MAAMG,GAAG,GAAGL,IAAI,CAAC9B,cAAL,CAAoB,YAApB,IAAoC8B,IAAI,CAACH,UAAzC,GAAsD,IAAlE;AACA,MAAMS,GAAG,GAAGL,IAAI,CAAC/B,cAAL,CAAoB,YAApB,IAAoC+B,IAAI,CAACJ,UAAzC,GAAsD,IAAlE;;AACA,MAAIQ,GAAG,KAAKC,GAAZ,EAAiB;AACb,WAAO,CAAP;AACH;;AACD,MAAID,GAAG,KAAK,IAAZ,EAAkB;AACd,WAAO,CAAP;AACH;;AACD,MAAIC,GAAG,KAAK,IAAZ,EAAkB;AACd,WAAO,CAAC,CAAR;AACH;;AACD,SAAOD,GAAG,CAACE,aAAJ,CAAkBD,GAAlB,CAAP;AACH;;AAED,SAASE,gBAAT,CAA0BC,IAA1B,EAAgClB,GAAhC,EAAqC;AACjC,SAAOkB,IAAI,CAACf,KAAL,KAAeH,GAAG,CAACG,KAAnB,IAA4Be,IAAI,CAACd,KAAL,KAAeJ,GAAG,CAACI,KAAtD;AACH;;AAGD,SAASe,YAAT,CAAsB1C,IAAtB,EAA4BC,MAA5B,EAAoC;AAChC,MAAI,CAACA,MAAM,CAACC,cAAP,CAAsB,SAAtB,CAAL,EAAuC;AACnC,UAAM,IAAIL,oBAAJ,EAAN;AACH;;AACD,MAAM8C,aAAa,GAAGrB,aAAa,CAACrB,MAAM,CAAC2C,OAAR,CAAnC;AACA,MAAMC,WAAW,GAAGvB,aAAa,CAACtB,IAAI,CAAC4C,OAAL,CAAatD,YAAb,CAAD,CAAjC;;AACA,MAAIkD,gBAAgB,CAACK,WAAD,EAAcF,aAAd,CAApB,EAAkD;AAC9C,UAAM,IAAI7C,oBAAJ,CAAyBE,IAAI,CAAC4C,OAAL,CAAatD,YAAb,CAAzB,EAAqDW,MAAM,CAAC2C,OAA5D,EAAqEb,cAAc,CAACc,WAAD,EAAcF,aAAd,CAAd,GAA6C,CAAlH,CAAN;AACH;AACJ;;IAEKG,e;;;AACF,2BAAY9C,IAAZ,EAAkB;AAAA;;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;;;6BAEQC,M,EAAQ;AACbyC,MAAAA,YAAY,CAAC,KAAK1C,IAAN,EAAYC,MAAZ,CAAZ;;AACAS,MAAAA,SAAQ,CAAC,KAAKV,IAAN,EAAYC,MAAZ,EAAoB,IAApB,EAA0B,EAA1B,CAAR;AACH;;;;;;AAGL8C,MAAM,CAACC,OAAP,GAAiBF,eAAjB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
      "sourcesContent": [
        "const { is, descriptors } = require('./utils');\nconst { type, required, requires, format, defaultValue } = descriptors;\nconst {\n    InvalidSpecError,\n    MissingRequiredError,\n    TypeMismatchError,\n    FormatMismatchError,\n    VersionMalformedError,\n    VersionNotFoundError,\n    VersionMismatchError } = require('./utils').errors;\n\nfunction isRequiresSatisfied(spec, config) {\n    try {\n        if (!spec.hasOwnProperty(requires) || spec[requires](config) === true) {\n            return true;\n        }\n    } catch (e) { }\n    return false;\n}\n\nfunction getConfigType(spec, config) {\n    const specTypes = is.array(spec[type]) ? spec[type] : [spec[type]];\n    for (let specType of specTypes) {\n        if (is[specType](config)) {\n            return specType;\n        }\n    }\n    return null;\n}\n\nfunction hasFormat(spec, config) {\n    if (!spec.hasOwnProperty(format)) {\n        return true;\n    }\n    return spec[format].test(config);\n}\n\nfunction validate(spec, config, parentConfig, path) {\n    if (!is.spec(spec)) {\n        throw new InvalidSpecError(spec, path);\n    }\n    if (!isRequiresSatisfied(spec, parentConfig)) {\n        return;\n    }\n    if (is.undefined(config) || is.null(config)) {\n        if (spec[required] === true) {\n            throw new MissingRequiredError(spec, path);\n        }\n        return;\n    }\n    const type = getConfigType(spec, config);\n    if (type === null) {\n        throw new TypeMismatchError(spec, path, config);\n    }\n    if (type === 'string') {\n        if (!hasFormat(spec, config)) {\n            throw new FormatMismatchError(spec, path, config);\n        }\n    } else if (type === 'array' && spec.hasOwnProperty('*')) {\n        config.forEach((child, i) => validate(spec['*'], child, config, path.concat(`[${i}]`)));\n    } else if (type === 'object') {\n        for (let key in spec) {\n            if (key === '*') {\n                Object.keys(config).forEach(k => validate(spec['*'], config[k], config, path.concat(k)));\n            } else {\n                validate(spec[key], config[key], config, path.concat(key));\n            }\n        }\n    }\n}\n\nfunction formatVersion(ver) {\n    const m = /^(\\d)+\\.(\\d)+\\.(\\d)+(?:-([0-9A-Za-z-]+))*$/.exec(ver);\n    if (m === null) {\n        throw new VersionMalformedError(ver);\n    }\n    return {\n        major: m[1],\n        minor: m[2],\n        patch: m[3],\n        identifier: m.length > 4 ? m[4] : null\n    };\n}\n\nfunction compareVersion(ver1, ver2) {\n    for (let section of ['major', 'minor', 'patch']) {\n        if (ver1[section] !== ver2[section]) {\n            return Math.sign(ver1[section] - ver2[section]);\n        }\n    }\n    const id1 = ver1.hasOwnProperty('identifier') ? ver1.identifier : null;\n    const id2 = ver2.hasOwnProperty('identifier') ? ver2.identifier : null;\n    if (id1 === id2) {\n        return 0;\n    }\n    if (id1 === null) {\n        return 1;\n    }\n    if (id2 === null) {\n        return -1;\n    }\n    return id1.localeCompare(id2);\n}\n\nfunction isBreakingChange(base, ver) {\n    return base.major !== ver.major || base.minor !== ver.minor;\n}\n\n\nfunction checkVersion(spec, config) {\n    if (!config.hasOwnProperty('version')) {\n        throw new VersionNotFoundError();\n    }\n    const configVersion = formatVersion(config.version);\n    const specVersion = formatVersion(spec.version[defaultValue]);\n    if (isBreakingChange(specVersion, configVersion)) {\n        throw new VersionMismatchError(spec.version[defaultValue], config.version, compareVersion(specVersion, configVersion) > 0);\n    }\n}\n\nclass ConfigValidator {\n    constructor(spec) {\n        this.spec = spec;\n    }\n\n    validate(config) {\n        checkVersion(this.spec, config);\n        validate(this.spec, config, null, []);\n    }\n}\n\nmodule.exports = ConfigValidator;"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525709
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/common/ConfigGenerator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/common/ConfigGenerator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/common/ConfigGenerator.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/common/ConfigGenerator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
        "sourceFileName": "ConfigGenerator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar yaml = require('js-yaml');\n\nvar Type = require('js-yaml/lib/js-yaml/type');\n\nvar Schema = require('js-yaml/lib/js-yaml/schema');\n\nvar _require = require('./utils'),\n    is = _require.is,\n    descriptors = _require.descriptors;\n\nvar doc = descriptors.doc,\n    type = descriptors.type,\n    requires = descriptors.requires,\n    defaultValue = descriptors.defaultValue;\nvar UNDEFINED = Symbol('undefined'); // output null as empty in yaml\n\nvar YAML_SCHEMA = new Schema({\n  include: [require('js-yaml/lib/js-yaml/schema/default_full')],\n  implicit: [new Type('tag:yaml.org,2002:null', {\n    kind: 'scalar',\n    resolve: function resolve(data) {\n      if (data === null) {\n        return true;\n      }\n\n      var max = data.length;\n      return max === 1 && data === '~' || max === 4 && (data === 'null' || data === 'Null' || data === 'NULL');\n    },\n    construct: function construct() {\n      return null;\n    },\n    predicate: function predicate(object) {\n      return object === null;\n    },\n    represent: {\n      empty: function empty() {\n        return '';\n      }\n    },\n    defaultStyle: 'empty'\n  })]\n});\n\nfunction appendDoc(spec, defaults) {\n  if (defaults === null) {\n    return null;\n  }\n\n  if (is.array(defaults) && spec.hasOwnProperty('*')) {\n    return defaults.map(function (value) {\n      return appendDoc(spec['*'], value);\n    });\n  } else if (is.object(defaults)) {\n    var _defaults = {};\n\n    for (var key in defaults) {\n      if (spec.hasOwnProperty(key) && spec[key].hasOwnProperty(doc)) {\n        var i = 0;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = spec[key][doc].split('\\n')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var line = _step.value;\n            _defaults['#' + key + i++] = line;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      _defaults[key] = appendDoc(spec.hasOwnProperty(key) ? spec[key] : {}, defaults[key]);\n    }\n\n    return _defaults;\n  }\n\n  return defaults;\n}\n\nfunction _generate(spec) {\n  var parentConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (!is.spec(spec)) {\n    return UNDEFINED;\n  }\n\n  if (spec.hasOwnProperty(requires) && !spec[requires](parentConfig)) {\n    return UNDEFINED;\n  }\n\n  if (spec.hasOwnProperty(defaultValue)) {\n    return appendDoc(spec, spec[defaultValue]);\n  }\n\n  var types = is.array(spec[type]) ? spec[type] : [spec[type]];\n\n  if (types.includes('object')) {\n    var defaults = UNDEFINED;\n\n    for (var key in spec) {\n      if (key === '*') {\n        continue;\n      }\n\n      var value = _generate(spec[key], defaults);\n\n      if (value !== UNDEFINED) {\n        if (defaults === UNDEFINED) {\n          defaults = {};\n        }\n\n        defaults[key] = value;\n      }\n    }\n\n    return appendDoc(spec, defaults);\n  } else if (types.includes('array') && spec.hasOwnProperty('*')) {\n    return [_generate(spec['*'], {})];\n  }\n\n  return UNDEFINED;\n}\n\nvar ConfigGenerator =\n/*#__PURE__*/\nfunction () {\n  function ConfigGenerator(spec) {\n    _classCallCheck(this, ConfigGenerator);\n\n    this.spec = spec;\n  }\n\n  _createClass(ConfigGenerator, [{\n    key: \"generate\",\n    value: function generate() {\n      return yaml.safeDump(_generate(this.spec), {\n        indent: 4,\n        lineWidth: 1024,\n        schema: YAML_SCHEMA\n      }).replace(/^(\\s*)\\'#.*?\\':\\s*\\'*(.*?)\\'*$/mg, '$1# $2'); // make comment lines\n    }\n  }]);\n\n  return ConfigGenerator;\n}();\n\nmodule.exports = ConfigGenerator;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "ConfigGenerator.js"
      ],
      "names": [
        "yaml",
        "require",
        "Type",
        "Schema",
        "is",
        "descriptors",
        "doc",
        "type",
        "requires",
        "defaultValue",
        "UNDEFINED",
        "Symbol",
        "YAML_SCHEMA",
        "include",
        "implicit",
        "kind",
        "resolve",
        "data",
        "max",
        "length",
        "construct",
        "predicate",
        "object",
        "represent",
        "empty",
        "defaultStyle",
        "appendDoc",
        "spec",
        "defaults",
        "array",
        "hasOwnProperty",
        "map",
        "value",
        "_defaults",
        "key",
        "i",
        "split",
        "line",
        "generate",
        "parentConfig",
        "types",
        "includes",
        "ConfigGenerator",
        "safeDump",
        "indent",
        "lineWidth",
        "schema",
        "replace",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAApB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,0BAAD,CAApB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,4BAAD,CAAtB;;eAE4BA,OAAO,CAAC,SAAD,C;IAA3BG,E,YAAAA,E;IAAIC,W,YAAAA,W;;IACJC,G,GAAsCD,W,CAAtCC,G;IAAKC,I,GAAiCF,W,CAAjCE,I;IAAMC,Q,GAA2BH,W,CAA3BG,Q;IAAUC,Y,GAAiBJ,W,CAAjBI,Y;AAE7B,IAAMC,SAAS,GAAGC,MAAM,CAAC,WAAD,CAAxB,C,CACA;;AACA,IAAMC,WAAW,GAAG,IAAIT,MAAJ,CAAW;AAC3BU,EAAAA,OAAO,EAAE,CACLZ,OAAO,CAAC,yCAAD,CADF,CADkB;AAI3Ba,EAAAA,QAAQ,EAAE,CACN,IAAIZ,IAAJ,CAAS,wBAAT,EAAmC;AAC/Ba,IAAAA,IAAI,EAAE,QADyB;AAE/BC,IAAAA,OAF+B,mBAEvBC,IAFuB,EAEjB;AACV,UAAIA,IAAI,KAAK,IAAb,EAAmB;AACf,eAAO,IAAP;AACH;;AACD,UAAMC,GAAG,GAAGD,IAAI,CAACE,MAAjB;AACA,aAAQD,GAAG,KAAK,CAAR,IAAaD,IAAI,KAAK,GAAvB,IACFC,GAAG,KAAK,CAAR,KAAcD,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,MAA5B,IAAsCA,IAAI,KAAK,MAA7D,CADL;AAEH,KAT8B;AAU/BG,IAAAA,SAAS,EAAE;AAAA,aAAM,IAAN;AAAA,KAVoB;AAW/BC,IAAAA,SAAS,EAAE,mBAAAC,MAAM;AAAA,aAAIA,MAAM,KAAK,IAAf;AAAA,KAXc;AAY/BC,IAAAA,SAAS,EAAE;AACPC,MAAAA,KAAK,EAAE,iBAAY;AAAE,eAAO,EAAP;AAAY;AAD1B,KAZoB;AAe/BC,IAAAA,YAAY,EAAE;AAfiB,GAAnC,CADM;AAJiB,CAAX,CAApB;;AAyBA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,QAAzB,EAAmC;AAC/B,MAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACnB,WAAO,IAAP;AACH;;AACD,MAAIxB,EAAE,CAACyB,KAAH,CAASD,QAAT,KAAsBD,IAAI,CAACG,cAAL,CAAoB,GAApB,CAA1B,EAAoD;AAChD,WAAOF,QAAQ,CAACG,GAAT,CAAa,UAAAC,KAAK;AAAA,aAAIN,SAAS,CAACC,IAAI,CAAC,GAAD,CAAL,EAAYK,KAAZ,CAAb;AAAA,KAAlB,CAAP;AACH,GAFD,MAEO,IAAI5B,EAAE,CAACkB,MAAH,CAAUM,QAAV,CAAJ,EAAyB;AAC5B,QAAMK,SAAS,GAAG,EAAlB;;AACA,SAAK,IAAIC,GAAT,IAAgBN,QAAhB,EAA0B;AACtB,UAAID,IAAI,CAACG,cAAL,CAAoBI,GAApB,KAA4BP,IAAI,CAACO,GAAD,CAAJ,CAAUJ,cAAV,CAAyBxB,GAAzB,CAAhC,EAA+D;AAC3D,YAAI6B,CAAC,GAAG,CAAR;AAD2D;AAAA;AAAA;;AAAA;AAE3D,+BAAiBR,IAAI,CAACO,GAAD,CAAJ,CAAU5B,GAAV,EAAe8B,KAAf,CAAqB,IAArB,CAAjB,8HAA6C;AAAA,gBAApCC,IAAoC;AACzCJ,YAAAA,SAAS,CAAC,MAAMC,GAAN,GAAYC,CAAC,EAAd,CAAT,GAA6BE,IAA7B;AACH;AAJ0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK9D;;AACDJ,MAAAA,SAAS,CAACC,GAAD,CAAT,GAAiBR,SAAS,CAACC,IAAI,CAACG,cAAL,CAAoBI,GAApB,IAA2BP,IAAI,CAACO,GAAD,CAA/B,GAAuC,EAAxC,EAA4CN,QAAQ,CAACM,GAAD,CAApD,CAA1B;AACH;;AACD,WAAOD,SAAP;AACH;;AACD,SAAOL,QAAP;AACH;;AAED,SAASU,SAAT,CAAkBX,IAAlB,EAA6C;AAAA,MAArBY,YAAqB,uEAAN,IAAM;;AACzC,MAAI,CAACnC,EAAE,CAACuB,IAAH,CAAQA,IAAR,CAAL,EAAoB;AAChB,WAAOjB,SAAP;AACH;;AACD,MAAIiB,IAAI,CAACG,cAAL,CAAoBtB,QAApB,KAAiC,CAACmB,IAAI,CAACnB,QAAD,CAAJ,CAAe+B,YAAf,CAAtC,EAAoE;AAChE,WAAO7B,SAAP;AACH;;AACD,MAAIiB,IAAI,CAACG,cAAL,CAAoBrB,YAApB,CAAJ,EAAuC;AACnC,WAAOiB,SAAS,CAACC,IAAD,EAAOA,IAAI,CAAClB,YAAD,CAAX,CAAhB;AACH;;AACD,MAAM+B,KAAK,GAAGpC,EAAE,CAACyB,KAAH,CAASF,IAAI,CAACpB,IAAD,CAAb,IAAuBoB,IAAI,CAACpB,IAAD,CAA3B,GAAoC,CAACoB,IAAI,CAACpB,IAAD,CAAL,CAAlD;;AACA,MAAIiC,KAAK,CAACC,QAAN,CAAe,QAAf,CAAJ,EAA8B;AAC1B,QAAIb,QAAQ,GAAGlB,SAAf;;AACA,SAAK,IAAIwB,GAAT,IAAgBP,IAAhB,EAAsB;AAClB,UAAIO,GAAG,KAAK,GAAZ,EAAiB;AACb;AACH;;AACD,UAAMF,KAAK,GAAGM,SAAQ,CAACX,IAAI,CAACO,GAAD,CAAL,EAAYN,QAAZ,CAAtB;;AACA,UAAII,KAAK,KAAKtB,SAAd,EAAyB;AACrB,YAAIkB,QAAQ,KAAKlB,SAAjB,EAA4B;AACxBkB,UAAAA,QAAQ,GAAG,EAAX;AACH;;AACDA,QAAAA,QAAQ,CAACM,GAAD,CAAR,GAAgBF,KAAhB;AACH;AACJ;;AACD,WAAON,SAAS,CAACC,IAAD,EAAOC,QAAP,CAAhB;AACH,GAfD,MAeO,IAAIY,KAAK,CAACC,QAAN,CAAe,OAAf,KAA2Bd,IAAI,CAACG,cAAL,CAAoB,GAApB,CAA/B,EAAyD;AAC5D,WAAO,CAACQ,SAAQ,CAACX,IAAI,CAAC,GAAD,CAAL,EAAY,EAAZ,CAAT,CAAP;AACH;;AACD,SAAOjB,SAAP;AACH;;IAEKgC,e;;;AACF,2BAAYf,IAAZ,EAAkB;AAAA;;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;;;+BAEU;AACP,aAAO3B,IAAI,CAAC2C,QAAL,CAAcL,SAAQ,CAAC,KAAKX,IAAN,CAAtB,EAAmC;AACtCiB,QAAAA,MAAM,EAAE,CAD8B;AAEtCC,QAAAA,SAAS,EAAE,IAF2B;AAGtCC,QAAAA,MAAM,EAAElC;AAH8B,OAAnC,EAIJmC,OAJI,CAII,kCAJJ,EAIwC,QAJxC,CAAP,CADO,CAKmD;AAC7D;;;;;;AAGLC,MAAM,CAACC,OAAP,GAAiBP,eAAjB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
      "sourcesContent": [
        "const yaml = require('js-yaml');\nconst Type = require('js-yaml/lib/js-yaml/type');\nconst Schema = require('js-yaml/lib/js-yaml/schema');\n\nconst { is, descriptors } = require('./utils');\nconst { doc, type, requires, defaultValue } = descriptors;\n\nconst UNDEFINED = Symbol('undefined');\n// output null as empty in yaml\nconst YAML_SCHEMA = new Schema({\n    include: [\n        require('js-yaml/lib/js-yaml/schema/default_full')\n    ],\n    implicit: [\n        new Type('tag:yaml.org,2002:null', {\n            kind: 'scalar',\n            resolve(data) {\n                if (data === null) {\n                    return true;\n                }\n                const max = data.length;\n                return (max === 1 && data === '~') ||\n                    (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n            },\n            construct: () => null,\n            predicate: object => object === null,\n            represent: {\n                empty: function () { return ''; }\n            },\n            defaultStyle: 'empty'\n        })\n    ]\n});\n\nfunction appendDoc(spec, defaults) {\n    if (defaults === null) {\n        return null;\n    }\n    if (is.array(defaults) && spec.hasOwnProperty('*')) {\n        return defaults.map(value => appendDoc(spec['*'], value));\n    } else if (is.object(defaults)) {\n        const _defaults = {};\n        for (let key in defaults) {\n            if (spec.hasOwnProperty(key) && spec[key].hasOwnProperty(doc)) {\n                let i = 0;\n                for (let line of spec[key][doc].split('\\n')) {\n                    _defaults['#' + key + i++] = line;\n                }\n            }\n            _defaults[key] = appendDoc(spec.hasOwnProperty(key) ? spec[key] : {}, defaults[key]);\n        }\n        return _defaults;\n    }\n    return defaults;\n}\n\nfunction generate(spec, parentConfig = null) {\n    if (!is.spec(spec)) {\n        return UNDEFINED;\n    }\n    if (spec.hasOwnProperty(requires) && !spec[requires](parentConfig)) {\n        return UNDEFINED;\n    }\n    if (spec.hasOwnProperty(defaultValue)) {\n        return appendDoc(spec, spec[defaultValue]);\n    }\n    const types = is.array(spec[type]) ? spec[type] : [spec[type]];\n    if (types.includes('object')) {\n        let defaults = UNDEFINED;\n        for (let key in spec) {\n            if (key === '*') {\n                continue;\n            }\n            const value = generate(spec[key], defaults);\n            if (value !== UNDEFINED) {\n                if (defaults === UNDEFINED) {\n                    defaults = {};\n                }\n                defaults[key] = value;\n            }\n        }\n        return appendDoc(spec, defaults);\n    } else if (types.includes('array') && spec.hasOwnProperty('*')) {\n        return [generate(spec['*'], {})];\n    }\n    return UNDEFINED;\n}\n\nclass ConfigGenerator {\n    constructor(spec) {\n        this.spec = spec;\n    }\n\n    generate() {\n        return yaml.safeDump(generate(this.spec), {\n            indent: 4,\n            lineWidth: 1024,\n            schema: YAML_SCHEMA\n        }).replace(/^(\\s*)\\'#.*?\\':\\s*\\'*(.*?)\\'*$/mg, '$1# $2'); // make comment lines\n    }\n}\n\nmodule.exports = ConfigGenerator;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525709
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/generators\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/generators/categories.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/generators/categories.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/generators/categories.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/generators/categories.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
        "sourceFileName": "categories.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Category list page generator\n */\nmodule.exports = function (hexo) {\n  hexo.extend.generator.register('categories', function (locals) {\n    return {\n      path: 'categories/',\n      layout: ['categories'],\n      data: Object.assign({}, locals, {\n        __categories: true\n      })\n    };\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3JpZXMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImhleG8iLCJleHRlbmQiLCJnZW5lcmF0b3IiLCJyZWdpc3RlciIsImxvY2FscyIsInBhdGgiLCJsYXlvdXQiLCJkYXRhIiwiT2JqZWN0IiwiYXNzaWduIiwiX19jYXRlZ29yaWVzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7QUFHQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVVDLElBQVYsRUFBZ0I7QUFDN0JBLEVBQUFBLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxTQUFaLENBQXNCQyxRQUF0QixDQUErQixZQUEvQixFQUE2QyxVQUFVQyxNQUFWLEVBQWtCO0FBQzNELFdBQU87QUFDSEMsTUFBQUEsSUFBSSxFQUFFLGFBREg7QUFFSEMsTUFBQUEsTUFBTSxFQUFFLENBQUMsWUFBRCxDQUZMO0FBR0hDLE1BQUFBLElBQUksRUFBRUMsTUFBTSxDQUFDQyxNQUFQLENBQWMsRUFBZCxFQUFrQkwsTUFBbEIsRUFBMEI7QUFDNUJNLFFBQUFBLFlBQVksRUFBRTtBQURjLE9BQTFCO0FBSEgsS0FBUDtBQU9ILEdBUkQ7QUFTSCxDQVZEIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1cy9pbmNsdWRlcy9nZW5lcmF0b3JzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDYXRlZ29yeSBsaXN0IHBhZ2UgZ2VuZXJhdG9yXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGhleG8pIHtcbiAgICBoZXhvLmV4dGVuZC5nZW5lcmF0b3IucmVnaXN0ZXIoJ2NhdGVnb3JpZXMnLCBmdW5jdGlvbiAobG9jYWxzKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwYXRoOiAnY2F0ZWdvcmllcy8nLFxuICAgICAgICAgICAgbGF5b3V0OiBbJ2NhdGVnb3JpZXMnXSxcbiAgICAgICAgICAgIGRhdGE6IE9iamVjdC5hc3NpZ24oe30sIGxvY2Fscywge1xuICAgICAgICAgICAgICAgIF9fY2F0ZWdvcmllczogdHJ1ZVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfTtcbiAgICB9KTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "categories.js"
      ],
      "names": [
        "module",
        "exports",
        "hexo",
        "extend",
        "generator",
        "register",
        "locals",
        "path",
        "layout",
        "data",
        "Object",
        "assign",
        "__categories"
      ],
      "mappings": ";;AAAA;;;AAGAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,SAAZ,CAAsBC,QAAtB,CAA+B,YAA/B,EAA6C,UAAUC,MAAV,EAAkB;AAC3D,WAAO;AACHC,MAAAA,IAAI,EAAE,aADH;AAEHC,MAAAA,MAAM,EAAE,CAAC,YAAD,CAFL;AAGHC,MAAAA,IAAI,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAlB,EAA0B;AAC5BM,QAAAA,YAAY,EAAE;AADc,OAA1B;AAHH,KAAP;AAOH,GARD;AASH,CAVD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
      "sourcesContent": [
        "/**\n * Category list page generator\n */\nmodule.exports = function (hexo) {\n    hexo.extend.generator.register('categories', function (locals) {\n        return {\n            path: 'categories/',\n            layout: ['categories'],\n            data: Object.assign({}, locals, {\n                __categories: true\n            })\n        };\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525709
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/generators\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/generators/category.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/generators/category.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/generators/category.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/generators/category.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
        "sourceFileName": "category.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar pagination = require('hexo-pagination');\n\nmodule.exports = function (hexo) {\n  // ATTENTION: This will override the default category generator!\n  hexo.extend.generator.register('category', function (locals) {\n    var config = this.config;\n    var perPage = config.category_generator.per_page;\n    var paginationDir = config.pagination_dir || 'page';\n\n    function findParent(category) {\n      var parents = [];\n\n      if (category && category.hasOwnProperty('parent')) {\n        var parent = locals.categories.filter(function (cat) {\n          return cat._id === category.parent;\n        }).first();\n        parents = [parent].concat(findParent(parent));\n      }\n\n      return parents;\n    }\n\n    return locals.categories.reduce(function (result, category) {\n      var posts = category.posts.sort('-date');\n      var data = pagination(category.path, posts, {\n        perPage: perPage,\n        layout: ['category', 'archive', 'index'],\n        format: paginationDir + '/%d/',\n        data: {\n          category: category.name,\n          parents: findParent(category)\n        }\n      });\n      return result.concat(data);\n    }, []);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LmpzIl0sIm5hbWVzIjpbInBhZ2luYXRpb24iLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImhleG8iLCJleHRlbmQiLCJnZW5lcmF0b3IiLCJyZWdpc3RlciIsImxvY2FscyIsImNvbmZpZyIsInBlclBhZ2UiLCJjYXRlZ29yeV9nZW5lcmF0b3IiLCJwZXJfcGFnZSIsInBhZ2luYXRpb25EaXIiLCJwYWdpbmF0aW9uX2RpciIsImZpbmRQYXJlbnQiLCJjYXRlZ29yeSIsInBhcmVudHMiLCJoYXNPd25Qcm9wZXJ0eSIsInBhcmVudCIsImNhdGVnb3JpZXMiLCJmaWx0ZXIiLCJjYXQiLCJfaWQiLCJmaXJzdCIsImNvbmNhdCIsInJlZHVjZSIsInJlc3VsdCIsInBvc3RzIiwic29ydCIsImRhdGEiLCJwYXRoIiwibGF5b3V0IiwiZm9ybWF0IiwibmFtZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxpQkFBRCxDQUExQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVVDLElBQVYsRUFBZ0I7QUFDN0I7QUFDQUEsRUFBQUEsSUFBSSxDQUFDQyxNQUFMLENBQVlDLFNBQVosQ0FBc0JDLFFBQXRCLENBQStCLFVBQS9CLEVBQTJDLFVBQVNDLE1BQVQsRUFBaUI7QUFDeEQsUUFBTUMsTUFBTSxHQUFHLEtBQUtBLE1BQXBCO0FBQ0EsUUFBTUMsT0FBTyxHQUFHRCxNQUFNLENBQUNFLGtCQUFQLENBQTBCQyxRQUExQztBQUNBLFFBQU1DLGFBQWEsR0FBR0osTUFBTSxDQUFDSyxjQUFQLElBQXlCLE1BQS9DOztBQUVBLGFBQVNDLFVBQVQsQ0FBb0JDLFFBQXBCLEVBQThCO0FBQzFCLFVBQUlDLE9BQU8sR0FBRyxFQUFkOztBQUNBLFVBQUlELFFBQVEsSUFBSUEsUUFBUSxDQUFDRSxjQUFULENBQXdCLFFBQXhCLENBQWhCLEVBQW1EO0FBQy9DLFlBQU1DLE1BQU0sR0FBR1gsTUFBTSxDQUFDWSxVQUFQLENBQWtCQyxNQUFsQixDQUF5QixVQUFBQyxHQUFHO0FBQUEsaUJBQUlBLEdBQUcsQ0FBQ0MsR0FBSixLQUFZUCxRQUFRLENBQUNHLE1BQXpCO0FBQUEsU0FBNUIsRUFBNkRLLEtBQTdELEVBQWY7QUFDQVAsUUFBQUEsT0FBTyxHQUFHLENBQUNFLE1BQUQsRUFBU00sTUFBVCxDQUFnQlYsVUFBVSxDQUFDSSxNQUFELENBQTFCLENBQVY7QUFDSDs7QUFDRCxhQUFPRixPQUFQO0FBQ0g7O0FBRUQsV0FBT1QsTUFBTSxDQUFDWSxVQUFQLENBQWtCTSxNQUFsQixDQUF5QixVQUFTQyxNQUFULEVBQWlCWCxRQUFqQixFQUEwQjtBQUN0RCxVQUFNWSxLQUFLLEdBQUdaLFFBQVEsQ0FBQ1ksS0FBVCxDQUFlQyxJQUFmLENBQW9CLE9BQXBCLENBQWQ7QUFDQSxVQUFNQyxJQUFJLEdBQUc5QixVQUFVLENBQUNnQixRQUFRLENBQUNlLElBQVYsRUFBZ0JILEtBQWhCLEVBQXVCO0FBQzFDbEIsUUFBQUEsT0FBTyxFQUFFQSxPQURpQztBQUUxQ3NCLFFBQUFBLE1BQU0sRUFBRSxDQUFDLFVBQUQsRUFBYSxTQUFiLEVBQXdCLE9BQXhCLENBRmtDO0FBRzFDQyxRQUFBQSxNQUFNLEVBQUVwQixhQUFhLEdBQUcsTUFIa0I7QUFJMUNpQixRQUFBQSxJQUFJLEVBQUU7QUFDRmQsVUFBQUEsUUFBUSxFQUFFQSxRQUFRLENBQUNrQixJQURqQjtBQUVGakIsVUFBQUEsT0FBTyxFQUFFRixVQUFVLENBQUNDLFFBQUQ7QUFGakI7QUFKb0MsT0FBdkIsQ0FBdkI7QUFVQSxhQUFPVyxNQUFNLENBQUNGLE1BQVAsQ0FBY0ssSUFBZCxDQUFQO0FBQ0gsS0FiTSxFQWFKLEVBYkksQ0FBUDtBQWNILEdBNUJEO0FBNkJILENBL0JEIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1cy9pbmNsdWRlcy9nZW5lcmF0b3JzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGFnaW5hdGlvbiA9IHJlcXVpcmUoJ2hleG8tcGFnaW5hdGlvbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChoZXhvKSB7XG4gICAgLy8gQVRURU5USU9OOiBUaGlzIHdpbGwgb3ZlcnJpZGUgdGhlIGRlZmF1bHQgY2F0ZWdvcnkgZ2VuZXJhdG9yIVxuICAgIGhleG8uZXh0ZW5kLmdlbmVyYXRvci5yZWdpc3RlcignY2F0ZWdvcnknLCBmdW5jdGlvbihsb2NhbHMpIHtcbiAgICAgICAgY29uc3QgY29uZmlnID0gdGhpcy5jb25maWc7XG4gICAgICAgIGNvbnN0IHBlclBhZ2UgPSBjb25maWcuY2F0ZWdvcnlfZ2VuZXJhdG9yLnBlcl9wYWdlO1xuICAgICAgICBjb25zdCBwYWdpbmF0aW9uRGlyID0gY29uZmlnLnBhZ2luYXRpb25fZGlyIHx8ICdwYWdlJztcblxuICAgICAgICBmdW5jdGlvbiBmaW5kUGFyZW50KGNhdGVnb3J5KSB7XG4gICAgICAgICAgICBsZXQgcGFyZW50cyA9IFtdO1xuICAgICAgICAgICAgaWYgKGNhdGVnb3J5ICYmIGNhdGVnb3J5Lmhhc093blByb3BlcnR5KCdwYXJlbnQnKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhcmVudCA9IGxvY2Fscy5jYXRlZ29yaWVzLmZpbHRlcihjYXQgPT4gY2F0Ll9pZCA9PT0gY2F0ZWdvcnkucGFyZW50KS5maXJzdCgpO1xuICAgICAgICAgICAgICAgIHBhcmVudHMgPSBbcGFyZW50XS5jb25jYXQoZmluZFBhcmVudChwYXJlbnQpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBwYXJlbnRzO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gbG9jYWxzLmNhdGVnb3JpZXMucmVkdWNlKGZ1bmN0aW9uKHJlc3VsdCwgY2F0ZWdvcnkpe1xuICAgICAgICAgICAgY29uc3QgcG9zdHMgPSBjYXRlZ29yeS5wb3N0cy5zb3J0KCctZGF0ZScpO1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IHBhZ2luYXRpb24oY2F0ZWdvcnkucGF0aCwgcG9zdHMsIHtcbiAgICAgICAgICAgICAgICBwZXJQYWdlOiBwZXJQYWdlLFxuICAgICAgICAgICAgICAgIGxheW91dDogWydjYXRlZ29yeScsICdhcmNoaXZlJywgJ2luZGV4J10sXG4gICAgICAgICAgICAgICAgZm9ybWF0OiBwYWdpbmF0aW9uRGlyICsgJy8lZC8nLFxuICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnk6IGNhdGVnb3J5Lm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudHM6IGZpbmRQYXJlbnQoY2F0ZWdvcnkpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC5jb25jYXQoZGF0YSk7XG4gICAgICAgIH0sIFtdKTtcbiAgICB9KTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "category.js"
      ],
      "names": [
        "pagination",
        "require",
        "module",
        "exports",
        "hexo",
        "extend",
        "generator",
        "register",
        "locals",
        "config",
        "perPage",
        "category_generator",
        "per_page",
        "paginationDir",
        "pagination_dir",
        "findParent",
        "category",
        "parents",
        "hasOwnProperty",
        "parent",
        "categories",
        "filter",
        "cat",
        "_id",
        "first",
        "concat",
        "reduce",
        "result",
        "posts",
        "sort",
        "data",
        "path",
        "layout",
        "format",
        "name"
      ],
      "mappings": ";;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,iBAAD,CAA1B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7B;AACAA,EAAAA,IAAI,CAACC,MAAL,CAAYC,SAAZ,CAAsBC,QAAtB,CAA+B,UAA/B,EAA2C,UAASC,MAAT,EAAiB;AACxD,QAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,QAAMC,OAAO,GAAGD,MAAM,CAACE,kBAAP,CAA0BC,QAA1C;AACA,QAAMC,aAAa,GAAGJ,MAAM,CAACK,cAAP,IAAyB,MAA/C;;AAEA,aAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC1B,UAAIC,OAAO,GAAG,EAAd;;AACA,UAAID,QAAQ,IAAIA,QAAQ,CAACE,cAAT,CAAwB,QAAxB,CAAhB,EAAmD;AAC/C,YAAMC,MAAM,GAAGX,MAAM,CAACY,UAAP,CAAkBC,MAAlB,CAAyB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,GAAJ,KAAYP,QAAQ,CAACG,MAAzB;AAAA,SAA5B,EAA6DK,KAA7D,EAAf;AACAP,QAAAA,OAAO,GAAG,CAACE,MAAD,EAASM,MAAT,CAAgBV,UAAU,CAACI,MAAD,CAA1B,CAAV;AACH;;AACD,aAAOF,OAAP;AACH;;AAED,WAAOT,MAAM,CAACY,UAAP,CAAkBM,MAAlB,CAAyB,UAASC,MAAT,EAAiBX,QAAjB,EAA0B;AACtD,UAAMY,KAAK,GAAGZ,QAAQ,CAACY,KAAT,CAAeC,IAAf,CAAoB,OAApB,CAAd;AACA,UAAMC,IAAI,GAAG9B,UAAU,CAACgB,QAAQ,CAACe,IAAV,EAAgBH,KAAhB,EAAuB;AAC1ClB,QAAAA,OAAO,EAAEA,OADiC;AAE1CsB,QAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,SAAb,EAAwB,OAAxB,CAFkC;AAG1CC,QAAAA,MAAM,EAAEpB,aAAa,GAAG,MAHkB;AAI1CiB,QAAAA,IAAI,EAAE;AACFd,UAAAA,QAAQ,EAAEA,QAAQ,CAACkB,IADjB;AAEFjB,UAAAA,OAAO,EAAEF,UAAU,CAACC,QAAD;AAFjB;AAJoC,OAAvB,CAAvB;AAUA,aAAOW,MAAM,CAACF,MAAP,CAAcK,IAAd,CAAP;AACH,KAbM,EAaJ,EAbI,CAAP;AAcH,GA5BD;AA6BH,CA/BD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
      "sourcesContent": [
        "const pagination = require('hexo-pagination');\n\nmodule.exports = function (hexo) {\n    // ATTENTION: This will override the default category generator!\n    hexo.extend.generator.register('category', function(locals) {\n        const config = this.config;\n        const perPage = config.category_generator.per_page;\n        const paginationDir = config.pagination_dir || 'page';\n\n        function findParent(category) {\n            let parents = [];\n            if (category && category.hasOwnProperty('parent')) {\n                const parent = locals.categories.filter(cat => cat._id === category.parent).first();\n                parents = [parent].concat(findParent(parent));\n            }\n            return parents;\n        }\n        \n        return locals.categories.reduce(function(result, category){\n            const posts = category.posts.sort('-date');\n            const data = pagination(category.path, posts, {\n                perPage: perPage,\n                layout: ['category', 'archive', 'index'],\n                format: paginationDir + '/%d/',\n                data: {\n                    category: category.name,\n                    parents: findParent(category)\n                }\n            });\n        \n            return result.concat(data);\n        }, []);\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525713
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/generators\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/generators/tags.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/generators/tags.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/generators/tags.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/generators/tags.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
        "sourceFileName": "tags.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Tag list page generator\n */\nmodule.exports = function (hexo) {\n  hexo.extend.generator.register('tags', function (locals) {\n    return {\n      path: 'tags/',\n      layout: ['tags'],\n      data: Object.assign({}, locals, {\n        __tags: true\n      })\n    };\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhZ3MuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImhleG8iLCJleHRlbmQiLCJnZW5lcmF0b3IiLCJyZWdpc3RlciIsImxvY2FscyIsInBhdGgiLCJsYXlvdXQiLCJkYXRhIiwiT2JqZWN0IiwiYXNzaWduIiwiX190YWdzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7QUFHQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVVDLElBQVYsRUFBZ0I7QUFDN0JBLEVBQUFBLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxTQUFaLENBQXNCQyxRQUF0QixDQUErQixNQUEvQixFQUF1QyxVQUFVQyxNQUFWLEVBQWtCO0FBQ3JELFdBQU87QUFDSEMsTUFBQUEsSUFBSSxFQUFFLE9BREg7QUFFSEMsTUFBQUEsTUFBTSxFQUFFLENBQUMsTUFBRCxDQUZMO0FBR0hDLE1BQUFBLElBQUksRUFBRUMsTUFBTSxDQUFDQyxNQUFQLENBQWMsRUFBZCxFQUFrQkwsTUFBbEIsRUFBMEI7QUFDNUJNLFFBQUFBLE1BQU0sRUFBRTtBQURvQixPQUExQjtBQUhILEtBQVA7QUFPSCxHQVJEO0FBU0gsQ0FWRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvZ2VuZXJhdG9ycyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGFnIGxpc3QgcGFnZSBnZW5lcmF0b3JcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaGV4bykge1xuICAgIGhleG8uZXh0ZW5kLmdlbmVyYXRvci5yZWdpc3RlcigndGFncycsIGZ1bmN0aW9uIChsb2NhbHMpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHBhdGg6ICd0YWdzLycsXG4gICAgICAgICAgICBsYXlvdXQ6IFsndGFncyddLFxuICAgICAgICAgICAgZGF0YTogT2JqZWN0LmFzc2lnbih7fSwgbG9jYWxzLCB7XG4gICAgICAgICAgICAgICAgX190YWdzOiB0cnVlXG4gICAgICAgICAgICB9KVxuICAgICAgICB9O1xuICAgIH0pO1xufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "tags.js"
      ],
      "names": [
        "module",
        "exports",
        "hexo",
        "extend",
        "generator",
        "register",
        "locals",
        "path",
        "layout",
        "data",
        "Object",
        "assign",
        "__tags"
      ],
      "mappings": ";;AAAA;;;AAGAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,SAAZ,CAAsBC,QAAtB,CAA+B,MAA/B,EAAuC,UAAUC,MAAV,EAAkB;AACrD,WAAO;AACHC,MAAAA,IAAI,EAAE,OADH;AAEHC,MAAAA,MAAM,EAAE,CAAC,MAAD,CAFL;AAGHC,MAAAA,IAAI,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAlB,EAA0B;AAC5BM,QAAAA,MAAM,EAAE;AADoB,OAA1B;AAHH,KAAP;AAOH,GARD;AASH,CAVD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
      "sourcesContent": [
        "/**\n * Tag list page generator\n */\nmodule.exports = function (hexo) {\n    hexo.extend.generator.register('tags', function (locals) {\n        return {\n            path: 'tags/',\n            layout: ['tags'],\n            data: Object.assign({}, locals, {\n                __tags: true\n            })\n        };\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525713
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/generators\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/generators/insight.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/generators/insight.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/generators/insight.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/generators/insight.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
        "sourceFileName": "insight.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar util = require('hexo-util');\n/**\n * Insight search content.json generator.\n */\n\n\nmodule.exports = function (hexo) {\n  hexo.extend.generator.register('insight', function (locals) {\n    var url_for = hexo.extend.helper.get('url_for').bind(this);\n\n    function minify(str) {\n      return util.stripHTML(str).trim().replace(/\\n/g, ' ').replace(/\\s+/g, ' ').replace(/&#x([\\da-fA-F]+);/g, function (match, hex) {\n        return String.fromCharCode(parseInt(hex, 16));\n      }).replace(/&#([\\d]+);/g, function (match, dec) {\n        return String.fromCharCode(dec);\n      });\n    }\n\n    function postMapper(post) {\n      return {\n        title: post.title,\n        text: minify(post.content),\n        link: url_for(post.path)\n      };\n    }\n\n    function tagMapper(tag) {\n      return {\n        name: tag.name,\n        slug: tag.slug,\n        link: url_for(tag.path)\n      };\n    }\n\n    var site = {\n      pages: locals.pages.map(postMapper),\n      posts: locals.posts.map(postMapper),\n      tags: locals.tags.map(tagMapper),\n      categories: locals.categories.map(tagMapper)\n    };\n    return {\n      path: '/content.json',\n      data: JSON.stringify(site)\n    };\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluc2lnaHQuanMiXSwibmFtZXMiOlsidXRpbCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiaGV4byIsImV4dGVuZCIsImdlbmVyYXRvciIsInJlZ2lzdGVyIiwibG9jYWxzIiwidXJsX2ZvciIsImhlbHBlciIsImdldCIsImJpbmQiLCJtaW5pZnkiLCJzdHIiLCJzdHJpcEhUTUwiLCJ0cmltIiwicmVwbGFjZSIsIm1hdGNoIiwiaGV4IiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwicGFyc2VJbnQiLCJkZWMiLCJwb3N0TWFwcGVyIiwicG9zdCIsInRpdGxlIiwidGV4dCIsImNvbnRlbnQiLCJsaW5rIiwicGF0aCIsInRhZ01hcHBlciIsInRhZyIsIm5hbWUiLCJzbHVnIiwic2l0ZSIsInBhZ2VzIiwibWFwIiwicG9zdHMiLCJ0YWdzIiwiY2F0ZWdvcmllcyIsImRhdGEiLCJKU09OIiwic3RyaW5naWZ5Il0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBcEI7QUFFQTs7Ozs7QUFHQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVVDLElBQVYsRUFBZ0I7QUFDN0JBLEVBQUFBLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxTQUFaLENBQXNCQyxRQUF0QixDQUErQixTQUEvQixFQUEwQyxVQUFVQyxNQUFWLEVBQWtCO0FBQ3hELFFBQU1DLE9BQU8sR0FBR0wsSUFBSSxDQUFDQyxNQUFMLENBQVlLLE1BQVosQ0FBbUJDLEdBQW5CLENBQXVCLFNBQXZCLEVBQWtDQyxJQUFsQyxDQUF1QyxJQUF2QyxDQUFoQjs7QUFDQSxhQUFTQyxNQUFULENBQWdCQyxHQUFoQixFQUFxQjtBQUNqQixhQUFPZCxJQUFJLENBQUNlLFNBQUwsQ0FBZUQsR0FBZixFQUFvQkUsSUFBcEIsR0FBMkJDLE9BQTNCLENBQW1DLEtBQW5DLEVBQTBDLEdBQTFDLEVBQStDQSxPQUEvQyxDQUF1RCxNQUF2RCxFQUErRCxHQUEvRCxFQUNGQSxPQURFLENBQ00sb0JBRE4sRUFDNEIsVUFBVUMsS0FBVixFQUFpQkMsR0FBakIsRUFBc0I7QUFDakQsZUFBT0MsTUFBTSxDQUFDQyxZQUFQLENBQW9CQyxRQUFRLENBQUNILEdBQUQsRUFBTSxFQUFOLENBQTVCLENBQVA7QUFDSCxPQUhFLEVBSUZGLE9BSkUsQ0FJTSxhQUpOLEVBSXFCLFVBQVVDLEtBQVYsRUFBaUJLLEdBQWpCLEVBQXNCO0FBQzFDLGVBQU9ILE1BQU0sQ0FBQ0MsWUFBUCxDQUFvQkUsR0FBcEIsQ0FBUDtBQUNILE9BTkUsQ0FBUDtBQU9IOztBQUNELGFBQVNDLFVBQVQsQ0FBb0JDLElBQXBCLEVBQTBCO0FBQ3RCLGFBQU87QUFDSEMsUUFBQUEsS0FBSyxFQUFFRCxJQUFJLENBQUNDLEtBRFQ7QUFFSEMsUUFBQUEsSUFBSSxFQUFFZCxNQUFNLENBQUNZLElBQUksQ0FBQ0csT0FBTixDQUZUO0FBR0hDLFFBQUFBLElBQUksRUFBRXBCLE9BQU8sQ0FBQ2dCLElBQUksQ0FBQ0ssSUFBTjtBQUhWLE9BQVA7QUFLSDs7QUFDRCxhQUFTQyxTQUFULENBQW1CQyxHQUFuQixFQUF3QjtBQUNwQixhQUFPO0FBQ0hDLFFBQUFBLElBQUksRUFBRUQsR0FBRyxDQUFDQyxJQURQO0FBRUhDLFFBQUFBLElBQUksRUFBRUYsR0FBRyxDQUFDRSxJQUZQO0FBR0hMLFFBQUFBLElBQUksRUFBRXBCLE9BQU8sQ0FBQ3VCLEdBQUcsQ0FBQ0YsSUFBTDtBQUhWLE9BQVA7QUFLSDs7QUFDRCxRQUFNSyxJQUFJLEdBQUc7QUFDVEMsTUFBQUEsS0FBSyxFQUFFNUIsTUFBTSxDQUFDNEIsS0FBUCxDQUFhQyxHQUFiLENBQWlCYixVQUFqQixDQURFO0FBRVRjLE1BQUFBLEtBQUssRUFBRTlCLE1BQU0sQ0FBQzhCLEtBQVAsQ0FBYUQsR0FBYixDQUFpQmIsVUFBakIsQ0FGRTtBQUdUZSxNQUFBQSxJQUFJLEVBQUUvQixNQUFNLENBQUMrQixJQUFQLENBQVlGLEdBQVosQ0FBZ0JOLFNBQWhCLENBSEc7QUFJVFMsTUFBQUEsVUFBVSxFQUFFaEMsTUFBTSxDQUFDZ0MsVUFBUCxDQUFrQkgsR0FBbEIsQ0FBc0JOLFNBQXRCO0FBSkgsS0FBYjtBQU1BLFdBQU87QUFDSEQsTUFBQUEsSUFBSSxFQUFFLGVBREg7QUFFSFcsTUFBQUEsSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQUwsQ0FBZVIsSUFBZjtBQUZILEtBQVA7QUFJSCxHQW5DRDtBQW9DSCxDQXJDRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvZ2VuZXJhdG9ycyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHV0aWwgPSByZXF1aXJlKCdoZXhvLXV0aWwnKTtcblxuLyoqXG4gKiBJbnNpZ2h0IHNlYXJjaCBjb250ZW50Lmpzb24gZ2VuZXJhdG9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChoZXhvKSB7XG4gICAgaGV4by5leHRlbmQuZ2VuZXJhdG9yLnJlZ2lzdGVyKCdpbnNpZ2h0JywgZnVuY3Rpb24gKGxvY2Fscykge1xuICAgICAgICBjb25zdCB1cmxfZm9yID0gaGV4by5leHRlbmQuaGVscGVyLmdldCgndXJsX2ZvcicpLmJpbmQodGhpcyk7XG4gICAgICAgIGZ1bmN0aW9uIG1pbmlmeShzdHIpIHtcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnN0cmlwSFRNTChzdHIpLnRyaW0oKS5yZXBsYWNlKC9cXG4vZywgJyAnKS5yZXBsYWNlKC9cXHMrL2csICcgJylcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgvJiN4KFtcXGRhLWZBLUZdKyk7L2csIGZ1bmN0aW9uIChtYXRjaCwgaGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKHBhcnNlSW50KGhleCwgMTYpKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKC8mIyhbXFxkXSspOy9nLCBmdW5jdGlvbiAobWF0Y2gsIGRlYykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShkZWMpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHBvc3RNYXBwZXIocG9zdCkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogcG9zdC50aXRsZSxcbiAgICAgICAgICAgICAgICB0ZXh0OiBtaW5pZnkocG9zdC5jb250ZW50KSxcbiAgICAgICAgICAgICAgICBsaW5rOiB1cmxfZm9yKHBvc3QucGF0aClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiB0YWdNYXBwZXIodGFnKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG5hbWU6IHRhZy5uYW1lLFxuICAgICAgICAgICAgICAgIHNsdWc6IHRhZy5zbHVnLFxuICAgICAgICAgICAgICAgIGxpbms6IHVybF9mb3IodGFnLnBhdGgpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2l0ZSA9IHtcbiAgICAgICAgICAgIHBhZ2VzOiBsb2NhbHMucGFnZXMubWFwKHBvc3RNYXBwZXIpLFxuICAgICAgICAgICAgcG9zdHM6IGxvY2Fscy5wb3N0cy5tYXAocG9zdE1hcHBlciksXG4gICAgICAgICAgICB0YWdzOiBsb2NhbHMudGFncy5tYXAodGFnTWFwcGVyKSxcbiAgICAgICAgICAgIGNhdGVnb3JpZXM6IGxvY2Fscy5jYXRlZ29yaWVzLm1hcCh0YWdNYXBwZXIpXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwYXRoOiAnL2NvbnRlbnQuanNvbicsXG4gICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShzaXRlKVxuICAgICAgICB9O1xuICAgIH0pO1xufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "insight.js"
      ],
      "names": [
        "util",
        "require",
        "module",
        "exports",
        "hexo",
        "extend",
        "generator",
        "register",
        "locals",
        "url_for",
        "helper",
        "get",
        "bind",
        "minify",
        "str",
        "stripHTML",
        "trim",
        "replace",
        "match",
        "hex",
        "String",
        "fromCharCode",
        "parseInt",
        "dec",
        "postMapper",
        "post",
        "title",
        "text",
        "content",
        "link",
        "path",
        "tagMapper",
        "tag",
        "name",
        "slug",
        "site",
        "pages",
        "map",
        "posts",
        "tags",
        "categories",
        "data",
        "JSON",
        "stringify"
      ],
      "mappings": ";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB;AAEA;;;;;AAGAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,SAAZ,CAAsBC,QAAtB,CAA+B,SAA/B,EAA0C,UAAUC,MAAV,EAAkB;AACxD,QAAMC,OAAO,GAAGL,IAAI,CAACC,MAAL,CAAYK,MAAZ,CAAmBC,GAAnB,CAAuB,SAAvB,EAAkCC,IAAlC,CAAuC,IAAvC,CAAhB;;AACA,aAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACjB,aAAOd,IAAI,CAACe,SAAL,CAAeD,GAAf,EAAoBE,IAApB,GAA2BC,OAA3B,CAAmC,KAAnC,EAA0C,GAA1C,EAA+CA,OAA/C,CAAuD,MAAvD,EAA+D,GAA/D,EACFA,OADE,CACM,oBADN,EAC4B,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACjD,eAAOC,MAAM,CAACC,YAAP,CAAoBC,QAAQ,CAACH,GAAD,EAAM,EAAN,CAA5B,CAAP;AACH,OAHE,EAIFF,OAJE,CAIM,aAJN,EAIqB,UAAUC,KAAV,EAAiBK,GAAjB,EAAsB;AAC1C,eAAOH,MAAM,CAACC,YAAP,CAAoBE,GAApB,CAAP;AACH,OANE,CAAP;AAOH;;AACD,aAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,aAAO;AACHC,QAAAA,KAAK,EAAED,IAAI,CAACC,KADT;AAEHC,QAAAA,IAAI,EAAEd,MAAM,CAACY,IAAI,CAACG,OAAN,CAFT;AAGHC,QAAAA,IAAI,EAAEpB,OAAO,CAACgB,IAAI,CAACK,IAAN;AAHV,OAAP;AAKH;;AACD,aAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACpB,aAAO;AACHC,QAAAA,IAAI,EAAED,GAAG,CAACC,IADP;AAEHC,QAAAA,IAAI,EAAEF,GAAG,CAACE,IAFP;AAGHL,QAAAA,IAAI,EAAEpB,OAAO,CAACuB,GAAG,CAACF,IAAL;AAHV,OAAP;AAKH;;AACD,QAAMK,IAAI,GAAG;AACTC,MAAAA,KAAK,EAAE5B,MAAM,CAAC4B,KAAP,CAAaC,GAAb,CAAiBb,UAAjB,CADE;AAETc,MAAAA,KAAK,EAAE9B,MAAM,CAAC8B,KAAP,CAAaD,GAAb,CAAiBb,UAAjB,CAFE;AAGTe,MAAAA,IAAI,EAAE/B,MAAM,CAAC+B,IAAP,CAAYF,GAAZ,CAAgBN,SAAhB,CAHG;AAITS,MAAAA,UAAU,EAAEhC,MAAM,CAACgC,UAAP,CAAkBH,GAAlB,CAAsBN,SAAtB;AAJH,KAAb;AAMA,WAAO;AACHD,MAAAA,IAAI,EAAE,eADH;AAEHW,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAFH,KAAP;AAIH,GAnCD;AAoCH,CArCD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
      "sourcesContent": [
        "const util = require('hexo-util');\n\n/**\n * Insight search content.json generator.\n */\nmodule.exports = function (hexo) {\n    hexo.extend.generator.register('insight', function (locals) {\n        const url_for = hexo.extend.helper.get('url_for').bind(this);\n        function minify(str) {\n            return util.stripHTML(str).trim().replace(/\\n/g, ' ').replace(/\\s+/g, ' ')\n                .replace(/&#x([\\da-fA-F]+);/g, function (match, hex) {\n                    return String.fromCharCode(parseInt(hex, 16));\n                })\n                .replace(/&#([\\d]+);/g, function (match, dec) {\n                    return String.fromCharCode(dec);\n                });\n        }\n        function postMapper(post) {\n            return {\n                title: post.title,\n                text: minify(post.content),\n                link: url_for(post.path)\n            }\n        }\n        function tagMapper(tag) {\n            return {\n                name: tag.name,\n                slug: tag.slug,\n                link: url_for(tag.path)\n            }\n        }\n        const site = {\n            pages: locals.pages.map(postMapper),\n            posts: locals.posts.map(postMapper),\n            tags: locals.tags.map(tagMapper),\n            categories: locals.categories.map(tagMapper)\n        };\n        return {\n            path: '/content.json',\n            data: JSON.stringify(site)\n        };\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525713
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/helpers/cdn.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/helpers/cdn.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/helpers/cdn.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/helpers/cdn.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
        "sourceFileName": "cdn.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * CDN static file resolvers.\n *\n * @example\n *     <%- cdn(package, version, filename) %>\n *     <%- fontcdn(fontName) %>\n *     <%- iconcdn() %>\n */\nvar cdn_providers = {\n  cdnjs: 'https://cdnjs.loli.net/ajax/libs/${ package }/${ version }/${ filename }',\n  jsdelivr: 'https://cdn.jsdelivr.net/npm/${ package }@${ version }/${ filename }',\n  unpkg: 'https://unpkg.com/${ package }@${ version }/${ filename }'\n};\nvar font_providers = {\n  google: 'https://fonts.loli.net/${ type }?family=${ fontname }'\n};\nvar icon_providers = {\n  fontawesome: 'https://cdn.staticfile.org/font-awesome/5.4.1/css/all.css'\n};\n\nmodule.exports = function (hexo) {\n  hexo.extend.helper.register('cdn', function (_package, version, filename) {\n    var provider = hexo.extend.helper.get('get_config').bind(this)('providers.cdn'); // cdn.js does not follow a GitHub npm style like jsdeliver and unpkg do. Patch it!\n\n    if (provider === 'cdnjs' || provider.startsWith('[cdnjs]')) {\n      if (provider.startsWith('[cdnjs]')) {\n        provider = provider.substr(7);\n      }\n\n      if (filename.startsWith('dist/')) {\n        filename = filename.substr(5);\n      }\n\n      if (_package === 'moment') {\n        _package = 'moment.js';\n        filename = filename.startsWith('min/') ? filename.substr(4) : filename;\n      }\n\n      if (_package === 'outdatedbrowser') {\n        _package = 'outdated-browser';\n        filename = filename.startsWith('outdatedbrowser/') ? filename.substr(16) : filename;\n      }\n\n      if (_package === 'highlight.js') {\n        filename = filename.endsWith('.css') && filename.indexOf('.min.') === -1 ? filename.substr(0, filename.length - 4) + '.min.css' : filename;\n      }\n\n      if (_package === 'mathjax') {\n        filename = filename.startsWith('unpacked/') ? filename.substr(9) : filename;\n      }\n\n      if (_package === 'pace-js') {\n        _package = 'pace';\n      }\n\n      if (_package === 'clipboard') {\n        _package = 'clipboard.js';\n      }\n    }\n\n    if (provider !== null && cdn_providers.hasOwnProperty(provider)) {\n      provider = cdn_providers[provider];\n    }\n\n    return provider.replace(/\\${\\s*package\\s*}/gi, _package).replace(/\\${\\s*version\\s*}/gi, version).replace(/\\${\\s*filename\\s*}/gi, filename);\n  });\n  hexo.extend.helper.register('fontcdn', function (fontName) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'css';\n    var provider = hexo.extend.helper.get('get_config').bind(this)('providers.fontcdn');\n\n    if (provider !== null && font_providers.hasOwnProperty(provider)) {\n      provider = font_providers[provider];\n    }\n\n    return provider.replace(/\\${\\s*fontname\\s*}/gi, fontName).replace(/\\${\\s*type\\s*}/gi, type);\n  });\n  hexo.extend.helper.register('iconcdn', function () {\n    var provider = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    if (provider !== null && icon_providers.hasOwnProperty(provider)) {\n      provider = icon_providers[provider];\n    } else {\n      provider = hexo.extend.helper.get('get_config').bind(this)('providers.iconcdn');\n\n      if (provider !== null && icon_providers.hasOwnProperty(provider)) {\n        provider = icon_providers[provider];\n      }\n    }\n\n    return provider;\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "cdn.js"
      ],
      "names": [
        "cdn_providers",
        "cdnjs",
        "jsdelivr",
        "unpkg",
        "font_providers",
        "google",
        "icon_providers",
        "fontawesome",
        "module",
        "exports",
        "hexo",
        "extend",
        "helper",
        "register",
        "_package",
        "version",
        "filename",
        "provider",
        "get",
        "bind",
        "startsWith",
        "substr",
        "endsWith",
        "indexOf",
        "length",
        "hasOwnProperty",
        "replace",
        "fontName",
        "type"
      ],
      "mappings": ";;AAAA;;;;;;;;AAQA,IAAMA,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,0EADW;AAElBC,EAAAA,QAAQ,EAAE,sEAFQ;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAAtB;AAMA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAAvB;AAIA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAAvB;;AAIAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,KAA5B,EAAmC,UAAUC,QAAV,EAAoBC,OAApB,EAA6BC,QAA7B,EAAuC;AACtE,QAAIC,QAAQ,GAAGP,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBM,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,EAAgD,eAAhD,CAAf,CADsE,CAEtE;;AACA,QAAIF,QAAQ,KAAK,OAAb,IAAwBA,QAAQ,CAACG,UAAT,CAAoB,SAApB,CAA5B,EAA4D;AACxD,UAAIH,QAAQ,CAACG,UAAT,CAAoB,SAApB,CAAJ,EAAoC;AAChCH,QAAAA,QAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgB,CAAhB,CAAX;AACH;;AACD,UAAIL,QAAQ,CAACI,UAAT,CAAoB,OAApB,CAAJ,EAAkC;AAC9BJ,QAAAA,QAAQ,GAAGA,QAAQ,CAACK,MAAT,CAAgB,CAAhB,CAAX;AACH;;AACD,UAAIP,QAAQ,KAAK,QAAjB,EAA2B;AACvBA,QAAAA,QAAQ,GAAG,WAAX;AACAE,QAAAA,QAAQ,GAAGA,QAAQ,CAACI,UAAT,CAAoB,MAApB,IAA8BJ,QAAQ,CAACK,MAAT,CAAgB,CAAhB,CAA9B,GAAmDL,QAA9D;AACH;;AACD,UAAIF,QAAQ,KAAK,iBAAjB,EAAoC;AAChCA,QAAAA,QAAQ,GAAG,kBAAX;AACAE,QAAAA,QAAQ,GAAGA,QAAQ,CAACI,UAAT,CAAoB,kBAApB,IAA0CJ,QAAQ,CAACK,MAAT,CAAgB,EAAhB,CAA1C,GAAgEL,QAA3E;AACH;;AACD,UAAIF,QAAQ,KAAK,cAAjB,EAAiC;AAC7BE,QAAAA,QAAQ,GAAGA,QAAQ,CAACM,QAAT,CAAkB,MAAlB,KAA6BN,QAAQ,CAACO,OAAT,CAAiB,OAAjB,MAA8B,CAAC,CAA5D,GACPP,QAAQ,CAACK,MAAT,CAAgB,CAAhB,EAAmBL,QAAQ,CAACQ,MAAT,GAAkB,CAArC,IAA0C,UADnC,GACgDR,QAD3D;AAEH;;AACD,UAAIF,QAAQ,KAAK,SAAjB,EAA4B;AACxBE,QAAAA,QAAQ,GAAGA,QAAQ,CAACI,UAAT,CAAoB,WAApB,IAAmCJ,QAAQ,CAACK,MAAT,CAAgB,CAAhB,CAAnC,GAAwDL,QAAnE;AACH;;AACD,UAAIF,QAAQ,KAAK,SAAjB,EAA4B;AACxBA,QAAAA,QAAQ,GAAG,MAAX;AACH;;AACD,UAAIA,QAAQ,KAAK,WAAjB,EAA8B;AAC1BA,QAAAA,QAAQ,GAAG,cAAX;AACH;AACJ;;AACD,QAAIG,QAAQ,KAAK,IAAb,IAAqBjB,aAAa,CAACyB,cAAd,CAA6BR,QAA7B,CAAzB,EAAiE;AAC7DA,MAAAA,QAAQ,GAAGjB,aAAa,CAACiB,QAAD,CAAxB;AACH;;AACD,WAAOA,QAAQ,CAACS,OAAT,CAAiB,qBAAjB,EAAwCZ,QAAxC,EACFY,OADE,CACM,qBADN,EAC6BX,OAD7B,EAEFW,OAFE,CAEM,sBAFN,EAE8BV,QAF9B,CAAP;AAGH,GAtCD;AAwCAN,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,SAA5B,EAAuC,UAAUc,QAAV,EAAkC;AAAA,QAAdC,IAAc,uEAAP,KAAO;AACrE,QAAIX,QAAQ,GAAGP,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBM,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,EAAgD,mBAAhD,CAAf;;AACA,QAAIF,QAAQ,KAAK,IAAb,IAAqBb,cAAc,CAACqB,cAAf,CAA8BR,QAA9B,CAAzB,EAAkE;AAC9DA,MAAAA,QAAQ,GAAGb,cAAc,CAACa,QAAD,CAAzB;AACH;;AACD,WAAOA,QAAQ,CAACS,OAAT,CAAiB,sBAAjB,EAAyCC,QAAzC,EACFD,OADE,CACM,kBADN,EAC0BE,IAD1B,CAAP;AAEH,GAPD;AASAlB,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,SAA5B,EAAuC,YAA2B;AAAA,QAAjBI,QAAiB,uEAAN,IAAM;;AAC9D,QAAIA,QAAQ,KAAK,IAAb,IAAqBX,cAAc,CAACmB,cAAf,CAA8BR,QAA9B,CAAzB,EAAkE;AAC9DA,MAAAA,QAAQ,GAAGX,cAAc,CAACW,QAAD,CAAzB;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ,GAAGP,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBM,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,EAAgD,mBAAhD,CAAX;;AACA,UAAIF,QAAQ,KAAK,IAAb,IAAqBX,cAAc,CAACmB,cAAf,CAA8BR,QAA9B,CAAzB,EAAkE;AAC9DA,QAAAA,QAAQ,GAAGX,cAAc,CAACW,QAAD,CAAzB;AACH;AACJ;;AACD,WAAOA,QAAP;AACH,GAVD;AAWH,CA7DD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "sourcesContent": [
        "/**\n * CDN static file resolvers.\n *\n * @example\n *     <%- cdn(package, version, filename) %>\n *     <%- fontcdn(fontName) %>\n *     <%- iconcdn() %>\n */\nconst cdn_providers = {\n    cdnjs: 'https://cdnjs.loli.net/ajax/libs/${ package }/${ version }/${ filename }',\n    jsdelivr: 'https://cdn.jsdelivr.net/npm/${ package }@${ version }/${ filename }',\n    unpkg: 'https://unpkg.com/${ package }@${ version }/${ filename }'\n};\n\nconst font_providers = {\n    google: 'https://fonts.loli.net/${ type }?family=${ fontname }'\n};\n\nconst icon_providers = {\n    fontawesome: 'https://cdn.staticfile.org/font-awesome/5.4.1/css/all.css'\n};\n\nmodule.exports = function (hexo) {\n    hexo.extend.helper.register('cdn', function (_package, version, filename) {\n        let provider = hexo.extend.helper.get('get_config').bind(this)('providers.cdn');\n        // cdn.js does not follow a GitHub npm style like jsdeliver and unpkg do. Patch it!\n        if (provider === 'cdnjs' || provider.startsWith('[cdnjs]')) {\n            if (provider.startsWith('[cdnjs]')) {\n                provider = provider.substr(7);\n            }\n            if (filename.startsWith('dist/')) {\n                filename = filename.substr(5);\n            }\n            if (_package === 'moment') {\n                _package = 'moment.js';\n                filename = filename.startsWith('min/') ? filename.substr(4) : filename;\n            }\n            if (_package === 'outdatedbrowser') {\n                _package = 'outdated-browser';\n                filename = filename.startsWith('outdatedbrowser/') ? filename.substr(16) : filename;\n            }\n            if (_package === 'highlight.js') {\n                filename = filename.endsWith('.css') && filename.indexOf('.min.') === -1 ?\n                    filename.substr(0, filename.length - 4) + '.min.css' : filename;\n            }\n            if (_package === 'mathjax') {\n                filename = filename.startsWith('unpacked/') ? filename.substr(9) : filename;\n            }\n            if (_package === 'pace-js') {\n                _package = 'pace';\n            }\n            if (_package === 'clipboard') {\n                _package = 'clipboard.js';\n            }\n        }\n        if (provider !== null && cdn_providers.hasOwnProperty(provider)) {\n            provider = cdn_providers[provider];\n        }\n        return provider.replace(/\\${\\s*package\\s*}/gi, _package)\n            .replace(/\\${\\s*version\\s*}/gi, version)\n            .replace(/\\${\\s*filename\\s*}/gi, filename);\n    });\n\n    hexo.extend.helper.register('fontcdn', function (fontName, type = 'css') {\n        let provider = hexo.extend.helper.get('get_config').bind(this)('providers.fontcdn');\n        if (provider !== null && font_providers.hasOwnProperty(provider)) {\n            provider = font_providers[provider];\n        }\n        return provider.replace(/\\${\\s*fontname\\s*}/gi, fontName)\n            .replace(/\\${\\s*type\\s*}/gi, type);\n    });\n\n    hexo.extend.helper.register('iconcdn', function (provider = null) {\n        if (provider !== null && icon_providers.hasOwnProperty(provider)) {\n            provider = icon_providers[provider];\n        } else {\n            provider = hexo.extend.helper.get('get_config').bind(this)('providers.iconcdn');\n            if (provider !== null && icon_providers.hasOwnProperty(provider)) {\n                provider = icon_providers[provider];\n            }\n        }\n        return provider;\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525713
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/helpers/config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/helpers/config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/helpers/config.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/helpers/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Theme configuration helpers.\n *\n * @description Test if a configuration is set or fetch its value. If `exclude_page` is set, the helpers will\n *              not look up configurations in the current page's front matter.\n * @example\n *     <%- has_config(config_name, exclude_page) %>\n *     <%- get_config(config_name, default_value, exclude_page) %>\n */\nvar specs = require('../specs/config.spec');\n\nvar descriptors = require('../common/utils').descriptors;\n\nmodule.exports = function (hexo) {\n  function readProperty(object, path) {\n    var paths = path.split('.');\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = paths[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var _path = _step.value;\n\n        if (typeof object === 'undefined' || object === null || !object.hasOwnProperty(_path)) {\n          return null;\n        }\n\n        object = object[_path];\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return object;\n  }\n\n  hexo.extend.helper.register('get_config', function (configName) {\n    var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    var excludePage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var value = readProperty(Object.assign({}, this.config, hexo.theme.config, !excludePage ? this.page : {}), configName);\n\n    if (value === null) {\n      if (typeof defaultValue !== 'undefined') {\n        return defaultValue;\n      } else {\n        var property = readProperty(specs, configName);\n        return property === null ? null : property[descriptors.defaultValue];\n      }\n    }\n\n    return value;\n  });\n  hexo.extend.helper.register('has_config', function (configName) {\n    var excludePage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var readProperty = hexo.extend.helper.get('get_config').bind(this);\n    return readProperty(configName, null, excludePage) != null;\n  });\n  hexo.extend.helper.register('get_config_from_obj', function (object, configName) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var value = readProperty(object, configName);\n    return value === null ? defaultValue : value;\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJzcGVjcyIsInJlcXVpcmUiLCJkZXNjcmlwdG9ycyIsIm1vZHVsZSIsImV4cG9ydHMiLCJoZXhvIiwicmVhZFByb3BlcnR5Iiwib2JqZWN0IiwicGF0aCIsInBhdGhzIiwic3BsaXQiLCJoYXNPd25Qcm9wZXJ0eSIsImV4dGVuZCIsImhlbHBlciIsInJlZ2lzdGVyIiwiY29uZmlnTmFtZSIsImRlZmF1bHRWYWx1ZSIsInVuZGVmaW5lZCIsImV4Y2x1ZGVQYWdlIiwidmFsdWUiLCJPYmplY3QiLCJhc3NpZ24iLCJjb25maWciLCJ0aGVtZSIsInBhZ2UiLCJwcm9wZXJ0eSIsImdldCIsImJpbmQiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7OztBQVNBLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLHNCQUFELENBQXJCOztBQUNBLElBQU1DLFdBQVcsR0FBR0QsT0FBTyxDQUFDLGlCQUFELENBQVAsQ0FBMkJDLFdBQS9DOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsSUFBVixFQUFnQjtBQUM3QixXQUFTQyxZQUFULENBQXNCQyxNQUF0QixFQUE4QkMsSUFBOUIsRUFBb0M7QUFDaEMsUUFBTUMsS0FBSyxHQUFHRCxJQUFJLENBQUNFLEtBQUwsQ0FBVyxHQUFYLENBQWQ7QUFEZ0M7QUFBQTtBQUFBOztBQUFBO0FBRWhDLDJCQUFpQkQsS0FBakIsOEhBQXdCO0FBQUEsWUFBZkQsS0FBZTs7QUFDcEIsWUFBSSxPQUFRRCxNQUFSLEtBQW9CLFdBQXBCLElBQW1DQSxNQUFNLEtBQUssSUFBOUMsSUFBc0QsQ0FBQ0EsTUFBTSxDQUFDSSxjQUFQLENBQXNCSCxLQUF0QixDQUEzRCxFQUF3RjtBQUNwRixpQkFBTyxJQUFQO0FBQ0g7O0FBQ0RELFFBQUFBLE1BQU0sR0FBR0EsTUFBTSxDQUFDQyxLQUFELENBQWY7QUFDSDtBQVArQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQVFoQyxXQUFPRCxNQUFQO0FBQ0g7O0FBRURGLEVBQUFBLElBQUksQ0FBQ08sTUFBTCxDQUFZQyxNQUFaLENBQW1CQyxRQUFuQixDQUE0QixZQUE1QixFQUEwQyxVQUFVQyxVQUFWLEVBQXFFO0FBQUEsUUFBL0NDLFlBQStDLHVFQUFoQ0MsU0FBZ0M7QUFBQSxRQUFyQkMsV0FBcUIsdUVBQVAsS0FBTztBQUMzRyxRQUFNQyxLQUFLLEdBQUdiLFlBQVksQ0FBQ2MsTUFBTSxDQUFDQyxNQUFQLENBQWMsRUFBZCxFQUFrQixLQUFLQyxNQUF2QixFQUErQmpCLElBQUksQ0FBQ2tCLEtBQUwsQ0FBV0QsTUFBMUMsRUFDdkIsQ0FBQ0osV0FBRCxHQUFlLEtBQUtNLElBQXBCLEdBQTJCLEVBREosQ0FBRCxFQUNVVCxVQURWLENBQTFCOztBQUVBLFFBQUlJLEtBQUssS0FBSyxJQUFkLEVBQW9CO0FBQ2hCLFVBQUksT0FBT0gsWUFBUCxLQUF5QixXQUE3QixFQUEwQztBQUN0QyxlQUFPQSxZQUFQO0FBQ0gsT0FGRCxNQUVPO0FBQ0gsWUFBTVMsUUFBUSxHQUFHbkIsWUFBWSxDQUFDTixLQUFELEVBQVFlLFVBQVIsQ0FBN0I7QUFDQSxlQUFPVSxRQUFRLEtBQUssSUFBYixHQUFvQixJQUFwQixHQUEyQkEsUUFBUSxDQUFDdkIsV0FBVyxDQUFDYyxZQUFiLENBQTFDO0FBQ0g7QUFDSjs7QUFDRCxXQUFPRyxLQUFQO0FBQ0gsR0FaRDtBQWNBZCxFQUFBQSxJQUFJLENBQUNPLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkMsUUFBbkIsQ0FBNEIsWUFBNUIsRUFBMEMsVUFBVUMsVUFBVixFQUEyQztBQUFBLFFBQXJCRyxXQUFxQix1RUFBUCxLQUFPO0FBQ2pGLFFBQU1aLFlBQVksR0FBR0QsSUFBSSxDQUFDTyxNQUFMLENBQVlDLE1BQVosQ0FBbUJhLEdBQW5CLENBQXVCLFlBQXZCLEVBQXFDQyxJQUFyQyxDQUEwQyxJQUExQyxDQUFyQjtBQUNBLFdBQU9yQixZQUFZLENBQUNTLFVBQUQsRUFBYSxJQUFiLEVBQW1CRyxXQUFuQixDQUFaLElBQStDLElBQXREO0FBQ0gsR0FIRDtBQUtBYixFQUFBQSxJQUFJLENBQUNPLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkMsUUFBbkIsQ0FBNEIscUJBQTVCLEVBQW1ELFVBQVVQLE1BQVYsRUFBa0JRLFVBQWxCLEVBQW1EO0FBQUEsUUFBckJDLFlBQXFCLHVFQUFOLElBQU07QUFDbEcsUUFBTUcsS0FBSyxHQUFHYixZQUFZLENBQUNDLE1BQUQsRUFBU1EsVUFBVCxDQUExQjtBQUNBLFdBQU9JLEtBQUssS0FBSyxJQUFWLEdBQWlCSCxZQUFqQixHQUFnQ0csS0FBdkM7QUFDSCxHQUhEO0FBSUgsQ0FuQ0QiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2luY2x1ZGVzL2hlbHBlcnMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoZW1lIGNvbmZpZ3VyYXRpb24gaGVscGVycy5cbiAqXG4gKiBAZGVzY3JpcHRpb24gVGVzdCBpZiBhIGNvbmZpZ3VyYXRpb24gaXMgc2V0IG9yIGZldGNoIGl0cyB2YWx1ZS4gSWYgYGV4Y2x1ZGVfcGFnZWAgaXMgc2V0LCB0aGUgaGVscGVycyB3aWxsXG4gKiAgICAgICAgICAgICAgbm90IGxvb2sgdXAgY29uZmlndXJhdGlvbnMgaW4gdGhlIGN1cnJlbnQgcGFnZSdzIGZyb250IG1hdHRlci5cbiAqIEBleGFtcGxlXG4gKiAgICAgPCUtIGhhc19jb25maWcoY29uZmlnX25hbWUsIGV4Y2x1ZGVfcGFnZSkgJT5cbiAqICAgICA8JS0gZ2V0X2NvbmZpZyhjb25maWdfbmFtZSwgZGVmYXVsdF92YWx1ZSwgZXhjbHVkZV9wYWdlKSAlPlxuICovXG5jb25zdCBzcGVjcyA9IHJlcXVpcmUoJy4uL3NwZWNzL2NvbmZpZy5zcGVjJyk7XG5jb25zdCBkZXNjcmlwdG9ycyA9IHJlcXVpcmUoJy4uL2NvbW1vbi91dGlscycpLmRlc2NyaXB0b3JzO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChoZXhvKSB7XG4gICAgZnVuY3Rpb24gcmVhZFByb3BlcnR5KG9iamVjdCwgcGF0aCkge1xuICAgICAgICBjb25zdCBwYXRocyA9IHBhdGguc3BsaXQoJy4nKTtcbiAgICAgICAgZm9yIChsZXQgcGF0aCBvZiBwYXRocykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiAob2JqZWN0KSA9PT0gJ3VuZGVmaW5lZCcgfHwgb2JqZWN0ID09PSBudWxsIHx8ICFvYmplY3QuaGFzT3duUHJvcGVydHkocGF0aCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9iamVjdCA9IG9iamVjdFtwYXRoXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb2JqZWN0O1xuICAgIH1cblxuICAgIGhleG8uZXh0ZW5kLmhlbHBlci5yZWdpc3RlcignZ2V0X2NvbmZpZycsIGZ1bmN0aW9uIChjb25maWdOYW1lLCBkZWZhdWx0VmFsdWUgPSB1bmRlZmluZWQsIGV4Y2x1ZGVQYWdlID0gZmFsc2UpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSByZWFkUHJvcGVydHkoT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5jb25maWcsIGhleG8udGhlbWUuY29uZmlnLFxuICAgICAgICAgICAgIWV4Y2x1ZGVQYWdlID8gdGhpcy5wYWdlIDoge30pLCBjb25maWdOYW1lKTtcbiAgICAgICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mKGRlZmF1bHRWYWx1ZSkgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcHJvcGVydHkgPSByZWFkUHJvcGVydHkoc3BlY3MsIGNvbmZpZ05hbWUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBwcm9wZXJ0eSA9PT0gbnVsbCA/IG51bGwgOiBwcm9wZXJ0eVtkZXNjcmlwdG9ycy5kZWZhdWx0VmFsdWVdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9KTtcblxuICAgIGhleG8uZXh0ZW5kLmhlbHBlci5yZWdpc3RlcignaGFzX2NvbmZpZycsIGZ1bmN0aW9uIChjb25maWdOYW1lLCBleGNsdWRlUGFnZSA9IGZhbHNlKSB7XG4gICAgICAgIGNvbnN0IHJlYWRQcm9wZXJ0eSA9IGhleG8uZXh0ZW5kLmhlbHBlci5nZXQoJ2dldF9jb25maWcnKS5iaW5kKHRoaXMpO1xuICAgICAgICByZXR1cm4gcmVhZFByb3BlcnR5KGNvbmZpZ05hbWUsIG51bGwsIGV4Y2x1ZGVQYWdlKSAhPSBudWxsO1xuICAgIH0pO1xuXG4gICAgaGV4by5leHRlbmQuaGVscGVyLnJlZ2lzdGVyKCdnZXRfY29uZmlnX2Zyb21fb2JqJywgZnVuY3Rpb24gKG9iamVjdCwgY29uZmlnTmFtZSwgZGVmYXVsdFZhbHVlID0gbnVsbCkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHJlYWRQcm9wZXJ0eShvYmplY3QsIGNvbmZpZ05hbWUpO1xuICAgICAgICByZXR1cm4gdmFsdWUgPT09IG51bGwgPyBkZWZhdWx0VmFsdWUgOiB2YWx1ZTtcbiAgICB9KTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "specs",
        "require",
        "descriptors",
        "module",
        "exports",
        "hexo",
        "readProperty",
        "object",
        "path",
        "paths",
        "split",
        "hasOwnProperty",
        "extend",
        "helper",
        "register",
        "configName",
        "defaultValue",
        "undefined",
        "excludePage",
        "value",
        "Object",
        "assign",
        "config",
        "theme",
        "page",
        "property",
        "get",
        "bind"
      ],
      "mappings": ";;AAAA;;;;;;;;;AASA,IAAMA,KAAK,GAAGC,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,WAA/C;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7B,WAASC,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoC;AAChC,QAAMC,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAd;AADgC;AAAA;AAAA;;AAAA;AAEhC,2BAAiBD,KAAjB,8HAAwB;AAAA,YAAfD,KAAe;;AACpB,YAAI,OAAQD,MAAR,KAAoB,WAApB,IAAmCA,MAAM,KAAK,IAA9C,IAAsD,CAACA,MAAM,CAACI,cAAP,CAAsBH,KAAtB,CAA3D,EAAwF;AACpF,iBAAO,IAAP;AACH;;AACDD,QAAAA,MAAM,GAAGA,MAAM,CAACC,KAAD,CAAf;AACH;AAP+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQhC,WAAOD,MAAP;AACH;;AAEDF,EAAAA,IAAI,CAACO,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,UAAUC,UAAV,EAAqE;AAAA,QAA/CC,YAA+C,uEAAhCC,SAAgC;AAAA,QAArBC,WAAqB,uEAAP,KAAO;AAC3G,QAAMC,KAAK,GAAGb,YAAY,CAACc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,MAAvB,EAA+BjB,IAAI,CAACkB,KAAL,CAAWD,MAA1C,EACvB,CAACJ,WAAD,GAAe,KAAKM,IAApB,GAA2B,EADJ,CAAD,EACUT,UADV,CAA1B;;AAEA,QAAII,KAAK,KAAK,IAAd,EAAoB;AAChB,UAAI,OAAOH,YAAP,KAAyB,WAA7B,EAA0C;AACtC,eAAOA,YAAP;AACH,OAFD,MAEO;AACH,YAAMS,QAAQ,GAAGnB,YAAY,CAACN,KAAD,EAAQe,UAAR,CAA7B;AACA,eAAOU,QAAQ,KAAK,IAAb,GAAoB,IAApB,GAA2BA,QAAQ,CAACvB,WAAW,CAACc,YAAb,CAA1C;AACH;AACJ;;AACD,WAAOG,KAAP;AACH,GAZD;AAcAd,EAAAA,IAAI,CAACO,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,UAAUC,UAAV,EAA2C;AAAA,QAArBG,WAAqB,uEAAP,KAAO;AACjF,QAAMZ,YAAY,GAAGD,IAAI,CAACO,MAAL,CAAYC,MAAZ,CAAmBa,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,CAArB;AACA,WAAOrB,YAAY,CAACS,UAAD,EAAa,IAAb,EAAmBG,WAAnB,CAAZ,IAA+C,IAAtD;AACH,GAHD;AAKAb,EAAAA,IAAI,CAACO,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,qBAA5B,EAAmD,UAAUP,MAAV,EAAkBQ,UAAlB,EAAmD;AAAA,QAArBC,YAAqB,uEAAN,IAAM;AAClG,QAAMG,KAAK,GAAGb,YAAY,CAACC,MAAD,EAASQ,UAAT,CAA1B;AACA,WAAOI,KAAK,KAAK,IAAV,GAAiBH,YAAjB,GAAgCG,KAAvC;AACH,GAHD;AAIH,CAnCD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "sourcesContent": [
        "/**\n * Theme configuration helpers.\n *\n * @description Test if a configuration is set or fetch its value. If `exclude_page` is set, the helpers will\n *              not look up configurations in the current page's front matter.\n * @example\n *     <%- has_config(config_name, exclude_page) %>\n *     <%- get_config(config_name, default_value, exclude_page) %>\n */\nconst specs = require('../specs/config.spec');\nconst descriptors = require('../common/utils').descriptors;\n\nmodule.exports = function (hexo) {\n    function readProperty(object, path) {\n        const paths = path.split('.');\n        for (let path of paths) {\n            if (typeof (object) === 'undefined' || object === null || !object.hasOwnProperty(path)) {\n                return null;\n            }\n            object = object[path];\n        }\n        return object;\n    }\n\n    hexo.extend.helper.register('get_config', function (configName, defaultValue = undefined, excludePage = false) {\n        const value = readProperty(Object.assign({}, this.config, hexo.theme.config,\n            !excludePage ? this.page : {}), configName);\n        if (value === null) {\n            if (typeof(defaultValue) !== 'undefined') {\n                return defaultValue;\n            } else {\n                const property = readProperty(specs, configName);\n                return property === null ? null : property[descriptors.defaultValue];\n            }\n        }\n        return value;\n    });\n\n    hexo.extend.helper.register('has_config', function (configName, excludePage = false) {\n        const readProperty = hexo.extend.helper.get('get_config').bind(this);\n        return readProperty(configName, null, excludePage) != null;\n    });\n\n    hexo.extend.helper.register('get_config_from_obj', function (object, configName, defaultValue = null) {\n        const value = readProperty(object, configName);\n        return value === null ? defaultValue : value;\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525713
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/helpers/layout.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/helpers/layout.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/helpers/layout.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/helpers/layout.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
        "sourceFileName": "layout.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Helper functions for controlling layout.\n *\n* @example\n*     <%- get_widgets(position) %>\n*     <%- has_column() %>\n*     <%- column_count() %>\n */\nmodule.exports = function (hexo) {\n  hexo.extend.helper.register('has_widget', function (type) {\n    var hasWidgets = hexo.extend.helper.get('has_config').bind(this)('widgets');\n\n    if (!hasWidgets) {\n      return false;\n    }\n\n    var widgets = hexo.extend.helper.get('get_config').bind(this)('widgets');\n    return widgets.some(function (widget) {\n      return widget.hasOwnProperty('type') && widget.type === type;\n    });\n  });\n  hexo.extend.helper.register('get_widgets', function (position) {\n    var hasWidgets = hexo.extend.helper.get('has_config').bind(this)('widgets');\n\n    if (!hasWidgets) {\n      return [];\n    }\n\n    var widgets = hexo.extend.helper.get('get_config').bind(this)('widgets');\n    return widgets.filter(function (widget) {\n      return widget.hasOwnProperty('position') && widget.position === position;\n    });\n  });\n  hexo.extend.helper.register('has_column', function (position) {\n    var getWidgets = hexo.extend.helper.get('get_widgets').bind(this);\n    return getWidgets(position).length > 0;\n  });\n  hexo.extend.helper.register('column_count', function () {\n    var columns = 1;\n    var hasColumn = hexo.extend.helper.get('has_column').bind(this);\n    columns += hasColumn('left') ? 1 : 0;\n    columns += hasColumn('right') ? 1 : 0;\n    return columns;\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxheW91dC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiaGV4byIsImV4dGVuZCIsImhlbHBlciIsInJlZ2lzdGVyIiwidHlwZSIsImhhc1dpZGdldHMiLCJnZXQiLCJiaW5kIiwid2lkZ2V0cyIsInNvbWUiLCJ3aWRnZXQiLCJoYXNPd25Qcm9wZXJ0eSIsInBvc2l0aW9uIiwiZmlsdGVyIiwiZ2V0V2lkZ2V0cyIsImxlbmd0aCIsImNvbHVtbnMiLCJoYXNDb2x1bW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7O0FBUUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFVQyxJQUFWLEVBQWdCO0FBQzdCQSxFQUFBQSxJQUFJLENBQUNDLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkMsUUFBbkIsQ0FBNEIsWUFBNUIsRUFBMEMsVUFBVUMsSUFBVixFQUFnQjtBQUN0RCxRQUFNQyxVQUFVLEdBQUdMLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxNQUFaLENBQW1CSSxHQUFuQixDQUF1QixZQUF2QixFQUFxQ0MsSUFBckMsQ0FBMEMsSUFBMUMsRUFBZ0QsU0FBaEQsQ0FBbkI7O0FBQ0EsUUFBSSxDQUFDRixVQUFMLEVBQWlCO0FBQ2IsYUFBTyxLQUFQO0FBQ0g7O0FBQ0QsUUFBTUcsT0FBTyxHQUFHUixJQUFJLENBQUNDLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkksR0FBbkIsQ0FBdUIsWUFBdkIsRUFBcUNDLElBQXJDLENBQTBDLElBQTFDLEVBQWdELFNBQWhELENBQWhCO0FBQ0EsV0FBT0MsT0FBTyxDQUFDQyxJQUFSLENBQWEsVUFBQUMsTUFBTTtBQUFBLGFBQUlBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQixNQUF0QixLQUFpQ0QsTUFBTSxDQUFDTixJQUFQLEtBQWdCQSxJQUFyRDtBQUFBLEtBQW5CLENBQVA7QUFDSCxHQVBEO0FBU0FKLEVBQUFBLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxNQUFaLENBQW1CQyxRQUFuQixDQUE0QixhQUE1QixFQUEyQyxVQUFVUyxRQUFWLEVBQW9CO0FBQzNELFFBQU1QLFVBQVUsR0FBR0wsSUFBSSxDQUFDQyxNQUFMLENBQVlDLE1BQVosQ0FBbUJJLEdBQW5CLENBQXVCLFlBQXZCLEVBQXFDQyxJQUFyQyxDQUEwQyxJQUExQyxFQUFnRCxTQUFoRCxDQUFuQjs7QUFDQSxRQUFJLENBQUNGLFVBQUwsRUFBaUI7QUFDYixhQUFPLEVBQVA7QUFDSDs7QUFDRCxRQUFNRyxPQUFPLEdBQUdSLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxNQUFaLENBQW1CSSxHQUFuQixDQUF1QixZQUF2QixFQUFxQ0MsSUFBckMsQ0FBMEMsSUFBMUMsRUFBZ0QsU0FBaEQsQ0FBaEI7QUFDQSxXQUFPQyxPQUFPLENBQUNLLE1BQVIsQ0FBZSxVQUFBSCxNQUFNO0FBQUEsYUFBSUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCLFVBQXRCLEtBQXFDRCxNQUFNLENBQUNFLFFBQVAsS0FBb0JBLFFBQTdEO0FBQUEsS0FBckIsQ0FBUDtBQUNILEdBUEQ7QUFTQVosRUFBQUEsSUFBSSxDQUFDQyxNQUFMLENBQVlDLE1BQVosQ0FBbUJDLFFBQW5CLENBQTRCLFlBQTVCLEVBQTBDLFVBQVVTLFFBQVYsRUFBb0I7QUFDMUQsUUFBTUUsVUFBVSxHQUFHZCxJQUFJLENBQUNDLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkksR0FBbkIsQ0FBdUIsYUFBdkIsRUFBc0NDLElBQXRDLENBQTJDLElBQTNDLENBQW5CO0FBQ0EsV0FBT08sVUFBVSxDQUFDRixRQUFELENBQVYsQ0FBcUJHLE1BQXJCLEdBQThCLENBQXJDO0FBQ0gsR0FIRDtBQUtBZixFQUFBQSxJQUFJLENBQUNDLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkMsUUFBbkIsQ0FBNEIsY0FBNUIsRUFBNEMsWUFBWTtBQUNwRCxRQUFJYSxPQUFPLEdBQUcsQ0FBZDtBQUNBLFFBQU1DLFNBQVMsR0FBR2pCLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxNQUFaLENBQW1CSSxHQUFuQixDQUF1QixZQUF2QixFQUFxQ0MsSUFBckMsQ0FBMEMsSUFBMUMsQ0FBbEI7QUFDQVMsSUFBQUEsT0FBTyxJQUFJQyxTQUFTLENBQUMsTUFBRCxDQUFULEdBQW9CLENBQXBCLEdBQXdCLENBQW5DO0FBQ0FELElBQUFBLE9BQU8sSUFBSUMsU0FBUyxDQUFDLE9BQUQsQ0FBVCxHQUFxQixDQUFyQixHQUF5QixDQUFwQztBQUNBLFdBQU9ELE9BQVA7QUFDSCxHQU5EO0FBT0gsQ0EvQkQiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2luY2x1ZGVzL2hlbHBlcnMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEhlbHBlciBmdW5jdGlvbnMgZm9yIGNvbnRyb2xsaW5nIGxheW91dC5cbiAqXG4qIEBleGFtcGxlXG4qICAgICA8JS0gZ2V0X3dpZGdldHMocG9zaXRpb24pICU+XG4qICAgICA8JS0gaGFzX2NvbHVtbigpICU+XG4qICAgICA8JS0gY29sdW1uX2NvdW50KCkgJT5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaGV4bykge1xuICAgIGhleG8uZXh0ZW5kLmhlbHBlci5yZWdpc3RlcignaGFzX3dpZGdldCcsIGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICAgIGNvbnN0IGhhc1dpZGdldHMgPSBoZXhvLmV4dGVuZC5oZWxwZXIuZ2V0KCdoYXNfY29uZmlnJykuYmluZCh0aGlzKSgnd2lkZ2V0cycpO1xuICAgICAgICBpZiAoIWhhc1dpZGdldHMpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB3aWRnZXRzID0gaGV4by5leHRlbmQuaGVscGVyLmdldCgnZ2V0X2NvbmZpZycpLmJpbmQodGhpcykoJ3dpZGdldHMnKTtcbiAgICAgICAgcmV0dXJuIHdpZGdldHMuc29tZSh3aWRnZXQgPT4gd2lkZ2V0Lmhhc093blByb3BlcnR5KCd0eXBlJykgJiYgd2lkZ2V0LnR5cGUgPT09IHR5cGUpO1xuICAgIH0pO1xuXG4gICAgaGV4by5leHRlbmQuaGVscGVyLnJlZ2lzdGVyKCdnZXRfd2lkZ2V0cycsIGZ1bmN0aW9uIChwb3NpdGlvbikge1xuICAgICAgICBjb25zdCBoYXNXaWRnZXRzID0gaGV4by5leHRlbmQuaGVscGVyLmdldCgnaGFzX2NvbmZpZycpLmJpbmQodGhpcykoJ3dpZGdldHMnKTtcbiAgICAgICAgaWYgKCFoYXNXaWRnZXRzKSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgd2lkZ2V0cyA9IGhleG8uZXh0ZW5kLmhlbHBlci5nZXQoJ2dldF9jb25maWcnKS5iaW5kKHRoaXMpKCd3aWRnZXRzJyk7XG4gICAgICAgIHJldHVybiB3aWRnZXRzLmZpbHRlcih3aWRnZXQgPT4gd2lkZ2V0Lmhhc093blByb3BlcnR5KCdwb3NpdGlvbicpICYmIHdpZGdldC5wb3NpdGlvbiA9PT0gcG9zaXRpb24pO1xuICAgIH0pO1xuXG4gICAgaGV4by5leHRlbmQuaGVscGVyLnJlZ2lzdGVyKCdoYXNfY29sdW1uJywgZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgIGNvbnN0IGdldFdpZGdldHMgPSBoZXhvLmV4dGVuZC5oZWxwZXIuZ2V0KCdnZXRfd2lkZ2V0cycpLmJpbmQodGhpcyk7XG4gICAgICAgIHJldHVybiBnZXRXaWRnZXRzKHBvc2l0aW9uKS5sZW5ndGggPiAwO1xuICAgIH0pO1xuXG4gICAgaGV4by5leHRlbmQuaGVscGVyLnJlZ2lzdGVyKCdjb2x1bW5fY291bnQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGxldCBjb2x1bW5zID0gMTtcbiAgICAgICAgY29uc3QgaGFzQ29sdW1uID0gaGV4by5leHRlbmQuaGVscGVyLmdldCgnaGFzX2NvbHVtbicpLmJpbmQodGhpcyk7XG4gICAgICAgIGNvbHVtbnMgKz0gaGFzQ29sdW1uKCdsZWZ0JykgPyAxIDogMDtcbiAgICAgICAgY29sdW1ucyArPSBoYXNDb2x1bW4oJ3JpZ2h0JykgPyAxIDogMDtcbiAgICAgICAgcmV0dXJuIGNvbHVtbnM7XG4gICAgfSk7XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "layout.js"
      ],
      "names": [
        "module",
        "exports",
        "hexo",
        "extend",
        "helper",
        "register",
        "type",
        "hasWidgets",
        "get",
        "bind",
        "widgets",
        "some",
        "widget",
        "hasOwnProperty",
        "position",
        "filter",
        "getWidgets",
        "length",
        "columns",
        "hasColumn"
      ],
      "mappings": ";;AAAA;;;;;;;;AAQAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,UAAUC,IAAV,EAAgB;AACtD,QAAMC,UAAU,GAAGL,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBI,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,EAAgD,SAAhD,CAAnB;;AACA,QAAI,CAACF,UAAL,EAAiB;AACb,aAAO,KAAP;AACH;;AACD,QAAMG,OAAO,GAAGR,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBI,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,EAAgD,SAAhD,CAAhB;AACA,WAAOC,OAAO,CAACC,IAAR,CAAa,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,cAAP,CAAsB,MAAtB,KAAiCD,MAAM,CAACN,IAAP,KAAgBA,IAArD;AAAA,KAAnB,CAAP;AACH,GAPD;AASAJ,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,aAA5B,EAA2C,UAAUS,QAAV,EAAoB;AAC3D,QAAMP,UAAU,GAAGL,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBI,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,EAAgD,SAAhD,CAAnB;;AACA,QAAI,CAACF,UAAL,EAAiB;AACb,aAAO,EAAP;AACH;;AACD,QAAMG,OAAO,GAAGR,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBI,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,EAAgD,SAAhD,CAAhB;AACA,WAAOC,OAAO,CAACK,MAAR,CAAe,UAAAH,MAAM;AAAA,aAAIA,MAAM,CAACC,cAAP,CAAsB,UAAtB,KAAqCD,MAAM,CAACE,QAAP,KAAoBA,QAA7D;AAAA,KAArB,CAAP;AACH,GAPD;AASAZ,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,UAAUS,QAAV,EAAoB;AAC1D,QAAME,UAAU,GAAGd,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBI,GAAnB,CAAuB,aAAvB,EAAsCC,IAAtC,CAA2C,IAA3C,CAAnB;AACA,WAAOO,UAAU,CAACF,QAAD,CAAV,CAAqBG,MAArB,GAA8B,CAArC;AACH,GAHD;AAKAf,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,cAA5B,EAA4C,YAAY;AACpD,QAAIa,OAAO,GAAG,CAAd;AACA,QAAMC,SAAS,GAAGjB,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBI,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,CAAlB;AACAS,IAAAA,OAAO,IAAIC,SAAS,CAAC,MAAD,CAAT,GAAoB,CAApB,GAAwB,CAAnC;AACAD,IAAAA,OAAO,IAAIC,SAAS,CAAC,OAAD,CAAT,GAAqB,CAArB,GAAyB,CAApC;AACA,WAAOD,OAAP;AACH,GAND;AAOH,CA/BD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "sourcesContent": [
        "/**\n * Helper functions for controlling layout.\n *\n* @example\n*     <%- get_widgets(position) %>\n*     <%- has_column() %>\n*     <%- column_count() %>\n */\nmodule.exports = function (hexo) {\n    hexo.extend.helper.register('has_widget', function (type) {\n        const hasWidgets = hexo.extend.helper.get('has_config').bind(this)('widgets');\n        if (!hasWidgets) {\n            return false;\n        }\n        const widgets = hexo.extend.helper.get('get_config').bind(this)('widgets');\n        return widgets.some(widget => widget.hasOwnProperty('type') && widget.type === type);\n    });\n\n    hexo.extend.helper.register('get_widgets', function (position) {\n        const hasWidgets = hexo.extend.helper.get('has_config').bind(this)('widgets');\n        if (!hasWidgets) {\n            return [];\n        }\n        const widgets = hexo.extend.helper.get('get_config').bind(this)('widgets');\n        return widgets.filter(widget => widget.hasOwnProperty('position') && widget.position === position);\n    });\n\n    hexo.extend.helper.register('has_column', function (position) {\n        const getWidgets = hexo.extend.helper.get('get_widgets').bind(this);\n        return getWidgets(position).length > 0;\n    });\n\n    hexo.extend.helper.register('column_count', function () {\n        let columns = 1;\n        const hasColumn = hexo.extend.helper.get('has_column').bind(this);\n        columns += hasColumn('left') ? 1 : 0;\n        columns += hasColumn('right') ? 1 : 0;\n        return columns;\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525713
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/helpers/override.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/helpers/override.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/helpers/override.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/helpers/override.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
        "sourceFileName": "override.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * Helper functions that override Hexo built-in helpers.\n *\n * @example\n*     <%- _list_archives() %>\n*     <%- _list_categories() %>\n*     <%- _list_tags() %>\n*     <%- _toc(content) %>\n*     <%- _js(url, defer, async) %>\n*     <%- _css(url) %>\n*     <%- _partial(url) %>\n */\nvar cheerio = require('cheerio');\n\nvar _require = require('fs'),\n    existsSync = _require.existsSync;\n\nvar _require2 = require('path'),\n    relative = _require2.relative,\n    dirname = _require2.dirname,\n    join = _require2.join,\n    extname = _require2.extname;\n\nvar _require3 = require('../utils/lru'),\n    LRUMap = _require3.LRUMap;\n\nvar __archives = [];\nvar __categories = [];\nvar __tags = [];\n\nvar __fragmentCache = new LRUMap(20);\n\nmodule.exports = function (hexo) {\n  hexo.extend.helper.register('_list_archives', function () {\n    if (__archives.length) {\n      return __archives;\n    }\n\n    var $ = cheerio.load(this.list_archives(), {\n      decodeEntities: false\n    });\n    $('.archive-list-item').each(function () {\n      __archives.push({\n        url: $(this).find('.archive-list-link').attr('href'),\n        name: $(this).find('.archive-list-link').text(),\n        count: $(this).find('.archive-list-count').text()\n      });\n    });\n    return __archives;\n  });\n  hexo.extend.helper.register('_list_categories', function () {\n    if (__categories.length) {\n      return __categories;\n    }\n\n    var $ = cheerio.load(this.list_categories({\n      depth: 2\n    }), {\n      decodeEntities: false\n    });\n\n    function traverse(root) {\n      var categories = [];\n      root.find('> .category-list-item').each(function () {\n        var category = {\n          url: $(this).find('> .category-list-link').attr('href'),\n          name: $(this).find('> .category-list-link').text(),\n          count: $(this).find('> .category-list-count').text()\n        };\n\n        if ($(this).find('> .category-list-child').length) {\n          category['children'] = traverse($(this).find('> .category-list-child'));\n        }\n\n        categories.push(category);\n      });\n      return categories;\n    }\n\n    __categories.push.apply(__categories, _toConsumableArray(traverse($('.category-list'))));\n\n    return __categories;\n  });\n  hexo.extend.helper.register('_list_tags', function () {\n    if (__tags.length) {\n      return __tags;\n    }\n\n    var $ = cheerio.load(this.list_tags(), {\n      decodeEntities: false\n    });\n    $('.tag-list-item').each(function () {\n      __tags.push({\n        url: $(this).find('.tag-list-link').attr('href'),\n        name: $(this).find('.tag-list-link').text(),\n        count: $(this).find('.tag-list-count').text()\n      });\n    });\n    return __tags;\n  });\n  /**\n   * Export a tree of headings of an article\n   * {\n   *    \"1\": {\n   *        \"id\": \"How-to-enable-table-of-content-for-a-post\",\n   *        \"index\": \"1\"\n   *    },\n   *    \"2\": {\n   *        \"1\": {\n   *            \"1\": {\n   *                \"id\": \"Third-level-title\",\n   *                \"index\": \"2.1.1\"\n   *            },\n   *            \"id\": \"Second-level-title\",\n   *            \"index\": \"2.1\"\n   *        },\n   *        \"2\": {\n   *            \"id\": \"Another-second-level-title\",\n   *            \"index\": \"2.2\"\n   *        },\n   *        \"id\": \"First-level-title\",\n   *        \"index\": \"2\"\n   *    }\n   * }\n   */\n\n  hexo.extend.helper.register('_toc', function (content) {\n    var $ = cheerio.load(content, {\n      decodeEntities: false\n    });\n    var toc = {};\n    var levels = [0, 0, 0]; // Get top 3 headings that are present in the content\n\n    var tags = [1, 2, 3, 4, 5, 6].map(function (i) {\n      return 'h' + i;\n    }).filter(function (h) {\n      return $(h).length > 0;\n    }).slice(0, 3);\n\n    if (tags.length === 0) {\n      return toc;\n    }\n\n    $(tags.join(',')).each(function () {\n      var level = tags.indexOf(this.name);\n      var id = $(this).attr('id');\n      var text = $(this).text();\n\n      for (var i = 0; i < levels.length; i++) {\n        if (i > level) {\n          levels[i] = 0;\n        } else if (i < level) {\n          if (levels[i] === 0) {\n            // if headings start with a lower level heading, set the former heading index to 1\n            // e.g. h3, h2, h1, h2, h3 => 1.1.1, 1.2, 2, 2.1, 2.1.1\n            levels[i] = 1;\n          }\n        } else {\n          levels[i] += 1;\n        }\n      }\n\n      var node = toc;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = levels.slice(0, level + 1)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _i = _step.value;\n\n          if (!node.hasOwnProperty(_i)) {\n            node[_i] = {};\n          }\n\n          node = node[_i];\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      node.id = id;\n      node.text = text;\n      node.index = levels.slice(0, level + 1).join('.');\n    });\n    return toc;\n  });\n  hexo.extend.helper.register('_js', function (url) {\n    var defer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var async = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var urlFor = hexo.extend.helper.get('url_for').bind(this);\n\n    if (!url.endsWith('.js') && !url.includes('?')) {\n      url += '.js';\n    }\n\n    return \"<script src=\\\"\".concat(urlFor(url), \"\\\"\").concat(async ? ' async' : '').concat(defer ? ' defer' : '', \"></script>\");\n  });\n  hexo.extend.helper.register('_css', function (url) {\n    var urlFor = hexo.extend.helper.get('url_for').bind(this);\n\n    if (!url.endsWith('.css') && !url.includes('?')) {\n      url += '.css';\n    }\n\n    return \"<link rel=\\\"stylesheet\\\" href=\\\"\".concat(urlFor(url), \"\\\">\");\n  });\n  hexo.extend.helper.register('_partial', function (name, locals) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var md5 = this.md5,\n        partial = this.partial,\n        view_dir = this.view_dir,\n        page = this.page;\n    var currentView = this.filename.substring(view_dir.length);\n\n    var _locals = Object.assign({}, locals, {\n      layout: false\n    });\n\n    var _ref = hexo.theme.getView(join(dirname(currentView), name)) || hexo.theme.getView(name),\n        path = _ref.path;\n\n    path = join(view_dir, path.substring(0, path.length - extname(path).length) + '.locals.js');\n\n    if (!existsSync(path)) {\n      // fallback to default partial\n      return partial(name, locals, options);\n    }\n\n    _locals = require(path)(this, _locals);\n\n    if (_locals === null) {\n      // partial should be empty\n      return '';\n    }\n\n    if (_locals === false) {\n      // do not cache this fragment\n      return partial(name, locals, options);\n    }\n\n    var language = page.lang || page.language;\n    var fragment = relative(view_dir, path.substring(0, path.length - '.locals.js'.length));\n    var cacheId = [fragment, language, md5(JSON.stringify(_locals))].join('-');\n\n    if (!__fragmentCache.has(cacheId)) {\n      __fragmentCache.set(cacheId, partial(name, _locals, {\n        cache: false,\n        only: options.only || false\n      }));\n    }\n\n    return __fragmentCache.get(cacheId);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "override.js"
      ],
      "names": [
        "cheerio",
        "require",
        "existsSync",
        "relative",
        "dirname",
        "join",
        "extname",
        "LRUMap",
        "__archives",
        "__categories",
        "__tags",
        "__fragmentCache",
        "module",
        "exports",
        "hexo",
        "extend",
        "helper",
        "register",
        "length",
        "$",
        "load",
        "list_archives",
        "decodeEntities",
        "each",
        "push",
        "url",
        "find",
        "attr",
        "name",
        "text",
        "count",
        "list_categories",
        "depth",
        "traverse",
        "root",
        "categories",
        "category",
        "list_tags",
        "content",
        "toc",
        "levels",
        "tags",
        "map",
        "i",
        "filter",
        "h",
        "slice",
        "level",
        "indexOf",
        "id",
        "node",
        "hasOwnProperty",
        "index",
        "defer",
        "async",
        "urlFor",
        "get",
        "bind",
        "endsWith",
        "includes",
        "locals",
        "options",
        "md5",
        "partial",
        "view_dir",
        "page",
        "currentView",
        "filename",
        "substring",
        "_locals",
        "Object",
        "assign",
        "layout",
        "theme",
        "getView",
        "path",
        "language",
        "lang",
        "fragment",
        "cacheId",
        "JSON",
        "stringify",
        "has",
        "set",
        "cache",
        "only"
      ],
      "mappings": ";;;;;;;;;;AAAA;;;;;;;;;;;;AAYA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACuBA,OAAO,CAAC,IAAD,C;IAAtBC,U,YAAAA,U;;gBACqCD,OAAO,CAAC,MAAD,C;IAA5CE,Q,aAAAA,Q;IAAUC,O,aAAAA,O;IAASC,I,aAAAA,I;IAAMC,O,aAAAA,O;;gBACdL,OAAO,CAAC,cAAD,C;IAAlBM,M,aAAAA,M;;AAER,IAAMC,UAAU,GAAG,EAAnB;AACA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,MAAM,GAAG,EAAf;;AAEA,IAAMC,eAAe,GAAG,IAAIJ,MAAJ,CAAW,EAAX,CAAxB;;AAEAK,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,gBAA5B,EAA8C,YAAY;AACtD,QAAIT,UAAU,CAACU,MAAf,EAAuB;AACnB,aAAOV,UAAP;AACH;;AACD,QAAMW,CAAC,GAAGnB,OAAO,CAACoB,IAAR,CAAa,KAAKC,aAAL,EAAb,EAAmC;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KAAnC,CAAV;AACAH,IAAAA,CAAC,CAAC,oBAAD,CAAD,CAAwBI,IAAxB,CAA6B,YAAY;AACrCf,MAAAA,UAAU,CAACgB,IAAX,CAAgB;AACZC,QAAAA,GAAG,EAAEN,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,oBAAb,EAAmCC,IAAnC,CAAwC,MAAxC,CADO;AAEZC,QAAAA,IAAI,EAAET,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,oBAAb,EAAmCG,IAAnC,EAFM;AAGZC,QAAAA,KAAK,EAAEX,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,qBAAb,EAAoCG,IAApC;AAHK,OAAhB;AAKH,KAND;AAOA,WAAOrB,UAAP;AACH,GAbD;AAeAM,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,kBAA5B,EAAgD,YAAY;AACxD,QAAIR,YAAY,CAACS,MAAjB,EAAyB;AACrB,aAAOT,YAAP;AACH;;AACD,QAAMU,CAAC,GAAGnB,OAAO,CAACoB,IAAR,CAAa,KAAKW,eAAL,CAAqB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAArB,CAAb,EAAiD;AAAEV,MAAAA,cAAc,EAAE;AAAlB,KAAjD,CAAV;;AACA,aAASW,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,UAAMC,UAAU,GAAG,EAAnB;AACAD,MAAAA,IAAI,CAACR,IAAL,CAAU,uBAAV,EAAmCH,IAAnC,CAAwC,YAAY;AAChD,YAAMa,QAAQ,GAAG;AACbX,UAAAA,GAAG,EAAEN,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,uBAAb,EAAsCC,IAAtC,CAA2C,MAA3C,CADQ;AAEbC,UAAAA,IAAI,EAAET,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,uBAAb,EAAsCG,IAAtC,EAFO;AAGbC,UAAAA,KAAK,EAAEX,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,wBAAb,EAAuCG,IAAvC;AAHM,SAAjB;;AAKA,YAAIV,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,wBAAb,EAAuCR,MAA3C,EAAmD;AAC/CkB,UAAAA,QAAQ,CAAC,UAAD,CAAR,GAAuBH,QAAQ,CAACd,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,wBAAb,CAAD,CAA/B;AACH;;AACDS,QAAAA,UAAU,CAACX,IAAX,CAAgBY,QAAhB;AACH,OAVD;AAWA,aAAOD,UAAP;AACH;;AACD1B,IAAAA,YAAY,CAACe,IAAb,OAAAf,YAAY,qBAASwB,QAAQ,CAACd,CAAC,CAAC,gBAAD,CAAF,CAAjB,EAAZ;;AACA,WAAOV,YAAP;AACH,GAtBD;AAwBAK,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,YAAY;AAClD,QAAIP,MAAM,CAACQ,MAAX,EAAmB;AACf,aAAOR,MAAP;AACH;;AACD,QAAMS,CAAC,GAAGnB,OAAO,CAACoB,IAAR,CAAa,KAAKiB,SAAL,EAAb,EAA+B;AAAEf,MAAAA,cAAc,EAAE;AAAlB,KAA/B,CAAV;AACAH,IAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBI,IAApB,CAAyB,YAAY;AACjCb,MAAAA,MAAM,CAACc,IAAP,CAAY;AACRC,QAAAA,GAAG,EAAEN,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,gBAAb,EAA+BC,IAA/B,CAAoC,MAApC,CADG;AAERC,QAAAA,IAAI,EAAET,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,gBAAb,EAA+BG,IAA/B,EAFE;AAGRC,QAAAA,KAAK,EAAEX,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,iBAAb,EAAgCG,IAAhC;AAHC,OAAZ;AAKH,KAND;AAOA,WAAOnB,MAAP;AACH,GAbD;AAeA;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAI,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,MAA5B,EAAoC,UAACqB,OAAD,EAAa;AAC7C,QAAMnB,CAAC,GAAGnB,OAAO,CAACoB,IAAR,CAAakB,OAAb,EAAsB;AAAEhB,MAAAA,cAAc,EAAE;AAAlB,KAAtB,CAAV;AACA,QAAMiB,GAAG,GAAG,EAAZ;AACA,QAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAf,CAH6C,CAI7C;;AACA,QAAMC,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmBC,GAAnB,CAAuB,UAAAC,CAAC;AAAA,aAAI,MAAMA,CAAV;AAAA,KAAxB,EAAqCC,MAArC,CAA4C,UAAAC,CAAC;AAAA,aAAI1B,CAAC,CAAC0B,CAAD,CAAD,CAAK3B,MAAL,GAAc,CAAlB;AAAA,KAA7C,EAAkE4B,KAAlE,CAAwE,CAAxE,EAA2E,CAA3E,CAAb;;AACA,QAAIL,IAAI,CAACvB,MAAL,KAAgB,CAApB,EAAuB;AACnB,aAAOqB,GAAP;AACH;;AACDpB,IAAAA,CAAC,CAACsB,IAAI,CAACpC,IAAL,CAAU,GAAV,CAAD,CAAD,CAAkBkB,IAAlB,CAAuB,YAAY;AAC/B,UAAMwB,KAAK,GAAGN,IAAI,CAACO,OAAL,CAAa,KAAKpB,IAAlB,CAAd;AACA,UAAMqB,EAAE,GAAG9B,CAAC,CAAC,IAAD,CAAD,CAAQQ,IAAR,CAAa,IAAb,CAAX;AACA,UAAME,IAAI,GAAGV,CAAC,CAAC,IAAD,CAAD,CAAQU,IAAR,EAAb;;AAEA,WAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACtB,MAA3B,EAAmCyB,CAAC,EAApC,EAAwC;AACpC,YAAIA,CAAC,GAAGI,KAAR,EAAe;AACXP,UAAAA,MAAM,CAACG,CAAD,CAAN,GAAY,CAAZ;AACH,SAFD,MAEO,IAAIA,CAAC,GAAGI,KAAR,EAAe;AAClB,cAAIP,MAAM,CAACG,CAAD,CAAN,KAAc,CAAlB,EAAqB;AACjB;AACA;AACAH,YAAAA,MAAM,CAACG,CAAD,CAAN,GAAY,CAAZ;AACH;AACJ,SANM,MAMA;AACHH,UAAAA,MAAM,CAACG,CAAD,CAAN,IAAa,CAAb;AACH;AACJ;;AACD,UAAIO,IAAI,GAAGX,GAAX;AAlB+B;AAAA;AAAA;;AAAA;AAmB/B,6BAAcC,MAAM,CAACM,KAAP,CAAa,CAAb,EAAgBC,KAAK,GAAG,CAAxB,CAAd,8HAA0C;AAAA,cAAjCJ,EAAiC;;AACtC,cAAI,CAACO,IAAI,CAACC,cAAL,CAAoBR,EAApB,CAAL,EAA6B;AACzBO,YAAAA,IAAI,CAACP,EAAD,CAAJ,GAAU,EAAV;AACH;;AACDO,UAAAA,IAAI,GAAGA,IAAI,CAACP,EAAD,CAAX;AACH;AAxB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyB/BO,MAAAA,IAAI,CAACD,EAAL,GAAUA,EAAV;AACAC,MAAAA,IAAI,CAACrB,IAAL,GAAYA,IAAZ;AACAqB,MAAAA,IAAI,CAACE,KAAL,GAAaZ,MAAM,CAACM,KAAP,CAAa,CAAb,EAAgBC,KAAK,GAAG,CAAxB,EAA2B1C,IAA3B,CAAgC,GAAhC,CAAb;AACH,KA5BD;AA6BA,WAAOkC,GAAP;AACH,GAvCD;AAyCAzB,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,KAA5B,EAAmC,UAAUQ,GAAV,EAA6C;AAAA,QAA9B4B,KAA8B,uEAAtB,KAAsB;AAAA,QAAfC,KAAe,uEAAP,KAAO;AAC5E,QAAMC,MAAM,GAAGzC,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBwC,GAAnB,CAAuB,SAAvB,EAAkCC,IAAlC,CAAuC,IAAvC,CAAf;;AACA,QAAI,CAAChC,GAAG,CAACiC,QAAJ,CAAa,KAAb,CAAD,IAAwB,CAACjC,GAAG,CAACkC,QAAJ,CAAa,GAAb,CAA7B,EAAgD;AAC5ClC,MAAAA,GAAG,IAAI,KAAP;AACH;;AACD,mCAAuB8B,MAAM,CAAC9B,GAAD,CAA7B,eAAsC6B,KAAK,GAAG,QAAH,GAAc,EAAzD,SAA8DD,KAAK,GAAG,QAAH,GAAc,EAAjF;AACH,GAND;AAQAvC,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,MAA5B,EAAoC,UAAUQ,GAAV,EAAe;AAC/C,QAAM8B,MAAM,GAAGzC,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBwC,GAAnB,CAAuB,SAAvB,EAAkCC,IAAlC,CAAuC,IAAvC,CAAf;;AACA,QAAI,CAAChC,GAAG,CAACiC,QAAJ,CAAa,MAAb,CAAD,IAAyB,CAACjC,GAAG,CAACkC,QAAJ,CAAa,GAAb,CAA9B,EAAiD;AAC7ClC,MAAAA,GAAG,IAAI,MAAP;AACH;;AACD,qDAAuC8B,MAAM,CAAC9B,GAAD,CAA7C;AACH,GAND;AAQAX,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,UAA5B,EAAwC,UAAUW,IAAV,EAAgBgC,MAAhB,EAAsC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAAA,QAClEC,GADkE,GACjC,IADiC,CAClEA,GADkE;AAAA,QAC7DC,OAD6D,GACjC,IADiC,CAC7DA,OAD6D;AAAA,QACpDC,QADoD,GACjC,IADiC,CACpDA,QADoD;AAAA,QAC1CC,IAD0C,GACjC,IADiC,CAC1CA,IAD0C;AAE1E,QAAMC,WAAW,GAAG,KAAKC,QAAL,CAAcC,SAAd,CAAwBJ,QAAQ,CAAC9C,MAAjC,CAApB;;AACA,QAAImD,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,MAAlB,EAA0B;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAA1B,CAAd;;AAH0E,eAK3D1D,IAAI,CAAC2D,KAAL,CAAWC,OAAX,CAAmBrE,IAAI,CAACD,OAAO,CAAC8D,WAAD,CAAR,EAAuBtC,IAAvB,CAAvB,KAAwDd,IAAI,CAAC2D,KAAL,CAAWC,OAAX,CAAmB9C,IAAnB,CALG;AAAA,QAKpE+C,IALoE,QAKpEA,IALoE;;AAM1EA,IAAAA,IAAI,GAAGtE,IAAI,CAAC2D,QAAD,EAAWW,IAAI,CAACP,SAAL,CAAe,CAAf,EAAkBO,IAAI,CAACzD,MAAL,GAAcZ,OAAO,CAACqE,IAAD,CAAP,CAAczD,MAA9C,IAAwD,YAAnE,CAAX;;AAEA,QAAI,CAAChB,UAAU,CAACyE,IAAD,CAAf,EAAuB;AACnB;AACA,aAAOZ,OAAO,CAACnC,IAAD,EAAOgC,MAAP,EAAeC,OAAf,CAAd;AACH;;AAEDQ,IAAAA,OAAO,GAAGpE,OAAO,CAAC0E,IAAD,CAAP,CAAc,IAAd,EAAoBN,OAApB,CAAV;;AACA,QAAIA,OAAO,KAAK,IAAhB,EAAsB;AAClB;AACA,aAAO,EAAP;AACH;;AAED,QAAIA,OAAO,KAAK,KAAhB,EAAuB;AACnB;AACA,aAAON,OAAO,CAACnC,IAAD,EAAOgC,MAAP,EAAeC,OAAf,CAAd;AACH;;AAED,QAAMe,QAAQ,GAAGX,IAAI,CAACY,IAAL,IAAaZ,IAAI,CAACW,QAAnC;AACA,QAAME,QAAQ,GAAG3E,QAAQ,CAAC6D,QAAD,EAAWW,IAAI,CAACP,SAAL,CAAe,CAAf,EAAkBO,IAAI,CAACzD,MAAL,GAAc,aAAaA,MAA7C,CAAX,CAAzB;AACA,QAAM6D,OAAO,GAAG,CAACD,QAAD,EAAWF,QAAX,EAAqBd,GAAG,CAACkB,IAAI,CAACC,SAAL,CAAeZ,OAAf,CAAD,CAAxB,EAAmDhE,IAAnD,CAAwD,GAAxD,CAAhB;;AAEA,QAAI,CAACM,eAAe,CAACuE,GAAhB,CAAoBH,OAApB,CAAL,EAAmC;AAC/BpE,MAAAA,eAAe,CAACwE,GAAhB,CAAoBJ,OAApB,EAA6BhB,OAAO,CAACnC,IAAD,EAAOyC,OAAP,EAAgB;AAAEe,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,IAAI,EAAExB,OAAO,CAACwB,IAAR,IAAgB;AAAtC,OAAhB,CAApC;AACH;;AACD,WAAO1E,eAAe,CAAC6C,GAAhB,CAAoBuB,OAApB,CAAP;AACH,GAhCD;AAiCH,CA1KD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "sourcesContent": [
        "/**\n * Helper functions that override Hexo built-in helpers.\n *\n * @example\n*     <%- _list_archives() %>\n*     <%- _list_categories() %>\n*     <%- _list_tags() %>\n*     <%- _toc(content) %>\n*     <%- _js(url, defer, async) %>\n*     <%- _css(url) %>\n*     <%- _partial(url) %>\n */\nconst cheerio = require('cheerio');\nconst { existsSync } = require('fs');\nconst { relative, dirname, join, extname } = require('path');\nconst { LRUMap } = require('../utils/lru');\n\nconst __archives = [];\nconst __categories = [];\nconst __tags = [];\n\nconst __fragmentCache = new LRUMap(20);\n\nmodule.exports = function (hexo) {\n    hexo.extend.helper.register('_list_archives', function () {\n        if (__archives.length) {\n            return __archives;\n        }\n        const $ = cheerio.load(this.list_archives(), { decodeEntities: false });\n        $('.archive-list-item').each(function () {\n            __archives.push({\n                url: $(this).find('.archive-list-link').attr('href'),\n                name: $(this).find('.archive-list-link').text(),\n                count: $(this).find('.archive-list-count').text()\n            });\n        });\n        return __archives;\n    });\n\n    hexo.extend.helper.register('_list_categories', function () {\n        if (__categories.length) {\n            return __categories;\n        }\n        const $ = cheerio.load(this.list_categories({ depth: 2 }), { decodeEntities: false });\n        function traverse(root) {\n            const categories = [];\n            root.find('> .category-list-item').each(function () {\n                const category = {\n                    url: $(this).find('> .category-list-link').attr('href'),\n                    name: $(this).find('> .category-list-link').text(),\n                    count: $(this).find('> .category-list-count').text()\n                };\n                if ($(this).find('> .category-list-child').length) {\n                    category['children'] = traverse($(this).find('> .category-list-child'));\n                }\n                categories.push(category);\n            });\n            return categories;\n        }\n        __categories.push(...traverse($('.category-list')));\n        return __categories;\n    });\n\n    hexo.extend.helper.register('_list_tags', function () {\n        if (__tags.length) {\n            return __tags;\n        }\n        const $ = cheerio.load(this.list_tags(), { decodeEntities: false });\n        $('.tag-list-item').each(function () {\n            __tags.push({\n                url: $(this).find('.tag-list-link').attr('href'),\n                name: $(this).find('.tag-list-link').text(),\n                count: $(this).find('.tag-list-count').text()\n            });\n        });\n        return __tags;\n    });\n\n    /**\n     * Export a tree of headings of an article\n     * {\n     *    \"1\": {\n     *        \"id\": \"How-to-enable-table-of-content-for-a-post\",\n     *        \"index\": \"1\"\n     *    },\n     *    \"2\": {\n     *        \"1\": {\n     *            \"1\": {\n     *                \"id\": \"Third-level-title\",\n     *                \"index\": \"2.1.1\"\n     *            },\n     *            \"id\": \"Second-level-title\",\n     *            \"index\": \"2.1\"\n     *        },\n     *        \"2\": {\n     *            \"id\": \"Another-second-level-title\",\n     *            \"index\": \"2.2\"\n     *        },\n     *        \"id\": \"First-level-title\",\n     *        \"index\": \"2\"\n     *    }\n     * }\n     */\n    hexo.extend.helper.register('_toc', (content) => {\n        const $ = cheerio.load(content, { decodeEntities: false });\n        const toc = {};\n        const levels = [0, 0, 0];\n        // Get top 3 headings that are present in the content\n        const tags = [1, 2, 3, 4, 5, 6].map(i => 'h' + i).filter(h => $(h).length > 0).slice(0, 3);\n        if (tags.length === 0) {\n            return toc;\n        }\n        $(tags.join(',')).each(function () {\n            const level = tags.indexOf(this.name);\n            const id = $(this).attr('id');\n            const text = $(this).text();\n\n            for (let i = 0; i < levels.length; i++) {\n                if (i > level) {\n                    levels[i] = 0;\n                } else if (i < level) {\n                    if (levels[i] === 0) {\n                        // if headings start with a lower level heading, set the former heading index to 1\n                        // e.g. h3, h2, h1, h2, h3 => 1.1.1, 1.2, 2, 2.1, 2.1.1\n                        levels[i] = 1;\n                    }\n                } else {\n                    levels[i] += 1;\n                }\n            }\n            let node = toc;\n            for (let i of levels.slice(0, level + 1)) {\n                if (!node.hasOwnProperty(i)) {\n                    node[i] = {};\n                }\n                node = node[i];\n            }\n            node.id = id;\n            node.text = text;\n            node.index = levels.slice(0, level + 1).join('.');\n        });\n        return toc;\n    });\n\n    hexo.extend.helper.register('_js', function (url, defer = false, async = false) {\n        const urlFor = hexo.extend.helper.get('url_for').bind(this);\n        if (!url.endsWith('.js') && !url.includes('?')) {\n            url += '.js';\n        }\n        return `<script src=\"${urlFor(url)}\"${async ? ' async' : ''}${defer ? ' defer' : ''}></script>`;\n    });\n\n    hexo.extend.helper.register('_css', function (url) {\n        const urlFor = hexo.extend.helper.get('url_for').bind(this);\n        if (!url.endsWith('.css') && !url.includes('?')) {\n            url += '.css';\n        }\n        return `<link rel=\"stylesheet\" href=\"${urlFor(url)}\">`;\n    });\n\n    hexo.extend.helper.register('_partial', function (name, locals, options = {}) {\n        const { md5, partial, view_dir, page } = this;\n        const currentView = this.filename.substring(view_dir.length);\n        let _locals = Object.assign({}, locals, { layout: false });\n\n        let { path } = hexo.theme.getView(join(dirname(currentView), name)) || hexo.theme.getView(name);\n        path = join(view_dir, path.substring(0, path.length - extname(path).length) + '.locals.js');\n\n        if (!existsSync(path)) {\n            // fallback to default partial\n            return partial(name, locals, options);\n        }\n\n        _locals = require(path)(this, _locals);\n        if (_locals === null) {\n            // partial should be empty\n            return '';\n        }\n\n        if (_locals === false) {\n            // do not cache this fragment\n            return partial(name, locals, options);\n        }\n\n        const language = page.lang || page.language;\n        const fragment = relative(view_dir, path.substring(0, path.length - '.locals.js'.length));\n        const cacheId = [fragment, language, md5(JSON.stringify(_locals))].join('-');\n\n        if (!__fragmentCache.has(cacheId)) {\n            __fragmentCache.set(cacheId, partial(name, _locals, { cache: false, only: options.only || false }));\n        }\n        return __fragmentCache.get(cacheId);\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1577095398479
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/utils\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/utils/lru.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/utils",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/utils/lru.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/utils/lru.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/utils/lru.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/utils",
        "sourceFileName": "lru.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\r\n * A doubly linked list-based Least Recently Used (LRU) cache. Will keep most\r\n * recently used items while discarding least recently used items when its limit\r\n * is reached.\r\n *\r\n * Licensed under MIT. Copyright (c) 2010 Rasmus Andersson <http://hunch.se/>\r\n * See README.md for details.\r\n *\r\n * Illustration of the design:\r\n *\r\n *       entry             entry             entry             entry\r\n *       ______            ______            ______            ______\r\n *      | head |.newer => |      |.newer => |      |.newer => | tail |\r\n *      |  A   |          |  B   |          |  C   |          |  D   |\r\n *      |______| <= older.|______| <= older.|______| <= older.|______|\r\n *\r\n *  removed  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  added\r\n */\n(function (g, f) {\n  var e = (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) == 'object' ? exports : _typeof(g) == 'object' ? g : {};\n  f(e);\n\n  if (typeof define == 'function' && define.amd) {\n    define('lru', e);\n  }\n})(void 0, function (exports) {\n  var NEWER = Symbol('newer');\n  var OLDER = Symbol('older');\n\n  function LRUMap(limit, entries) {\n    if (typeof limit !== 'number') {\n      // called as (entries)\n      entries = limit;\n      limit = 0;\n    }\n\n    this.size = 0;\n    this.limit = limit;\n    this.oldest = this.newest = undefined;\n    this._keymap = new Map();\n\n    if (entries) {\n      this.assign(entries);\n\n      if (limit < 1) {\n        this.limit = this.size;\n      }\n    }\n  }\n\n  exports.LRUMap = LRUMap;\n\n  function Entry(key, value) {\n    this.key = key;\n    this.value = value;\n    this[NEWER] = undefined;\n    this[OLDER] = undefined;\n  }\n\n  LRUMap.prototype._markEntryAsUsed = function (entry) {\n    if (entry === this.newest) {\n      // Already the most recenlty used entry, so no need to update the list\n      return;\n    } // HEAD--------------TAIL\n    //   <.older   .newer>\n    //  <--- add direction --\n    //   A  B  C  <D>  E\n\n\n    if (entry[NEWER]) {\n      if (entry === this.oldest) {\n        this.oldest = entry[NEWER];\n      }\n\n      entry[NEWER][OLDER] = entry[OLDER]; // C <-- E.\n    }\n\n    if (entry[OLDER]) {\n      entry[OLDER][NEWER] = entry[NEWER]; // C. --> E\n    }\n\n    entry[NEWER] = undefined; // D --x\n\n    entry[OLDER] = this.newest; // D. --> E\n\n    if (this.newest) {\n      this.newest[NEWER] = entry; // E. <-- D\n    }\n\n    this.newest = entry;\n  };\n\n  LRUMap.prototype.assign = function (entries) {\n    var entry,\n        limit = this.limit || Number.MAX_VALUE;\n\n    this._keymap.clear();\n\n    var it = entries[Symbol.iterator]();\n\n    for (var itv = it.next(); !itv.done; itv = it.next()) {\n      var e = new Entry(itv.value[0], itv.value[1]);\n\n      this._keymap.set(e.key, e);\n\n      if (!entry) {\n        this.oldest = e;\n      } else {\n        entry[NEWER] = e;\n        e[OLDER] = entry;\n      }\n\n      entry = e;\n\n      if (limit-- == 0) {\n        throw new Error('overflow');\n      }\n    }\n\n    this.newest = entry;\n    this.size = this._keymap.size;\n  };\n\n  LRUMap.prototype.get = function (key) {\n    // First, find our cache entry\n    var entry = this._keymap.get(key);\n\n    if (!entry) return; // Not cached. Sorry.\n    // As <key> was found in the cache, register it as being requested recently\n\n    this._markEntryAsUsed(entry);\n\n    return entry.value;\n  };\n\n  LRUMap.prototype.set = function (key, value) {\n    var entry = this._keymap.get(key);\n\n    if (entry) {\n      // update existing\n      entry.value = value;\n\n      this._markEntryAsUsed(entry);\n\n      return this;\n    } // new entry\n\n\n    this._keymap.set(key, entry = new Entry(key, value));\n\n    if (this.newest) {\n      // link previous tail to the new tail (entry)\n      this.newest[NEWER] = entry;\n      entry[OLDER] = this.newest;\n    } else {\n      // we're first in -- yay\n      this.oldest = entry;\n    } // add new entry to the end of the linked list -- it's now the freshest entry.\n\n\n    this.newest = entry;\n    ++this.size;\n\n    if (this.size > this.limit) {\n      // we hit the limit -- remove the head\n      this.shift();\n    }\n\n    return this;\n  };\n\n  LRUMap.prototype.shift = function () {\n    // todo: handle special case when limit == 1\n    var entry = this.oldest;\n\n    if (entry) {\n      if (this.oldest[NEWER]) {\n        // advance the list\n        this.oldest = this.oldest[NEWER];\n        this.oldest[OLDER] = undefined;\n      } else {\n        // the cache is exhausted\n        this.oldest = undefined;\n        this.newest = undefined;\n      } // Remove last strong reference to <entry> and remove links from the purged\n      // entry being returned:\n\n\n      entry[NEWER] = entry[OLDER] = undefined;\n\n      this._keymap[\"delete\"](entry.key);\n\n      --this.size;\n      return [entry.key, entry.value];\n    }\n  }; // ----------------------------------------------------------------------------\n  // Following code is optional and can be removed without breaking the core\n  // functionality.\n\n\n  LRUMap.prototype.find = function (key) {\n    var e = this._keymap.get(key);\n\n    return e ? e.value : undefined;\n  };\n\n  LRUMap.prototype.has = function (key) {\n    return this._keymap.has(key);\n  };\n\n  LRUMap.prototype['delete'] = function (key) {\n    var entry = this._keymap.get(key);\n\n    if (!entry) return;\n\n    this._keymap[\"delete\"](entry.key);\n\n    if (entry[NEWER] && entry[OLDER]) {\n      // relink the older entry with the newer entry\n      entry[OLDER][NEWER] = entry[NEWER];\n      entry[NEWER][OLDER] = entry[OLDER];\n    } else if (entry[NEWER]) {\n      // remove the link to us\n      entry[NEWER][OLDER] = undefined; // link the newer entry to head\n\n      this.oldest = entry[NEWER];\n    } else if (entry[OLDER]) {\n      // remove the link to us\n      entry[OLDER][NEWER] = undefined; // link the newer entry to head\n\n      this.newest = entry[OLDER];\n    } else {\n      // if(entry[OLDER] === undefined && entry.newer === undefined) {\n      this.oldest = this.newest = undefined;\n    }\n\n    this.size--;\n    return entry.value;\n  };\n\n  LRUMap.prototype.clear = function () {\n    // Not clearing links should be safe, as we don't expose live links to user\n    this.oldest = this.newest = undefined;\n    this.size = 0;\n\n    this._keymap.clear();\n  };\n\n  function EntryIterator(oldestEntry) {\n    this.entry = oldestEntry;\n  }\n\n  EntryIterator.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n  EntryIterator.prototype.next = function () {\n    var ent = this.entry;\n\n    if (ent) {\n      this.entry = ent[NEWER];\n      return {\n        done: false,\n        value: [ent.key, ent.value]\n      };\n    } else {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n  };\n\n  function KeyIterator(oldestEntry) {\n    this.entry = oldestEntry;\n  }\n\n  KeyIterator.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n  KeyIterator.prototype.next = function () {\n    var ent = this.entry;\n\n    if (ent) {\n      this.entry = ent[NEWER];\n      return {\n        done: false,\n        value: ent.key\n      };\n    } else {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n  };\n\n  function ValueIterator(oldestEntry) {\n    this.entry = oldestEntry;\n  }\n\n  ValueIterator.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n  ValueIterator.prototype.next = function () {\n    var ent = this.entry;\n\n    if (ent) {\n      this.entry = ent[NEWER];\n      return {\n        done: false,\n        value: ent.value\n      };\n    } else {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n  };\n\n  LRUMap.prototype.keys = function () {\n    return new KeyIterator(this.oldest);\n  };\n\n  LRUMap.prototype.values = function () {\n    return new ValueIterator(this.oldest);\n  };\n\n  LRUMap.prototype.entries = function () {\n    return this;\n  };\n\n  LRUMap.prototype[Symbol.iterator] = function () {\n    return new EntryIterator(this.oldest);\n  };\n\n  LRUMap.prototype.forEach = function (fun, thisObj) {\n    if (_typeof(thisObj) !== 'object') {\n      thisObj = this;\n    }\n\n    var entry = this.oldest;\n\n    while (entry) {\n      fun.call(thisObj, entry.value, entry.key, this);\n      entry = entry[NEWER];\n    }\n  };\n  /** Returns a JSON (array) representation */\n\n\n  LRUMap.prototype.toJSON = function () {\n    var s = new Array(this.size),\n        i = 0,\n        entry = this.oldest;\n\n    while (entry) {\n      s[i++] = {\n        key: entry.key,\n        value: entry.value\n      };\n      entry = entry[NEWER];\n    }\n\n    return s;\n  };\n  /** Returns a String representation */\n\n\n  LRUMap.prototype.toString = function () {\n    var s = '',\n        entry = this.oldest;\n\n    while (entry) {\n      s += String(entry.key) + ':' + entry.value;\n      entry = entry[NEWER];\n\n      if (entry) {\n        s += ' < ';\n      }\n    }\n\n    return s;\n  };\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "lru.js"
      ],
      "names": [
        "g",
        "f",
        "e",
        "exports",
        "define",
        "amd",
        "NEWER",
        "Symbol",
        "OLDER",
        "LRUMap",
        "limit",
        "entries",
        "size",
        "oldest",
        "newest",
        "undefined",
        "_keymap",
        "Map",
        "assign",
        "Entry",
        "key",
        "value",
        "prototype",
        "_markEntryAsUsed",
        "entry",
        "Number",
        "MAX_VALUE",
        "clear",
        "it",
        "iterator",
        "itv",
        "next",
        "done",
        "set",
        "Error",
        "get",
        "shift",
        "find",
        "has",
        "EntryIterator",
        "oldestEntry",
        "ent",
        "KeyIterator",
        "ValueIterator",
        "keys",
        "values",
        "forEach",
        "fun",
        "thisObj",
        "call",
        "toJSON",
        "s",
        "Array",
        "i",
        "toString",
        "String"
      ],
      "mappings": ";;;;AAAA;;;;;;;;;;;;;;;;;;AAkBA,CAAC,UAAUA,CAAV,EAAaC,CAAb,EAAgB;AACb,MAAMC,CAAC,GAAG,QAAOC,OAAP,yCAAOA,OAAP,MAAkB,QAAlB,GAA6BA,OAA7B,GAAuC,QAAOH,CAAP,KAAY,QAAZ,GAAuBA,CAAvB,GAA2B,EAA5E;AACAC,EAAAA,CAAC,CAACC,CAAD,CAAD;;AACA,MAAI,OAAOE,MAAP,IAAiB,UAAjB,IAA+BA,MAAM,CAACC,GAA1C,EAA+C;AAAED,IAAAA,MAAM,CAAC,KAAD,EAAQF,CAAR,CAAN;AAAmB;AACvE,CAJD,UAIS,UAAUC,OAAV,EAAmB;AAExB,MAAMG,KAAK,GAAGC,MAAM,CAAC,OAAD,CAApB;AACA,MAAMC,KAAK,GAAGD,MAAM,CAAC,OAAD,CAApB;;AAEA,WAASE,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAC5B,QAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC3B;AACAC,MAAAA,OAAO,GAAGD,KAAV;AACAA,MAAAA,KAAK,GAAG,CAAR;AACH;;AAED,SAAKE,IAAL,GAAY,CAAZ;AACA,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAKG,MAAL,GAAc,KAAKC,MAAL,GAAcC,SAA5B;AACA,SAAKC,OAAL,GAAe,IAAIC,GAAJ,EAAf;;AAEA,QAAIN,OAAJ,EAAa;AACT,WAAKO,MAAL,CAAYP,OAAZ;;AACA,UAAID,KAAK,GAAG,CAAZ,EAAe;AACX,aAAKA,KAAL,GAAa,KAAKE,IAAlB;AACH;AACJ;AACJ;;AAEDT,EAAAA,OAAO,CAACM,MAAR,GAAiBA,MAAjB;;AAEA,WAASU,KAAT,CAAeC,GAAf,EAAoBC,KAApB,EAA2B;AACvB,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKf,KAAL,IAAcS,SAAd;AACA,SAAKP,KAAL,IAAcO,SAAd;AACH;;AAGDN,EAAAA,MAAM,CAACa,SAAP,CAAiBC,gBAAjB,GAAoC,UAAUC,KAAV,EAAiB;AACjD,QAAIA,KAAK,KAAK,KAAKV,MAAnB,EAA2B;AACvB;AACA;AACH,KAJgD,CAKjD;AACA;AACA;AACA;;;AACA,QAAIU,KAAK,CAAClB,KAAD,CAAT,EAAkB;AACd,UAAIkB,KAAK,KAAK,KAAKX,MAAnB,EAA2B;AACvB,aAAKA,MAAL,GAAcW,KAAK,CAAClB,KAAD,CAAnB;AACH;;AACDkB,MAAAA,KAAK,CAAClB,KAAD,CAAL,CAAaE,KAAb,IAAsBgB,KAAK,CAAChB,KAAD,CAA3B,CAJc,CAIsB;AACvC;;AACD,QAAIgB,KAAK,CAAChB,KAAD,CAAT,EAAkB;AACdgB,MAAAA,KAAK,CAAChB,KAAD,CAAL,CAAaF,KAAb,IAAsBkB,KAAK,CAAClB,KAAD,CAA3B,CADc,CACsB;AACvC;;AACDkB,IAAAA,KAAK,CAAClB,KAAD,CAAL,GAAeS,SAAf,CAlBiD,CAkBvB;;AAC1BS,IAAAA,KAAK,CAAChB,KAAD,CAAL,GAAe,KAAKM,MAApB,CAnBiD,CAmBrB;;AAC5B,QAAI,KAAKA,MAAT,EAAiB;AACb,WAAKA,MAAL,CAAYR,KAAZ,IAAqBkB,KAArB,CADa,CACe;AAC/B;;AACD,SAAKV,MAAL,GAAcU,KAAd;AACH,GAxBD;;AA0BAf,EAAAA,MAAM,CAACa,SAAP,CAAiBJ,MAAjB,GAA0B,UAAUP,OAAV,EAAmB;AACzC,QAAIa,KAAJ;AAAA,QAAWd,KAAK,GAAG,KAAKA,KAAL,IAAce,MAAM,CAACC,SAAxC;;AACA,SAAKV,OAAL,CAAaW,KAAb;;AACA,QAAIC,EAAE,GAAGjB,OAAO,CAACJ,MAAM,CAACsB,QAAR,CAAP,EAAT;;AACA,SAAK,IAAIC,GAAG,GAAGF,EAAE,CAACG,IAAH,EAAf,EAA0B,CAACD,GAAG,CAACE,IAA/B,EAAqCF,GAAG,GAAGF,EAAE,CAACG,IAAH,EAA3C,EAAsD;AAClD,UAAI7B,CAAC,GAAG,IAAIiB,KAAJ,CAAUW,GAAG,CAACT,KAAJ,CAAU,CAAV,CAAV,EAAwBS,GAAG,CAACT,KAAJ,CAAU,CAAV,CAAxB,CAAR;;AACA,WAAKL,OAAL,CAAaiB,GAAb,CAAiB/B,CAAC,CAACkB,GAAnB,EAAwBlB,CAAxB;;AACA,UAAI,CAACsB,KAAL,EAAY;AACR,aAAKX,MAAL,GAAcX,CAAd;AACH,OAFD,MAEO;AACHsB,QAAAA,KAAK,CAAClB,KAAD,CAAL,GAAeJ,CAAf;AACAA,QAAAA,CAAC,CAACM,KAAD,CAAD,GAAWgB,KAAX;AACH;;AACDA,MAAAA,KAAK,GAAGtB,CAAR;;AACA,UAAIQ,KAAK,MAAM,CAAf,EAAkB;AACd,cAAM,IAAIwB,KAAJ,CAAU,UAAV,CAAN;AACH;AACJ;;AACD,SAAKpB,MAAL,GAAcU,KAAd;AACA,SAAKZ,IAAL,GAAY,KAAKI,OAAL,CAAaJ,IAAzB;AACH,GApBD;;AAsBAH,EAAAA,MAAM,CAACa,SAAP,CAAiBa,GAAjB,GAAuB,UAAUf,GAAV,EAAe;AAClC;AACA,QAAII,KAAK,GAAG,KAAKR,OAAL,CAAamB,GAAb,CAAiBf,GAAjB,CAAZ;;AACA,QAAI,CAACI,KAAL,EAAY,OAHsB,CAGd;AACpB;;AACA,SAAKD,gBAAL,CAAsBC,KAAtB;;AACA,WAAOA,KAAK,CAACH,KAAb;AACH,GAPD;;AASAZ,EAAAA,MAAM,CAACa,SAAP,CAAiBW,GAAjB,GAAuB,UAAUb,GAAV,EAAeC,KAAf,EAAsB;AACzC,QAAIG,KAAK,GAAG,KAAKR,OAAL,CAAamB,GAAb,CAAiBf,GAAjB,CAAZ;;AAEA,QAAII,KAAJ,EAAW;AACP;AACAA,MAAAA,KAAK,CAACH,KAAN,GAAcA,KAAd;;AACA,WAAKE,gBAAL,CAAsBC,KAAtB;;AACA,aAAO,IAAP;AACH,KARwC,CAUzC;;;AACA,SAAKR,OAAL,CAAaiB,GAAb,CAAiBb,GAAjB,EAAuBI,KAAK,GAAG,IAAIL,KAAJ,CAAUC,GAAV,EAAeC,KAAf,CAA/B;;AAEA,QAAI,KAAKP,MAAT,EAAiB;AACb;AACA,WAAKA,MAAL,CAAYR,KAAZ,IAAqBkB,KAArB;AACAA,MAAAA,KAAK,CAAChB,KAAD,CAAL,GAAe,KAAKM,MAApB;AACH,KAJD,MAIO;AACH;AACA,WAAKD,MAAL,GAAcW,KAAd;AACH,KApBwC,CAsBzC;;;AACA,SAAKV,MAAL,GAAcU,KAAd;AACA,MAAE,KAAKZ,IAAP;;AACA,QAAI,KAAKA,IAAL,GAAY,KAAKF,KAArB,EAA4B;AACxB;AACA,WAAK0B,KAAL;AACH;;AAED,WAAO,IAAP;AACH,GA/BD;;AAiCA3B,EAAAA,MAAM,CAACa,SAAP,CAAiBc,KAAjB,GAAyB,YAAY;AACjC;AACA,QAAIZ,KAAK,GAAG,KAAKX,MAAjB;;AACA,QAAIW,KAAJ,EAAW;AACP,UAAI,KAAKX,MAAL,CAAYP,KAAZ,CAAJ,EAAwB;AACpB;AACA,aAAKO,MAAL,GAAc,KAAKA,MAAL,CAAYP,KAAZ,CAAd;AACA,aAAKO,MAAL,CAAYL,KAAZ,IAAqBO,SAArB;AACH,OAJD,MAIO;AACH;AACA,aAAKF,MAAL,GAAcE,SAAd;AACA,aAAKD,MAAL,GAAcC,SAAd;AACH,OATM,CAUP;AACA;;;AACAS,MAAAA,KAAK,CAAClB,KAAD,CAAL,GAAekB,KAAK,CAAChB,KAAD,CAAL,GAAeO,SAA9B;;AACA,WAAKC,OAAL,WAAoBQ,KAAK,CAACJ,GAA1B;;AACA,QAAE,KAAKR,IAAP;AACA,aAAO,CAACY,KAAK,CAACJ,GAAP,EAAYI,KAAK,CAACH,KAAlB,CAAP;AACH;AACJ,GApBD,CA7HwB,CAmJxB;AACA;AACA;;;AAEAZ,EAAAA,MAAM,CAACa,SAAP,CAAiBe,IAAjB,GAAwB,UAAUjB,GAAV,EAAe;AACnC,QAAIlB,CAAC,GAAG,KAAKc,OAAL,CAAamB,GAAb,CAAiBf,GAAjB,CAAR;;AACA,WAAOlB,CAAC,GAAGA,CAAC,CAACmB,KAAL,GAAaN,SAArB;AACH,GAHD;;AAKAN,EAAAA,MAAM,CAACa,SAAP,CAAiBgB,GAAjB,GAAuB,UAAUlB,GAAV,EAAe;AAClC,WAAO,KAAKJ,OAAL,CAAasB,GAAb,CAAiBlB,GAAjB,CAAP;AACH,GAFD;;AAIAX,EAAAA,MAAM,CAACa,SAAP,CAAiB,QAAjB,IAA6B,UAAUF,GAAV,EAAe;AACxC,QAAII,KAAK,GAAG,KAAKR,OAAL,CAAamB,GAAb,CAAiBf,GAAjB,CAAZ;;AACA,QAAI,CAACI,KAAL,EAAY;;AACZ,SAAKR,OAAL,WAAoBQ,KAAK,CAACJ,GAA1B;;AACA,QAAII,KAAK,CAAClB,KAAD,CAAL,IAAgBkB,KAAK,CAAChB,KAAD,CAAzB,EAAkC;AAC9B;AACAgB,MAAAA,KAAK,CAAChB,KAAD,CAAL,CAAaF,KAAb,IAAsBkB,KAAK,CAAClB,KAAD,CAA3B;AACAkB,MAAAA,KAAK,CAAClB,KAAD,CAAL,CAAaE,KAAb,IAAsBgB,KAAK,CAAChB,KAAD,CAA3B;AACH,KAJD,MAIO,IAAIgB,KAAK,CAAClB,KAAD,CAAT,EAAkB;AACrB;AACAkB,MAAAA,KAAK,CAAClB,KAAD,CAAL,CAAaE,KAAb,IAAsBO,SAAtB,CAFqB,CAGrB;;AACA,WAAKF,MAAL,GAAcW,KAAK,CAAClB,KAAD,CAAnB;AACH,KALM,MAKA,IAAIkB,KAAK,CAAChB,KAAD,CAAT,EAAkB;AACrB;AACAgB,MAAAA,KAAK,CAAChB,KAAD,CAAL,CAAaF,KAAb,IAAsBS,SAAtB,CAFqB,CAGrB;;AACA,WAAKD,MAAL,GAAcU,KAAK,CAAChB,KAAD,CAAnB;AACH,KALM,MAKA;AAAC;AACJ,WAAKK,MAAL,GAAc,KAAKC,MAAL,GAAcC,SAA5B;AACH;;AAED,SAAKH,IAAL;AACA,WAAOY,KAAK,CAACH,KAAb;AACH,GAxBD;;AA0BAZ,EAAAA,MAAM,CAACa,SAAP,CAAiBK,KAAjB,GAAyB,YAAY;AACjC;AACA,SAAKd,MAAL,GAAc,KAAKC,MAAL,GAAcC,SAA5B;AACA,SAAKH,IAAL,GAAY,CAAZ;;AACA,SAAKI,OAAL,CAAaW,KAAb;AACH,GALD;;AAQA,WAASY,aAAT,CAAuBC,WAAvB,EAAoC;AAAE,SAAKhB,KAAL,GAAagB,WAAb;AAA2B;;AACjED,EAAAA,aAAa,CAACjB,SAAd,CAAwBf,MAAM,CAACsB,QAA/B,IAA2C,YAAY;AAAE,WAAO,IAAP;AAAc,GAAvE;;AACAU,EAAAA,aAAa,CAACjB,SAAd,CAAwBS,IAAxB,GAA+B,YAAY;AACvC,QAAIU,GAAG,GAAG,KAAKjB,KAAf;;AACA,QAAIiB,GAAJ,EAAS;AACL,WAAKjB,KAAL,GAAaiB,GAAG,CAACnC,KAAD,CAAhB;AACA,aAAO;AAAE0B,QAAAA,IAAI,EAAE,KAAR;AAAeX,QAAAA,KAAK,EAAE,CAACoB,GAAG,CAACrB,GAAL,EAAUqB,GAAG,CAACpB,KAAd;AAAtB,OAAP;AACH,KAHD,MAGO;AACH,aAAO;AAAEW,QAAAA,IAAI,EAAE,IAAR;AAAcX,QAAAA,KAAK,EAAEN;AAArB,OAAP;AACH;AACJ,GARD;;AAWA,WAAS2B,WAAT,CAAqBF,WAArB,EAAkC;AAAE,SAAKhB,KAAL,GAAagB,WAAb;AAA2B;;AAC/DE,EAAAA,WAAW,CAACpB,SAAZ,CAAsBf,MAAM,CAACsB,QAA7B,IAAyC,YAAY;AAAE,WAAO,IAAP;AAAc,GAArE;;AACAa,EAAAA,WAAW,CAACpB,SAAZ,CAAsBS,IAAtB,GAA6B,YAAY;AACrC,QAAIU,GAAG,GAAG,KAAKjB,KAAf;;AACA,QAAIiB,GAAJ,EAAS;AACL,WAAKjB,KAAL,GAAaiB,GAAG,CAACnC,KAAD,CAAhB;AACA,aAAO;AAAE0B,QAAAA,IAAI,EAAE,KAAR;AAAeX,QAAAA,KAAK,EAAEoB,GAAG,CAACrB;AAA1B,OAAP;AACH,KAHD,MAGO;AACH,aAAO;AAAEY,QAAAA,IAAI,EAAE,IAAR;AAAcX,QAAAA,KAAK,EAAEN;AAArB,OAAP;AACH;AACJ,GARD;;AAUA,WAAS4B,aAAT,CAAuBH,WAAvB,EAAoC;AAAE,SAAKhB,KAAL,GAAagB,WAAb;AAA2B;;AACjEG,EAAAA,aAAa,CAACrB,SAAd,CAAwBf,MAAM,CAACsB,QAA/B,IAA2C,YAAY;AAAE,WAAO,IAAP;AAAc,GAAvE;;AACAc,EAAAA,aAAa,CAACrB,SAAd,CAAwBS,IAAxB,GAA+B,YAAY;AACvC,QAAIU,GAAG,GAAG,KAAKjB,KAAf;;AACA,QAAIiB,GAAJ,EAAS;AACL,WAAKjB,KAAL,GAAaiB,GAAG,CAACnC,KAAD,CAAhB;AACA,aAAO;AAAE0B,QAAAA,IAAI,EAAE,KAAR;AAAeX,QAAAA,KAAK,EAAEoB,GAAG,CAACpB;AAA1B,OAAP;AACH,KAHD,MAGO;AACH,aAAO;AAAEW,QAAAA,IAAI,EAAE,IAAR;AAAcX,QAAAA,KAAK,EAAEN;AAArB,OAAP;AACH;AACJ,GARD;;AAWAN,EAAAA,MAAM,CAACa,SAAP,CAAiBsB,IAAjB,GAAwB,YAAY;AAChC,WAAO,IAAIF,WAAJ,CAAgB,KAAK7B,MAArB,CAAP;AACH,GAFD;;AAIAJ,EAAAA,MAAM,CAACa,SAAP,CAAiBuB,MAAjB,GAA0B,YAAY;AAClC,WAAO,IAAIF,aAAJ,CAAkB,KAAK9B,MAAvB,CAAP;AACH,GAFD;;AAIAJ,EAAAA,MAAM,CAACa,SAAP,CAAiBX,OAAjB,GAA2B,YAAY;AACnC,WAAO,IAAP;AACH,GAFD;;AAIAF,EAAAA,MAAM,CAACa,SAAP,CAAiBf,MAAM,CAACsB,QAAxB,IAAoC,YAAY;AAC5C,WAAO,IAAIU,aAAJ,CAAkB,KAAK1B,MAAvB,CAAP;AACH,GAFD;;AAIAJ,EAAAA,MAAM,CAACa,SAAP,CAAiBwB,OAAjB,GAA2B,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AAC/C,QAAI,QAAOA,OAAP,MAAmB,QAAvB,EAAiC;AAC7BA,MAAAA,OAAO,GAAG,IAAV;AACH;;AACD,QAAIxB,KAAK,GAAG,KAAKX,MAAjB;;AACA,WAAOW,KAAP,EAAc;AACVuB,MAAAA,GAAG,CAACE,IAAJ,CAASD,OAAT,EAAkBxB,KAAK,CAACH,KAAxB,EAA+BG,KAAK,CAACJ,GAArC,EAA0C,IAA1C;AACAI,MAAAA,KAAK,GAAGA,KAAK,CAAClB,KAAD,CAAb;AACH;AACJ,GATD;AAWA;;;AACAG,EAAAA,MAAM,CAACa,SAAP,CAAiB4B,MAAjB,GAA0B,YAAY;AAClC,QAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,KAAKxC,IAAf,CAAR;AAAA,QAA8ByC,CAAC,GAAG,CAAlC;AAAA,QAAqC7B,KAAK,GAAG,KAAKX,MAAlD;;AACA,WAAOW,KAAP,EAAc;AACV2B,MAAAA,CAAC,CAACE,CAAC,EAAF,CAAD,GAAS;AAAEjC,QAAAA,GAAG,EAAEI,KAAK,CAACJ,GAAb;AAAkBC,QAAAA,KAAK,EAAEG,KAAK,CAACH;AAA/B,OAAT;AACAG,MAAAA,KAAK,GAAGA,KAAK,CAAClB,KAAD,CAAb;AACH;;AACD,WAAO6C,CAAP;AACH,GAPD;AASA;;;AACA1C,EAAAA,MAAM,CAACa,SAAP,CAAiBgC,QAAjB,GAA4B,YAAY;AACpC,QAAIH,CAAC,GAAG,EAAR;AAAA,QAAY3B,KAAK,GAAG,KAAKX,MAAzB;;AACA,WAAOW,KAAP,EAAc;AACV2B,MAAAA,CAAC,IAAII,MAAM,CAAC/B,KAAK,CAACJ,GAAP,CAAN,GAAoB,GAApB,GAA0BI,KAAK,CAACH,KAArC;AACAG,MAAAA,KAAK,GAAGA,KAAK,CAAClB,KAAD,CAAb;;AACA,UAAIkB,KAAJ,EAAW;AACP2B,QAAAA,CAAC,IAAI,KAAL;AACH;AACJ;;AACD,WAAOA,CAAP;AACH,GAVD;AAYH,CA9RD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/utils",
      "sourcesContent": [
        "/**\r\n * A doubly linked list-based Least Recently Used (LRU) cache. Will keep most\r\n * recently used items while discarding least recently used items when its limit\r\n * is reached.\r\n *\r\n * Licensed under MIT. Copyright (c) 2010 Rasmus Andersson <http://hunch.se/>\r\n * See README.md for details.\r\n *\r\n * Illustration of the design:\r\n *\r\n *       entry             entry             entry             entry\r\n *       ______            ______            ______            ______\r\n *      | head |.newer => |      |.newer => |      |.newer => | tail |\r\n *      |  A   |          |  B   |          |  C   |          |  D   |\r\n *      |______| <= older.|______| <= older.|______| <= older.|______|\r\n *\r\n *  removed  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  added\r\n */\r\n(function (g, f) {\r\n    const e = typeof exports == 'object' ? exports : typeof g == 'object' ? g : {};\r\n    f(e);\r\n    if (typeof define == 'function' && define.amd) { define('lru', e); }\r\n})(this, function (exports) {\r\n\r\n    const NEWER = Symbol('newer');\r\n    const OLDER = Symbol('older');\r\n\r\n    function LRUMap(limit, entries) {\r\n        if (typeof limit !== 'number') {\r\n            // called as (entries)\r\n            entries = limit;\r\n            limit = 0;\r\n        }\r\n\r\n        this.size = 0;\r\n        this.limit = limit;\r\n        this.oldest = this.newest = undefined;\r\n        this._keymap = new Map();\r\n\r\n        if (entries) {\r\n            this.assign(entries);\r\n            if (limit < 1) {\r\n                this.limit = this.size;\r\n            }\r\n        }\r\n    }\r\n\r\n    exports.LRUMap = LRUMap;\r\n\r\n    function Entry(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this[NEWER] = undefined;\r\n        this[OLDER] = undefined;\r\n    }\r\n\r\n\r\n    LRUMap.prototype._markEntryAsUsed = function (entry) {\r\n        if (entry === this.newest) {\r\n            // Already the most recenlty used entry, so no need to update the list\r\n            return;\r\n        }\r\n        // HEAD--------------TAIL\r\n        //   <.older   .newer>\r\n        //  <--- add direction --\r\n        //   A  B  C  <D>  E\r\n        if (entry[NEWER]) {\r\n            if (entry === this.oldest) {\r\n                this.oldest = entry[NEWER];\r\n            }\r\n            entry[NEWER][OLDER] = entry[OLDER]; // C <-- E.\r\n        }\r\n        if (entry[OLDER]) {\r\n            entry[OLDER][NEWER] = entry[NEWER]; // C. --> E\r\n        }\r\n        entry[NEWER] = undefined; // D --x\r\n        entry[OLDER] = this.newest; // D. --> E\r\n        if (this.newest) {\r\n            this.newest[NEWER] = entry; // E. <-- D\r\n        }\r\n        this.newest = entry;\r\n    };\r\n\r\n    LRUMap.prototype.assign = function (entries) {\r\n        let entry, limit = this.limit || Number.MAX_VALUE;\r\n        this._keymap.clear();\r\n        let it = entries[Symbol.iterator]();\r\n        for (let itv = it.next(); !itv.done; itv = it.next()) {\r\n            let e = new Entry(itv.value[0], itv.value[1]);\r\n            this._keymap.set(e.key, e);\r\n            if (!entry) {\r\n                this.oldest = e;\r\n            } else {\r\n                entry[NEWER] = e;\r\n                e[OLDER] = entry;\r\n            }\r\n            entry = e;\r\n            if (limit-- == 0) {\r\n                throw new Error('overflow');\r\n            }\r\n        }\r\n        this.newest = entry;\r\n        this.size = this._keymap.size;\r\n    };\r\n\r\n    LRUMap.prototype.get = function (key) {\r\n        // First, find our cache entry\r\n        var entry = this._keymap.get(key);\r\n        if (!entry) return; // Not cached. Sorry.\r\n        // As <key> was found in the cache, register it as being requested recently\r\n        this._markEntryAsUsed(entry);\r\n        return entry.value;\r\n    };\r\n\r\n    LRUMap.prototype.set = function (key, value) {\r\n        var entry = this._keymap.get(key);\r\n\r\n        if (entry) {\r\n            // update existing\r\n            entry.value = value;\r\n            this._markEntryAsUsed(entry);\r\n            return this;\r\n        }\r\n\r\n        // new entry\r\n        this._keymap.set(key, (entry = new Entry(key, value)));\r\n\r\n        if (this.newest) {\r\n            // link previous tail to the new tail (entry)\r\n            this.newest[NEWER] = entry;\r\n            entry[OLDER] = this.newest;\r\n        } else {\r\n            // we're first in -- yay\r\n            this.oldest = entry;\r\n        }\r\n\r\n        // add new entry to the end of the linked list -- it's now the freshest entry.\r\n        this.newest = entry;\r\n        ++this.size;\r\n        if (this.size > this.limit) {\r\n            // we hit the limit -- remove the head\r\n            this.shift();\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    LRUMap.prototype.shift = function () {\r\n        // todo: handle special case when limit == 1\r\n        var entry = this.oldest;\r\n        if (entry) {\r\n            if (this.oldest[NEWER]) {\r\n                // advance the list\r\n                this.oldest = this.oldest[NEWER];\r\n                this.oldest[OLDER] = undefined;\r\n            } else {\r\n                // the cache is exhausted\r\n                this.oldest = undefined;\r\n                this.newest = undefined;\r\n            }\r\n            // Remove last strong reference to <entry> and remove links from the purged\r\n            // entry being returned:\r\n            entry[NEWER] = entry[OLDER] = undefined;\r\n            this._keymap.delete(entry.key);\r\n            --this.size;\r\n            return [entry.key, entry.value];\r\n        }\r\n    };\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // Following code is optional and can be removed without breaking the core\r\n    // functionality.\r\n\r\n    LRUMap.prototype.find = function (key) {\r\n        let e = this._keymap.get(key);\r\n        return e ? e.value : undefined;\r\n    };\r\n\r\n    LRUMap.prototype.has = function (key) {\r\n        return this._keymap.has(key);\r\n    };\r\n\r\n    LRUMap.prototype['delete'] = function (key) {\r\n        var entry = this._keymap.get(key);\r\n        if (!entry) return;\r\n        this._keymap.delete(entry.key);\r\n        if (entry[NEWER] && entry[OLDER]) {\r\n            // relink the older entry with the newer entry\r\n            entry[OLDER][NEWER] = entry[NEWER];\r\n            entry[NEWER][OLDER] = entry[OLDER];\r\n        } else if (entry[NEWER]) {\r\n            // remove the link to us\r\n            entry[NEWER][OLDER] = undefined;\r\n            // link the newer entry to head\r\n            this.oldest = entry[NEWER];\r\n        } else if (entry[OLDER]) {\r\n            // remove the link to us\r\n            entry[OLDER][NEWER] = undefined;\r\n            // link the newer entry to head\r\n            this.newest = entry[OLDER];\r\n        } else {// if(entry[OLDER] === undefined && entry.newer === undefined) {\r\n            this.oldest = this.newest = undefined;\r\n        }\r\n\r\n        this.size--;\r\n        return entry.value;\r\n    };\r\n\r\n    LRUMap.prototype.clear = function () {\r\n        // Not clearing links should be safe, as we don't expose live links to user\r\n        this.oldest = this.newest = undefined;\r\n        this.size = 0;\r\n        this._keymap.clear();\r\n    };\r\n\r\n\r\n    function EntryIterator(oldestEntry) { this.entry = oldestEntry; }\r\n    EntryIterator.prototype[Symbol.iterator] = function () { return this; }\r\n    EntryIterator.prototype.next = function () {\r\n        let ent = this.entry;\r\n        if (ent) {\r\n            this.entry = ent[NEWER];\r\n            return { done: false, value: [ent.key, ent.value] };\r\n        } else {\r\n            return { done: true, value: undefined };\r\n        }\r\n    };\r\n\r\n\r\n    function KeyIterator(oldestEntry) { this.entry = oldestEntry; }\r\n    KeyIterator.prototype[Symbol.iterator] = function () { return this; }\r\n    KeyIterator.prototype.next = function () {\r\n        let ent = this.entry;\r\n        if (ent) {\r\n            this.entry = ent[NEWER];\r\n            return { done: false, value: ent.key };\r\n        } else {\r\n            return { done: true, value: undefined };\r\n        }\r\n    };\r\n\r\n    function ValueIterator(oldestEntry) { this.entry = oldestEntry; }\r\n    ValueIterator.prototype[Symbol.iterator] = function () { return this; }\r\n    ValueIterator.prototype.next = function () {\r\n        let ent = this.entry;\r\n        if (ent) {\r\n            this.entry = ent[NEWER];\r\n            return { done: false, value: ent.value };\r\n        } else {\r\n            return { done: true, value: undefined };\r\n        }\r\n    };\r\n\r\n\r\n    LRUMap.prototype.keys = function () {\r\n        return new KeyIterator(this.oldest);\r\n    };\r\n\r\n    LRUMap.prototype.values = function () {\r\n        return new ValueIterator(this.oldest);\r\n    };\r\n\r\n    LRUMap.prototype.entries = function () {\r\n        return this;\r\n    };\r\n\r\n    LRUMap.prototype[Symbol.iterator] = function () {\r\n        return new EntryIterator(this.oldest);\r\n    };\r\n\r\n    LRUMap.prototype.forEach = function (fun, thisObj) {\r\n        if (typeof thisObj !== 'object') {\r\n            thisObj = this;\r\n        }\r\n        let entry = this.oldest;\r\n        while (entry) {\r\n            fun.call(thisObj, entry.value, entry.key, this);\r\n            entry = entry[NEWER];\r\n        }\r\n    };\r\n\r\n    /** Returns a JSON (array) representation */\r\n    LRUMap.prototype.toJSON = function () {\r\n        var s = new Array(this.size), i = 0, entry = this.oldest;\r\n        while (entry) {\r\n            s[i++] = { key: entry.key, value: entry.value };\r\n            entry = entry[NEWER];\r\n        }\r\n        return s;\r\n    };\r\n\r\n    /** Returns a String representation */\r\n    LRUMap.prototype.toString = function () {\r\n        var s = '', entry = this.oldest;\r\n        while (entry) {\r\n            s += String(entry.key) + ':' + entry.value;\r\n            entry = entry[NEWER];\r\n            if (entry) {\r\n                s += ' < ';\r\n            }\r\n        }\r\n        return s;\r\n    };\r\n\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1577095442579
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/helpers/page.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/helpers/page.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/helpers/page.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/helpers/page.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
        "sourceFileName": "page.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n* Helper functions for page/post.\n*\n* @example\n*     <%- is_categories(page) %>\n*     <%- is_tags(page) %>\n*     <%- page_title(page) %>\n*     <%- has_thumbnail(post) %>\n*     <%- get_thumbnail(post) %>\n*     <%- get_og_image(post) %>\n*/\nmodule.exports = function (hexo) {\n  hexo.extend.helper.register('is_categories', function () {\n    var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return (page === null ? this.page : page).__categories;\n  });\n  hexo.extend.helper.register('is_tags', function () {\n    var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return (page === null ? this.page : page).__tags;\n  });\n  /**\n   * Generate html head title based on page type\n   */\n\n  hexo.extend.helper.register('page_title', function () {\n    var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    page = page === null ? this.page : page;\n    var title = page.title;\n\n    if (this.is_archive()) {\n      title = this._p('common.archive', Infinity);\n\n      if (this.is_month()) {\n        title += ': ' + page.year + '/' + page.month;\n      } else if (this.is_year()) {\n        title += ': ' + page.year;\n      }\n    } else if (this.is_category()) {\n      title = this._p('common.category', 1) + ': ' + page.category;\n    } else if (this.is_tag()) {\n      title = this._p('common.tag', 1) + ': ' + page.tag;\n    } else if (this.is_categories()) {\n      title = this._p('common.category', Infinity);\n    } else if (this.is_tags()) {\n      title = this._p('common.tag', Infinity);\n    }\n\n    var siteTitle = hexo.extend.helper.get('get_config').bind(this)('title', '', true);\n    return [title, siteTitle].filter(function (str) {\n      return typeof str !== 'undefined' && str.trim() !== '';\n    }).join(' - ');\n  });\n  hexo.extend.helper.register('has_thumbnail', function (post) {\n    var getConfig = hexo.extend.helper.get('get_config').bind(this);\n    var allowThumbnail = getConfig('article.thumbnail', true);\n\n    if (!allowThumbnail) {\n      return false;\n    }\n\n    return post.hasOwnProperty('thumbnail') && post.thumbnail;\n  });\n  hexo.extend.helper.register('get_thumbnail', function (post) {\n    var hasThumbnail = hexo.extend.helper.get('has_thumbnail').bind(this)(post);\n    return this.url_for(hasThumbnail ? post.thumbnail : 'images/thumbnail.svg');\n  });\n  hexo.extend.helper.register('has_og_image', function (post) {\n    return post.hasOwnProperty('og_image');\n  });\n  hexo.extend.helper.register('get_og_image', function (post) {\n    var getConfig = hexo.extend.helper.get('get_config').bind(this);\n    var hasConfig = hexo.extend.helper.get('has_config').bind(this);\n    var hasOGImage = hexo.extend.helper.get('has_og_image').bind(this)(post);\n    var hasThumbnail = hexo.extend.helper.get('has_thumbnail').bind(this)(post);\n    var getThumbnail = hexo.extend.helper.get('get_thumbnail').bind(this);\n    var og_image;\n    if (hasOGImage) og_image = post.og_image;else if (hasThumbnail) og_image = getThumbnail(post);else og_image = getConfig('article.og_image', '/images/og_image.png');\n    return this.url_for(og_image);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "page.js"
      ],
      "names": [
        "module",
        "exports",
        "hexo",
        "extend",
        "helper",
        "register",
        "page",
        "__categories",
        "__tags",
        "title",
        "is_archive",
        "_p",
        "Infinity",
        "is_month",
        "year",
        "month",
        "is_year",
        "is_category",
        "category",
        "is_tag",
        "tag",
        "is_categories",
        "is_tags",
        "siteTitle",
        "get",
        "bind",
        "filter",
        "str",
        "trim",
        "join",
        "post",
        "getConfig",
        "allowThumbnail",
        "hasOwnProperty",
        "thumbnail",
        "hasThumbnail",
        "url_for",
        "hasConfig",
        "hasOGImage",
        "getThumbnail",
        "og_image"
      ],
      "mappings": ";;AAAA;;;;;;;;;;;AAWAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,eAA5B,EAA6C,YAAuB;AAAA,QAAbC,IAAa,uEAAN,IAAM;AAChE,WAAO,CAACA,IAAI,KAAK,IAAT,GAAgB,KAAKA,IAArB,GAA4BA,IAA7B,EAAmCC,YAA1C;AACH,GAFD;AAIAL,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,SAA5B,EAAuC,YAAuB;AAAA,QAAbC,IAAa,uEAAN,IAAM;AAC1D,WAAO,CAACA,IAAI,KAAK,IAAT,GAAgB,KAAKA,IAArB,GAA4BA,IAA7B,EAAmCE,MAA1C;AACH,GAFD;AAIA;;;;AAGAN,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,YAAuB;AAAA,QAAbC,IAAa,uEAAN,IAAM;AAC7DA,IAAAA,IAAI,GAAGA,IAAI,KAAK,IAAT,GAAgB,KAAKA,IAArB,GAA4BA,IAAnC;AACA,QAAIG,KAAK,GAAGH,IAAI,CAACG,KAAjB;;AAEA,QAAI,KAAKC,UAAL,EAAJ,EAAuB;AACnBD,MAAAA,KAAK,GAAG,KAAKE,EAAL,CAAQ,gBAAR,EAA0BC,QAA1B,CAAR;;AACA,UAAI,KAAKC,QAAL,EAAJ,EAAqB;AACjBJ,QAAAA,KAAK,IAAI,OAAOH,IAAI,CAACQ,IAAZ,GAAmB,GAAnB,GAAyBR,IAAI,CAACS,KAAvC;AACH,OAFD,MAEO,IAAI,KAAKC,OAAL,EAAJ,EAAoB;AACvBP,QAAAA,KAAK,IAAI,OAAOH,IAAI,CAACQ,IAArB;AACH;AACJ,KAPD,MAOO,IAAI,KAAKG,WAAL,EAAJ,EAAwB;AAC3BR,MAAAA,KAAK,GAAG,KAAKE,EAAL,CAAQ,iBAAR,EAA2B,CAA3B,IAAgC,IAAhC,GAAuCL,IAAI,CAACY,QAApD;AACH,KAFM,MAEA,IAAI,KAAKC,MAAL,EAAJ,EAAmB;AACtBV,MAAAA,KAAK,GAAG,KAAKE,EAAL,CAAQ,YAAR,EAAsB,CAAtB,IAA2B,IAA3B,GAAkCL,IAAI,CAACc,GAA/C;AACH,KAFM,MAEA,IAAI,KAAKC,aAAL,EAAJ,EAA0B;AAC7BZ,MAAAA,KAAK,GAAG,KAAKE,EAAL,CAAQ,iBAAR,EAA2BC,QAA3B,CAAR;AACH,KAFM,MAEA,IAAI,KAAKU,OAAL,EAAJ,EAAoB;AACvBb,MAAAA,KAAK,GAAG,KAAKE,EAAL,CAAQ,YAAR,EAAsBC,QAAtB,CAAR;AACH;;AAED,QAAMW,SAAS,GAAGrB,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBoB,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,EAAgD,OAAhD,EAAyD,EAAzD,EAA6D,IAA7D,CAAlB;AACA,WAAO,CAAChB,KAAD,EAAQc,SAAR,EAAmBG,MAAnB,CAA0B,UAAAC,GAAG;AAAA,aAAI,OAAQA,GAAR,KAAiB,WAAjB,IAAgCA,GAAG,CAACC,IAAJ,OAAe,EAAnD;AAAA,KAA7B,EAAoFC,IAApF,CAAyF,KAAzF,CAAP;AACH,GAvBD;AAyBA3B,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,eAA5B,EAA6C,UAAUyB,IAAV,EAAgB;AACzD,QAAMC,SAAS,GAAG7B,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBoB,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,CAAlB;AACA,QAAMO,cAAc,GAAGD,SAAS,CAAC,mBAAD,EAAsB,IAAtB,CAAhC;;AACA,QAAI,CAACC,cAAL,EAAqB;AACjB,aAAO,KAAP;AACH;;AACD,WAAOF,IAAI,CAACG,cAAL,CAAoB,WAApB,KAAoCH,IAAI,CAACI,SAAhD;AACH,GAPD;AASAhC,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,eAA5B,EAA6C,UAAUyB,IAAV,EAAgB;AACzD,QAAMK,YAAY,GAAGjC,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBoB,GAAnB,CAAuB,eAAvB,EAAwCC,IAAxC,CAA6C,IAA7C,EAAmDK,IAAnD,CAArB;AACA,WAAO,KAAKM,OAAL,CAAaD,YAAY,GAAGL,IAAI,CAACI,SAAR,GAAoB,sBAA7C,CAAP;AACH,GAHD;AAKAhC,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,cAA5B,EAA4C,UAAUyB,IAAV,EAAgB;AACxD,WAAOA,IAAI,CAACG,cAAL,CAAoB,UAApB,CAAP;AACH,GAFD;AAIA/B,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,cAA5B,EAA4C,UAAUyB,IAAV,EAAgB;AACxD,QAAMC,SAAS,GAAG7B,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBoB,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,CAAlB;AACA,QAAMY,SAAS,GAAGnC,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBoB,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,CAAlB;AAEA,QAAMa,UAAU,GAAGpC,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBoB,GAAnB,CAAuB,cAAvB,EAAuCC,IAAvC,CAA4C,IAA5C,EAAkDK,IAAlD,CAAnB;AACA,QAAMK,YAAY,GAAGjC,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBoB,GAAnB,CAAuB,eAAvB,EAAwCC,IAAxC,CAA6C,IAA7C,EAAmDK,IAAnD,CAArB;AAEA,QAAMS,YAAY,GAAGrC,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBoB,GAAnB,CAAuB,eAAvB,EAAwCC,IAAxC,CAA6C,IAA7C,CAArB;AAEA,QAAIe,QAAJ;AAEA,QAAIF,UAAJ,EACIE,QAAQ,GAAGV,IAAI,CAACU,QAAhB,CADJ,KAEK,IAAIL,YAAJ,EACDK,QAAQ,GAAGD,YAAY,CAACT,IAAD,CAAvB,CADC,KAGDU,QAAQ,GAAGT,SAAS,CAAC,kBAAD,EAAqB,sBAArB,CAApB;AAEJ,WAAO,KAAKK,OAAL,CAAaI,QAAb,CAAP;AACH,GAnBD;AAoBH,CA3ED",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "sourcesContent": [
        "/**\n* Helper functions for page/post.\n*\n* @example\n*     <%- is_categories(page) %>\n*     <%- is_tags(page) %>\n*     <%- page_title(page) %>\n*     <%- has_thumbnail(post) %>\n*     <%- get_thumbnail(post) %>\n*     <%- get_og_image(post) %>\n*/\nmodule.exports = function (hexo) {\n    hexo.extend.helper.register('is_categories', function (page = null) {\n        return (page === null ? this.page : page).__categories;\n    });\n\n    hexo.extend.helper.register('is_tags', function (page = null) {\n        return (page === null ? this.page : page).__tags;\n    });\n\n    /**\n     * Generate html head title based on page type\n     */\n    hexo.extend.helper.register('page_title', function (page = null) {\n        page = page === null ? this.page : page;\n        let title = page.title;\n\n        if (this.is_archive()) {\n            title = this._p('common.archive', Infinity);\n            if (this.is_month()) {\n                title += ': ' + page.year + '/' + page.month;\n            } else if (this.is_year()) {\n                title += ': ' + page.year;\n            }\n        } else if (this.is_category()) {\n            title = this._p('common.category', 1) + ': ' + page.category;\n        } else if (this.is_tag()) {\n            title = this._p('common.tag', 1) + ': ' + page.tag;\n        } else if (this.is_categories()) {\n            title = this._p('common.category', Infinity);\n        } else if (this.is_tags()) {\n            title = this._p('common.tag', Infinity);\n        }\n\n        const siteTitle = hexo.extend.helper.get('get_config').bind(this)('title', '', true);\n        return [title, siteTitle].filter(str => typeof (str) !== 'undefined' && str.trim() !== '').join(' - ');\n    });\n\n    hexo.extend.helper.register('has_thumbnail', function (post) {\n        const getConfig = hexo.extend.helper.get('get_config').bind(this);\n        const allowThumbnail = getConfig('article.thumbnail', true);\n        if (!allowThumbnail) {\n            return false;\n        }\n        return post.hasOwnProperty('thumbnail') && post.thumbnail;\n    });\n\n    hexo.extend.helper.register('get_thumbnail', function (post) {\n        const hasThumbnail = hexo.extend.helper.get('has_thumbnail').bind(this)(post);\n        return this.url_for(hasThumbnail ? post.thumbnail : 'images/thumbnail.svg');\n    });\n\n    hexo.extend.helper.register('has_og_image', function (post) {\n        return post.hasOwnProperty('og_image');\n    });\n\n    hexo.extend.helper.register('get_og_image', function (post) {\n        const getConfig = hexo.extend.helper.get('get_config').bind(this);\n        const hasConfig = hexo.extend.helper.get('has_config').bind(this);\n\n        const hasOGImage = hexo.extend.helper.get('has_og_image').bind(this)(post);\n        const hasThumbnail = hexo.extend.helper.get('has_thumbnail').bind(this)(post);\n\n        const getThumbnail = hexo.extend.helper.get('get_thumbnail').bind(this);\n\n        let og_image\n\n        if (hasOGImage)\n            og_image = post.og_image\n        else if (hasThumbnail)\n            og_image = getThumbnail(post);\n        else\n            og_image = getConfig('article.og_image', '/images/og_image.png');\n\n        return this.url_for(og_image);\n    });\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525717
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/helpers/site.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/helpers/site.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/helpers/site.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/helpers/site.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
        "sourceFileName": "site.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Helper functions related the site properties.\n *\n * @example\n*     <%- is_same_link(url_a, url_b) %>\n*     <%- get_domain(url) %>\n*     <%- post_count() %>\n*     <%- category_count() %>\n*     <%- tag_count() %>\n*     <%- duration() %>\n*     <%- word_count(content) %>\n*     <%- md5(data) %>\n*     <%- meta() %>\n*     <%- hexo_version() %>\n */\nvar URL = require('url').URL;\n\nvar moment = require('moment');\n\nvar crypto = require('crypto');\n\nmodule.exports = function (hexo) {\n  hexo.extend.helper.register('is_same_link', function (a, b) {\n    function santize(url) {\n      var paths = url.replace(/(^\\w+:|^)\\/\\//, '').split('#')[0].split('/').filter(function (p) {\n        return p.trim() !== '';\n      });\n\n      if (paths.length > 0 && paths[paths.length - 1].trim() === 'index.html') {\n        paths = paths.slice(0, paths.length - 1);\n      }\n\n      return paths.join('/');\n    }\n\n    return santize(this.url_for(a)) == santize(this.url_for(b));\n  });\n  hexo.extend.helper.register('get_domain', function (link) {\n    var url = new URL(link);\n    return url.hostname;\n  });\n  hexo.extend.helper.register('post_count', function () {\n    return this.site.posts.length;\n  });\n  hexo.extend.helper.register('category_count', function () {\n    return this.site.categories.filter(function (category) {\n      return category.length;\n    }).length;\n  });\n  hexo.extend.helper.register('tag_count', function () {\n    return this.site.tags.filter(function (tag) {\n      return tag.length;\n    }).length;\n  });\n  /**\n   * Export moment.duration\n   */\n\n  hexo.extend.helper.register('duration', function () {\n    return moment.duration.apply(moment, arguments);\n  });\n  /**\n   * Get the word count of a paragraph.\n   */\n\n  hexo.extend.helper.register('word_count', function (content) {\n    content = content.replace(/<\\/?[a-z][^>]*>/gi, '');\n    content = content.trim();\n    return content ? (content.match(/[\\u00ff-\\uffff]|[a-zA-Z]+/g) || []).length : 0;\n  });\n  hexo.extend.helper.register('md5', function (data) {\n    return crypto.createHash('md5').update(data).digest(\"hex\");\n  });\n  hexo.extend.helper.register('meta', function () {\n    function trim(str) {\n      return str.trim().replace(/^\"(.*)\"$/, '$1').replace(/^'(.*)'$/, '$1');\n    }\n\n    function split(str, sep) {\n      var result = [];\n      var matched = null;\n\n      while (matched = sep.exec(str)) {\n        result.push(matched[0]);\n      }\n\n      return result;\n    }\n\n    var getConfig = hexo.extend.helper.get('get_config').bind(this);\n    var metas = getConfig('meta', []);\n    var metaDOMArray = metas.map(function (meta) {\n      var entities = split(meta, /(?:[^\\\\;]+|\\\\.)+/g);\n      var entityArray = entities.map(function (entity) {\n        var keyValue = split(entity, /(?:[^\\\\=]+|\\\\.)+/g);\n\n        if (keyValue.length < 2) {\n          return null;\n        }\n\n        var key = trim(keyValue[0]);\n        var value = trim(keyValue[1]);\n        return key + '=\"' + value + '\"';\n      }).filter(function (entity) {\n        return entity;\n      });\n      return '<meta ' + entityArray.join(' ') + ' />';\n    });\n    return metaDOMArray.join('\\n');\n  });\n  hexo.extend.helper.register('hexo_version', function (data) {\n    return hexo.version;\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpdGUuanMiXSwibmFtZXMiOlsiVVJMIiwicmVxdWlyZSIsIm1vbWVudCIsImNyeXB0byIsIm1vZHVsZSIsImV4cG9ydHMiLCJoZXhvIiwiZXh0ZW5kIiwiaGVscGVyIiwicmVnaXN0ZXIiLCJhIiwiYiIsInNhbnRpemUiLCJ1cmwiLCJwYXRocyIsInJlcGxhY2UiLCJzcGxpdCIsImZpbHRlciIsInAiLCJ0cmltIiwibGVuZ3RoIiwic2xpY2UiLCJqb2luIiwidXJsX2ZvciIsImxpbmsiLCJob3N0bmFtZSIsInNpdGUiLCJwb3N0cyIsImNhdGVnb3JpZXMiLCJjYXRlZ29yeSIsInRhZ3MiLCJ0YWciLCJkdXJhdGlvbiIsImFwcGx5IiwiYXJndW1lbnRzIiwiY29udGVudCIsIm1hdGNoIiwiZGF0YSIsImNyZWF0ZUhhc2giLCJ1cGRhdGUiLCJkaWdlc3QiLCJzdHIiLCJzZXAiLCJyZXN1bHQiLCJtYXRjaGVkIiwiZXhlYyIsInB1c2giLCJnZXRDb25maWciLCJnZXQiLCJiaW5kIiwibWV0YXMiLCJtZXRhRE9NQXJyYXkiLCJtYXAiLCJtZXRhIiwiZW50aXRpZXMiLCJlbnRpdHlBcnJheSIsImVudGl0eSIsImtleVZhbHVlIiwia2V5IiwidmFsdWUiLCJ2ZXJzaW9uIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxJQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxLQUFELENBQVAsQ0FBZUQsR0FBM0I7O0FBQ0EsSUFBTUUsTUFBTSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNRSxNQUFNLEdBQUdGLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUVBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsSUFBVixFQUFnQjtBQUM3QkEsRUFBQUEsSUFBSSxDQUFDQyxNQUFMLENBQVlDLE1BQVosQ0FBbUJDLFFBQW5CLENBQTRCLGNBQTVCLEVBQTRDLFVBQVVDLENBQVYsRUFBYUMsQ0FBYixFQUFnQjtBQUN4RCxhQUFTQyxPQUFULENBQWlCQyxHQUFqQixFQUFzQjtBQUNsQixVQUFJQyxLQUFLLEdBQUdELEdBQUcsQ0FBQ0UsT0FBSixDQUFZLGVBQVosRUFBNkIsRUFBN0IsRUFBaUNDLEtBQWpDLENBQXVDLEdBQXZDLEVBQTRDLENBQTVDLEVBQStDQSxLQUEvQyxDQUFxRCxHQUFyRCxFQUEwREMsTUFBMUQsQ0FBaUUsVUFBQUMsQ0FBQztBQUFBLGVBQUlBLENBQUMsQ0FBQ0MsSUFBRixPQUFhLEVBQWpCO0FBQUEsT0FBbEUsQ0FBWjs7QUFDQSxVQUFJTCxLQUFLLENBQUNNLE1BQU4sR0FBZSxDQUFmLElBQW9CTixLQUFLLENBQUNBLEtBQUssQ0FBQ00sTUFBTixHQUFlLENBQWhCLENBQUwsQ0FBd0JELElBQXhCLE9BQW1DLFlBQTNELEVBQXlFO0FBQ3JFTCxRQUFBQSxLQUFLLEdBQUdBLEtBQUssQ0FBQ08sS0FBTixDQUFZLENBQVosRUFBZVAsS0FBSyxDQUFDTSxNQUFOLEdBQWUsQ0FBOUIsQ0FBUjtBQUNIOztBQUNELGFBQU9OLEtBQUssQ0FBQ1EsSUFBTixDQUFXLEdBQVgsQ0FBUDtBQUNIOztBQUNELFdBQU9WLE9BQU8sQ0FBQyxLQUFLVyxPQUFMLENBQWFiLENBQWIsQ0FBRCxDQUFQLElBQTRCRSxPQUFPLENBQUMsS0FBS1csT0FBTCxDQUFhWixDQUFiLENBQUQsQ0FBMUM7QUFDSCxHQVREO0FBV0FMLEVBQUFBLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxNQUFaLENBQW1CQyxRQUFuQixDQUE0QixZQUE1QixFQUEwQyxVQUFVZSxJQUFWLEVBQWdCO0FBQ3RELFFBQU1YLEdBQUcsR0FBRyxJQUFJYixHQUFKLENBQVF3QixJQUFSLENBQVo7QUFDQSxXQUFPWCxHQUFHLENBQUNZLFFBQVg7QUFDSCxHQUhEO0FBS0FuQixFQUFBQSxJQUFJLENBQUNDLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkMsUUFBbkIsQ0FBNEIsWUFBNUIsRUFBMEMsWUFBWTtBQUNsRCxXQUFPLEtBQUtpQixJQUFMLENBQVVDLEtBQVYsQ0FBZ0JQLE1BQXZCO0FBQ0gsR0FGRDtBQUlBZCxFQUFBQSxJQUFJLENBQUNDLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkMsUUFBbkIsQ0FBNEIsZ0JBQTVCLEVBQThDLFlBQVk7QUFDdEQsV0FBTyxLQUFLaUIsSUFBTCxDQUFVRSxVQUFWLENBQXFCWCxNQUFyQixDQUE0QixVQUFBWSxRQUFRO0FBQUEsYUFBSUEsUUFBUSxDQUFDVCxNQUFiO0FBQUEsS0FBcEMsRUFBeURBLE1BQWhFO0FBQ0gsR0FGRDtBQUlBZCxFQUFBQSxJQUFJLENBQUNDLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkMsUUFBbkIsQ0FBNEIsV0FBNUIsRUFBeUMsWUFBWTtBQUNqRCxXQUFPLEtBQUtpQixJQUFMLENBQVVJLElBQVYsQ0FBZWIsTUFBZixDQUFzQixVQUFBYyxHQUFHO0FBQUEsYUFBSUEsR0FBRyxDQUFDWCxNQUFSO0FBQUEsS0FBekIsRUFBeUNBLE1BQWhEO0FBQ0gsR0FGRDtBQUlBOzs7O0FBR0FkLEVBQUFBLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxNQUFaLENBQW1CQyxRQUFuQixDQUE0QixVQUE1QixFQUF3QyxZQUFZO0FBQ2hELFdBQU9QLE1BQU0sQ0FBQzhCLFFBQVAsQ0FBZ0JDLEtBQWhCLENBQXNCL0IsTUFBdEIsRUFBOEJnQyxTQUE5QixDQUFQO0FBQ0gsR0FGRDtBQUlBOzs7O0FBR0E1QixFQUFBQSxJQUFJLENBQUNDLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkMsUUFBbkIsQ0FBNEIsWUFBNUIsRUFBMEMsVUFBVTBCLE9BQVYsRUFBbUI7QUFDekRBLElBQUFBLE9BQU8sR0FBR0EsT0FBTyxDQUFDcEIsT0FBUixDQUFnQixtQkFBaEIsRUFBcUMsRUFBckMsQ0FBVjtBQUNBb0IsSUFBQUEsT0FBTyxHQUFHQSxPQUFPLENBQUNoQixJQUFSLEVBQVY7QUFDQSxXQUFPZ0IsT0FBTyxHQUFHLENBQUNBLE9BQU8sQ0FBQ0MsS0FBUixDQUFjLDRCQUFkLEtBQStDLEVBQWhELEVBQW9EaEIsTUFBdkQsR0FBZ0UsQ0FBOUU7QUFDSCxHQUpEO0FBTUFkLEVBQUFBLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxNQUFaLENBQW1CQyxRQUFuQixDQUE0QixLQUE1QixFQUFtQyxVQUFVNEIsSUFBVixFQUFnQjtBQUMvQyxXQUFPbEMsTUFBTSxDQUFDbUMsVUFBUCxDQUFrQixLQUFsQixFQUF5QkMsTUFBekIsQ0FBZ0NGLElBQWhDLEVBQXNDRyxNQUF0QyxDQUE2QyxLQUE3QyxDQUFQO0FBQ0gsR0FGRDtBQUlBbEMsRUFBQUEsSUFBSSxDQUFDQyxNQUFMLENBQVlDLE1BQVosQ0FBbUJDLFFBQW5CLENBQTRCLE1BQTVCLEVBQW9DLFlBQVk7QUFDNUMsYUFBU1UsSUFBVCxDQUFjc0IsR0FBZCxFQUFtQjtBQUNmLGFBQU9BLEdBQUcsQ0FBQ3RCLElBQUosR0FBV0osT0FBWCxDQUFtQixVQUFuQixFQUErQixJQUEvQixFQUFxQ0EsT0FBckMsQ0FBNkMsVUFBN0MsRUFBeUQsSUFBekQsQ0FBUDtBQUNIOztBQUVELGFBQVNDLEtBQVQsQ0FBZXlCLEdBQWYsRUFBb0JDLEdBQXBCLEVBQXlCO0FBQ3JCLFVBQU1DLE1BQU0sR0FBRyxFQUFmO0FBQ0EsVUFBSUMsT0FBTyxHQUFHLElBQWQ7O0FBQ0EsYUFBT0EsT0FBTyxHQUFHRixHQUFHLENBQUNHLElBQUosQ0FBU0osR0FBVCxDQUFqQixFQUFnQztBQUM1QkUsUUFBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVlGLE9BQU8sQ0FBQyxDQUFELENBQW5CO0FBQ0g7O0FBQ0QsYUFBT0QsTUFBUDtBQUNIOztBQUVELFFBQU1JLFNBQVMsR0FBR3pDLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxNQUFaLENBQW1Cd0MsR0FBbkIsQ0FBdUIsWUFBdkIsRUFBcUNDLElBQXJDLENBQTBDLElBQTFDLENBQWxCO0FBQ0EsUUFBTUMsS0FBSyxHQUFHSCxTQUFTLENBQUMsTUFBRCxFQUFTLEVBQVQsQ0FBdkI7QUFDQSxRQUFNSSxZQUFZLEdBQUdELEtBQUssQ0FBQ0UsR0FBTixDQUFVLFVBQVVDLElBQVYsRUFBZ0I7QUFDM0MsVUFBTUMsUUFBUSxHQUFHdEMsS0FBSyxDQUFDcUMsSUFBRCxFQUFPLG1CQUFQLENBQXRCO0FBQ0EsVUFBTUUsV0FBVyxHQUFHRCxRQUFRLENBQUNGLEdBQVQsQ0FBYSxVQUFVSSxNQUFWLEVBQWtCO0FBQy9DLFlBQU1DLFFBQVEsR0FBR3pDLEtBQUssQ0FBQ3dDLE1BQUQsRUFBUyxtQkFBVCxDQUF0Qjs7QUFDQSxZQUFJQyxRQUFRLENBQUNyQyxNQUFULEdBQWtCLENBQXRCLEVBQXlCO0FBQ3JCLGlCQUFPLElBQVA7QUFDSDs7QUFDRCxZQUFNc0MsR0FBRyxHQUFHdkMsSUFBSSxDQUFDc0MsUUFBUSxDQUFDLENBQUQsQ0FBVCxDQUFoQjtBQUNBLFlBQU1FLEtBQUssR0FBR3hDLElBQUksQ0FBQ3NDLFFBQVEsQ0FBQyxDQUFELENBQVQsQ0FBbEI7QUFDQSxlQUFPQyxHQUFHLEdBQUcsSUFBTixHQUFhQyxLQUFiLEdBQXFCLEdBQTVCO0FBQ0gsT0FSbUIsRUFRakIxQyxNQVJpQixDQVFWLFVBQVV1QyxNQUFWLEVBQWtCO0FBQ3hCLGVBQU9BLE1BQVA7QUFDSCxPQVZtQixDQUFwQjtBQVdBLGFBQU8sV0FBV0QsV0FBVyxDQUFDakMsSUFBWixDQUFpQixHQUFqQixDQUFYLEdBQW1DLEtBQTFDO0FBQ0gsS0Fkb0IsQ0FBckI7QUFlQSxXQUFPNkIsWUFBWSxDQUFDN0IsSUFBYixDQUFrQixJQUFsQixDQUFQO0FBQ0gsR0FoQ0Q7QUFrQ0FoQixFQUFBQSxJQUFJLENBQUNDLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkMsUUFBbkIsQ0FBNEIsY0FBNUIsRUFBNEMsVUFBVTRCLElBQVYsRUFBZ0I7QUFDeEQsV0FBTy9CLElBQUksQ0FBQ3NELE9BQVo7QUFDSCxHQUZEO0FBR0gsQ0F0RkQiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2luY2x1ZGVzL2hlbHBlcnMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEhlbHBlciBmdW5jdGlvbnMgcmVsYXRlZCB0aGUgc2l0ZSBwcm9wZXJ0aWVzLlxuICpcbiAqIEBleGFtcGxlXG4qICAgICA8JS0gaXNfc2FtZV9saW5rKHVybF9hLCB1cmxfYikgJT5cbiogICAgIDwlLSBnZXRfZG9tYWluKHVybCkgJT5cbiogICAgIDwlLSBwb3N0X2NvdW50KCkgJT5cbiogICAgIDwlLSBjYXRlZ29yeV9jb3VudCgpICU+XG4qICAgICA8JS0gdGFnX2NvdW50KCkgJT5cbiogICAgIDwlLSBkdXJhdGlvbigpICU+XG4qICAgICA8JS0gd29yZF9jb3VudChjb250ZW50KSAlPlxuKiAgICAgPCUtIG1kNShkYXRhKSAlPlxuKiAgICAgPCUtIG1ldGEoKSAlPlxuKiAgICAgPCUtIGhleG9fdmVyc2lvbigpICU+XG4gKi9cbmNvbnN0IFVSTCA9IHJlcXVpcmUoJ3VybCcpLlVSTDtcbmNvbnN0IG1vbWVudCA9IHJlcXVpcmUoJ21vbWVudCcpO1xuY29uc3QgY3J5cHRvID0gcmVxdWlyZSgnY3J5cHRvJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGhleG8pIHtcbiAgICBoZXhvLmV4dGVuZC5oZWxwZXIucmVnaXN0ZXIoJ2lzX3NhbWVfbGluaycsIGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgIGZ1bmN0aW9uIHNhbnRpemUodXJsKSB7XG4gICAgICAgICAgICBsZXQgcGF0aHMgPSB1cmwucmVwbGFjZSgvKF5cXHcrOnxeKVxcL1xcLy8sICcnKS5zcGxpdCgnIycpWzBdLnNwbGl0KCcvJykuZmlsdGVyKHAgPT4gcC50cmltKCkgIT09ICcnKTtcbiAgICAgICAgICAgIGlmIChwYXRocy5sZW5ndGggPiAwICYmIHBhdGhzW3BhdGhzLmxlbmd0aCAtIDFdLnRyaW0oKSA9PT0gJ2luZGV4Lmh0bWwnKSB7XG4gICAgICAgICAgICAgICAgcGF0aHMgPSBwYXRocy5zbGljZSgwLCBwYXRocy5sZW5ndGggLSAxKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHBhdGhzLmpvaW4oJy8nKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2FudGl6ZSh0aGlzLnVybF9mb3IoYSkpID09IHNhbnRpemUodGhpcy51cmxfZm9yKGIpKTtcbiAgICB9KTtcblxuICAgIGhleG8uZXh0ZW5kLmhlbHBlci5yZWdpc3RlcignZ2V0X2RvbWFpbicsIGZ1bmN0aW9uIChsaW5rKSB7XG4gICAgICAgIGNvbnN0IHVybCA9IG5ldyBVUkwobGluayk7XG4gICAgICAgIHJldHVybiB1cmwuaG9zdG5hbWU7XG4gICAgfSk7XG5cbiAgICBoZXhvLmV4dGVuZC5oZWxwZXIucmVnaXN0ZXIoJ3Bvc3RfY291bnQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNpdGUucG9zdHMubGVuZ3RoO1xuICAgIH0pO1xuXG4gICAgaGV4by5leHRlbmQuaGVscGVyLnJlZ2lzdGVyKCdjYXRlZ29yeV9jb3VudCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2l0ZS5jYXRlZ29yaWVzLmZpbHRlcihjYXRlZ29yeSA9PiBjYXRlZ29yeS5sZW5ndGgpLmxlbmd0aDtcbiAgICB9KTtcblxuICAgIGhleG8uZXh0ZW5kLmhlbHBlci5yZWdpc3RlcigndGFnX2NvdW50JywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zaXRlLnRhZ3MuZmlsdGVyKHRhZyA9PiB0YWcubGVuZ3RoKS5sZW5ndGg7XG4gICAgfSk7XG5cbiAgICAvKipcbiAgICAgKiBFeHBvcnQgbW9tZW50LmR1cmF0aW9uXG4gICAgICovXG4gICAgaGV4by5leHRlbmQuaGVscGVyLnJlZ2lzdGVyKCdkdXJhdGlvbicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG1vbWVudC5kdXJhdGlvbi5hcHBseShtb21lbnQsIGFyZ3VtZW50cyk7XG4gICAgfSk7XG5cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIHdvcmQgY291bnQgb2YgYSBwYXJhZ3JhcGguXG4gICAgICovXG4gICAgaGV4by5leHRlbmQuaGVscGVyLnJlZ2lzdGVyKCd3b3JkX2NvdW50JywgZnVuY3Rpb24gKGNvbnRlbnQpIHtcbiAgICAgICAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZSgvPFxcLz9bYS16XVtePl0qPi9naSwgJycpO1xuICAgICAgICBjb250ZW50ID0gY29udGVudC50cmltKCk7XG4gICAgICAgIHJldHVybiBjb250ZW50ID8gKGNvbnRlbnQubWF0Y2goL1tcXHUwMGZmLVxcdWZmZmZdfFthLXpBLVpdKy9nKSB8fCBbXSkubGVuZ3RoIDogMDtcbiAgICB9KTtcblxuICAgIGhleG8uZXh0ZW5kLmhlbHBlci5yZWdpc3RlcignbWQ1JywgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgcmV0dXJuIGNyeXB0by5jcmVhdGVIYXNoKCdtZDUnKS51cGRhdGUoZGF0YSkuZGlnZXN0KFwiaGV4XCIpO1xuICAgIH0pO1xuXG4gICAgaGV4by5leHRlbmQuaGVscGVyLnJlZ2lzdGVyKCdtZXRhJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBmdW5jdGlvbiB0cmltKHN0cikge1xuICAgICAgICAgICAgcmV0dXJuIHN0ci50cmltKCkucmVwbGFjZSgvXlwiKC4qKVwiJC8sICckMScpLnJlcGxhY2UoL14nKC4qKSckLywgJyQxJyk7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgZnVuY3Rpb24gc3BsaXQoc3RyLCBzZXApIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xuICAgICAgICAgICAgbGV0IG1hdGNoZWQgPSBudWxsO1xuICAgICAgICAgICAgd2hpbGUgKG1hdGNoZWQgPSBzZXAuZXhlYyhzdHIpKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2gobWF0Y2hlZFswXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZ2V0Q29uZmlnID0gaGV4by5leHRlbmQuaGVscGVyLmdldCgnZ2V0X2NvbmZpZycpLmJpbmQodGhpcyk7XG4gICAgICAgIGNvbnN0IG1ldGFzID0gZ2V0Q29uZmlnKCdtZXRhJywgW10pO1xuICAgICAgICBjb25zdCBtZXRhRE9NQXJyYXkgPSBtZXRhcy5tYXAoZnVuY3Rpb24gKG1ldGEpIHtcbiAgICAgICAgICAgIGNvbnN0IGVudGl0aWVzID0gc3BsaXQobWV0YSwgLyg/OlteXFxcXDtdK3xcXFxcLikrL2cpO1xuICAgICAgICAgICAgY29uc3QgZW50aXR5QXJyYXkgPSBlbnRpdGllcy5tYXAoZnVuY3Rpb24gKGVudGl0eSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGtleVZhbHVlID0gc3BsaXQoZW50aXR5LCAvKD86W15cXFxcPV0rfFxcXFwuKSsvZyk7XG4gICAgICAgICAgICAgICAgaWYgKGtleVZhbHVlLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IHRyaW0oa2V5VmFsdWVbMF0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdHJpbShrZXlWYWx1ZVsxXSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGtleSArICc9XCInICsgdmFsdWUgKyAnXCInO1xuICAgICAgICAgICAgfSkuZmlsdGVyKGZ1bmN0aW9uIChlbnRpdHkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZW50aXR5O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gJzxtZXRhICcgKyBlbnRpdHlBcnJheS5qb2luKCcgJykgKyAnIC8+JztcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBtZXRhRE9NQXJyYXkuam9pbignXFxuJyk7XG4gICAgfSk7XG5cbiAgICBoZXhvLmV4dGVuZC5oZWxwZXIucmVnaXN0ZXIoJ2hleG9fdmVyc2lvbicsIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIHJldHVybiBoZXhvLnZlcnNpb247XG4gICAgfSk7XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "site.js"
      ],
      "names": [
        "URL",
        "require",
        "moment",
        "crypto",
        "module",
        "exports",
        "hexo",
        "extend",
        "helper",
        "register",
        "a",
        "b",
        "santize",
        "url",
        "paths",
        "replace",
        "split",
        "filter",
        "p",
        "trim",
        "length",
        "slice",
        "join",
        "url_for",
        "link",
        "hostname",
        "site",
        "posts",
        "categories",
        "category",
        "tags",
        "tag",
        "duration",
        "apply",
        "arguments",
        "content",
        "match",
        "data",
        "createHash",
        "update",
        "digest",
        "str",
        "sep",
        "result",
        "matched",
        "exec",
        "push",
        "getConfig",
        "get",
        "bind",
        "metas",
        "metaDOMArray",
        "map",
        "meta",
        "entities",
        "entityArray",
        "entity",
        "keyValue",
        "key",
        "value",
        "version"
      ],
      "mappings": ";;AAAA;;;;;;;;;;;;;;;AAeA,IAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAP,CAAeD,GAA3B;;AACA,IAAME,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,cAA5B,EAA4C,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACxD,aAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,UAAIC,KAAK,GAAGD,GAAG,CAACE,OAAJ,CAAY,eAAZ,EAA6B,EAA7B,EAAiCC,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,EAA+CA,KAA/C,CAAqD,GAArD,EAA0DC,MAA1D,CAAiE,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,OAAa,EAAjB;AAAA,OAAlE,CAAZ;;AACA,UAAIL,KAAK,CAACM,MAAN,GAAe,CAAf,IAAoBN,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAAL,CAAwBD,IAAxB,OAAmC,YAA3D,EAAyE;AACrEL,QAAAA,KAAK,GAAGA,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAeP,KAAK,CAACM,MAAN,GAAe,CAA9B,CAAR;AACH;;AACD,aAAON,KAAK,CAACQ,IAAN,CAAW,GAAX,CAAP;AACH;;AACD,WAAOV,OAAO,CAAC,KAAKW,OAAL,CAAab,CAAb,CAAD,CAAP,IAA4BE,OAAO,CAAC,KAAKW,OAAL,CAAaZ,CAAb,CAAD,CAA1C;AACH,GATD;AAWAL,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,UAAUe,IAAV,EAAgB;AACtD,QAAMX,GAAG,GAAG,IAAIb,GAAJ,CAAQwB,IAAR,CAAZ;AACA,WAAOX,GAAG,CAACY,QAAX;AACH,GAHD;AAKAnB,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,YAAY;AAClD,WAAO,KAAKiB,IAAL,CAAUC,KAAV,CAAgBP,MAAvB;AACH,GAFD;AAIAd,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,gBAA5B,EAA8C,YAAY;AACtD,WAAO,KAAKiB,IAAL,CAAUE,UAAV,CAAqBX,MAArB,CAA4B,UAAAY,QAAQ;AAAA,aAAIA,QAAQ,CAACT,MAAb;AAAA,KAApC,EAAyDA,MAAhE;AACH,GAFD;AAIAd,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,WAA5B,EAAyC,YAAY;AACjD,WAAO,KAAKiB,IAAL,CAAUI,IAAV,CAAeb,MAAf,CAAsB,UAAAc,GAAG;AAAA,aAAIA,GAAG,CAACX,MAAR;AAAA,KAAzB,EAAyCA,MAAhD;AACH,GAFD;AAIA;;;;AAGAd,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,UAA5B,EAAwC,YAAY;AAChD,WAAOP,MAAM,CAAC8B,QAAP,CAAgBC,KAAhB,CAAsB/B,MAAtB,EAA8BgC,SAA9B,CAAP;AACH,GAFD;AAIA;;;;AAGA5B,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,UAAU0B,OAAV,EAAmB;AACzDA,IAAAA,OAAO,GAAGA,OAAO,CAACpB,OAAR,CAAgB,mBAAhB,EAAqC,EAArC,CAAV;AACAoB,IAAAA,OAAO,GAAGA,OAAO,CAAChB,IAAR,EAAV;AACA,WAAOgB,OAAO,GAAG,CAACA,OAAO,CAACC,KAAR,CAAc,4BAAd,KAA+C,EAAhD,EAAoDhB,MAAvD,GAAgE,CAA9E;AACH,GAJD;AAMAd,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,KAA5B,EAAmC,UAAU4B,IAAV,EAAgB;AAC/C,WAAOlC,MAAM,CAACmC,UAAP,CAAkB,KAAlB,EAAyBC,MAAzB,CAAgCF,IAAhC,EAAsCG,MAAtC,CAA6C,KAA7C,CAAP;AACH,GAFD;AAIAlC,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,MAA5B,EAAoC,YAAY;AAC5C,aAASU,IAAT,CAAcsB,GAAd,EAAmB;AACf,aAAOA,GAAG,CAACtB,IAAJ,GAAWJ,OAAX,CAAmB,UAAnB,EAA+B,IAA/B,EAAqCA,OAArC,CAA6C,UAA7C,EAAyD,IAAzD,CAAP;AACH;;AAED,aAASC,KAAT,CAAeyB,GAAf,EAAoBC,GAApB,EAAyB;AACrB,UAAMC,MAAM,GAAG,EAAf;AACA,UAAIC,OAAO,GAAG,IAAd;;AACA,aAAOA,OAAO,GAAGF,GAAG,CAACG,IAAJ,CAASJ,GAAT,CAAjB,EAAgC;AAC5BE,QAAAA,MAAM,CAACG,IAAP,CAAYF,OAAO,CAAC,CAAD,CAAnB;AACH;;AACD,aAAOD,MAAP;AACH;;AAED,QAAMI,SAAS,GAAGzC,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBwC,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,CAAlB;AACA,QAAMC,KAAK,GAAGH,SAAS,CAAC,MAAD,EAAS,EAAT,CAAvB;AACA,QAAMI,YAAY,GAAGD,KAAK,CAACE,GAAN,CAAU,UAAUC,IAAV,EAAgB;AAC3C,UAAMC,QAAQ,GAAGtC,KAAK,CAACqC,IAAD,EAAO,mBAAP,CAAtB;AACA,UAAME,WAAW,GAAGD,QAAQ,CAACF,GAAT,CAAa,UAAUI,MAAV,EAAkB;AAC/C,YAAMC,QAAQ,GAAGzC,KAAK,CAACwC,MAAD,EAAS,mBAAT,CAAtB;;AACA,YAAIC,QAAQ,CAACrC,MAAT,GAAkB,CAAtB,EAAyB;AACrB,iBAAO,IAAP;AACH;;AACD,YAAMsC,GAAG,GAAGvC,IAAI,CAACsC,QAAQ,CAAC,CAAD,CAAT,CAAhB;AACA,YAAME,KAAK,GAAGxC,IAAI,CAACsC,QAAQ,CAAC,CAAD,CAAT,CAAlB;AACA,eAAOC,GAAG,GAAG,IAAN,GAAaC,KAAb,GAAqB,GAA5B;AACH,OARmB,EAQjB1C,MARiB,CAQV,UAAUuC,MAAV,EAAkB;AACxB,eAAOA,MAAP;AACH,OAVmB,CAApB;AAWA,aAAO,WAAWD,WAAW,CAACjC,IAAZ,CAAiB,GAAjB,CAAX,GAAmC,KAA1C;AACH,KAdoB,CAArB;AAeA,WAAO6B,YAAY,CAAC7B,IAAb,CAAkB,IAAlB,CAAP;AACH,GAhCD;AAkCAhB,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,cAA5B,EAA4C,UAAU4B,IAAV,EAAgB;AACxD,WAAO/B,IAAI,CAACsD,OAAZ;AACH,GAFD;AAGH,CAtFD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "sourcesContent": [
        "/**\n * Helper functions related the site properties.\n *\n * @example\n*     <%- is_same_link(url_a, url_b) %>\n*     <%- get_domain(url) %>\n*     <%- post_count() %>\n*     <%- category_count() %>\n*     <%- tag_count() %>\n*     <%- duration() %>\n*     <%- word_count(content) %>\n*     <%- md5(data) %>\n*     <%- meta() %>\n*     <%- hexo_version() %>\n */\nconst URL = require('url').URL;\nconst moment = require('moment');\nconst crypto = require('crypto');\n\nmodule.exports = function (hexo) {\n    hexo.extend.helper.register('is_same_link', function (a, b) {\n        function santize(url) {\n            let paths = url.replace(/(^\\w+:|^)\\/\\//, '').split('#')[0].split('/').filter(p => p.trim() !== '');\n            if (paths.length > 0 && paths[paths.length - 1].trim() === 'index.html') {\n                paths = paths.slice(0, paths.length - 1)\n            }\n            return paths.join('/');\n        }\n        return santize(this.url_for(a)) == santize(this.url_for(b));\n    });\n\n    hexo.extend.helper.register('get_domain', function (link) {\n        const url = new URL(link);\n        return url.hostname;\n    });\n\n    hexo.extend.helper.register('post_count', function () {\n        return this.site.posts.length;\n    });\n\n    hexo.extend.helper.register('category_count', function () {\n        return this.site.categories.filter(category => category.length).length;\n    });\n\n    hexo.extend.helper.register('tag_count', function () {\n        return this.site.tags.filter(tag => tag.length).length;\n    });\n\n    /**\n     * Export moment.duration\n     */\n    hexo.extend.helper.register('duration', function () {\n        return moment.duration.apply(moment, arguments);\n    });\n\n    /**\n     * Get the word count of a paragraph.\n     */\n    hexo.extend.helper.register('word_count', function (content) {\n        content = content.replace(/<\\/?[a-z][^>]*>/gi, '');\n        content = content.trim();\n        return content ? (content.match(/[\\u00ff-\\uffff]|[a-zA-Z]+/g) || []).length : 0;\n    });\n\n    hexo.extend.helper.register('md5', function (data) {\n        return crypto.createHash('md5').update(data).digest(\"hex\");\n    });\n\n    hexo.extend.helper.register('meta', function () {\n        function trim(str) {\n            return str.trim().replace(/^\"(.*)\"$/, '$1').replace(/^'(.*)'$/, '$1');\n        }\n    \n        function split(str, sep) {\n            const result = [];\n            let matched = null;\n            while (matched = sep.exec(str)) {\n                result.push(matched[0]);\n            }\n            return result;\n        }\n\n        const getConfig = hexo.extend.helper.get('get_config').bind(this);\n        const metas = getConfig('meta', []);\n        const metaDOMArray = metas.map(function (meta) {\n            const entities = split(meta, /(?:[^\\\\;]+|\\\\.)+/g);\n            const entityArray = entities.map(function (entity) {\n                const keyValue = split(entity, /(?:[^\\\\=]+|\\\\.)+/g);\n                if (keyValue.length < 2) {\n                    return null;\n                }\n                const key = trim(keyValue[0]);\n                const value = trim(keyValue[1]);\n                return key + '=\"' + value + '\"';\n            }).filter(function (entity) {\n                return entity;\n            });\n            return '<meta ' + entityArray.join(' ') + ' />';\n        });\n        return metaDOMArray.join('\\n');\n    });\n\n    hexo.extend.helper.register('hexo_version', function (data) {\n        return hexo.version;\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525717
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/layout/comment\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/layout/comment/valine.locals.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/comment",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/layout/comment/valine.locals.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/layout/comment/valine.locals.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/layout/comment/valine.locals.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/layout/comment",
        "sourceFileName": "valine.locals.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (ctx, locals) {\n  return locals;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGluZS5sb2NhbHMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImN0eCIsImxvY2FscyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLEdBQUQsRUFBTUMsTUFBTixFQUFpQjtBQUM5QixTQUFPQSxNQUFQO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvbGF5b3V0L2NvbW1lbnQiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChjdHgsIGxvY2FscykgPT4ge1xuICAgIHJldHVybiBsb2NhbHM7XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "valine.locals.js"
      ],
      "names": [
        "module",
        "exports",
        "ctx",
        "locals"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC9B,SAAOA,MAAP;AACH,CAFD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/comment",
      "sourcesContent": [
        "module.exports = (ctx, locals) => {\n    return locals;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525753
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/layout/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/layout/common/article.locals.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/layout/common/article.locals.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/layout/common/article.locals.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/layout/common/article.locals.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/layout/common",
        "sourceFileName": "article.locals.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (ctx, locals) {\n  var index = locals.index,\n      _post = locals.post;\n  return Object.assign(locals, {\n    index: index,\n    post: function post() {\n      return _post;\n    },\n    post_id: _post._id\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFydGljbGUubG9jYWxzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjdHgiLCJsb2NhbHMiLCJpbmRleCIsInBvc3QiLCJPYmplY3QiLCJhc3NpZ24iLCJwb3N0X2lkIiwiX2lkIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsR0FBRCxFQUFNQyxNQUFOLEVBQWlCO0FBQUEsTUFDdEJDLEtBRHNCLEdBQ05ELE1BRE0sQ0FDdEJDLEtBRHNCO0FBQUEsTUFDZkMsS0FEZSxHQUNORixNQURNLENBQ2ZFLElBRGU7QUFFOUIsU0FBT0MsTUFBTSxDQUFDQyxNQUFQLENBQWNKLE1BQWQsRUFBc0I7QUFDekJDLElBQUFBLEtBQUssRUFBTEEsS0FEeUI7QUFFekJDLElBQUFBLElBQUksRUFBRTtBQUFBLGFBQU1BLEtBQU47QUFBQSxLQUZtQjtBQUd6QkcsSUFBQUEsT0FBTyxFQUFFSCxLQUFJLENBQUNJO0FBSFcsR0FBdEIsQ0FBUDtBQUtILENBUEQiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2xheW91dC9jb21tb24iLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChjdHgsIGxvY2FscykgPT4ge1xuICAgIGNvbnN0IHsgaW5kZXgsIHBvc3QgfSA9IGxvY2FscztcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihsb2NhbHMsIHtcbiAgICAgICAgaW5kZXgsXG4gICAgICAgIHBvc3Q6ICgpID0+IHBvc3QsXG4gICAgICAgIHBvc3RfaWQ6IHBvc3QuX2lkXG4gICAgfSk7XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "article.locals.js"
      ],
      "names": [
        "module",
        "exports",
        "ctx",
        "locals",
        "index",
        "post",
        "Object",
        "assign",
        "post_id",
        "_id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAAA,MACtBC,KADsB,GACND,MADM,CACtBC,KADsB;AAAA,MACfC,KADe,GACNF,MADM,CACfE,IADe;AAE9B,SAAOC,MAAM,CAACC,MAAP,CAAcJ,MAAd,EAAsB;AACzBC,IAAAA,KAAK,EAALA,KADyB;AAEzBC,IAAAA,IAAI,EAAE;AAAA,aAAMA,KAAN;AAAA,KAFmB;AAGzBG,IAAAA,OAAO,EAAEH,KAAI,CAACI;AAHW,GAAtB,CAAP;AAKH,CAPD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/common",
      "sourcesContent": [
        "module.exports = (ctx, locals) => {\n    const { index, post } = locals;\n    return Object.assign(locals, {\n        index,\n        post: () => post,\n        post_id: post._id\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525753
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/layout/plugin\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/layout/plugin/gallery.locals.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/layout/plugin/gallery.locals.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/layout/plugin/gallery.locals.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/layout/plugin/gallery.locals.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
        "sourceFileName": "gallery.locals.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (ctx, locals) {\n  if (!locals.plugin) {\n    return null;\n  }\n\n  return locals;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbGxlcnkubG9jYWxzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjdHgiLCJsb2NhbHMiLCJwbHVnaW4iXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxHQUFELEVBQU1DLE1BQU4sRUFBaUI7QUFDOUIsTUFBSSxDQUFDQSxNQUFNLENBQUNDLE1BQVosRUFBb0I7QUFDaEIsV0FBTyxJQUFQO0FBQ0g7O0FBQ0QsU0FBT0QsTUFBUDtBQUNILENBTEQiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2xheW91dC9wbHVnaW4iLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChjdHgsIGxvY2FscykgPT4ge1xuICAgIGlmICghbG9jYWxzLnBsdWdpbikge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGxvY2Fscztcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gallery.locals.js"
      ],
      "names": [
        "module",
        "exports",
        "ctx",
        "locals",
        "plugin"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC9B,MAAI,CAACA,MAAM,CAACC,MAAZ,EAAoB;AAChB,WAAO,IAAP;AACH;;AACD,SAAOD,MAAP;AACH,CALD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "sourcesContent": [
        "module.exports = (ctx, locals) => {\n    if (!locals.plugin) {\n        return null;\n    }\n    return locals;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525765
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/layout/plugin\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/layout/plugin/outdated-browser.locals.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/layout/plugin/outdated-browser.locals.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/layout/plugin/outdated-browser.locals.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/layout/plugin/outdated-browser.locals.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
        "sourceFileName": "outdated-browser.locals.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (ctx, locals) {\n  if (!locals.plugin) {\n    return null;\n  }\n\n  return locals;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm91dGRhdGVkLWJyb3dzZXIubG9jYWxzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjdHgiLCJsb2NhbHMiLCJwbHVnaW4iXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxHQUFELEVBQU1DLE1BQU4sRUFBaUI7QUFDOUIsTUFBSSxDQUFDQSxNQUFNLENBQUNDLE1BQVosRUFBb0I7QUFDaEIsV0FBTyxJQUFQO0FBQ0g7O0FBQ0QsU0FBT0QsTUFBUDtBQUNILENBTEQiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2xheW91dC9wbHVnaW4iLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChjdHgsIGxvY2FscykgPT4ge1xuICAgIGlmICghbG9jYWxzLnBsdWdpbikge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGxvY2Fscztcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "outdated-browser.locals.js"
      ],
      "names": [
        "module",
        "exports",
        "ctx",
        "locals",
        "plugin"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC9B,MAAI,CAACA,MAAM,CAACC,MAAZ,EAAoB;AAChB,WAAO,IAAP;AACH;;AACD,SAAOD,MAAP;AACH,CALD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "sourcesContent": [
        "module.exports = (ctx, locals) => {\n    if (!locals.plugin) {\n        return null;\n    }\n    return locals;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525769
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/layout/plugin\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/layout/plugin/animejs.locals.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/layout/plugin/animejs.locals.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/layout/plugin/animejs.locals.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/layout/plugin/animejs.locals.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
        "sourceFileName": "animejs.locals.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (ctx, locals) {\n  var plugin = locals.plugin;\n\n  if (!plugin) {\n    return null;\n  }\n\n  return locals;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuaW1lanMubG9jYWxzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjdHgiLCJsb2NhbHMiLCJwbHVnaW4iXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxHQUFELEVBQU1DLE1BQU4sRUFBaUI7QUFBQSxNQUN0QkMsTUFEc0IsR0FDWEQsTUFEVyxDQUN0QkMsTUFEc0I7O0FBRTlCLE1BQUksQ0FBQ0EsTUFBTCxFQUFhO0FBQ1QsV0FBTyxJQUFQO0FBQ0g7O0FBQ0QsU0FBT0QsTUFBUDtBQUNILENBTkQiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2xheW91dC9wbHVnaW4iLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChjdHgsIGxvY2FscykgPT4ge1xuICAgIGNvbnN0IHsgcGx1Z2luIH0gPSBsb2NhbHM7XG4gICAgaWYgKCFwbHVnaW4pIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBsb2NhbHM7XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "animejs.locals.js"
      ],
      "names": [
        "module",
        "exports",
        "ctx",
        "locals",
        "plugin"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAAA,MACtBC,MADsB,GACXD,MADW,CACtBC,MADsB;;AAE9B,MAAI,CAACA,MAAL,EAAa;AACT,WAAO,IAAP;AACH;;AACD,SAAOD,MAAP;AACH,CAND",
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "sourcesContent": [
        "module.exports = (ctx, locals) => {\n    const { plugin } = locals;\n    if (!plugin) {\n        return null;\n    }\n    return locals;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525761
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/layout/plugin\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/layout/plugin/mathjax.locals.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/layout/plugin/mathjax.locals.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/layout/plugin/mathjax.locals.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/layout/plugin/mathjax.locals.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
        "sourceFileName": "mathjax.locals.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (ctx, locals) {\n  var head = locals.head,\n      plugin = locals.plugin;\n\n  if (head || !plugin) {\n    return null;\n  }\n\n  return locals;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hdGhqYXgubG9jYWxzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjdHgiLCJsb2NhbHMiLCJoZWFkIiwicGx1Z2luIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsR0FBRCxFQUFNQyxNQUFOLEVBQWlCO0FBQUEsTUFDdEJDLElBRHNCLEdBQ0xELE1BREssQ0FDdEJDLElBRHNCO0FBQUEsTUFDaEJDLE1BRGdCLEdBQ0xGLE1BREssQ0FDaEJFLE1BRGdCOztBQUU5QixNQUFJRCxJQUFJLElBQUksQ0FBQ0MsTUFBYixFQUFxQjtBQUNqQixXQUFPLElBQVA7QUFDSDs7QUFDRCxTQUFPRixNQUFQO0FBQ0gsQ0FORCIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvbGF5b3V0L3BsdWdpbiIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKGN0eCwgbG9jYWxzKSA9PiB7XG4gICAgY29uc3QgeyBoZWFkLCBwbHVnaW4gfSA9IGxvY2FscztcbiAgICBpZiAoaGVhZCB8fCAhcGx1Z2luKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gbG9jYWxzO1xufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "mathjax.locals.js"
      ],
      "names": [
        "module",
        "exports",
        "ctx",
        "locals",
        "head",
        "plugin"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAAA,MACtBC,IADsB,GACLD,MADK,CACtBC,IADsB;AAAA,MAChBC,MADgB,GACLF,MADK,CAChBE,MADgB;;AAE9B,MAAID,IAAI,IAAI,CAACC,MAAb,EAAqB;AACjB,WAAO,IAAP;AACH;;AACD,SAAOF,MAAP;AACH,CAND",
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "sourcesContent": [
        "module.exports = (ctx, locals) => {\n    const { head, plugin } = locals;\n    if (head || !plugin) {\n        return null;\n    }\n    return locals;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525769
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/layout/plugin\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/layout/plugin/back-to-top.locals.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/layout/plugin/back-to-top.locals.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/layout/plugin/back-to-top.locals.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/layout/plugin/back-to-top.locals.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
        "sourceFileName": "back-to-top.locals.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (ctx, locals) {\n  var plugin = locals.plugin;\n\n  if (!plugin) {\n    return null;\n  }\n\n  return locals;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhY2stdG8tdG9wLmxvY2Fscy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY3R4IiwibG9jYWxzIiwicGx1Z2luIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsR0FBRCxFQUFNQyxNQUFOLEVBQWlCO0FBQUEsTUFDdEJDLE1BRHNCLEdBQ1hELE1BRFcsQ0FDdEJDLE1BRHNCOztBQUU5QixNQUFJLENBQUNBLE1BQUwsRUFBYTtBQUNULFdBQU8sSUFBUDtBQUNIOztBQUNELFNBQU9ELE1BQVA7QUFDSCxDQU5EIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1cy9sYXlvdXQvcGx1Z2luIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAoY3R4LCBsb2NhbHMpID0+IHtcbiAgICBjb25zdCB7IHBsdWdpbiB9ID0gbG9jYWxzO1xuICAgIGlmICghcGx1Z2luKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gbG9jYWxzO1xufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "back-to-top.locals.js"
      ],
      "names": [
        "module",
        "exports",
        "ctx",
        "locals",
        "plugin"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAAA,MACtBC,MADsB,GACXD,MADW,CACtBC,MADsB;;AAE9B,MAAI,CAACA,MAAL,EAAa;AACT,WAAO,IAAP;AACH;;AACD,SAAOD,MAAP;AACH,CAND",
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "sourcesContent": [
        "module.exports = (ctx, locals) => {\n    const { plugin } = locals;\n    if (!plugin) {\n        return null;\n    }\n    return locals;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525761
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/layout/plugin\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/layout/plugin/google-analytics.locals.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/layout/plugin/google-analytics.locals.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/layout/plugin/google-analytics.locals.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/layout/plugin/google-analytics.locals.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
        "sourceFileName": "google-analytics.locals.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (ctx, locals) {\n  var head = locals.head,\n      plugin = locals.plugin;\n\n  if (!head || !plugin.tracking_id) {\n    return null;\n  }\n\n  return locals;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdvb2dsZS1hbmFseXRpY3MubG9jYWxzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjdHgiLCJsb2NhbHMiLCJoZWFkIiwicGx1Z2luIiwidHJhY2tpbmdfaWQiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxHQUFELEVBQU1DLE1BQU4sRUFBaUI7QUFBQSxNQUN0QkMsSUFEc0IsR0FDTEQsTUFESyxDQUN0QkMsSUFEc0I7QUFBQSxNQUNoQkMsTUFEZ0IsR0FDTEYsTUFESyxDQUNoQkUsTUFEZ0I7O0FBRTlCLE1BQUksQ0FBQ0QsSUFBRCxJQUFTLENBQUNDLE1BQU0sQ0FBQ0MsV0FBckIsRUFBa0M7QUFDOUIsV0FBTyxJQUFQO0FBQ0g7O0FBQ0QsU0FBT0gsTUFBUDtBQUNILENBTkQiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2xheW91dC9wbHVnaW4iLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChjdHgsIGxvY2FscykgPT4ge1xuICAgIGNvbnN0IHsgaGVhZCwgcGx1Z2luIH0gPSBsb2NhbHM7XG4gICAgaWYgKCFoZWFkIHx8ICFwbHVnaW4udHJhY2tpbmdfaWQpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBsb2NhbHM7XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "google-analytics.locals.js"
      ],
      "names": [
        "module",
        "exports",
        "ctx",
        "locals",
        "head",
        "plugin",
        "tracking_id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAAA,MACtBC,IADsB,GACLD,MADK,CACtBC,IADsB;AAAA,MAChBC,MADgB,GACLF,MADK,CAChBE,MADgB;;AAE9B,MAAI,CAACD,IAAD,IAAS,CAACC,MAAM,CAACC,WAArB,EAAkC;AAC9B,WAAO,IAAP;AACH;;AACD,SAAOH,MAAP;AACH,CAND",
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "sourcesContent": [
        "module.exports = (ctx, locals) => {\n    const { head, plugin } = locals;\n    if (!head || !plugin.tracking_id) {\n        return null;\n    }\n    return locals;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525765
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/layout/plugin\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/layout/plugin/baidu-analytics.locals.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/layout/plugin/baidu-analytics.locals.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/layout/plugin/baidu-analytics.locals.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/layout/plugin/baidu-analytics.locals.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
        "sourceFileName": "baidu-analytics.locals.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (ctx, locals) {\n  var head = locals.head,\n      plugin = locals.plugin;\n\n  if (!head || !plugin.tracking_id) {\n    return null;\n  }\n\n  return locals;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhaWR1LWFuYWx5dGljcy5sb2NhbHMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImN0eCIsImxvY2FscyIsImhlYWQiLCJwbHVnaW4iLCJ0cmFja2luZ19pZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLEdBQUQsRUFBTUMsTUFBTixFQUFpQjtBQUFBLE1BQ3RCQyxJQURzQixHQUNMRCxNQURLLENBQ3RCQyxJQURzQjtBQUFBLE1BQ2hCQyxNQURnQixHQUNMRixNQURLLENBQ2hCRSxNQURnQjs7QUFFOUIsTUFBSSxDQUFDRCxJQUFELElBQVMsQ0FBQ0MsTUFBTSxDQUFDQyxXQUFyQixFQUFrQztBQUM5QixXQUFPLElBQVA7QUFDSDs7QUFDRCxTQUFPSCxNQUFQO0FBQ0gsQ0FORCIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvbGF5b3V0L3BsdWdpbiIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKGN0eCwgbG9jYWxzKSA9PiB7XG4gICAgY29uc3QgeyBoZWFkLCBwbHVnaW4gfSA9IGxvY2FscztcbiAgICBpZiAoIWhlYWQgfHwgIXBsdWdpbi50cmFja2luZ19pZCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGxvY2Fscztcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "baidu-analytics.locals.js"
      ],
      "names": [
        "module",
        "exports",
        "ctx",
        "locals",
        "head",
        "plugin",
        "tracking_id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAAA,MACtBC,IADsB,GACLD,MADK,CACtBC,IADsB;AAAA,MAChBC,MADgB,GACLF,MADK,CAChBE,MADgB;;AAE9B,MAAI,CAACD,IAAD,IAAS,CAACC,MAAM,CAACC,WAArB,EAAkC;AAC9B,WAAO,IAAP;AACH;;AACD,SAAOH,MAAP;AACH,CAND",
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "sourcesContent": [
        "module.exports = (ctx, locals) => {\n    const { head, plugin } = locals;\n    if (!head || !plugin.tracking_id) {\n        return null;\n    }\n    return locals;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525765
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/layout/plugin\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/layout/plugin/hotjar.locals.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/layout/plugin/hotjar.locals.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/layout/plugin/hotjar.locals.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/layout/plugin/hotjar.locals.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
        "sourceFileName": "hotjar.locals.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (ctx, locals) {\n  var head = locals.head,\n      plugin = locals.plugin;\n\n  if (!head || !plugin.site_id) {\n    return null;\n  }\n\n  return locals;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvdGphci5sb2NhbHMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImN0eCIsImxvY2FscyIsImhlYWQiLCJwbHVnaW4iLCJzaXRlX2lkIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsR0FBRCxFQUFNQyxNQUFOLEVBQWlCO0FBQUEsTUFDdEJDLElBRHNCLEdBQ0xELE1BREssQ0FDdEJDLElBRHNCO0FBQUEsTUFDaEJDLE1BRGdCLEdBQ0xGLE1BREssQ0FDaEJFLE1BRGdCOztBQUU5QixNQUFJLENBQUNELElBQUQsSUFBUyxDQUFDQyxNQUFNLENBQUNDLE9BQXJCLEVBQThCO0FBQzFCLFdBQU8sSUFBUDtBQUNIOztBQUNELFNBQU9ILE1BQVA7QUFDSCxDQU5EIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1cy9sYXlvdXQvcGx1Z2luIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAoY3R4LCBsb2NhbHMpID0+IHtcbiAgICBjb25zdCB7IGhlYWQsIHBsdWdpbiB9ID0gbG9jYWxzO1xuICAgIGlmICghaGVhZCB8fCAhcGx1Z2luLnNpdGVfaWQpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBsb2NhbHM7XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "hotjar.locals.js"
      ],
      "names": [
        "module",
        "exports",
        "ctx",
        "locals",
        "head",
        "plugin",
        "site_id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAAA,MACtBC,IADsB,GACLD,MADK,CACtBC,IADsB;AAAA,MAChBC,MADgB,GACLF,MADK,CAChBE,MADgB;;AAE9B,MAAI,CAACD,IAAD,IAAS,CAACC,MAAM,CAACC,OAArB,EAA8B;AAC1B,WAAO,IAAP;AACH;;AACD,SAAOH,MAAP;AACH,CAND",
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "sourcesContent": [
        "module.exports = (ctx, locals) => {\n    const { head, plugin } = locals;\n    if (!head || !plugin.site_id) {\n        return null;\n    }\n    return locals;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525769
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/layout/plugin\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/layout/plugin/busuanzi.locals.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/layout/plugin/busuanzi.locals.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/layout/plugin/busuanzi.locals.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/layout/plugin/busuanzi.locals.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
        "sourceFileName": "busuanzi.locals.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (ctx, locals) {\n  var head = locals.head,\n      plugin = locals.plugin;\n\n  if (!head || !plugin) {\n    return null;\n  }\n\n  return locals;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1c3VhbnppLmxvY2Fscy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY3R4IiwibG9jYWxzIiwiaGVhZCIsInBsdWdpbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLEdBQUQsRUFBTUMsTUFBTixFQUFpQjtBQUFBLE1BQ3RCQyxJQURzQixHQUNMRCxNQURLLENBQ3RCQyxJQURzQjtBQUFBLE1BQ2hCQyxNQURnQixHQUNMRixNQURLLENBQ2hCRSxNQURnQjs7QUFFOUIsTUFBSSxDQUFDRCxJQUFELElBQVMsQ0FBQ0MsTUFBZCxFQUFzQjtBQUNsQixXQUFPLElBQVA7QUFDSDs7QUFDRCxTQUFPRixNQUFQO0FBQ0gsQ0FORCIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvbGF5b3V0L3BsdWdpbiIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKGN0eCwgbG9jYWxzKSA9PiB7XG4gICAgY29uc3QgeyBoZWFkLCBwbHVnaW4gfSA9IGxvY2FscztcbiAgICBpZiAoIWhlYWQgfHwgIXBsdWdpbikge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGxvY2Fscztcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "busuanzi.locals.js"
      ],
      "names": [
        "module",
        "exports",
        "ctx",
        "locals",
        "head",
        "plugin"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAAA,MACtBC,IADsB,GACLD,MADK,CACtBC,IADsB;AAAA,MAChBC,MADgB,GACLF,MADK,CAChBE,MADgB;;AAE9B,MAAI,CAACD,IAAD,IAAS,CAACC,MAAd,EAAsB;AAClB,WAAO,IAAP;AACH;;AACD,SAAOF,MAAP;AACH,CAND",
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "sourcesContent": [
        "module.exports = (ctx, locals) => {\n    const { head, plugin } = locals;\n    if (!head || !plugin) {\n        return null;\n    }\n    return locals;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525765
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/layout/plugin\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/layout/plugin/progressbar.locals.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/layout/plugin/progressbar.locals.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/layout/plugin/progressbar.locals.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/layout/plugin/progressbar.locals.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
        "sourceFileName": "progressbar.locals.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (ctx, locals) {\n  var head = locals.head,\n      plugin = locals.plugin;\n\n  if (!head || !plugin) {\n    return null;\n  }\n\n  return locals;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2dyZXNzYmFyLmxvY2Fscy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY3R4IiwibG9jYWxzIiwiaGVhZCIsInBsdWdpbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLEdBQUQsRUFBTUMsTUFBTixFQUFpQjtBQUFBLE1BQ3RCQyxJQURzQixHQUNMRCxNQURLLENBQ3RCQyxJQURzQjtBQUFBLE1BQ2hCQyxNQURnQixHQUNMRixNQURLLENBQ2hCRSxNQURnQjs7QUFFOUIsTUFBSSxDQUFDRCxJQUFELElBQVMsQ0FBQ0MsTUFBZCxFQUFzQjtBQUNsQixXQUFPLElBQVA7QUFDSDs7QUFDRCxTQUFPRixNQUFQO0FBQ0gsQ0FORCIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvbGF5b3V0L3BsdWdpbiIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKGN0eCwgbG9jYWxzKSA9PiB7XG4gICAgY29uc3QgeyBoZWFkLCBwbHVnaW4gfSA9IGxvY2FscztcbiAgICBpZiAoIWhlYWQgfHwgIXBsdWdpbikge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGxvY2Fscztcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "progressbar.locals.js"
      ],
      "names": [
        "module",
        "exports",
        "ctx",
        "locals",
        "head",
        "plugin"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAAA,MACtBC,IADsB,GACLD,MADK,CACtBC,IADsB;AAAA,MAChBC,MADgB,GACLF,MADK,CAChBE,MADgB;;AAE9B,MAAI,CAACD,IAAD,IAAS,CAACC,MAAd,EAAsB;AAClB,WAAO,IAAP;AACH;;AACD,SAAOF,MAAP;AACH,CAND",
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/plugin",
      "sourcesContent": [
        "module.exports = (ctx, locals) => {\n    const { head, plugin } = locals;\n    if (!head || !plugin) {\n        return null;\n    }\n    return locals;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525769
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/layout/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/layout/common/navbar.locals.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/layout/common/navbar.locals.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/layout/common/navbar.locals.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/layout/common/navbar.locals.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/layout/common",
        "sourceFileName": "navbar.locals.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (ctx, locals) {\n  var get_config = ctx.get_config,\n      has_config = ctx.has_config,\n      has_widget = ctx.has_widget,\n      is_same_link = ctx.is_same_link,\n      page = ctx.page;\n  var menus = get_config('navbar.menu', {});\n  var actives = {};\n  Object.keys(menus).forEach(function (i) {\n    actives[i] = typeof page.path !== 'undefined' && is_same_link(menus[i], page.path);\n  });\n  var hasToc = get_config('toc') === true && has_widget('toc') && (page.layout === 'page' || page.layout === 'post');\n  return Object.assign(locals, {\n    hasToc: hasToc,\n    menus: menus,\n    actives: actives,\n    title: get_config('title'),\n    logo: get_config('logo'),\n    links: get_config('navbar.links', []),\n    search: has_config('search.type')\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5hdmJhci5sb2NhbHMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImN0eCIsImxvY2FscyIsImdldF9jb25maWciLCJoYXNfY29uZmlnIiwiaGFzX3dpZGdldCIsImlzX3NhbWVfbGluayIsInBhZ2UiLCJtZW51cyIsImFjdGl2ZXMiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImkiLCJwYXRoIiwiaGFzVG9jIiwibGF5b3V0IiwiYXNzaWduIiwidGl0bGUiLCJsb2dvIiwibGlua3MiLCJzZWFyY2giXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxHQUFELEVBQU1DLE1BQU4sRUFBaUI7QUFBQSxNQUN0QkMsVUFEc0IsR0FDcUNGLEdBRHJDLENBQ3RCRSxVQURzQjtBQUFBLE1BQ1ZDLFVBRFUsR0FDcUNILEdBRHJDLENBQ1ZHLFVBRFU7QUFBQSxNQUNFQyxVQURGLEdBQ3FDSixHQURyQyxDQUNFSSxVQURGO0FBQUEsTUFDY0MsWUFEZCxHQUNxQ0wsR0FEckMsQ0FDY0ssWUFEZDtBQUFBLE1BQzRCQyxJQUQ1QixHQUNxQ04sR0FEckMsQ0FDNEJNLElBRDVCO0FBRTlCLE1BQU1DLEtBQUssR0FBR0wsVUFBVSxDQUFDLGFBQUQsRUFBZ0IsRUFBaEIsQ0FBeEI7QUFDQSxNQUFNTSxPQUFPLEdBQUcsRUFBaEI7QUFDQUMsRUFBQUEsTUFBTSxDQUFDQyxJQUFQLENBQVlILEtBQVosRUFBbUJJLE9BQW5CLENBQTJCLFVBQUFDLENBQUMsRUFBSTtBQUM1QkosSUFBQUEsT0FBTyxDQUFDSSxDQUFELENBQVAsR0FBYSxPQUFPTixJQUFJLENBQUNPLElBQVosS0FBcUIsV0FBckIsSUFBb0NSLFlBQVksQ0FBQ0UsS0FBSyxDQUFDSyxDQUFELENBQU4sRUFBV04sSUFBSSxDQUFDTyxJQUFoQixDQUE3RDtBQUNILEdBRkQ7QUFHQSxNQUFNQyxNQUFNLEdBQUdaLFVBQVUsQ0FBQyxLQUFELENBQVYsS0FBc0IsSUFBdEIsSUFBOEJFLFVBQVUsQ0FBQyxLQUFELENBQXhDLEtBQW9ERSxJQUFJLENBQUNTLE1BQUwsS0FBZ0IsTUFBaEIsSUFBMEJULElBQUksQ0FBQ1MsTUFBTCxLQUFnQixNQUE5RixDQUFmO0FBQ0EsU0FBT04sTUFBTSxDQUFDTyxNQUFQLENBQWNmLE1BQWQsRUFBc0I7QUFDekJhLElBQUFBLE1BQU0sRUFBTkEsTUFEeUI7QUFFekJQLElBQUFBLEtBQUssRUFBTEEsS0FGeUI7QUFHekJDLElBQUFBLE9BQU8sRUFBUEEsT0FIeUI7QUFJekJTLElBQUFBLEtBQUssRUFBRWYsVUFBVSxDQUFDLE9BQUQsQ0FKUTtBQUt6QmdCLElBQUFBLElBQUksRUFBRWhCLFVBQVUsQ0FBQyxNQUFELENBTFM7QUFNekJpQixJQUFBQSxLQUFLLEVBQUVqQixVQUFVLENBQUMsY0FBRCxFQUFpQixFQUFqQixDQU5RO0FBT3pCa0IsSUFBQUEsTUFBTSxFQUFFakIsVUFBVSxDQUFDLGFBQUQ7QUFQTyxHQUF0QixDQUFQO0FBU0gsQ0FqQkQiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2xheW91dC9jb21tb24iLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChjdHgsIGxvY2FscykgPT4ge1xuICAgIGNvbnN0IHsgZ2V0X2NvbmZpZywgaGFzX2NvbmZpZywgaGFzX3dpZGdldCwgaXNfc2FtZV9saW5rLCBwYWdlIH0gPSBjdHg7XG4gICAgY29uc3QgbWVudXMgPSBnZXRfY29uZmlnKCduYXZiYXIubWVudScsIHt9KTtcbiAgICBjb25zdCBhY3RpdmVzID0ge307XG4gICAgT2JqZWN0LmtleXMobWVudXMpLmZvckVhY2goaSA9PiB7XG4gICAgICAgIGFjdGl2ZXNbaV0gPSB0eXBlb2YgcGFnZS5wYXRoICE9PSAndW5kZWZpbmVkJyAmJiBpc19zYW1lX2xpbmsobWVudXNbaV0sIHBhZ2UucGF0aClcbiAgICB9KTtcbiAgICBjb25zdCBoYXNUb2MgPSBnZXRfY29uZmlnKCd0b2MnKSA9PT0gdHJ1ZSAmJiBoYXNfd2lkZ2V0KCd0b2MnKSAmJiAocGFnZS5sYXlvdXQgPT09ICdwYWdlJyB8fCBwYWdlLmxheW91dCA9PT0gJ3Bvc3QnKTtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihsb2NhbHMsIHtcbiAgICAgICAgaGFzVG9jLFxuICAgICAgICBtZW51cyxcbiAgICAgICAgYWN0aXZlcyxcbiAgICAgICAgdGl0bGU6IGdldF9jb25maWcoJ3RpdGxlJyksXG4gICAgICAgIGxvZ286IGdldF9jb25maWcoJ2xvZ28nKSxcbiAgICAgICAgbGlua3M6IGdldF9jb25maWcoJ25hdmJhci5saW5rcycsIFtdKSxcbiAgICAgICAgc2VhcmNoOiBoYXNfY29uZmlnKCdzZWFyY2gudHlwZScpXG4gICAgfSk7XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "navbar.locals.js"
      ],
      "names": [
        "module",
        "exports",
        "ctx",
        "locals",
        "get_config",
        "has_config",
        "has_widget",
        "is_same_link",
        "page",
        "menus",
        "actives",
        "Object",
        "keys",
        "forEach",
        "i",
        "path",
        "hasToc",
        "layout",
        "assign",
        "title",
        "logo",
        "links",
        "search"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAAA,MACtBC,UADsB,GACqCF,GADrC,CACtBE,UADsB;AAAA,MACVC,UADU,GACqCH,GADrC,CACVG,UADU;AAAA,MACEC,UADF,GACqCJ,GADrC,CACEI,UADF;AAAA,MACcC,YADd,GACqCL,GADrC,CACcK,YADd;AAAA,MAC4BC,IAD5B,GACqCN,GADrC,CAC4BM,IAD5B;AAE9B,MAAMC,KAAK,GAAGL,UAAU,CAAC,aAAD,EAAgB,EAAhB,CAAxB;AACA,MAAMM,OAAO,GAAG,EAAhB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA2B,UAAAC,CAAC,EAAI;AAC5BJ,IAAAA,OAAO,CAACI,CAAD,CAAP,GAAa,OAAON,IAAI,CAACO,IAAZ,KAAqB,WAArB,IAAoCR,YAAY,CAACE,KAAK,CAACK,CAAD,CAAN,EAAWN,IAAI,CAACO,IAAhB,CAA7D;AACH,GAFD;AAGA,MAAMC,MAAM,GAAGZ,UAAU,CAAC,KAAD,CAAV,KAAsB,IAAtB,IAA8BE,UAAU,CAAC,KAAD,CAAxC,KAAoDE,IAAI,CAACS,MAAL,KAAgB,MAAhB,IAA0BT,IAAI,CAACS,MAAL,KAAgB,MAA9F,CAAf;AACA,SAAON,MAAM,CAACO,MAAP,CAAcf,MAAd,EAAsB;AACzBa,IAAAA,MAAM,EAANA,MADyB;AAEzBP,IAAAA,KAAK,EAALA,KAFyB;AAGzBC,IAAAA,OAAO,EAAPA,OAHyB;AAIzBS,IAAAA,KAAK,EAAEf,UAAU,CAAC,OAAD,CAJQ;AAKzBgB,IAAAA,IAAI,EAAEhB,UAAU,CAAC,MAAD,CALS;AAMzBiB,IAAAA,KAAK,EAAEjB,UAAU,CAAC,cAAD,EAAiB,EAAjB,CANQ;AAOzBkB,IAAAA,MAAM,EAAEjB,UAAU,CAAC,aAAD;AAPO,GAAtB,CAAP;AASH,CAjBD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/common",
      "sourcesContent": [
        "module.exports = (ctx, locals) => {\n    const { get_config, has_config, has_widget, is_same_link, page } = ctx;\n    const menus = get_config('navbar.menu', {});\n    const actives = {};\n    Object.keys(menus).forEach(i => {\n        actives[i] = typeof page.path !== 'undefined' && is_same_link(menus[i], page.path)\n    });\n    const hasToc = get_config('toc') === true && has_widget('toc') && (page.layout === 'page' || page.layout === 'post');\n    return Object.assign(locals, {\n        hasToc,\n        menus,\n        actives,\n        title: get_config('title'),\n        logo: get_config('logo'),\n        links: get_config('navbar.links', []),\n        search: has_config('search.type')\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525757
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/layout/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/layout/common/footer.locals.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/layout/common/footer.locals.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/layout/common/footer.locals.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/layout/common/footer.locals.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/layout/common",
        "sourceFileName": "footer.locals.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (ctx, locals) {\n  var get_config = ctx.get_config;\n  return Object.assign(locals, {\n    title: get_config('title'),\n    author: get_config('author'),\n    logo: get_config('logo'),\n    busuanzi: get_config('plugins.busuanzi', false),\n    links: get_config('footer.links', [])\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvb3Rlci5sb2NhbHMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImN0eCIsImxvY2FscyIsImdldF9jb25maWciLCJPYmplY3QiLCJhc3NpZ24iLCJ0aXRsZSIsImF1dGhvciIsImxvZ28iLCJidXN1YW56aSIsImxpbmtzIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsR0FBRCxFQUFNQyxNQUFOLEVBQWlCO0FBQUEsTUFDdEJDLFVBRHNCLEdBQ1BGLEdBRE8sQ0FDdEJFLFVBRHNCO0FBRTlCLFNBQU9DLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjSCxNQUFkLEVBQXNCO0FBQ3pCSSxJQUFBQSxLQUFLLEVBQUVILFVBQVUsQ0FBQyxPQUFELENBRFE7QUFFekJJLElBQUFBLE1BQU0sRUFBRUosVUFBVSxDQUFDLFFBQUQsQ0FGTztBQUd6QkssSUFBQUEsSUFBSSxFQUFFTCxVQUFVLENBQUMsTUFBRCxDQUhTO0FBSXpCTSxJQUFBQSxRQUFRLEVBQUVOLFVBQVUsQ0FBQyxrQkFBRCxFQUFxQixLQUFyQixDQUpLO0FBS3pCTyxJQUFBQSxLQUFLLEVBQUVQLFVBQVUsQ0FBQyxjQUFELEVBQWlCLEVBQWpCO0FBTFEsR0FBdEIsQ0FBUDtBQU9ILENBVEQiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2xheW91dC9jb21tb24iLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChjdHgsIGxvY2FscykgPT4ge1xuICAgIGNvbnN0IHsgZ2V0X2NvbmZpZyB9ID0gY3R4O1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKGxvY2Fscywge1xuICAgICAgICB0aXRsZTogZ2V0X2NvbmZpZygndGl0bGUnKSxcbiAgICAgICAgYXV0aG9yOiBnZXRfY29uZmlnKCdhdXRob3InKSxcbiAgICAgICAgbG9nbzogZ2V0X2NvbmZpZygnbG9nbycpLFxuICAgICAgICBidXN1YW56aTogZ2V0X2NvbmZpZygncGx1Z2lucy5idXN1YW56aScsIGZhbHNlKSxcbiAgICAgICAgbGlua3M6IGdldF9jb25maWcoJ2Zvb3Rlci5saW5rcycsIFtdKVxuICAgIH0pO1xufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "footer.locals.js"
      ],
      "names": [
        "module",
        "exports",
        "ctx",
        "locals",
        "get_config",
        "Object",
        "assign",
        "title",
        "author",
        "logo",
        "busuanzi",
        "links"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAAA,MACtBC,UADsB,GACPF,GADO,CACtBE,UADsB;AAE9B,SAAOC,MAAM,CAACC,MAAP,CAAcH,MAAd,EAAsB;AACzBI,IAAAA,KAAK,EAAEH,UAAU,CAAC,OAAD,CADQ;AAEzBI,IAAAA,MAAM,EAAEJ,UAAU,CAAC,QAAD,CAFO;AAGzBK,IAAAA,IAAI,EAAEL,UAAU,CAAC,MAAD,CAHS;AAIzBM,IAAAA,QAAQ,EAAEN,UAAU,CAAC,kBAAD,EAAqB,KAArB,CAJK;AAKzBO,IAAAA,KAAK,EAAEP,UAAU,CAAC,cAAD,EAAiB,EAAjB;AALQ,GAAtB,CAAP;AAOH,CATD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/common",
      "sourcesContent": [
        "module.exports = (ctx, locals) => {\n    const { get_config } = ctx;\n    return Object.assign(locals, {\n        title: get_config('title'),\n        author: get_config('author'),\n        logo: get_config('logo'),\n        busuanzi: get_config('plugins.busuanzi', false),\n        links: get_config('footer.links', [])\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525753
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/layout/search\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/layout/search/insight.locals.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/search",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/layout/search/insight.locals.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/layout/search/insight.locals.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/layout/search/insight.locals.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/layout/search",
        "sourceFileName": "insight.locals.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (ctx, locals) {\n  return locals;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluc2lnaHQubG9jYWxzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjdHgiLCJsb2NhbHMiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxHQUFELEVBQU1DLE1BQU4sRUFBaUI7QUFDOUIsU0FBT0EsTUFBUDtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2xheW91dC9zZWFyY2giLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChjdHgsIGxvY2FscykgPT4ge1xuICAgIHJldHVybiBsb2NhbHM7XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "insight.locals.js"
      ],
      "names": [
        "module",
        "exports",
        "ctx",
        "locals"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC9B,SAAOA,MAAP;AACH,CAFD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/layout/search",
      "sourcesContent": [
        "module.exports = (ctx, locals) => {\n    return locals;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525773
  }
}
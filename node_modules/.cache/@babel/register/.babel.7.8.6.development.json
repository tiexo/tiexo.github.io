{
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/tasks\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/tasks/welcome.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/tasks/welcome.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/tasks/welcome.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/tasks/welcome.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
        "sourceFileName": "welcome.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar logger = require('hexo-log')();\n\nlogger.info(\"Welcome\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlbGNvbWUuanMiXSwibmFtZXMiOlsibG9nZ2VyIiwicmVxdWlyZSIsImluZm8iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUFQLEVBQWY7O0FBRUFELE1BQU0sQ0FBQ0UsSUFBUCIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvdGFza3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBsb2dnZXIgPSByZXF1aXJlKCdoZXhvLWxvZycpKCk7XG5cbmxvZ2dlci5pbmZvKGBXZWxjb21lYCk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "welcome.js"
      ],
      "names": [
        "logger",
        "require",
        "info"
      ],
      "mappings": ";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAP,EAAf;;AAEAD,MAAM,CAACE,IAAP",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
      "sourcesContent": [
        "const logger = require('hexo-log')();\n\nlogger.info(`Welcome`);"
      ]
    },
    "sourceType": "script",
    "mtime": 1575438244770
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/tasks\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/tasks/check_deps.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/tasks/check_deps.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/tasks/check_deps.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/tasks/check_deps.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
        "sourceFileName": "check_deps.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar logger = require('hexo-log')();\n\nfunction checkDependency(name) {\n  try {\n    require.resolve(name);\n\n    return true;\n  } catch (e) {\n    logger.error(\"Package \".concat(name, \" is not installed.\"));\n  }\n\n  return false;\n}\n\nlogger.info('Checking dependencies');\nvar missingDeps = ['js-yaml', 'moment', 'cheerio', 'hexo-util', 'hexo-log', 'hexo-pagination'].map(checkDependency).some(function (installed) {\n  return !installed;\n});\n\nif (missingDeps) {\n  logger.error('Please install the missing dependencies from the root directory of your Hexo site.');\n  process.exit(-1);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrX2RlcHMuanMiXSwibmFtZXMiOlsibG9nZ2VyIiwicmVxdWlyZSIsImNoZWNrRGVwZW5kZW5jeSIsIm5hbWUiLCJyZXNvbHZlIiwiZSIsImVycm9yIiwiaW5mbyIsIm1pc3NpbmdEZXBzIiwibWFwIiwic29tZSIsImluc3RhbGxlZCIsInByb2Nlc3MiLCJleGl0Il0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBUCxFQUFmOztBQUVBLFNBQVNDLGVBQVQsQ0FBeUJDLElBQXpCLEVBQStCO0FBQzNCLE1BQUk7QUFDQUYsSUFBQUEsT0FBTyxDQUFDRyxPQUFSLENBQWdCRCxJQUFoQjs7QUFDQSxXQUFPLElBQVA7QUFDSCxHQUhELENBR0UsT0FBTUUsQ0FBTixFQUFTO0FBQ1BMLElBQUFBLE1BQU0sQ0FBQ00sS0FBUCxtQkFBd0JILElBQXhCO0FBQ0g7O0FBQ0QsU0FBTyxLQUFQO0FBQ0g7O0FBRURILE1BQU0sQ0FBQ08sSUFBUCxDQUFZLHVCQUFaO0FBQ0EsSUFBTUMsV0FBVyxHQUFHLENBQ2hCLFNBRGdCLEVBRWhCLFFBRmdCLEVBR2hCLFNBSGdCLEVBSWhCLFdBSmdCLEVBS2hCLFVBTGdCLEVBTWhCLGlCQU5nQixFQU9sQkMsR0FQa0IsQ0FPZFAsZUFQYyxFQU9HUSxJQVBILENBT1EsVUFBQUMsU0FBUztBQUFBLFNBQUksQ0FBQ0EsU0FBTDtBQUFBLENBUGpCLENBQXBCOztBQVFBLElBQUlILFdBQUosRUFBaUI7QUFDYlIsRUFBQUEsTUFBTSxDQUFDTSxLQUFQLENBQWEsb0ZBQWI7QUFDQU0sRUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWEsQ0FBQyxDQUFkO0FBQ0giLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2luY2x1ZGVzL3Rhc2tzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbG9nZ2VyID0gcmVxdWlyZSgnaGV4by1sb2cnKSgpO1xuXG5mdW5jdGlvbiBjaGVja0RlcGVuZGVuY3kobmFtZSkge1xuICAgIHRyeSB7XG4gICAgICAgIHJlcXVpcmUucmVzb2x2ZShuYW1lKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaChlKSB7XG4gICAgICAgIGxvZ2dlci5lcnJvcihgUGFja2FnZSAke25hbWV9IGlzIG5vdCBpbnN0YWxsZWQuYClcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5sb2dnZXIuaW5mbygnQ2hlY2tpbmcgZGVwZW5kZW5jaWVzJyk7XG5jb25zdCBtaXNzaW5nRGVwcyA9IFtcbiAgICAnanMteWFtbCcsXG4gICAgJ21vbWVudCcsXG4gICAgJ2NoZWVyaW8nLFxuICAgICdoZXhvLXV0aWwnLFxuICAgICdoZXhvLWxvZycsXG4gICAgJ2hleG8tcGFnaW5hdGlvbicsXG5dLm1hcChjaGVja0RlcGVuZGVuY3kpLnNvbWUoaW5zdGFsbGVkID0+ICFpbnN0YWxsZWQpO1xuaWYgKG1pc3NpbmdEZXBzKSB7XG4gICAgbG9nZ2VyLmVycm9yKCdQbGVhc2UgaW5zdGFsbCB0aGUgbWlzc2luZyBkZXBlbmRlbmNpZXMgZnJvbSB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgeW91ciBIZXhvIHNpdGUuJyk7XG4gICAgcHJvY2Vzcy5leGl0KC0xKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "check_deps.js"
      ],
      "names": [
        "logger",
        "require",
        "checkDependency",
        "name",
        "resolve",
        "e",
        "error",
        "info",
        "missingDeps",
        "map",
        "some",
        "installed",
        "process",
        "exit"
      ],
      "mappings": ";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAP,EAAf;;AAEA,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC3B,MAAI;AACAF,IAAAA,OAAO,CAACG,OAAR,CAAgBD,IAAhB;;AACA,WAAO,IAAP;AACH,GAHD,CAGE,OAAME,CAAN,EAAS;AACPL,IAAAA,MAAM,CAACM,KAAP,mBAAwBH,IAAxB;AACH;;AACD,SAAO,KAAP;AACH;;AAEDH,MAAM,CAACO,IAAP,CAAY,uBAAZ;AACA,IAAMC,WAAW,GAAG,CAChB,SADgB,EAEhB,QAFgB,EAGhB,SAHgB,EAIhB,WAJgB,EAKhB,UALgB,EAMhB,iBANgB,EAOlBC,GAPkB,CAOdP,eAPc,EAOGQ,IAPH,CAOQ,UAAAC,SAAS;AAAA,SAAI,CAACA,SAAL;AAAA,CAPjB,CAApB;;AAQA,IAAIH,WAAJ,EAAiB;AACbR,EAAAA,MAAM,CAACM,KAAP,CAAa,oFAAb;AACAM,EAAAA,OAAO,CAACC,IAAR,CAAa,CAAC,CAAd;AACH",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
      "sourcesContent": [
        "const logger = require('hexo-log')();\n\nfunction checkDependency(name) {\n    try {\n        require.resolve(name);\n        return true;\n    } catch(e) {\n        logger.error(`Package ${name} is not installed.`)\n    }\n    return false;\n}\n\nlogger.info('Checking dependencies');\nconst missingDeps = [\n    'js-yaml',\n    'moment',\n    'cheerio',\n    'hexo-util',\n    'hexo-log',\n    'hexo-pagination',\n].map(checkDependency).some(installed => !installed);\nif (missingDeps) {\n    logger.error('Please install the missing dependencies from the root directory of your Hexo site.');\n    process.exit(-1);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1576402034974
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/tasks\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/tasks/check_config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/tasks/check_config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/tasks/check_config.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/tasks/check_config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
        "sourceFileName": "check_config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar fs = require('fs');\n\nvar util = require('util');\n\nvar path = require('path');\n\nvar logger = require('hexo-log')();\n\nvar yaml = require('js-yaml');\n\nvar _require = require('../common/utils'),\n    errors = _require.errors;\n\nvar rootSpec = require('../specs/config.spec');\n\nvar ConfigValidator = require('../common/ConfigValidator');\n\nvar ConfigGenerator = require('../common/ConfigGenerator');\n\nvar CONFIG_PATH = path.join(__dirname, '../..', '_config.yml');\nlogger.info('Validating the configuration file');\n\nif (!fs.existsSync(CONFIG_PATH)) {\n  var relativePath = path.relative(process.cwd(), CONFIG_PATH);\n  logger.warn(\"\".concat(relativePath, \" is not found. We are creating one for you...\"));\n  fs.writeFileSync(CONFIG_PATH, new ConfigGenerator(rootSpec).generate());\n  logger.info(\"\".concat(relativePath, \" is created. Please restart Hexo to apply changes.\"));\n  process.exit(0);\n}\n\nvar validator = new ConfigValidator(rootSpec);\nvar config = yaml.safeLoad(fs.readFileSync(CONFIG_PATH));\n\ntry {\n  validator.validate(config);\n} catch (e) {\n  if (e instanceof errors.ConfigError) {\n    logger.error(e.message);\n\n    if (e.hasOwnProperty('spec')) {\n      logger.error('The specification of this configuration is:');\n      logger.error(util.inspect(e.spec));\n    }\n\n    if (e.hasOwnProperty('config')) {\n      logger.error('Configuration value is:');\n      logger.error(util.inspect(e.config));\n    }\n  } else if (e instanceof errors.VersionError) {\n    logger.error(e.message);\n    logger.warn(\"To let us create a fresh configuration file for you, please rename or delete the following file:\");\n    logger.warn(CONFIG_PATH);\n  } else {\n    throw e;\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrX2NvbmZpZy5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJ1dGlsIiwicGF0aCIsImxvZ2dlciIsInlhbWwiLCJlcnJvcnMiLCJyb290U3BlYyIsIkNvbmZpZ1ZhbGlkYXRvciIsIkNvbmZpZ0dlbmVyYXRvciIsIkNPTkZJR19QQVRIIiwiam9pbiIsIl9fZGlybmFtZSIsImluZm8iLCJleGlzdHNTeW5jIiwicmVsYXRpdmVQYXRoIiwicmVsYXRpdmUiLCJwcm9jZXNzIiwiY3dkIiwid2FybiIsIndyaXRlRmlsZVN5bmMiLCJnZW5lcmF0ZSIsImV4aXQiLCJ2YWxpZGF0b3IiLCJjb25maWciLCJzYWZlTG9hZCIsInJlYWRGaWxlU3luYyIsInZhbGlkYXRlIiwiZSIsIkNvbmZpZ0Vycm9yIiwiZXJyb3IiLCJtZXNzYWdlIiwiaGFzT3duUHJvcGVydHkiLCJpbnNwZWN0Iiwic3BlYyIsIlZlcnNpb25FcnJvciJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNRyxNQUFNLEdBQUdILE9BQU8sQ0FBQyxVQUFELENBQVAsRUFBZjs7QUFDQSxJQUFNSSxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxTQUFELENBQXBCOztlQUVtQkEsT0FBTyxDQUFDLGlCQUFELEM7SUFBbEJLLE0sWUFBQUEsTTs7QUFDUixJQUFNQyxRQUFRLEdBQUdOLE9BQU8sQ0FBQyxzQkFBRCxDQUF4Qjs7QUFDQSxJQUFNTyxlQUFlLEdBQUdQLE9BQU8sQ0FBQywyQkFBRCxDQUEvQjs7QUFDQSxJQUFNUSxlQUFlLEdBQUdSLE9BQU8sQ0FBQywyQkFBRCxDQUEvQjs7QUFFQSxJQUFNUyxXQUFXLEdBQUdQLElBQUksQ0FBQ1EsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLE9BQXJCLEVBQThCLGFBQTlCLENBQXBCO0FBRUFSLE1BQU0sQ0FBQ1MsSUFBUCxDQUFZLG1DQUFaOztBQUVBLElBQUksQ0FBQ2IsRUFBRSxDQUFDYyxVQUFILENBQWNKLFdBQWQsQ0FBTCxFQUFpQztBQUM3QixNQUFNSyxZQUFZLEdBQUdaLElBQUksQ0FBQ2EsUUFBTCxDQUFjQyxPQUFPLENBQUNDLEdBQVIsRUFBZCxFQUE2QlIsV0FBN0IsQ0FBckI7QUFDQU4sRUFBQUEsTUFBTSxDQUFDZSxJQUFQLFdBQWVKLFlBQWY7QUFDQWYsRUFBQUEsRUFBRSxDQUFDb0IsYUFBSCxDQUFpQlYsV0FBakIsRUFBOEIsSUFBSUQsZUFBSixDQUFvQkYsUUFBcEIsRUFBOEJjLFFBQTlCLEVBQTlCO0FBQ0FqQixFQUFBQSxNQUFNLENBQUNTLElBQVAsV0FBZUUsWUFBZjtBQUNBRSxFQUFBQSxPQUFPLENBQUNLLElBQVIsQ0FBYSxDQUFiO0FBQ0g7O0FBRUQsSUFBTUMsU0FBUyxHQUFHLElBQUlmLGVBQUosQ0FBb0JELFFBQXBCLENBQWxCO0FBQ0EsSUFBTWlCLE1BQU0sR0FBR25CLElBQUksQ0FBQ29CLFFBQUwsQ0FBY3pCLEVBQUUsQ0FBQzBCLFlBQUgsQ0FBZ0JoQixXQUFoQixDQUFkLENBQWY7O0FBQ0EsSUFBSTtBQUNBYSxFQUFBQSxTQUFTLENBQUNJLFFBQVYsQ0FBbUJILE1BQW5CO0FBQ0gsQ0FGRCxDQUVFLE9BQU9JLENBQVAsRUFBVTtBQUNSLE1BQUlBLENBQUMsWUFBWXRCLE1BQU0sQ0FBQ3VCLFdBQXhCLEVBQXFDO0FBQ2pDekIsSUFBQUEsTUFBTSxDQUFDMEIsS0FBUCxDQUFhRixDQUFDLENBQUNHLE9BQWY7O0FBQ0EsUUFBSUgsQ0FBQyxDQUFDSSxjQUFGLENBQWlCLE1BQWpCLENBQUosRUFBOEI7QUFDMUI1QixNQUFBQSxNQUFNLENBQUMwQixLQUFQLENBQWEsNkNBQWI7QUFDQTFCLE1BQUFBLE1BQU0sQ0FBQzBCLEtBQVAsQ0FBYTVCLElBQUksQ0FBQytCLE9BQUwsQ0FBYUwsQ0FBQyxDQUFDTSxJQUFmLENBQWI7QUFDSDs7QUFDRCxRQUFJTixDQUFDLENBQUNJLGNBQUYsQ0FBaUIsUUFBakIsQ0FBSixFQUFnQztBQUM1QjVCLE1BQUFBLE1BQU0sQ0FBQzBCLEtBQVAsQ0FBYSx5QkFBYjtBQUNBMUIsTUFBQUEsTUFBTSxDQUFDMEIsS0FBUCxDQUFhNUIsSUFBSSxDQUFDK0IsT0FBTCxDQUFhTCxDQUFDLENBQUNKLE1BQWYsQ0FBYjtBQUNIO0FBQ0osR0FWRCxNQVVPLElBQUlJLENBQUMsWUFBWXRCLE1BQU0sQ0FBQzZCLFlBQXhCLEVBQXNDO0FBQ3pDL0IsSUFBQUEsTUFBTSxDQUFDMEIsS0FBUCxDQUFhRixDQUFDLENBQUNHLE9BQWY7QUFDQTNCLElBQUFBLE1BQU0sQ0FBQ2UsSUFBUDtBQUNBZixJQUFBQSxNQUFNLENBQUNlLElBQVAsQ0FBWVQsV0FBWjtBQUNILEdBSk0sTUFJQTtBQUNILFVBQU1rQixDQUFOO0FBQ0g7QUFDSiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvdGFza3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCB1dGlsID0gcmVxdWlyZSgndXRpbCcpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGxvZ2dlciA9IHJlcXVpcmUoJ2hleG8tbG9nJykoKTtcbmNvbnN0IHlhbWwgPSByZXF1aXJlKCdqcy15YW1sJyk7XG5cbmNvbnN0IHsgZXJyb3JzIH0gPSByZXF1aXJlKCcuLi9jb21tb24vdXRpbHMnKTtcbmNvbnN0IHJvb3RTcGVjID0gcmVxdWlyZSgnLi4vc3BlY3MvY29uZmlnLnNwZWMnKTtcbmNvbnN0IENvbmZpZ1ZhbGlkYXRvciA9IHJlcXVpcmUoJy4uL2NvbW1vbi9Db25maWdWYWxpZGF0b3InKTtcbmNvbnN0IENvbmZpZ0dlbmVyYXRvciA9IHJlcXVpcmUoJy4uL2NvbW1vbi9Db25maWdHZW5lcmF0b3InKTtcblxuY29uc3QgQ09ORklHX1BBVEggPSBwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vLi4nLCAnX2NvbmZpZy55bWwnKTtcblxubG9nZ2VyLmluZm8oJ1ZhbGlkYXRpbmcgdGhlIGNvbmZpZ3VyYXRpb24gZmlsZScpO1xuXG5pZiAoIWZzLmV4aXN0c1N5bmMoQ09ORklHX1BBVEgpKSB7XG4gICAgY29uc3QgcmVsYXRpdmVQYXRoID0gcGF0aC5yZWxhdGl2ZShwcm9jZXNzLmN3ZCgpLCBDT05GSUdfUEFUSCk7XG4gICAgbG9nZ2VyLndhcm4oYCR7cmVsYXRpdmVQYXRofSBpcyBub3QgZm91bmQuIFdlIGFyZSBjcmVhdGluZyBvbmUgZm9yIHlvdS4uLmApO1xuICAgIGZzLndyaXRlRmlsZVN5bmMoQ09ORklHX1BBVEgsIG5ldyBDb25maWdHZW5lcmF0b3Iocm9vdFNwZWMpLmdlbmVyYXRlKCkpO1xuICAgIGxvZ2dlci5pbmZvKGAke3JlbGF0aXZlUGF0aH0gaXMgY3JlYXRlZC4gUGxlYXNlIHJlc3RhcnQgSGV4byB0byBhcHBseSBjaGFuZ2VzLmApO1xuICAgIHByb2Nlc3MuZXhpdCgwKTtcbn1cblxuY29uc3QgdmFsaWRhdG9yID0gbmV3IENvbmZpZ1ZhbGlkYXRvcihyb290U3BlYyk7XG5jb25zdCBjb25maWcgPSB5YW1sLnNhZmVMb2FkKGZzLnJlYWRGaWxlU3luYyhDT05GSUdfUEFUSCkpO1xudHJ5IHtcbiAgICB2YWxpZGF0b3IudmFsaWRhdGUoY29uZmlnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIGVycm9ycy5Db25maWdFcnJvcikge1xuICAgICAgICBsb2dnZXIuZXJyb3IoZS5tZXNzYWdlKTtcbiAgICAgICAgaWYgKGUuaGFzT3duUHJvcGVydHkoJ3NwZWMnKSkge1xuICAgICAgICAgICAgbG9nZ2VyLmVycm9yKCdUaGUgc3BlY2lmaWNhdGlvbiBvZiB0aGlzIGNvbmZpZ3VyYXRpb24gaXM6Jyk7XG4gICAgICAgICAgICBsb2dnZXIuZXJyb3IodXRpbC5pbnNwZWN0KGUuc3BlYykpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlLmhhc093blByb3BlcnR5KCdjb25maWcnKSkge1xuICAgICAgICAgICAgbG9nZ2VyLmVycm9yKCdDb25maWd1cmF0aW9uIHZhbHVlIGlzOicpO1xuICAgICAgICAgICAgbG9nZ2VyLmVycm9yKHV0aWwuaW5zcGVjdChlLmNvbmZpZykpO1xuICAgICAgICB9XG4gICAgfSBlbHNlIGlmIChlIGluc3RhbmNlb2YgZXJyb3JzLlZlcnNpb25FcnJvcikge1xuICAgICAgICBsb2dnZXIuZXJyb3IoZS5tZXNzYWdlKTtcbiAgICAgICAgbG9nZ2VyLndhcm4oYFRvIGxldCB1cyBjcmVhdGUgYSBmcmVzaCBjb25maWd1cmF0aW9uIGZpbGUgZm9yIHlvdSwgcGxlYXNlIHJlbmFtZSBvciBkZWxldGUgdGhlIGZvbGxvd2luZyBmaWxlOmApO1xuICAgICAgICBsb2dnZXIud2FybihDT05GSUdfUEFUSCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgZTtcbiAgICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "check_config.js"
      ],
      "names": [
        "fs",
        "require",
        "util",
        "path",
        "logger",
        "yaml",
        "errors",
        "rootSpec",
        "ConfigValidator",
        "ConfigGenerator",
        "CONFIG_PATH",
        "join",
        "__dirname",
        "info",
        "existsSync",
        "relativePath",
        "relative",
        "process",
        "cwd",
        "warn",
        "writeFileSync",
        "generate",
        "exit",
        "validator",
        "config",
        "safeLoad",
        "readFileSync",
        "validate",
        "e",
        "ConfigError",
        "error",
        "message",
        "hasOwnProperty",
        "inspect",
        "spec",
        "VersionError"
      ],
      "mappings": ";;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,UAAD,CAAP,EAAf;;AACA,IAAMI,IAAI,GAAGJ,OAAO,CAAC,SAAD,CAApB;;eAEmBA,OAAO,CAAC,iBAAD,C;IAAlBK,M,YAAAA,M;;AACR,IAAMC,QAAQ,GAAGN,OAAO,CAAC,sBAAD,CAAxB;;AACA,IAAMO,eAAe,GAAGP,OAAO,CAAC,2BAAD,CAA/B;;AACA,IAAMQ,eAAe,GAAGR,OAAO,CAAC,2BAAD,CAA/B;;AAEA,IAAMS,WAAW,GAAGP,IAAI,CAACQ,IAAL,CAAUC,SAAV,EAAqB,OAArB,EAA8B,aAA9B,CAApB;AAEAR,MAAM,CAACS,IAAP,CAAY,mCAAZ;;AAEA,IAAI,CAACb,EAAE,CAACc,UAAH,CAAcJ,WAAd,CAAL,EAAiC;AAC7B,MAAMK,YAAY,GAAGZ,IAAI,CAACa,QAAL,CAAcC,OAAO,CAACC,GAAR,EAAd,EAA6BR,WAA7B,CAArB;AACAN,EAAAA,MAAM,CAACe,IAAP,WAAeJ,YAAf;AACAf,EAAAA,EAAE,CAACoB,aAAH,CAAiBV,WAAjB,EAA8B,IAAID,eAAJ,CAAoBF,QAApB,EAA8Bc,QAA9B,EAA9B;AACAjB,EAAAA,MAAM,CAACS,IAAP,WAAeE,YAAf;AACAE,EAAAA,OAAO,CAACK,IAAR,CAAa,CAAb;AACH;;AAED,IAAMC,SAAS,GAAG,IAAIf,eAAJ,CAAoBD,QAApB,CAAlB;AACA,IAAMiB,MAAM,GAAGnB,IAAI,CAACoB,QAAL,CAAczB,EAAE,CAAC0B,YAAH,CAAgBhB,WAAhB,CAAd,CAAf;;AACA,IAAI;AACAa,EAAAA,SAAS,CAACI,QAAV,CAAmBH,MAAnB;AACH,CAFD,CAEE,OAAOI,CAAP,EAAU;AACR,MAAIA,CAAC,YAAYtB,MAAM,CAACuB,WAAxB,EAAqC;AACjCzB,IAAAA,MAAM,CAAC0B,KAAP,CAAaF,CAAC,CAACG,OAAf;;AACA,QAAIH,CAAC,CAACI,cAAF,CAAiB,MAAjB,CAAJ,EAA8B;AAC1B5B,MAAAA,MAAM,CAAC0B,KAAP,CAAa,6CAAb;AACA1B,MAAAA,MAAM,CAAC0B,KAAP,CAAa5B,IAAI,CAAC+B,OAAL,CAAaL,CAAC,CAACM,IAAf,CAAb;AACH;;AACD,QAAIN,CAAC,CAACI,cAAF,CAAiB,QAAjB,CAAJ,EAAgC;AAC5B5B,MAAAA,MAAM,CAAC0B,KAAP,CAAa,yBAAb;AACA1B,MAAAA,MAAM,CAAC0B,KAAP,CAAa5B,IAAI,CAAC+B,OAAL,CAAaL,CAAC,CAACJ,MAAf,CAAb;AACH;AACJ,GAVD,MAUO,IAAII,CAAC,YAAYtB,MAAM,CAAC6B,YAAxB,EAAsC;AACzC/B,IAAAA,MAAM,CAAC0B,KAAP,CAAaF,CAAC,CAACG,OAAf;AACA3B,IAAAA,MAAM,CAACe,IAAP;AACAf,IAAAA,MAAM,CAACe,IAAP,CAAYT,WAAZ;AACH,GAJM,MAIA;AACH,UAAMkB,CAAN;AACH;AACJ",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/tasks",
      "sourcesContent": [
        "const fs = require('fs');\nconst util = require('util');\nconst path = require('path');\nconst logger = require('hexo-log')();\nconst yaml = require('js-yaml');\n\nconst { errors } = require('../common/utils');\nconst rootSpec = require('../specs/config.spec');\nconst ConfigValidator = require('../common/ConfigValidator');\nconst ConfigGenerator = require('../common/ConfigGenerator');\n\nconst CONFIG_PATH = path.join(__dirname, '../..', '_config.yml');\n\nlogger.info('Validating the configuration file');\n\nif (!fs.existsSync(CONFIG_PATH)) {\n    const relativePath = path.relative(process.cwd(), CONFIG_PATH);\n    logger.warn(`${relativePath} is not found. We are creating one for you...`);\n    fs.writeFileSync(CONFIG_PATH, new ConfigGenerator(rootSpec).generate());\n    logger.info(`${relativePath} is created. Please restart Hexo to apply changes.`);\n    process.exit(0);\n}\n\nconst validator = new ConfigValidator(rootSpec);\nconst config = yaml.safeLoad(fs.readFileSync(CONFIG_PATH));\ntry {\n    validator.validate(config);\n} catch (e) {\n    if (e instanceof errors.ConfigError) {\n        logger.error(e.message);\n        if (e.hasOwnProperty('spec')) {\n            logger.error('The specification of this configuration is:');\n            logger.error(util.inspect(e.spec));\n        }\n        if (e.hasOwnProperty('config')) {\n            logger.error('Configuration value is:');\n            logger.error(util.inspect(e.config));\n        }\n    } else if (e instanceof errors.VersionError) {\n        logger.error(e.message);\n        logger.warn(`To let us create a fresh configuration file for you, please rename or delete the following file:`);\n        logger.warn(CONFIG_PATH);\n    } else {\n        throw e;\n    }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525729
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/common/utils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/common/utils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/common/utils.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/common/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar doc = Symbol('@doc');\nvar type = Symbol('@type');\nvar format = Symbol('@format');\nvar required = Symbol('@required');\nvar requires = Symbol('@requires');\nvar defaultValue = Symbol('@default');\nvar descriptors = {\n  doc: doc,\n  type: type,\n  format: format,\n  requires: requires,\n  required: required,\n  defaultValue: defaultValue\n};\n\nvar is = function () {\n  return {\n    number: function number(value) {\n      return typeof value === 'number';\n    },\n    string: function string(value) {\n      return typeof value === 'string';\n    },\n    array: function array(value) {\n      return Array.isArray(value);\n    },\n    \"boolean\": function boolean(value) {\n      return typeof value === 'boolean';\n    },\n    object: function object(value) {\n      return _typeof(value) === 'object' && value.constructor == Object;\n    },\n    \"function\": function _function(value) {\n      return typeof value === 'function';\n    },\n    regexp: function regexp(value) {\n      return value instanceof RegExp;\n    },\n    undefined: function undefined(value) {\n      return typeof value === 'undefined';\n    },\n    \"null\": function _null(value) {\n      return value === null;\n    },\n    spec: function spec(value) {\n      if (!value.hasOwnProperty(type)) {\n        return false;\n      }\n\n      if (!is.string(value[type]) && !is.array(value[type])) {\n        return false;\n      }\n\n      if (value.hasOwnProperty(doc) && !is.string(value[doc])) {\n        return false;\n      }\n\n      if (value.hasOwnProperty(required) && !is[\"boolean\"](value[required])) {\n        return false;\n      }\n\n      if (value.hasOwnProperty(requires) && !is[\"function\"](value[requires])) {\n        return false;\n      }\n\n      if (value.hasOwnProperty(format) && !is.regexp(value[format])) {\n        return false;\n      }\n\n      return true;\n    }\n  };\n}();\n\nvar ConfigError = /*#__PURE__*/function (_Error) {\n  _inherits(ConfigError, _Error);\n\n  function ConfigError(spec, path) {\n    var _this;\n\n    _classCallCheck(this, ConfigError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConfigError).call(this));\n    _this.spec = spec;\n    _this.path = path;\n    return _this;\n  }\n\n  return ConfigError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar InvalidSpecError = /*#__PURE__*/function (_ConfigError) {\n  _inherits(InvalidSpecError, _ConfigError);\n\n  function InvalidSpecError(spec, path) {\n    var _this2;\n\n    _classCallCheck(this, InvalidSpecError);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(InvalidSpecError).call(this, spec, path));\n    _this2.message = \"The specification '\".concat(path.join('.'), \"' is invalid.\");\n    return _this2;\n  }\n\n  return InvalidSpecError;\n}(ConfigError);\n\nvar MissingRequiredError = /*#__PURE__*/function (_ConfigError2) {\n  _inherits(MissingRequiredError, _ConfigError2);\n\n  function MissingRequiredError(spec, path) {\n    var _this3;\n\n    _classCallCheck(this, MissingRequiredError);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(MissingRequiredError).call(this, spec, path));\n    _this3.message = \"Configuration file do not have the required '\".concat(path.join('.'), \"' field.\");\n    return _this3;\n  }\n\n  return MissingRequiredError;\n}(ConfigError);\n\nvar TypeMismatchError = /*#__PURE__*/function (_ConfigError3) {\n  _inherits(TypeMismatchError, _ConfigError3);\n\n  function TypeMismatchError(spec, path, config) {\n    var _this4;\n\n    _classCallCheck(this, TypeMismatchError);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(TypeMismatchError).call(this, spec, path));\n    _this4.config = config;\n    _this4.message = \"Configuration '\".concat(path.join('.'), \"' is not one of the '\").concat(spec[type], \"' type.\");\n    return _this4;\n  }\n\n  return TypeMismatchError;\n}(ConfigError);\n\nvar FormatMismatchError = /*#__PURE__*/function (_ConfigError4) {\n  _inherits(FormatMismatchError, _ConfigError4);\n\n  function FormatMismatchError(spec, path, config) {\n    var _this5;\n\n    _classCallCheck(this, FormatMismatchError);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(FormatMismatchError).call(this, spec, path));\n    _this5.config = config;\n    _this5.message = \"Configuration '\".concat(path.join('.'), \"' do not match the format '\").concat(spec[format], \"'.\");\n    return _this5;\n  }\n\n  return FormatMismatchError;\n}(ConfigError);\n\nvar VersionError = /*#__PURE__*/function (_Error2) {\n  _inherits(VersionError, _Error2);\n\n  function VersionError() {\n    _classCallCheck(this, VersionError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(VersionError).apply(this, arguments));\n  }\n\n  return VersionError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar VersionNotFoundError = /*#__PURE__*/function (_VersionError) {\n  _inherits(VersionNotFoundError, _VersionError);\n\n  function VersionNotFoundError() {\n    _classCallCheck(this, VersionNotFoundError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(VersionNotFoundError).call(this, \"Version number is not found in the configuration file.\"));\n  }\n\n  return VersionNotFoundError;\n}(VersionError);\n\nvar VersionMalformedError = /*#__PURE__*/function (_VersionError2) {\n  _inherits(VersionMalformedError, _VersionError2);\n\n  function VersionMalformedError(version) {\n    var _this6;\n\n    _classCallCheck(this, VersionMalformedError);\n\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(VersionMalformedError).call(this, \"Version number \".concat(version, \" is malformed.\")));\n    _this6.version = version;\n    return _this6;\n  }\n\n  return VersionMalformedError;\n}(VersionError);\n\nvar VersionMismatchError = /*#__PURE__*/function (_VersionError3) {\n  _inherits(VersionMismatchError, _VersionError3);\n\n  function VersionMismatchError(specVersion, configVersion, isConfigVersionSmaller) {\n    var _this7;\n\n    _classCallCheck(this, VersionMismatchError);\n\n    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(VersionMismatchError).call(this));\n    _this7.specVersion = specVersion;\n    _this7.configVersion = configVersion;\n\n    if (isConfigVersionSmaller) {\n      _this7.message = \"The configuration version \".concat(configVersion, \" is far behind the specification version \").concat(specVersion, \".\");\n    } else {\n      _this7.message = \"The configuration version \".concat(configVersion, \" is way ahead of the specification version \").concat(specVersion, \".\");\n    }\n\n    return _this7;\n  }\n\n  return VersionMismatchError;\n}(VersionError);\n\nvar errors = {\n  ConfigError: ConfigError,\n  InvalidSpecError: InvalidSpecError,\n  MissingRequiredError: MissingRequiredError,\n  TypeMismatchError: TypeMismatchError,\n  FormatMismatchError: FormatMismatchError,\n  VersionError: VersionError,\n  VersionMalformedError: VersionMalformedError,\n  VersionNotFoundError: VersionNotFoundError,\n  VersionMismatchError: VersionMismatchError\n};\nmodule.exports = {\n  is: is,\n  descriptors: descriptors,\n  errors: errors\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "doc",
        "Symbol",
        "type",
        "format",
        "required",
        "requires",
        "defaultValue",
        "descriptors",
        "is",
        "number",
        "value",
        "string",
        "array",
        "Array",
        "isArray",
        "object",
        "constructor",
        "Object",
        "regexp",
        "RegExp",
        "undefined",
        "spec",
        "hasOwnProperty",
        "ConfigError",
        "path",
        "Error",
        "InvalidSpecError",
        "message",
        "join",
        "MissingRequiredError",
        "TypeMismatchError",
        "config",
        "FormatMismatchError",
        "VersionError",
        "VersionNotFoundError",
        "VersionMalformedError",
        "version",
        "VersionMismatchError",
        "specVersion",
        "configVersion",
        "isConfigVersionSmaller",
        "errors",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,GAAG,GAAGC,MAAM,CAAC,MAAD,CAAlB;AACA,IAAMC,IAAI,GAAGD,MAAM,CAAC,OAAD,CAAnB;AACA,IAAME,MAAM,GAAGF,MAAM,CAAC,SAAD,CAArB;AACA,IAAMG,QAAQ,GAAGH,MAAM,CAAC,WAAD,CAAvB;AACA,IAAMI,QAAQ,GAAGJ,MAAM,CAAC,WAAD,CAAvB;AACA,IAAMK,YAAY,GAAGL,MAAM,CAAC,UAAD,CAA3B;AAEA,IAAMM,WAAW,GAAG;AAChBP,EAAAA,GAAG,EAAHA,GADgB;AAEhBE,EAAAA,IAAI,EAAJA,IAFgB;AAGhBC,EAAAA,MAAM,EAANA,MAHgB;AAIhBE,EAAAA,QAAQ,EAARA,QAJgB;AAKhBD,EAAAA,QAAQ,EAARA,QALgB;AAMhBE,EAAAA,YAAY,EAAZA;AANgB,CAApB;;AASA,IAAME,EAAE,GAAI;AAAA,SAAO;AACfC,IAAAA,MADe,kBACRC,KADQ,EACD;AACV,aAAO,OAAQA,KAAR,KAAmB,QAA1B;AACH,KAHc;AAIfC,IAAAA,MAJe,kBAIRD,KAJQ,EAID;AACV,aAAO,OAAQA,KAAR,KAAmB,QAA1B;AACH,KANc;AAOfE,IAAAA,KAPe,iBAOTF,KAPS,EAOF;AACT,aAAOG,KAAK,CAACC,OAAN,CAAcJ,KAAd,CAAP;AACH,KATc;AAAA,gCAUPA,KAVO,EAUA;AACX,aAAO,OAAQA,KAAR,KAAmB,SAA1B;AACH,KAZc;AAafK,IAAAA,MAbe,kBAaRL,KAbQ,EAaD;AACV,aAAO,QAAQA,KAAR,MAAmB,QAAnB,IAA+BA,KAAK,CAACM,WAAN,IAAqBC,MAA3D;AACH,KAfc;AAAA,mCAgBNP,KAhBM,EAgBC;AACZ,aAAO,OAAQA,KAAR,KAAmB,UAA1B;AACH,KAlBc;AAmBfQ,IAAAA,MAnBe,kBAmBRR,KAnBQ,EAmBD;AACV,aAAOA,KAAK,YAAYS,MAAxB;AACH,KArBc;AAsBfC,IAAAA,SAtBe,qBAsBLV,KAtBK,EAsBE;AACb,aAAO,OAAQA,KAAR,KAAmB,WAA1B;AACH,KAxBc;AAAA,2BAyBVA,KAzBU,EAyBH;AACR,aAAOA,KAAK,KAAK,IAAjB;AACH,KA3Bc;AA4BfW,IAAAA,IA5Be,gBA4BVX,KA5BU,EA4BH;AACR,UAAI,CAACA,KAAK,CAACY,cAAN,CAAqBpB,IAArB,CAAL,EAAiC;AAC7B,eAAO,KAAP;AACH;;AACD,UAAI,CAACM,EAAE,CAACG,MAAH,CAAUD,KAAK,CAACR,IAAD,CAAf,CAAD,IAA2B,CAACM,EAAE,CAACI,KAAH,CAASF,KAAK,CAACR,IAAD,CAAd,CAAhC,EAAuD;AACnD,eAAO,KAAP;AACH;;AACD,UAAIQ,KAAK,CAACY,cAAN,CAAqBtB,GAArB,KAA6B,CAACQ,EAAE,CAACG,MAAH,CAAUD,KAAK,CAACV,GAAD,CAAf,CAAlC,EAAyD;AACrD,eAAO,KAAP;AACH;;AACD,UAAIU,KAAK,CAACY,cAAN,CAAqBlB,QAArB,KAAkC,CAACI,EAAE,WAAF,CAAWE,KAAK,CAACN,QAAD,CAAhB,CAAvC,EAAoE;AAChE,eAAO,KAAP;AACH;;AACD,UAAIM,KAAK,CAACY,cAAN,CAAqBjB,QAArB,KAAkC,CAACG,EAAE,YAAF,CAAYE,KAAK,CAACL,QAAD,CAAjB,CAAvC,EAAqE;AACjE,eAAO,KAAP;AACH;;AACD,UAAIK,KAAK,CAACY,cAAN,CAAqBnB,MAArB,KAAgC,CAACK,EAAE,CAACU,MAAH,CAAUR,KAAK,CAACP,MAAD,CAAf,CAArC,EAA+D;AAC3D,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH;AAhDc,GAAP;AAAA,CAAD,EAAX;;IAmDMoB,W;;;AACF,uBAAYF,IAAZ,EAAkBG,IAAlB,EAAwB;AAAA;;AAAA;;AACpB;AACA,UAAKH,IAAL,GAAYA,IAAZ;AACA,UAAKG,IAAL,GAAYA,IAAZ;AAHoB;AAIvB;;;iCALqBC,K;;IAQpBC,gB;;;AACF,4BAAYL,IAAZ,EAAkBG,IAAlB,EAAwB;AAAA;;AAAA;;AACpB,2FAAMH,IAAN,EAAYG,IAAZ;AACA,WAAKG,OAAL,gCAAqCH,IAAI,CAACI,IAAL,CAAU,GAAV,CAArC;AAFoB;AAGvB;;;EAJ0BL,W;;IAOzBM,oB;;;AACF,gCAAYR,IAAZ,EAAkBG,IAAlB,EAAwB;AAAA;;AAAA;;AACpB,+FAAMH,IAAN,EAAYG,IAAZ;AACA,WAAKG,OAAL,0DAA+DH,IAAI,CAACI,IAAL,CAAU,GAAV,CAA/D;AAFoB;AAGvB;;;EAJ8BL,W;;IAO7BO,iB;;;AACF,6BAAYT,IAAZ,EAAkBG,IAAlB,EAAwBO,MAAxB,EAAgC;AAAA;;AAAA;;AAC5B,4FAAMV,IAAN,EAAYG,IAAZ;AACA,WAAKO,MAAL,GAAcA,MAAd;AACA,WAAKJ,OAAL,4BAAiCH,IAAI,CAACI,IAAL,CAAU,GAAV,CAAjC,kCAAuEP,IAAI,CAACnB,IAAD,CAA3E;AAH4B;AAI/B;;;EAL2BqB,W;;IAQ1BS,mB;;;AACF,+BAAYX,IAAZ,EAAkBG,IAAlB,EAAwBO,MAAxB,EAAgC;AAAA;;AAAA;;AAC5B,8FAAMV,IAAN,EAAYG,IAAZ;AACA,WAAKO,MAAL,GAAcA,MAAd;AACA,WAAKJ,OAAL,4BAAiCH,IAAI,CAACI,IAAL,CAAU,GAAV,CAAjC,wCAA6EP,IAAI,CAAClB,MAAD,CAAjF;AAH4B;AAI/B;;;EAL6BoB,W;;IAQ5BU,Y;;;;;;;;;;iCAAqBR,K;;IAGrBS,oB;;;AACF,kCAAc;AAAA;;AAAA;AAEb;;;EAH8BD,Y;;IAM7BE,qB;;;AACF,iCAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACjB,yHAAwBA,OAAxB;AACA,WAAKA,OAAL,GAAeA,OAAf;AAFiB;AAGpB;;;EAJ+BH,Y;;IAO9BI,oB;;;AACF,gCAAYC,WAAZ,EAAyBC,aAAzB,EAAwCC,sBAAxC,EAAgE;AAAA;;AAAA;;AAC5D;AACA,WAAKF,WAAL,GAAmBA,WAAnB;AACA,WAAKC,aAAL,GAAqBA,aAArB;;AACA,QAAIC,sBAAJ,EAA4B;AACxB,aAAKb,OAAL,uCAA4CY,aAA5C,sDAAqGD,WAArG;AACH,KAFD,MAEO;AACH,aAAKX,OAAL,uCAA4CY,aAA5C,wDAAuGD,WAAvG;AACH;;AAR2D;AAS/D;;;EAV8BL,Y;;AAanC,IAAMQ,MAAM,GAAG;AACXlB,EAAAA,WAAW,EAAXA,WADW;AAEXG,EAAAA,gBAAgB,EAAhBA,gBAFW;AAGXG,EAAAA,oBAAoB,EAApBA,oBAHW;AAIXC,EAAAA,iBAAiB,EAAjBA,iBAJW;AAKXE,EAAAA,mBAAmB,EAAnBA,mBALW;AAMXC,EAAAA,YAAY,EAAZA,YANW;AAOXE,EAAAA,qBAAqB,EAArBA,qBAPW;AAQXD,EAAAA,oBAAoB,EAApBA,oBARW;AASXG,EAAAA,oBAAoB,EAApBA;AATW,CAAf;AAYAK,MAAM,CAACC,OAAP,GAAiB;AACbnC,EAAAA,EAAE,EAAFA,EADa;AAEbD,EAAAA,WAAW,EAAXA,WAFa;AAGbkC,EAAAA,MAAM,EAANA;AAHa,CAAjB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
      "sourcesContent": [
        "const doc = Symbol('@doc');\nconst type = Symbol('@type');\nconst format = Symbol('@format');\nconst required = Symbol('@required');\nconst requires = Symbol('@requires');\nconst defaultValue = Symbol('@default');\n\nconst descriptors = {\n    doc,\n    type,\n    format,\n    requires,\n    required,\n    defaultValue\n};\n\nconst is = (() => ({\n    number(value) {\n        return typeof (value) === 'number';\n    },\n    string(value) {\n        return typeof (value) === 'string';\n    },\n    array(value) {\n        return Array.isArray(value);\n    },\n    boolean(value) {\n        return typeof (value) === 'boolean';\n    },\n    object(value) {\n        return typeof (value) === 'object' && value.constructor == Object;\n    },\n    function(value) {\n        return typeof (value) === 'function';\n    },\n    regexp(value) {\n        return value instanceof RegExp;\n    },\n    undefined(value) {\n        return typeof (value) === 'undefined';\n    },\n    null(value) {\n        return value === null;\n    },\n    spec(value) {\n        if (!value.hasOwnProperty(type)) {\n            return false;\n        }\n        if (!is.string(value[type]) && !is.array(value[type])) {\n            return false;\n        }\n        if (value.hasOwnProperty(doc) && !is.string(value[doc])) {\n            return false;\n        }\n        if (value.hasOwnProperty(required) && !is.boolean(value[required])) {\n            return false;\n        }\n        if (value.hasOwnProperty(requires) && !is.function(value[requires])) {\n            return false;\n        }\n        if (value.hasOwnProperty(format) && !is.regexp(value[format])) {\n            return false;\n        }\n        return true;\n    }\n}))();\n\nclass ConfigError extends Error {\n    constructor(spec, path) {\n        super();\n        this.spec = spec;\n        this.path = path;\n    }\n}\n\nclass InvalidSpecError extends ConfigError {\n    constructor(spec, path) {\n        super(spec, path);\n        this.message = `The specification '${path.join('.')}' is invalid.`;\n    }\n}\n\nclass MissingRequiredError extends ConfigError {\n    constructor(spec, path) {\n        super(spec, path);\n        this.message = `Configuration file do not have the required '${path.join('.')}' field.`;\n    }\n}\n\nclass TypeMismatchError extends ConfigError {\n    constructor(spec, path, config) {\n        super(spec, path);\n        this.config = config;\n        this.message = `Configuration '${path.join('.')}' is not one of the '${spec[type]}' type.`;\n    }\n}\n\nclass FormatMismatchError extends ConfigError {\n    constructor(spec, path, config) {\n        super(spec, path);\n        this.config = config;\n        this.message = `Configuration '${path.join('.')}' do not match the format '${spec[format]}'.`;\n    }\n}\n\nclass VersionError extends Error {\n}\n\nclass VersionNotFoundError extends VersionError {\n    constructor() {\n        super(`Version number is not found in the configuration file.`);\n    }\n}\n\nclass VersionMalformedError extends VersionError {\n    constructor(version) {\n        super(`Version number ${version} is malformed.`);\n        this.version = version;\n    }\n}\n\nclass VersionMismatchError extends VersionError {\n    constructor(specVersion, configVersion, isConfigVersionSmaller) {\n        super();\n        this.specVersion = specVersion;\n        this.configVersion = configVersion;\n        if (isConfigVersionSmaller) {\n            this.message = `The configuration version ${configVersion} is far behind the specification version ${specVersion}.`;\n        } else {\n            this.message = `The configuration version ${configVersion} is way ahead of the specification version ${specVersion}.`;\n        }\n    }\n}\n\nconst errors = {\n    ConfigError,\n    InvalidSpecError,\n    MissingRequiredError,\n    TypeMismatchError,\n    FormatMismatchError,\n    VersionError,\n    VersionMalformedError,\n    VersionNotFoundError,\n    VersionMismatchError\n}\n\nmodule.exports = {\n    is,\n    descriptors,\n    errors\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525709
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/config.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/config.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/config.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/config.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "config.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _version, _objectSpread2;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require = require('../../package.json'),\n    version = _require.version;\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    type = _require$descriptors.type,\n    required = _require$descriptors.required,\n    defaultValue = _require$descriptors.defaultValue,\n    doc = _require$descriptors.doc;\n\nmodule.exports = _objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, type, 'object'), _defineProperty(_objectSpread2, doc, 'Root of the configuration file'), _defineProperty(_objectSpread2, required, true), _defineProperty(_objectSpread2, \"version\", (_version = {}, _defineProperty(_version, type, 'string'), _defineProperty(_version, doc, 'Version of the Icarus theme that is currently used'), _defineProperty(_version, required, true), _defineProperty(_version, defaultValue, version), _version)), _objectSpread2), require('./meta.spec'), {\n  navbar: require('./navbar.spec'),\n  footer: require('./footer.spec'),\n  article: require('./article.spec'),\n  search: require('./search.spec'),\n  comment: require('./comment.spec'),\n  donate: require('./donate.spec'),\n  share: require('./share.spec'),\n  sidebar: require('./sidebar.spec'),\n  widgets: require('./widgets.spec'),\n  plugins: require('./plugins.spec'),\n  providers: require('./providers.spec')\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5zcGVjLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJ2ZXJzaW9uIiwiZGVzY3JpcHRvcnMiLCJ0eXBlIiwicmVxdWlyZWQiLCJkZWZhdWx0VmFsdWUiLCJkb2MiLCJtb2R1bGUiLCJleHBvcnRzIiwibmF2YmFyIiwiZm9vdGVyIiwiYXJ0aWNsZSIsInNlYXJjaCIsImNvbW1lbnQiLCJkb25hdGUiLCJzaGFyZSIsInNpZGViYXIiLCJ3aWRnZXRzIiwicGx1Z2lucyIsInByb3ZpZGVycyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztlQUFvQkEsT0FBTyxDQUFDLG9CQUFELEM7SUFBbkJDLE8sWUFBQUEsTzs7MkJBQ3NDRCxPQUFPLENBQUMsaUJBQUQsQ0FBUCxDQUEyQkUsVztJQUFqRUMsSSx3QkFBQUEsSTtJQUFNQyxRLHdCQUFBQSxRO0lBQVVDLFksd0JBQUFBLFk7SUFBY0MsRyx3QkFBQUEsRzs7QUFFdENDLE1BQU0sQ0FBQ0MsT0FBUCx1RUFDS0wsSUFETCxFQUNZLFFBRFosbUNBRUtHLEdBRkwsRUFFVyxnQ0FGWCxtQ0FHS0YsUUFITCxFQUdnQixJQUhoQix3RkFLU0QsSUFMVCxFQUtnQixRQUxoQiw2QkFNU0csR0FOVCxFQU1lLG9EQU5mLDZCQU9TRixRQVBULEVBT29CLElBUHBCLDZCQVFTQyxZQVJULEVBUXdCSixPQVJ4QixnQ0FVT0QsT0FBTyxDQUFDLGFBQUQsQ0FWZDtBQVdJUyxFQUFBQSxNQUFNLEVBQUVULE9BQU8sQ0FBQyxlQUFELENBWG5CO0FBWUlVLEVBQUFBLE1BQU0sRUFBRVYsT0FBTyxDQUFDLGVBQUQsQ0FabkI7QUFhSVcsRUFBQUEsT0FBTyxFQUFFWCxPQUFPLENBQUMsZ0JBQUQsQ0FicEI7QUFjSVksRUFBQUEsTUFBTSxFQUFFWixPQUFPLENBQUMsZUFBRCxDQWRuQjtBQWVJYSxFQUFBQSxPQUFPLEVBQUViLE9BQU8sQ0FBQyxnQkFBRCxDQWZwQjtBQWdCSWMsRUFBQUEsTUFBTSxFQUFFZCxPQUFPLENBQUMsZUFBRCxDQWhCbkI7QUFpQkllLEVBQUFBLEtBQUssRUFBRWYsT0FBTyxDQUFDLGNBQUQsQ0FqQmxCO0FBa0JJZ0IsRUFBQUEsT0FBTyxFQUFFaEIsT0FBTyxDQUFDLGdCQUFELENBbEJwQjtBQW1CSWlCLEVBQUFBLE9BQU8sRUFBRWpCLE9BQU8sQ0FBQyxnQkFBRCxDQW5CcEI7QUFvQklrQixFQUFBQSxPQUFPLEVBQUVsQixPQUFPLENBQUMsZ0JBQUQsQ0FwQnBCO0FBcUJJbUIsRUFBQUEsU0FBUyxFQUFFbkIsT0FBTyxDQUFDLGtCQUFEO0FBckJ0QiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvc3BlY3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IHZlcnNpb24gfSA9IHJlcXVpcmUoJy4uLy4uL3BhY2thZ2UuanNvbicpO1xuY29uc3QgeyB0eXBlLCByZXF1aXJlZCwgZGVmYXVsdFZhbHVlLCBkb2MgfSA9IHJlcXVpcmUoJy4uL2NvbW1vbi91dGlscycpLmRlc2NyaXB0b3JzO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBbdHlwZV06ICdvYmplY3QnLFxuICAgIFtkb2NdOiAnUm9vdCBvZiB0aGUgY29uZmlndXJhdGlvbiBmaWxlJyxcbiAgICBbcmVxdWlyZWRdOiB0cnVlLFxuICAgIHZlcnNpb246IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdWZXJzaW9uIG9mIHRoZSBJY2FydXMgdGhlbWUgdGhhdCBpcyBjdXJyZW50bHkgdXNlZCcsXG4gICAgICAgIFtyZXF1aXJlZF06IHRydWUsXG4gICAgICAgIFtkZWZhdWx0VmFsdWVdOiB2ZXJzaW9uXG4gICAgfSxcbiAgICAuLi5yZXF1aXJlKCcuL21ldGEuc3BlYycpLFxuICAgIG5hdmJhcjogcmVxdWlyZSgnLi9uYXZiYXIuc3BlYycpLFxuICAgIGZvb3RlcjogcmVxdWlyZSgnLi9mb290ZXIuc3BlYycpLFxuICAgIGFydGljbGU6IHJlcXVpcmUoJy4vYXJ0aWNsZS5zcGVjJyksXG4gICAgc2VhcmNoOiByZXF1aXJlKCcuL3NlYXJjaC5zcGVjJyksXG4gICAgY29tbWVudDogcmVxdWlyZSgnLi9jb21tZW50LnNwZWMnKSxcbiAgICBkb25hdGU6IHJlcXVpcmUoJy4vZG9uYXRlLnNwZWMnKSxcbiAgICBzaGFyZTogcmVxdWlyZSgnLi9zaGFyZS5zcGVjJyksXG4gICAgc2lkZWJhcjogcmVxdWlyZSgnLi9zaWRlYmFyLnNwZWMnKSxcbiAgICB3aWRnZXRzOiByZXF1aXJlKCcuL3dpZGdldHMuc3BlYycpLFxuICAgIHBsdWdpbnM6IHJlcXVpcmUoJy4vcGx1Z2lucy5zcGVjJyksXG4gICAgcHJvdmlkZXJzOiByZXF1aXJlKCcuL3Byb3ZpZGVycy5zcGVjJylcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "config.spec.js"
      ],
      "names": [
        "require",
        "version",
        "descriptors",
        "type",
        "required",
        "defaultValue",
        "doc",
        "module",
        "exports",
        "navbar",
        "footer",
        "article",
        "search",
        "comment",
        "donate",
        "share",
        "sidebar",
        "widgets",
        "plugins",
        "providers"
      ],
      "mappings": ";;;;;;;;;;eAAoBA,OAAO,CAAC,oBAAD,C;IAAnBC,O,YAAAA,O;;2BACsCD,OAAO,CAAC,iBAAD,CAAP,CAA2BE,W;IAAjEC,I,wBAAAA,I;IAAMC,Q,wBAAAA,Q;IAAUC,Y,wBAAAA,Y;IAAcC,G,wBAAAA,G;;AAEtCC,MAAM,CAACC,OAAP,uEACKL,IADL,EACY,QADZ,mCAEKG,GAFL,EAEW,gCAFX,mCAGKF,QAHL,EAGgB,IAHhB,wFAKSD,IALT,EAKgB,QALhB,6BAMSG,GANT,EAMe,oDANf,6BAOSF,QAPT,EAOoB,IAPpB,6BAQSC,YART,EAQwBJ,OARxB,gCAUOD,OAAO,CAAC,aAAD,CAVd;AAWIS,EAAAA,MAAM,EAAET,OAAO,CAAC,eAAD,CAXnB;AAYIU,EAAAA,MAAM,EAAEV,OAAO,CAAC,eAAD,CAZnB;AAaIW,EAAAA,OAAO,EAAEX,OAAO,CAAC,gBAAD,CAbpB;AAcIY,EAAAA,MAAM,EAAEZ,OAAO,CAAC,eAAD,CAdnB;AAeIa,EAAAA,OAAO,EAAEb,OAAO,CAAC,gBAAD,CAfpB;AAgBIc,EAAAA,MAAM,EAAEd,OAAO,CAAC,eAAD,CAhBnB;AAiBIe,EAAAA,KAAK,EAAEf,OAAO,CAAC,cAAD,CAjBlB;AAkBIgB,EAAAA,OAAO,EAAEhB,OAAO,CAAC,gBAAD,CAlBpB;AAmBIiB,EAAAA,OAAO,EAAEjB,OAAO,CAAC,gBAAD,CAnBpB;AAoBIkB,EAAAA,OAAO,EAAElB,OAAO,CAAC,gBAAD,CApBpB;AAqBImB,EAAAA,SAAS,EAAEnB,OAAO,CAAC,kBAAD;AArBtB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { version } = require('../../package.json');\nconst { type, required, defaultValue, doc } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Root of the configuration file',\n    [required]: true,\n    version: {\n        [type]: 'string',\n        [doc]: 'Version of the Icarus theme that is currently used',\n        [required]: true,\n        [defaultValue]: version\n    },\n    ...require('./meta.spec'),\n    navbar: require('./navbar.spec'),\n    footer: require('./footer.spec'),\n    article: require('./article.spec'),\n    search: require('./search.spec'),\n    comment: require('./comment.spec'),\n    donate: require('./donate.spec'),\n    share: require('./share.spec'),\n    sidebar: require('./sidebar.spec'),\n    widgets: require('./widgets.spec'),\n    plugins: require('./plugins.spec'),\n    providers: require('./providers.spec')\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525717
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/meta.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/meta.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/meta.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/meta.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "meta.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _favicon, _, _meta, _rss, _text, _logo, _fb_app_id, _fb_admins, _twitter_id, _twitter_site, _google_plus, _open_graph;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue;\n\nmodule.exports = {\n  favicon: (_favicon = {}, _defineProperty(_favicon, type, 'string'), _defineProperty(_favicon, doc, 'Path or URL to the website\\'s icon'), _defineProperty(_favicon, defaultValue, '/images/favicon.svg'), _favicon),\n  meta: (_meta = {}, _defineProperty(_meta, type, 'array'), _defineProperty(_meta, doc, 'Additional HTML meta tags in an array.'), _defineProperty(_meta, defaultValue, null), _defineProperty(_meta, '*', (_ = {}, _defineProperty(_, type, 'string'), _defineProperty(_, doc, 'Meta tag specified in <attribute>=<value> style.\\nE.g., name=theme-color;content=#123456 => <meta name=\"theme-color\" content=\"#123456\">'), _)), _meta),\n  rss: (_rss = {}, _defineProperty(_rss, type, 'string'), _defineProperty(_rss, doc, 'Path or URL to RSS atom.xml'), _defineProperty(_rss, defaultValue, null), _rss),\n  logo: (_logo = {}, _defineProperty(_logo, type, ['string', 'object']), _defineProperty(_logo, defaultValue, '/images/logo.svg'), _defineProperty(_logo, doc, 'Path or URL to the website\\'s logo to be shown on the left of the navigation bar or footer'), _defineProperty(_logo, \"text\", (_text = {}, _defineProperty(_text, type, 'string'), _defineProperty(_text, doc, 'Text to be shown in place of the logo image'), _text)), _logo),\n  open_graph: (_open_graph = {}, _defineProperty(_open_graph, type, 'object'), _defineProperty(_open_graph, doc, 'Open Graph metadata\\nhttps://hexo.io/docs/helpers.html#open-graph'), _defineProperty(_open_graph, \"fb_app_id\", (_fb_app_id = {}, _defineProperty(_fb_app_id, type, 'string'), _defineProperty(_fb_app_id, doc, 'Facebook App ID'), _defineProperty(_fb_app_id, defaultValue, null), _fb_app_id)), _defineProperty(_open_graph, \"fb_admins\", (_fb_admins = {}, _defineProperty(_fb_admins, type, 'string'), _defineProperty(_fb_admins, doc, 'Facebook Admin ID'), _defineProperty(_fb_admins, defaultValue, null), _fb_admins)), _defineProperty(_open_graph, \"twitter_id\", (_twitter_id = {}, _defineProperty(_twitter_id, type, 'string'), _defineProperty(_twitter_id, doc, 'Twitter ID'), _defineProperty(_twitter_id, defaultValue, null), _twitter_id)), _defineProperty(_open_graph, \"twitter_site\", (_twitter_site = {}, _defineProperty(_twitter_site, type, 'string'), _defineProperty(_twitter_site, doc, 'Twitter site'), _defineProperty(_twitter_site, defaultValue, null), _twitter_site)), _defineProperty(_open_graph, \"google_plus\", (_google_plus = {}, _defineProperty(_google_plus, type, 'string'), _defineProperty(_google_plus, doc, 'Google+ profile link'), _defineProperty(_google_plus, defaultValue, null), _google_plus)), _open_graph)\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ldGEuc3BlYy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiZGVzY3JpcHRvcnMiLCJkb2MiLCJ0eXBlIiwiZGVmYXVsdFZhbHVlIiwibW9kdWxlIiwiZXhwb3J0cyIsImZhdmljb24iLCJtZXRhIiwicnNzIiwibG9nbyIsIm9wZW5fZ3JhcGgiXSwibWFwcGluZ3MiOiI7Ozs7OzsyQkFBb0NBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCQyxXO0lBQXZEQyxHLHdCQUFBQSxHO0lBQUtDLEksd0JBQUFBLEk7SUFBTUMsWSx3QkFBQUEsWTs7QUFFbkJDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxPQUFPLDRDQUNGSixJQURFLEVBQ0ssUUFETCw2QkFFRkQsR0FGRSxFQUVJLG9DQUZKLDZCQUdGRSxZQUhFLEVBR2EscUJBSGIsWUFETTtBQU1iSSxFQUFBQSxJQUFJLHNDQUNDTCxJQURELEVBQ1EsT0FEUiwwQkFFQ0QsR0FGRCxFQUVPLHdDQUZQLDBCQUdDRSxZQUhELEVBR2dCLElBSGhCLDBCQUlBLEdBSkEsOEJBS0tELElBTEwsRUFLWSxRQUxaLHNCQU1LRCxHQU5MLEVBTVcseUlBTlgsY0FOUztBQWViTyxFQUFBQSxHQUFHLG9DQUNFTixJQURGLEVBQ1MsUUFEVCx5QkFFRUQsR0FGRixFQUVRLDZCQUZSLHlCQUdFRSxZQUhGLEVBR2lCLElBSGpCLFFBZlU7QUFvQmJNLEVBQUFBLElBQUksc0NBQ0NQLElBREQsRUFDUSxDQUFDLFFBQUQsRUFBVyxRQUFYLENBRFIsMEJBRUNDLFlBRkQsRUFFZ0Isa0JBRmhCLDBCQUdDRixHQUhELEVBR08sNEZBSFAsc0VBS0tDLElBTEwsRUFLWSxRQUxaLDBCQU1LRCxHQU5MLEVBTVcsNkNBTlgsa0JBcEJTO0FBNkJiUyxFQUFBQSxVQUFVLGtEQUNMUixJQURLLEVBQ0UsUUFERixnQ0FFTEQsR0FGSyxFQUVDLG1FQUZELDJGQUlEQyxJQUpDLEVBSU0sUUFKTiwrQkFLREQsR0FMQyxFQUtLLGlCQUxMLCtCQU1ERSxZQU5DLEVBTWMsSUFOZCx5R0FTREQsSUFUQyxFQVNNLFFBVE4sK0JBVURELEdBVkMsRUFVSyxtQkFWTCwrQkFXREUsWUFYQyxFQVdjLElBWGQsNEdBY0RELElBZEMsRUFjTSxRQWROLGdDQWVERCxHQWZDLEVBZUssWUFmTCxnQ0FnQkRFLFlBaEJDLEVBZ0JjLElBaEJkLG1IQW1CREQsSUFuQkMsRUFtQk0sUUFuQk4sa0NBb0JERCxHQXBCQyxFQW9CSyxjQXBCTCxrQ0FxQkRFLFlBckJDLEVBcUJjLElBckJkLGtIQXdCREQsSUF4QkMsRUF3Qk0sUUF4Qk4saUNBeUJERCxHQXpCQyxFQXlCSyxzQkF6QkwsaUNBMEJERSxZQTFCQyxFQTBCYyxJQTFCZDtBQTdCRyxDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvc3BlY3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGRvYywgdHlwZSwgZGVmYXVsdFZhbHVlIH0gPSByZXF1aXJlKCcuLi9jb21tb24vdXRpbHMnKS5kZXNjcmlwdG9ycztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZmF2aWNvbjoge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ1BhdGggb3IgVVJMIHRvIHRoZSB3ZWJzaXRlXFwncyBpY29uJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06ICcvaW1hZ2VzL2Zhdmljb24uc3ZnJyxcbiAgICB9LFxuICAgIG1ldGE6IHtcbiAgICAgICAgW3R5cGVdOiAnYXJyYXknLFxuICAgICAgICBbZG9jXTogJ0FkZGl0aW9uYWwgSFRNTCBtZXRhIHRhZ3MgaW4gYW4gYXJyYXkuJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IG51bGwsXG4gICAgICAgICcqJzoge1xuICAgICAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgICAgIFtkb2NdOiAnTWV0YSB0YWcgc3BlY2lmaWVkIGluIDxhdHRyaWJ1dGU+PTx2YWx1ZT4gc3R5bGUuXFxuRS5nLiwgbmFtZT10aGVtZS1jb2xvcjtjb250ZW50PSMxMjM0NTYgPT4gPG1ldGEgbmFtZT1cInRoZW1lLWNvbG9yXCIgY29udGVudD1cIiMxMjM0NTZcIj4nXG4gICAgICAgIH1cbiAgICB9LFxuICAgIHJzczoge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ1BhdGggb3IgVVJMIHRvIFJTUyBhdG9tLnhtbCcsXG4gICAgICAgIFtkZWZhdWx0VmFsdWVdOiBudWxsXG4gICAgfSxcbiAgICBsb2dvOiB7XG4gICAgICAgIFt0eXBlXTogWydzdHJpbmcnLCAnb2JqZWN0J10sXG4gICAgICAgIFtkZWZhdWx0VmFsdWVdOiAnL2ltYWdlcy9sb2dvLnN2ZycsXG4gICAgICAgIFtkb2NdOiAnUGF0aCBvciBVUkwgdG8gdGhlIHdlYnNpdGVcXCdzIGxvZ28gdG8gYmUgc2hvd24gb24gdGhlIGxlZnQgb2YgdGhlIG5hdmlnYXRpb24gYmFyIG9yIGZvb3RlcicsXG4gICAgICAgIHRleHQ6IHtcbiAgICAgICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgICAgICBbZG9jXTogJ1RleHQgdG8gYmUgc2hvd24gaW4gcGxhY2Ugb2YgdGhlIGxvZ28gaW1hZ2UnXG4gICAgICAgIH1cbiAgICB9LFxuICAgIG9wZW5fZ3JhcGg6IHtcbiAgICAgICAgW3R5cGVdOiAnb2JqZWN0JyxcbiAgICAgICAgW2RvY106ICdPcGVuIEdyYXBoIG1ldGFkYXRhXFxuaHR0cHM6Ly9oZXhvLmlvL2RvY3MvaGVscGVycy5odG1sI29wZW4tZ3JhcGgnLFxuICAgICAgICBmYl9hcHBfaWQ6IHtcbiAgICAgICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgICAgICBbZG9jXTogJ0ZhY2Vib29rIEFwcCBJRCcsXG4gICAgICAgICAgICBbZGVmYXVsdFZhbHVlXTogbnVsbFxuICAgICAgICB9LFxuICAgICAgICBmYl9hZG1pbnM6IHtcbiAgICAgICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgICAgICBbZG9jXTogJ0ZhY2Vib29rIEFkbWluIElEJyxcbiAgICAgICAgICAgIFtkZWZhdWx0VmFsdWVdOiBudWxsXG4gICAgICAgIH0sXG4gICAgICAgIHR3aXR0ZXJfaWQ6IHtcbiAgICAgICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgICAgICBbZG9jXTogJ1R3aXR0ZXIgSUQnLFxuICAgICAgICAgICAgW2RlZmF1bHRWYWx1ZV06IG51bGxcbiAgICAgICAgfSxcbiAgICAgICAgdHdpdHRlcl9zaXRlOiB7XG4gICAgICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICAgICAgW2RvY106ICdUd2l0dGVyIHNpdGUnLFxuICAgICAgICAgICAgW2RlZmF1bHRWYWx1ZV06IG51bGxcbiAgICAgICAgfSxcbiAgICAgICAgZ29vZ2xlX3BsdXM6IHtcbiAgICAgICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgICAgICBbZG9jXTogJ0dvb2dsZSsgcHJvZmlsZSBsaW5rJyxcbiAgICAgICAgICAgIFtkZWZhdWx0VmFsdWVdOiBudWxsXG4gICAgICAgIH1cbiAgICB9XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "meta.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "module",
        "exports",
        "favicon",
        "meta",
        "rss",
        "logo",
        "open_graph"
      ],
      "mappings": ";;;;;;2BAAoCA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAvDC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;;AAEnBC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,OAAO,4CACFJ,IADE,EACK,QADL,6BAEFD,GAFE,EAEI,oCAFJ,6BAGFE,YAHE,EAGa,qBAHb,YADM;AAMbI,EAAAA,IAAI,sCACCL,IADD,EACQ,OADR,0BAECD,GAFD,EAEO,wCAFP,0BAGCE,YAHD,EAGgB,IAHhB,0BAIA,GAJA,8BAKKD,IALL,EAKY,QALZ,sBAMKD,GANL,EAMW,yIANX,cANS;AAebO,EAAAA,GAAG,oCACEN,IADF,EACS,QADT,yBAEED,GAFF,EAEQ,6BAFR,yBAGEE,YAHF,EAGiB,IAHjB,QAfU;AAoBbM,EAAAA,IAAI,sCACCP,IADD,EACQ,CAAC,QAAD,EAAW,QAAX,CADR,0BAECC,YAFD,EAEgB,kBAFhB,0BAGCF,GAHD,EAGO,4FAHP,sEAKKC,IALL,EAKY,QALZ,0BAMKD,GANL,EAMW,6CANX,kBApBS;AA6BbS,EAAAA,UAAU,kDACLR,IADK,EACE,QADF,gCAELD,GAFK,EAEC,mEAFD,2FAIDC,IAJC,EAIM,QAJN,+BAKDD,GALC,EAKK,iBALL,+BAMDE,YANC,EAMc,IANd,yGASDD,IATC,EASM,QATN,+BAUDD,GAVC,EAUK,mBAVL,+BAWDE,YAXC,EAWc,IAXd,4GAcDD,IAdC,EAcM,QAdN,gCAeDD,GAfC,EAeK,YAfL,gCAgBDE,YAhBC,EAgBc,IAhBd,mHAmBDD,IAnBC,EAmBM,QAnBN,kCAoBDD,GApBC,EAoBK,cApBL,kCAqBDE,YArBC,EAqBc,IArBd,kHAwBDD,IAxBC,EAwBM,QAxBN,iCAyBDD,GAzBC,EAyBK,sBAzBL,iCA0BDE,YA1BC,EA0Bc,IA1Bd;AA7BG,CAAjB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    favicon: {\n        [type]: 'string',\n        [doc]: 'Path or URL to the website\\'s icon',\n        [defaultValue]: '/images/favicon.svg',\n    },\n    meta: {\n        [type]: 'array',\n        [doc]: 'Additional HTML meta tags in an array.',\n        [defaultValue]: null,\n        '*': {\n            [type]: 'string',\n            [doc]: 'Meta tag specified in <attribute>=<value> style.\\nE.g., name=theme-color;content=#123456 => <meta name=\"theme-color\" content=\"#123456\">'\n        }\n    },\n    rss: {\n        [type]: 'string',\n        [doc]: 'Path or URL to RSS atom.xml',\n        [defaultValue]: null\n    },\n    logo: {\n        [type]: ['string', 'object'],\n        [defaultValue]: '/images/logo.svg',\n        [doc]: 'Path or URL to the website\\'s logo to be shown on the left of the navigation bar or footer',\n        text: {\n            [type]: 'string',\n            [doc]: 'Text to be shown in place of the logo image'\n        }\n    },\n    open_graph: {\n        [type]: 'object',\n        [doc]: 'Open Graph metadata\\nhttps://hexo.io/docs/helpers.html#open-graph',\n        fb_app_id: {\n            [type]: 'string',\n            [doc]: 'Facebook App ID',\n            [defaultValue]: null\n        },\n        fb_admins: {\n            [type]: 'string',\n            [doc]: 'Facebook Admin ID',\n            [defaultValue]: null\n        },\n        twitter_id: {\n            [type]: 'string',\n            [doc]: 'Twitter ID',\n            [defaultValue]: null\n        },\n        twitter_site: {\n            [type]: 'string',\n            [doc]: 'Twitter site',\n            [defaultValue]: null\n        },\n        google_plus: {\n            [type]: 'string',\n            [doc]: 'Google+ profile link',\n            [defaultValue]: null\n        }\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525721
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/navbar.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/navbar.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/navbar.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/navbar.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "navbar.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _, _menu, _objectSpread2, _module$exports;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue;\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'Navigation bar link settings'), _defineProperty(_module$exports, \"menu\", (_menu = {}, _defineProperty(_menu, type, 'object'), _defineProperty(_menu, doc, 'Navigation bar menu links'), _defineProperty(_menu, defaultValue, {\n  Home: '/',\n  Archives: '/archives',\n  Categories: '/categories',\n  Tags: '/tags',\n  About: '/about'\n}), _defineProperty(_menu, '*', (_ = {}, _defineProperty(_, type, 'string'), _defineProperty(_, doc, 'Path or URL to the menu item'), _)), _menu)), _defineProperty(_module$exports, \"links\", _objectSpread({}, require('./icon_link.spec'), (_objectSpread2 = {}, _defineProperty(_objectSpread2, doc, 'Navigation bar links to be shown on the right'), _defineProperty(_objectSpread2, defaultValue, {\n  'Download on GitHub': {\n    icon: 'fab fa-github',\n    url: 'https://github.com/ppoffice/hexo-theme-icarus'\n  }\n}), _objectSpread2))), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5hdmJhci5zcGVjLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJkZXNjcmlwdG9ycyIsImRvYyIsInR5cGUiLCJkZWZhdWx0VmFsdWUiLCJtb2R1bGUiLCJleHBvcnRzIiwiSG9tZSIsIkFyY2hpdmVzIiwiQ2F0ZWdvcmllcyIsIlRhZ3MiLCJBYm91dCIsImljb24iLCJ1cmwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7MkJBQW9DQSxPQUFPLENBQUMsaUJBQUQsQ0FBUCxDQUEyQkMsVztJQUF2REMsRyx3QkFBQUEsRztJQUFLQyxJLHdCQUFBQSxJO0lBQU1DLFksd0JBQUFBLFk7O0FBRW5CQyxNQUFNLENBQUNDLE9BQVAsMkRBQ0tILElBREwsRUFDWSxRQURaLG9DQUVLRCxHQUZMLEVBRVcsOEJBRlgsZ0ZBSVNDLElBSlQsRUFJZ0IsUUFKaEIsMEJBS1NELEdBTFQsRUFLZSwyQkFMZiwwQkFNU0UsWUFOVCxFQU13QjtBQUNaRyxFQUFBQSxJQUFJLEVBQUUsR0FETTtBQUVaQyxFQUFBQSxRQUFRLEVBQUUsV0FGRTtBQUdaQyxFQUFBQSxVQUFVLEVBQUUsYUFIQTtBQUlaQyxFQUFBQSxJQUFJLEVBQUUsT0FKTTtBQUtaQyxFQUFBQSxLQUFLLEVBQUU7QUFMSyxDQU54QiwwQkFhUSxHQWJSLDhCQWNhUixJQWRiLEVBY29CLFFBZHBCLHNCQWVhRCxHQWZiLEVBZW1CLDhCQWZuQiw2RUFtQldGLE9BQU8sQ0FBQyxrQkFBRCxDQW5CbEIsd0RBb0JTRSxHQXBCVCxFQW9CZSwrQ0FwQmYsbUNBcUJTRSxZQXJCVCxFQXFCd0I7QUFDWix3QkFBc0I7QUFDbEJRLElBQUFBLElBQUksRUFBRSxlQURZO0FBRWxCQyxJQUFBQSxHQUFHLEVBQUU7QUFGYTtBQURWLENBckJ4QiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvc3BlY3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGRvYywgdHlwZSwgZGVmYXVsdFZhbHVlIH0gPSByZXF1aXJlKCcuLi9jb21tb24vdXRpbHMnKS5kZXNjcmlwdG9ycztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgW3R5cGVdOiAnb2JqZWN0JyxcbiAgICBbZG9jXTogJ05hdmlnYXRpb24gYmFyIGxpbmsgc2V0dGluZ3MnLFxuICAgIG1lbnU6IHtcbiAgICAgICAgW3R5cGVdOiAnb2JqZWN0JyxcbiAgICAgICAgW2RvY106ICdOYXZpZ2F0aW9uIGJhciBtZW51IGxpbmtzJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IHtcbiAgICAgICAgICAgIEhvbWU6ICcvJyxcbiAgICAgICAgICAgIEFyY2hpdmVzOiAnL2FyY2hpdmVzJyxcbiAgICAgICAgICAgIENhdGVnb3JpZXM6ICcvY2F0ZWdvcmllcycsXG4gICAgICAgICAgICBUYWdzOiAnL3RhZ3MnLFxuICAgICAgICAgICAgQWJvdXQ6ICcvYWJvdXQnXG4gICAgICAgIH0sXG4gICAgICAgICcqJzoge1xuICAgICAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgICAgIFtkb2NdOiAnUGF0aCBvciBVUkwgdG8gdGhlIG1lbnUgaXRlbSdcbiAgICAgICAgfVxuICAgIH0sXG4gICAgbGlua3M6IHtcbiAgICAgICAgLi4ucmVxdWlyZSgnLi9pY29uX2xpbmsuc3BlYycpLFxuICAgICAgICBbZG9jXTogJ05hdmlnYXRpb24gYmFyIGxpbmtzIHRvIGJlIHNob3duIG9uIHRoZSByaWdodCcsXG4gICAgICAgIFtkZWZhdWx0VmFsdWVdOiB7XG4gICAgICAgICAgICAnRG93bmxvYWQgb24gR2l0SHViJzoge1xuICAgICAgICAgICAgICAgIGljb246ICdmYWIgZmEtZ2l0aHViJyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL2dpdGh1Yi5jb20vcHBvZmZpY2UvaGV4by10aGVtZS1pY2FydXMnXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "navbar.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "module",
        "exports",
        "Home",
        "Archives",
        "Categories",
        "Tags",
        "About",
        "icon",
        "url"
      ],
      "mappings": ";;;;;;;;;;2BAAoCA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAvDC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;;AAEnBC,MAAM,CAACC,OAAP,2DACKH,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,8BAFX,gFAISC,IAJT,EAIgB,QAJhB,0BAKSD,GALT,EAKe,2BALf,0BAMSE,YANT,EAMwB;AACZG,EAAAA,IAAI,EAAE,GADM;AAEZC,EAAAA,QAAQ,EAAE,WAFE;AAGZC,EAAAA,UAAU,EAAE,aAHA;AAIZC,EAAAA,IAAI,EAAE,OAJM;AAKZC,EAAAA,KAAK,EAAE;AALK,CANxB,0BAaQ,GAbR,8BAcaR,IAdb,EAcoB,QAdpB,sBAeaD,GAfb,EAemB,8BAfnB,6EAmBWF,OAAO,CAAC,kBAAD,CAnBlB,wDAoBSE,GApBT,EAoBe,+CApBf,mCAqBSE,YArBT,EAqBwB;AACZ,wBAAsB;AAClBQ,IAAAA,IAAI,EAAE,eADY;AAElBC,IAAAA,GAAG,EAAE;AAFa;AADV,CArBxB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Navigation bar link settings',\n    menu: {\n        [type]: 'object',\n        [doc]: 'Navigation bar menu links',\n        [defaultValue]: {\n            Home: '/',\n            Archives: '/archives',\n            Categories: '/categories',\n            Tags: '/tags',\n            About: '/about'\n        },\n        '*': {\n            [type]: 'string',\n            [doc]: 'Path or URL to the menu item'\n        }\n    },\n    links: {\n        ...require('./icon_link.spec'),\n        [doc]: 'Navigation bar links to be shown on the right',\n        [defaultValue]: {\n            'Download on GitHub': {\n                icon: 'fab fa-github',\n                url: 'https://github.com/ppoffice/hexo-theme-icarus'\n            }\n        }\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525725
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/icon_link.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/icon_link.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/icon_link.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/icon_link.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "icon_link.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _icon, _url, _, _module$exports;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    required = _require$descriptors.required;\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'Link icon settings'), _defineProperty(_module$exports, '*', (_ = {}, _defineProperty(_, type, ['string', 'object']), _defineProperty(_, doc, 'Path or URL to the menu item, and/or link icon class names'), _defineProperty(_, \"icon\", (_icon = {}, _defineProperty(_icon, required, true), _defineProperty(_icon, type, 'string'), _defineProperty(_icon, doc, 'Link icon class names'), _icon)), _defineProperty(_, \"url\", (_url = {}, _defineProperty(_url, required, true), _defineProperty(_url, type, 'string'), _defineProperty(_url, doc, 'Path or URL to the menu item'), _url)), _)), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImljb25fbGluay5zcGVjLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJkZXNjcmlwdG9ycyIsImRvYyIsInR5cGUiLCJyZXF1aXJlZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7OzsyQkFBZ0NBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCQyxXO0lBQW5EQyxHLHdCQUFBQSxHO0lBQUtDLEksd0JBQUFBLEk7SUFBTUMsUSx3QkFBQUEsUTs7QUFFbkJDLE1BQU0sQ0FBQ0MsT0FBUCwyREFDS0gsSUFETCxFQUNZLFFBRFosb0NBRUtELEdBRkwsRUFFVyxvQkFGWCxvQ0FHSSxHQUhKLDhCQUlTQyxJQUpULEVBSWdCLENBQUMsUUFBRCxFQUFXLFFBQVgsQ0FKaEIsc0JBS1NELEdBTFQsRUFLZSw0REFMZixrRUFPYUUsUUFQYixFQU93QixJQVB4QiwwQkFRYUQsSUFSYixFQVFvQixRQVJwQiwwQkFTYUQsR0FUYixFQVNtQix1QkFUbkIsd0VBWWFFLFFBWmIsRUFZd0IsSUFaeEIseUJBYWFELElBYmIsRUFhb0IsUUFicEIseUJBY2FELEdBZGIsRUFjbUIsOEJBZG5CIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1cy9pbmNsdWRlcy9zcGVjcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZG9jLCB0eXBlLCByZXF1aXJlZCB9ID0gcmVxdWlyZSgnLi4vY29tbW9uL3V0aWxzJykuZGVzY3JpcHRvcnM7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFt0eXBlXTogJ29iamVjdCcsXG4gICAgW2RvY106ICdMaW5rIGljb24gc2V0dGluZ3MnLFxuICAgICcqJzoge1xuICAgICAgICBbdHlwZV06IFsnc3RyaW5nJywgJ29iamVjdCddLFxuICAgICAgICBbZG9jXTogJ1BhdGggb3IgVVJMIHRvIHRoZSBtZW51IGl0ZW0sIGFuZC9vciBsaW5rIGljb24gY2xhc3MgbmFtZXMnLFxuICAgICAgICBpY29uOiB7XG4gICAgICAgICAgICBbcmVxdWlyZWRdOiB0cnVlLFxuICAgICAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgICAgIFtkb2NdOiAnTGluayBpY29uIGNsYXNzIG5hbWVzJ1xuICAgICAgICB9LFxuICAgICAgICB1cmw6IHtcbiAgICAgICAgICAgIFtyZXF1aXJlZF06IHRydWUsXG4gICAgICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICAgICAgW2RvY106ICdQYXRoIG9yIFVSTCB0byB0aGUgbWVudSBpdGVtJ1xuICAgICAgICB9XG4gICAgfVxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "icon_link.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "required",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;2BAAgCA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAnDC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Q,wBAAAA,Q;;AAEnBC,MAAM,CAACC,OAAP,2DACKH,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,oBAFX,oCAGI,GAHJ,8BAISC,IAJT,EAIgB,CAAC,QAAD,EAAW,QAAX,CAJhB,sBAKSD,GALT,EAKe,4DALf,kEAOaE,QAPb,EAOwB,IAPxB,0BAQaD,IARb,EAQoB,QARpB,0BASaD,GATb,EASmB,uBATnB,wEAYaE,QAZb,EAYwB,IAZxB,yBAaaD,IAbb,EAaoB,QAbpB,yBAcaD,GAdb,EAcmB,8BAdnB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, required } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Link icon settings',\n    '*': {\n        [type]: ['string', 'object'],\n        [doc]: 'Path or URL to the menu item, and/or link icon class names',\n        icon: {\n            [required]: true,\n            [type]: 'string',\n            [doc]: 'Link icon class names'\n        },\n        url: {\n            [required]: true,\n            [type]: 'string',\n            [doc]: 'Path or URL to the menu item'\n        }\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525721
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/footer.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/footer.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/footer.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/footer.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "footer.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _objectSpread2, _module$exports;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue;\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'Footer section link settings'), _defineProperty(_module$exports, \"links\", _objectSpread({}, require('./icon_link.spec'), (_objectSpread2 = {}, _defineProperty(_objectSpread2, doc, 'Links to be shown on the right of the footer section'), _defineProperty(_objectSpread2, defaultValue, {\n  'Creative Commons': {\n    icon: 'fab fa-creative-commons',\n    url: 'https://creativecommons.org/'\n  },\n  'Attribution 4.0 International': {\n    icon: 'fab fa-creative-commons-by',\n    url: 'https://creativecommons.org/licenses/by/4.0/'\n  },\n  'Download on GitHub': {\n    icon: 'fab fa-github',\n    url: 'https://github.com/ppoffice/hexo-theme-icarus'\n  }\n}), _objectSpread2))), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvb3Rlci5zcGVjLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJkZXNjcmlwdG9ycyIsImRvYyIsInR5cGUiLCJkZWZhdWx0VmFsdWUiLCJtb2R1bGUiLCJleHBvcnRzIiwiaWNvbiIsInVybCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OzsyQkFBb0NBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCQyxXO0lBQXZEQyxHLHdCQUFBQSxHO0lBQUtDLEksd0JBQUFBLEk7SUFBTUMsWSx3QkFBQUEsWTs7QUFFbkJDLE1BQU0sQ0FBQ0MsT0FBUCwyREFDS0gsSUFETCxFQUNZLFFBRFosb0NBRUtELEdBRkwsRUFFVyw4QkFGWCwrREFJV0YsT0FBTyxDQUFDLGtCQUFELENBSmxCLHdEQUtTRSxHQUxULEVBS2Usc0RBTGYsbUNBTVNFLFlBTlQsRUFNd0I7QUFDWixzQkFBb0I7QUFDaEJHLElBQUFBLElBQUksRUFBRSx5QkFEVTtBQUVoQkMsSUFBQUEsR0FBRyxFQUFFO0FBRlcsR0FEUjtBQUtaLG1DQUFpQztBQUM3QkQsSUFBQUEsSUFBSSxFQUFFLDRCQUR1QjtBQUU3QkMsSUFBQUEsR0FBRyxFQUFFO0FBRndCLEdBTHJCO0FBU1osd0JBQXNCO0FBQ2xCRCxJQUFBQSxJQUFJLEVBQUUsZUFEWTtBQUVsQkMsSUFBQUEsR0FBRyxFQUFFO0FBRmE7QUFUVixDQU54QiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvc3BlY3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGRvYywgdHlwZSwgZGVmYXVsdFZhbHVlIH0gPSByZXF1aXJlKCcuLi9jb21tb24vdXRpbHMnKS5kZXNjcmlwdG9ycztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgW3R5cGVdOiAnb2JqZWN0JyxcbiAgICBbZG9jXTogJ0Zvb3RlciBzZWN0aW9uIGxpbmsgc2V0dGluZ3MnLFxuICAgIGxpbmtzOiB7XG4gICAgICAgIC4uLnJlcXVpcmUoJy4vaWNvbl9saW5rLnNwZWMnKSxcbiAgICAgICAgW2RvY106ICdMaW5rcyB0byBiZSBzaG93biBvbiB0aGUgcmlnaHQgb2YgdGhlIGZvb3RlciBzZWN0aW9uJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IHtcbiAgICAgICAgICAgICdDcmVhdGl2ZSBDb21tb25zJzoge1xuICAgICAgICAgICAgICAgIGljb246ICdmYWIgZmEtY3JlYXRpdmUtY29tbW9ucycsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnLydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnQXR0cmlidXRpb24gNC4wIEludGVybmF0aW9uYWwnOiB7XG4gICAgICAgICAgICAgICAgaWNvbjogJ2ZhYiBmYS1jcmVhdGl2ZS1jb21tb25zLWJ5JyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wLydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnRG93bmxvYWQgb24gR2l0SHViJzoge1xuICAgICAgICAgICAgICAgIGljb246ICdmYWIgZmEtZ2l0aHViJyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL2dpdGh1Yi5jb20vcHBvZmZpY2UvaGV4by10aGVtZS1pY2FydXMnXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "footer.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "module",
        "exports",
        "icon",
        "url"
      ],
      "mappings": ";;;;;;;;;;2BAAoCA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAvDC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;;AAEnBC,MAAM,CAACC,OAAP,2DACKH,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,8BAFX,+DAIWF,OAAO,CAAC,kBAAD,CAJlB,wDAKSE,GALT,EAKe,sDALf,mCAMSE,YANT,EAMwB;AACZ,sBAAoB;AAChBG,IAAAA,IAAI,EAAE,yBADU;AAEhBC,IAAAA,GAAG,EAAE;AAFW,GADR;AAKZ,mCAAiC;AAC7BD,IAAAA,IAAI,EAAE,4BADuB;AAE7BC,IAAAA,GAAG,EAAE;AAFwB,GALrB;AASZ,wBAAsB;AAClBD,IAAAA,IAAI,EAAE,eADY;AAElBC,IAAAA,GAAG,EAAE;AAFa;AATV,CANxB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Footer section link settings',\n    links: {\n        ...require('./icon_link.spec'),\n        [doc]: 'Links to be shown on the right of the footer section',\n        [defaultValue]: {\n            'Creative Commons': {\n                icon: 'fab fa-creative-commons',\n                url: 'https://creativecommons.org/'\n            },\n            'Attribution 4.0 International': {\n                icon: 'fab fa-creative-commons-by',\n                url: 'https://creativecommons.org/licenses/by/4.0/'\n            },\n            'Download on GitHub': {\n                icon: 'fab fa-github',\n                url: 'https://github.com/ppoffice/hexo-theme-icarus'\n            }\n        }\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525721
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/article.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/article.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/article.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/article.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "article.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _theme, _clipboard, _fold, _highlight, _thumbnail, _readtime, _module$exports;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue;\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'Article display settings'), _defineProperty(_module$exports, \"highlight\", (_highlight = {}, _defineProperty(_highlight, type, 'object'), _defineProperty(_highlight, doc, 'Code highlight settings'), _defineProperty(_highlight, \"theme\", (_theme = {}, _defineProperty(_theme, type, 'string'), _defineProperty(_theme, doc, 'Code highlight themes\\nhttps://github.com/highlightjs/highlight.js/tree/master/src/styles'), _defineProperty(_theme, defaultValue, 'atom-one-light'), _theme)), _defineProperty(_highlight, \"clipboard\", (_clipboard = {}, _defineProperty(_clipboard, type, 'boolean'), _defineProperty(_clipboard, doc, 'Show code copying button'), _defineProperty(_clipboard, defaultValue, true), _clipboard)), _defineProperty(_highlight, \"fold\", (_fold = {}, _defineProperty(_fold, type, 'string'), _defineProperty(_fold, doc, 'Default folding status of the code blocks. Can be \"\", \"folded\", \"unfolded\"'), _defineProperty(_fold, defaultValue, 'unfolded'), _fold)), _highlight)), _defineProperty(_module$exports, \"thumbnail\", (_thumbnail = {}, _defineProperty(_thumbnail, type, 'boolean'), _defineProperty(_thumbnail, doc, 'Whether to show article thumbnail images'), _defineProperty(_thumbnail, defaultValue, true), _thumbnail)), _defineProperty(_module$exports, \"readtime\", (_readtime = {}, _defineProperty(_readtime, type, 'boolean'), _defineProperty(_readtime, doc, 'Whether to show estimate article reading time'), _defineProperty(_readtime, defaultValue, true), _readtime)), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFydGljbGUuc3BlYy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiZGVzY3JpcHRvcnMiLCJkb2MiLCJ0eXBlIiwiZGVmYXVsdFZhbHVlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OzJCQUFvQ0EsT0FBTyxDQUFDLGlCQUFELENBQVAsQ0FBMkJDLFc7SUFBdkRDLEcsd0JBQUFBLEc7SUFBS0MsSSx3QkFBQUEsSTtJQUFNQyxZLHdCQUFBQSxZOztBQUVuQkMsTUFBTSxDQUFDQyxPQUFQLDJEQUNLSCxJQURMLEVBQ1ksUUFEWixvQ0FFS0QsR0FGTCxFQUVXLDBCQUZYLCtGQUlTQyxJQUpULEVBSWdCLFFBSmhCLCtCQUtTRCxHQUxULEVBS2UseUJBTGYsOEVBT2FDLElBUGIsRUFPb0IsUUFQcEIsMkJBUWFELEdBUmIsRUFRbUIsMkZBUm5CLDJCQVNhRSxZQVRiLEVBUzRCLGdCQVQ1QixvR0FZYUQsSUFaYixFQVlvQixTQVpwQiwrQkFhYUQsR0FiYixFQWFtQiwwQkFibkIsK0JBY2FFLFlBZGIsRUFjNEIsSUFkNUIseUZBaUJhRCxJQWpCYixFQWlCb0IsUUFqQnBCLDBCQWtCYUQsR0FsQmIsRUFrQm1CLDRFQWxCbkIsMEJBbUJhRSxZQW5CYixFQW1CNEIsVUFuQjVCLHNIQXVCU0QsSUF2QlQsRUF1QmdCLFNBdkJoQiwrQkF3QlNELEdBeEJULEVBd0JlLDBDQXhCZiwrQkF5QlNFLFlBekJULEVBeUJ3QixJQXpCeEIsMEdBNEJTRCxJQTVCVCxFQTRCZ0IsU0E1QmhCLDhCQTZCU0QsR0E3QlQsRUE2QmUsK0NBN0JmLDhCQThCU0UsWUE5QlQsRUE4QndCLElBOUJ4QiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvc3BlY3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGRvYywgdHlwZSwgZGVmYXVsdFZhbHVlIH0gPSByZXF1aXJlKCcuLi9jb21tb24vdXRpbHMnKS5kZXNjcmlwdG9ycztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgW3R5cGVdOiAnb2JqZWN0JyxcbiAgICBbZG9jXTogJ0FydGljbGUgZGlzcGxheSBzZXR0aW5ncycsXG4gICAgaGlnaGxpZ2h0OiB7XG4gICAgICAgIFt0eXBlXTogJ29iamVjdCcsXG4gICAgICAgIFtkb2NdOiAnQ29kZSBoaWdobGlnaHQgc2V0dGluZ3MnLFxuICAgICAgICB0aGVtZToge1xuICAgICAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgICAgIFtkb2NdOiAnQ29kZSBoaWdobGlnaHQgdGhlbWVzXFxuaHR0cHM6Ly9naXRodWIuY29tL2hpZ2hsaWdodGpzL2hpZ2hsaWdodC5qcy90cmVlL21hc3Rlci9zcmMvc3R5bGVzJyxcbiAgICAgICAgICAgIFtkZWZhdWx0VmFsdWVdOiAnYXRvbS1vbmUtbGlnaHQnXG4gICAgICAgIH0sXG4gICAgICAgIGNsaXBib2FyZDoge1xuICAgICAgICAgICAgW3R5cGVdOiAnYm9vbGVhbicsXG4gICAgICAgICAgICBbZG9jXTogJ1Nob3cgY29kZSBjb3B5aW5nIGJ1dHRvbicsXG4gICAgICAgICAgICBbZGVmYXVsdFZhbHVlXTogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBmb2xkOiB7XG4gICAgICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICAgICAgW2RvY106ICdEZWZhdWx0IGZvbGRpbmcgc3RhdHVzIG9mIHRoZSBjb2RlIGJsb2Nrcy4gQ2FuIGJlIFwiXCIsIFwiZm9sZGVkXCIsIFwidW5mb2xkZWRcIicsXG4gICAgICAgICAgICBbZGVmYXVsdFZhbHVlXTogJ3VuZm9sZGVkJ1xuICAgICAgICB9XG4gICAgfSxcbiAgICB0aHVtYm5haWw6IHtcbiAgICAgICAgW3R5cGVdOiAnYm9vbGVhbicsXG4gICAgICAgIFtkb2NdOiAnV2hldGhlciB0byBzaG93IGFydGljbGUgdGh1bWJuYWlsIGltYWdlcycsXG4gICAgICAgIFtkZWZhdWx0VmFsdWVdOiB0cnVlXG4gICAgfSxcbiAgICByZWFkdGltZToge1xuICAgICAgICBbdHlwZV06ICdib29sZWFuJyxcbiAgICAgICAgW2RvY106ICdXaGV0aGVyIHRvIHNob3cgZXN0aW1hdGUgYXJ0aWNsZSByZWFkaW5nIHRpbWUnLFxuICAgICAgICBbZGVmYXVsdFZhbHVlXTogdHJ1ZVxuICAgIH1cbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "article.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;2BAAoCA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAvDC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;;AAEnBC,MAAM,CAACC,OAAP,2DACKH,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,0BAFX,+FAISC,IAJT,EAIgB,QAJhB,+BAKSD,GALT,EAKe,yBALf,8EAOaC,IAPb,EAOoB,QAPpB,2BAQaD,GARb,EAQmB,2FARnB,2BASaE,YATb,EAS4B,gBAT5B,oGAYaD,IAZb,EAYoB,SAZpB,+BAaaD,GAbb,EAamB,0BAbnB,+BAcaE,YAdb,EAc4B,IAd5B,yFAiBaD,IAjBb,EAiBoB,QAjBpB,0BAkBaD,GAlBb,EAkBmB,4EAlBnB,0BAmBaE,YAnBb,EAmB4B,UAnB5B,sHAuBSD,IAvBT,EAuBgB,SAvBhB,+BAwBSD,GAxBT,EAwBe,0CAxBf,+BAyBSE,YAzBT,EAyBwB,IAzBxB,0GA4BSD,IA5BT,EA4BgB,SA5BhB,8BA6BSD,GA7BT,EA6Be,+CA7Bf,8BA8BSE,YA9BT,EA8BwB,IA9BxB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Article display settings',\n    highlight: {\n        [type]: 'object',\n        [doc]: 'Code highlight settings',\n        theme: {\n            [type]: 'string',\n            [doc]: 'Code highlight themes\\nhttps://github.com/highlightjs/highlight.js/tree/master/src/styles',\n            [defaultValue]: 'atom-one-light'\n        },\n        clipboard: {\n            [type]: 'boolean',\n            [doc]: 'Show code copying button',\n            [defaultValue]: true\n        },\n        fold: {\n            [type]: 'string',\n            [doc]: 'Default folding status of the code blocks. Can be \"\", \"folded\", \"unfolded\"',\n            [defaultValue]: 'unfolded'\n        }\n    },\n    thumbnail: {\n        [type]: 'boolean',\n        [doc]: 'Whether to show article thumbnail images',\n        [defaultValue]: true\n    },\n    readtime: {\n        [type]: 'boolean',\n        [doc]: 'Whether to show estimate article reading time',\n        [defaultValue]: true\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525717
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/search.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/search.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/search.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/search.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "search.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _type, _cx, _module$exports;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue,\n    required = _require$descriptors.required,\n    requires = _require$descriptors.requires;\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'Search plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Search'), _defineProperty(_module$exports, \"type\", (_type = {}, _defineProperty(_type, type, 'string'), _defineProperty(_type, doc, 'Name of the search plugin'), _defineProperty(_type, defaultValue, 'insight'), _type)), _defineProperty(_module$exports, \"cx\", (_cx = {}, _defineProperty(_cx, type, 'string'), _defineProperty(_cx, doc, 'Google CSE cx value'), _defineProperty(_cx, required, true), _defineProperty(_cx, requires, function (search) {\n  return search.type === 'google-cse';\n}), _cx)), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlYXJjaC5zcGVjLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJkZXNjcmlwdG9ycyIsImRvYyIsInR5cGUiLCJkZWZhdWx0VmFsdWUiLCJyZXF1aXJlZCIsInJlcXVpcmVzIiwibW9kdWxlIiwiZXhwb3J0cyIsInNlYXJjaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OzJCQUF3REEsT0FBTyxDQUFDLGlCQUFELENBQVAsQ0FBMkJDLFc7SUFBM0VDLEcsd0JBQUFBLEc7SUFBS0MsSSx3QkFBQUEsSTtJQUFNQyxZLHdCQUFBQSxZO0lBQWNDLFEsd0JBQUFBLFE7SUFBVUMsUSx3QkFBQUEsUTs7QUFFM0NDLE1BQU0sQ0FBQ0MsT0FBUCwyREFDS0wsSUFETCxFQUNZLFFBRFosb0NBRUtELEdBRkwsRUFFVyxnR0FGWCxnRkFJU0MsSUFKVCxFQUlnQixRQUpoQiwwQkFLU0QsR0FMVCxFQUtlLDJCQUxmLDBCQU1TRSxZQU5ULEVBTXdCLFNBTnhCLG1GQVNTRCxJQVRULEVBU2dCLFFBVGhCLHdCQVVTRCxHQVZULEVBVWUscUJBVmYsd0JBV1NHLFFBWFQsRUFXb0IsSUFYcEIsd0JBWVNDLFFBWlQsRUFZb0IsVUFBQUcsTUFBTTtBQUFBLFNBQUlBLE1BQU0sQ0FBQ04sSUFBUCxLQUFnQixZQUFwQjtBQUFBLENBWjFCIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1cy9pbmNsdWRlcy9zcGVjcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZG9jLCB0eXBlLCBkZWZhdWx0VmFsdWUsIHJlcXVpcmVkLCByZXF1aXJlcyB9ID0gcmVxdWlyZSgnLi4vY29tbW9uL3V0aWxzJykuZGVzY3JpcHRvcnM7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFt0eXBlXTogJ29iamVjdCcsXG4gICAgW2RvY106ICdTZWFyY2ggcGx1Z2luIHNldHRpbmdzXFxuaHR0cHM6Ly9wcG9mZmljZS5naXRodWIuaW8vaGV4by10aGVtZS1pY2FydXMvY2F0ZWdvcmllcy9QbHVnaW5zL1NlYXJjaCcsXG4gICAgdHlwZToge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ05hbWUgb2YgdGhlIHNlYXJjaCBwbHVnaW4nLFxuICAgICAgICBbZGVmYXVsdFZhbHVlXTogJ2luc2lnaHQnXG4gICAgfSxcbiAgICBjeDoge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ0dvb2dsZSBDU0UgY3ggdmFsdWUnLFxuICAgICAgICBbcmVxdWlyZWRdOiB0cnVlLFxuICAgICAgICBbcmVxdWlyZXNdOiBzZWFyY2ggPT4gc2VhcmNoLnR5cGUgPT09ICdnb29nbGUtY3NlJ1xuICAgIH1cbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "search.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "required",
        "requires",
        "module",
        "exports",
        "search"
      ],
      "mappings": ";;;;;;2BAAwDA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAA3EC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;IAAcC,Q,wBAAAA,Q;IAAUC,Q,wBAAAA,Q;;AAE3CC,MAAM,CAACC,OAAP,2DACKL,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,gGAFX,gFAISC,IAJT,EAIgB,QAJhB,0BAKSD,GALT,EAKe,2BALf,0BAMSE,YANT,EAMwB,SANxB,mFASSD,IATT,EASgB,QAThB,wBAUSD,GAVT,EAUe,qBAVf,wBAWSG,QAXT,EAWoB,IAXpB,wBAYSC,QAZT,EAYoB,UAAAG,MAAM;AAAA,SAAIA,MAAM,CAACN,IAAP,KAAgB,YAApB;AAAA,CAZ1B",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue, required, requires } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Search plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Search',\n    type: {\n        [type]: 'string',\n        [doc]: 'Name of the search plugin',\n        [defaultValue]: 'insight'\n    },\n    cx: {\n        [type]: 'string',\n        [doc]: 'Google CSE cx value',\n        [required]: true,\n        [requires]: search => search.type === 'google-cse'\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525725
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/comment.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/comment.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/comment.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/comment.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "comment.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _appid, _conf, _shortname, _owner, _repo, _client_id, _client_secret, _, _admin, _create_issue_manuall, _distraction_free_mod, _url, _uid, _app_id, _app_key, _notify, _verify, _placeholder, _type, _objectSpread2;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue,\n    required = _require$descriptors.required,\n    requires = _require$descriptors.requires;\n\nvar ChangYanSpec = {\n  appid: (_appid = {}, _defineProperty(_appid, type, 'string'), _defineProperty(_appid, doc, 'Changyan comment app ID'), _defineProperty(_appid, required, true), _defineProperty(_appid, requires, function (comment) {\n    return comment.type === 'changyan';\n  }), _appid),\n  conf: (_conf = {}, _defineProperty(_conf, type, 'string'), _defineProperty(_conf, doc, 'Changyan comment configuration ID'), _defineProperty(_conf, required, true), _defineProperty(_conf, requires, function (comment) {\n    return comment.type === 'changyan';\n  }), _conf)\n};\nvar DisqusSpec = {\n  shortname: (_shortname = {}, _defineProperty(_shortname, type, 'string'), _defineProperty(_shortname, doc, 'Disqus shortname'), _defineProperty(_shortname, required, true), _defineProperty(_shortname, requires, function (comment) {\n    return comment.type === 'disqus';\n  }), _shortname)\n};\nvar GitmentGitalkSpec = {\n  owner: (_owner = {}, _defineProperty(_owner, type, 'string'), _defineProperty(_owner, doc, 'GitHub user ID'), _defineProperty(_owner, required, true), _defineProperty(_owner, requires, function (comment) {\n    return comment.type === 'gitment' || comment.type === 'gitalk';\n  }), _owner),\n  repo: (_repo = {}, _defineProperty(_repo, type, 'string'), _defineProperty(_repo, doc, 'GitHub repo name to store comments'), _defineProperty(_repo, required, true), _defineProperty(_repo, requires, function (comment) {\n    return comment.type === 'gitment' || comment.type === 'gitalk';\n  }), _repo),\n  client_id: (_client_id = {}, _defineProperty(_client_id, type, 'string'), _defineProperty(_client_id, doc, 'GitHub application client ID'), _defineProperty(_client_id, required, true), _defineProperty(_client_id, requires, function (comment) {\n    return comment.type === 'gitment' || comment.type === 'gitalk';\n  }), _client_id),\n  client_secret: (_client_secret = {}, _defineProperty(_client_secret, type, 'string'), _defineProperty(_client_secret, doc, 'GitHub application client secret'), _defineProperty(_client_secret, required, true), _defineProperty(_client_secret, requires, function (comment) {\n    return comment.type === 'gitment' || comment.type === 'gitalk';\n  }), _client_secret),\n  admin: (_admin = {}, _defineProperty(_admin, type, ['string', 'array']), _defineProperty(_admin, doc, 'GitHub repo owner and collaborators who can can initialize github issues'), _defineProperty(_admin, required, true), _defineProperty(_admin, requires, function (comment) {\n    return comment.type === 'gitalk';\n  }), _defineProperty(_admin, '*', (_ = {}, _defineProperty(_, type, 'string'), _defineProperty(_, required, true), _)), _admin),\n  create_issue_manually: (_create_issue_manuall = {}, _defineProperty(_create_issue_manuall, type, 'boolean'), _defineProperty(_create_issue_manuall, doc, 'Create GitHub issue manually for each page'), _defineProperty(_create_issue_manuall, defaultValue, false), _defineProperty(_create_issue_manuall, requires, function (comment) {\n    return comment.type === 'gitalk';\n  }), _create_issue_manuall),\n  distraction_free_mode: (_distraction_free_mod = {}, _defineProperty(_distraction_free_mod, type, 'boolean'), _defineProperty(_distraction_free_mod, doc, 'Facebook-like distraction free mode'), _defineProperty(_distraction_free_mod, defaultValue, false), _defineProperty(_distraction_free_mod, requires, function (comment) {\n    return comment.type === 'gitalk';\n  }), _distraction_free_mod)\n};\nvar IssoSpec = {\n  url: (_url = {}, _defineProperty(_url, type, 'string'), _defineProperty(_url, doc, 'URL to your Isso comment service'), _defineProperty(_url, required, true), _defineProperty(_url, requires, function (comment) {\n    return comment.type === 'isso';\n  }), _url)\n};\nvar LiveReSpec = {\n  uid: (_uid = {}, _defineProperty(_uid, type, 'string'), _defineProperty(_uid, doc, 'LiveRe comment service UID'), _defineProperty(_uid, required, true), _defineProperty(_uid, requires, function (comment) {\n    return comment.type === 'livere';\n  }), _uid)\n};\nvar ValineSpec = {\n  app_id: (_app_id = {}, _defineProperty(_app_id, type, 'string'), _defineProperty(_app_id, doc, 'LeanCloud APP ID'), _defineProperty(_app_id, required, true), _defineProperty(_app_id, requires, function (comment) {\n    return comment.type === 'valine';\n  }), _app_id),\n  app_key: (_app_key = {}, _defineProperty(_app_key, type, 'string'), _defineProperty(_app_key, doc, 'LeanCloud APP key'), _defineProperty(_app_key, required, true), _defineProperty(_app_key, requires, function (comment) {\n    return comment.type === 'valine';\n  }), _app_key),\n  notify: (_notify = {}, _defineProperty(_notify, type, 'boolean'), _defineProperty(_notify, doc, 'Enable email notification when someone comments'), _defineProperty(_notify, defaultValue, false), _defineProperty(_notify, requires, function (comment) {\n    return comment.type === 'valine';\n  }), _notify),\n  verify: (_verify = {}, _defineProperty(_verify, type, 'boolean'), _defineProperty(_verify, doc, 'Enable verification code service'), _defineProperty(_verify, defaultValue, false), _defineProperty(_verify, requires, function (comment) {\n    return comment.type === 'valine';\n  }), _verify),\n  placeholder: (_placeholder = {}, _defineProperty(_placeholder, type, 'string'), _defineProperty(_placeholder, doc, 'Placeholder text in the comment box'), _defineProperty(_placeholder, defaultValue, 'Say something...'), _defineProperty(_placeholder, requires, function (comment) {\n    return comment.type === 'valine';\n  }), _placeholder)\n};\nmodule.exports = _objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, type, 'object'), _defineProperty(_objectSpread2, doc, 'Comment plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Comment'), _defineProperty(_objectSpread2, \"type\", (_type = {}, _defineProperty(_type, type, 'string'), _defineProperty(_type, doc, 'Name of the comment plugin'), _defineProperty(_type, defaultValue, null), _type)), _objectSpread2), ChangYanSpec, {}, DisqusSpec, {}, GitmentGitalkSpec, {}, IssoSpec, {}, LiveReSpec, {}, ValineSpec);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnQuc3BlYy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiZGVzY3JpcHRvcnMiLCJkb2MiLCJ0eXBlIiwiZGVmYXVsdFZhbHVlIiwicmVxdWlyZWQiLCJyZXF1aXJlcyIsIkNoYW5nWWFuU3BlYyIsImFwcGlkIiwiY29tbWVudCIsImNvbmYiLCJEaXNxdXNTcGVjIiwic2hvcnRuYW1lIiwiR2l0bWVudEdpdGFsa1NwZWMiLCJvd25lciIsInJlcG8iLCJjbGllbnRfaWQiLCJjbGllbnRfc2VjcmV0IiwiYWRtaW4iLCJjcmVhdGVfaXNzdWVfbWFudWFsbHkiLCJkaXN0cmFjdGlvbl9mcmVlX21vZGUiLCJJc3NvU3BlYyIsInVybCIsIkxpdmVSZVNwZWMiLCJ1aWQiLCJWYWxpbmVTcGVjIiwiYXBwX2lkIiwiYXBwX2tleSIsIm5vdGlmeSIsInZlcmlmeSIsInBsYWNlaG9sZGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OzsyQkFBd0RBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCQyxXO0lBQTNFQyxHLHdCQUFBQSxHO0lBQUtDLEksd0JBQUFBLEk7SUFBTUMsWSx3QkFBQUEsWTtJQUFjQyxRLHdCQUFBQSxRO0lBQVVDLFEsd0JBQUFBLFE7O0FBRTNDLElBQU1DLFlBQVksR0FBRztBQUNqQkMsRUFBQUEsS0FBSyx3Q0FDQUwsSUFEQSxFQUNPLFFBRFAsMkJBRUFELEdBRkEsRUFFTSx5QkFGTiwyQkFHQUcsUUFIQSxFQUdXLElBSFgsMkJBSUFDLFFBSkEsRUFJVyxVQUFBRyxPQUFPO0FBQUEsV0FBSUEsT0FBTyxDQUFDTixJQUFSLEtBQWlCLFVBQXJCO0FBQUEsR0FKbEIsVUFEWTtBQU9qQk8sRUFBQUEsSUFBSSxzQ0FDQ1AsSUFERCxFQUNRLFFBRFIsMEJBRUNELEdBRkQsRUFFTyxtQ0FGUCwwQkFHQ0csUUFIRCxFQUdZLElBSFosMEJBSUNDLFFBSkQsRUFJWSxVQUFBRyxPQUFPO0FBQUEsV0FBSUEsT0FBTyxDQUFDTixJQUFSLEtBQWlCLFVBQXJCO0FBQUEsR0FKbkI7QUFQYSxDQUFyQjtBQWVBLElBQU1RLFVBQVUsR0FBRztBQUNmQyxFQUFBQSxTQUFTLGdEQUNKVCxJQURJLEVBQ0csUUFESCwrQkFFSkQsR0FGSSxFQUVFLGtCQUZGLCtCQUdKRyxRQUhJLEVBR08sSUFIUCwrQkFJSkMsUUFKSSxFQUlPLFVBQUFHLE9BQU87QUFBQSxXQUFJQSxPQUFPLENBQUNOLElBQVIsS0FBaUIsUUFBckI7QUFBQSxHQUpkO0FBRE0sQ0FBbkI7QUFTQSxJQUFNVSxpQkFBaUIsR0FBRztBQUN0QkMsRUFBQUEsS0FBSyx3Q0FDQVgsSUFEQSxFQUNPLFFBRFAsMkJBRUFELEdBRkEsRUFFTSxnQkFGTiwyQkFHQUcsUUFIQSxFQUdXLElBSFgsMkJBSUFDLFFBSkEsRUFJVyxVQUFBRyxPQUFPO0FBQUEsV0FBSUEsT0FBTyxDQUFDTixJQUFSLEtBQWlCLFNBQWpCLElBQThCTSxPQUFPLENBQUNOLElBQVIsS0FBaUIsUUFBbkQ7QUFBQSxHQUpsQixVQURpQjtBQU90QlksRUFBQUEsSUFBSSxzQ0FDQ1osSUFERCxFQUNRLFFBRFIsMEJBRUNELEdBRkQsRUFFTyxvQ0FGUCwwQkFHQ0csUUFIRCxFQUdZLElBSFosMEJBSUNDLFFBSkQsRUFJWSxVQUFBRyxPQUFPO0FBQUEsV0FBSUEsT0FBTyxDQUFDTixJQUFSLEtBQWlCLFNBQWpCLElBQThCTSxPQUFPLENBQUNOLElBQVIsS0FBaUIsUUFBbkQ7QUFBQSxHQUpuQixTQVBrQjtBQWF0QmEsRUFBQUEsU0FBUyxnREFDSmIsSUFESSxFQUNHLFFBREgsK0JBRUpELEdBRkksRUFFRSw4QkFGRiwrQkFHSkcsUUFISSxFQUdPLElBSFAsK0JBSUpDLFFBSkksRUFJTyxVQUFBRyxPQUFPO0FBQUEsV0FBSUEsT0FBTyxDQUFDTixJQUFSLEtBQWlCLFNBQWpCLElBQThCTSxPQUFPLENBQUNOLElBQVIsS0FBaUIsUUFBbkQ7QUFBQSxHQUpkLGNBYmE7QUFtQnRCYyxFQUFBQSxhQUFhLHdEQUNSZCxJQURRLEVBQ0QsUUFEQyxtQ0FFUkQsR0FGUSxFQUVGLGtDQUZFLG1DQUdSRyxRQUhRLEVBR0csSUFISCxtQ0FJUkMsUUFKUSxFQUlHLFVBQUFHLE9BQU87QUFBQSxXQUFJQSxPQUFPLENBQUNOLElBQVIsS0FBaUIsU0FBakIsSUFBOEJNLE9BQU8sQ0FBQ04sSUFBUixLQUFpQixRQUFuRDtBQUFBLEdBSlYsa0JBbkJTO0FBeUJ0QmUsRUFBQUEsS0FBSyx3Q0FDQWYsSUFEQSxFQUNPLENBQUMsUUFBRCxFQUFXLE9BQVgsQ0FEUCwyQkFFQUQsR0FGQSxFQUVNLDBFQUZOLDJCQUdBRyxRQUhBLEVBR1csSUFIWCwyQkFJQUMsUUFKQSxFQUlXLFVBQUFHLE9BQU87QUFBQSxXQUFJQSxPQUFPLENBQUNOLElBQVIsS0FBaUIsUUFBckI7QUFBQSxHQUpsQiwyQkFLRCxHQUxDLDhCQU1JQSxJQU5KLEVBTVcsUUFOWCxzQkFPSUUsUUFQSixFQU9lLElBUGYsZUF6QmlCO0FBbUN0QmMsRUFBQUEscUJBQXFCLHNFQUNoQmhCLElBRGdCLEVBQ1QsU0FEUywwQ0FFaEJELEdBRmdCLEVBRVYsNENBRlUsMENBR2hCRSxZQUhnQixFQUdELEtBSEMsMENBSWhCRSxRQUpnQixFQUlMLFVBQUFHLE9BQU87QUFBQSxXQUFJQSxPQUFPLENBQUNOLElBQVIsS0FBaUIsUUFBckI7QUFBQSxHQUpGLHlCQW5DQztBQXlDdEJpQixFQUFBQSxxQkFBcUIsc0VBQ2hCakIsSUFEZ0IsRUFDVCxTQURTLDBDQUVoQkQsR0FGZ0IsRUFFVixxQ0FGVSwwQ0FHaEJFLFlBSGdCLEVBR0QsS0FIQywwQ0FJaEJFLFFBSmdCLEVBSUwsVUFBQUcsT0FBTztBQUFBLFdBQUlBLE9BQU8sQ0FBQ04sSUFBUixLQUFpQixRQUFyQjtBQUFBLEdBSkY7QUF6Q0MsQ0FBMUI7QUFpREEsSUFBTWtCLFFBQVEsR0FBRztBQUNiQyxFQUFBQSxHQUFHLG9DQUNFbkIsSUFERixFQUNTLFFBRFQseUJBRUVELEdBRkYsRUFFUSxrQ0FGUix5QkFHRUcsUUFIRixFQUdhLElBSGIseUJBSUVDLFFBSkYsRUFJYSxVQUFBRyxPQUFPO0FBQUEsV0FBSUEsT0FBTyxDQUFDTixJQUFSLEtBQWlCLE1BQXJCO0FBQUEsR0FKcEI7QUFEVSxDQUFqQjtBQVNBLElBQU1vQixVQUFVLEdBQUc7QUFDZkMsRUFBQUEsR0FBRyxvQ0FDRXJCLElBREYsRUFDUyxRQURULHlCQUVFRCxHQUZGLEVBRVEsNEJBRlIseUJBR0VHLFFBSEYsRUFHYSxJQUhiLHlCQUlFQyxRQUpGLEVBSWEsVUFBQUcsT0FBTztBQUFBLFdBQUlBLE9BQU8sQ0FBQ04sSUFBUixLQUFpQixRQUFyQjtBQUFBLEdBSnBCO0FBRFksQ0FBbkI7QUFTQSxJQUFNc0IsVUFBVSxHQUFHO0FBQ2ZDLEVBQUFBLE1BQU0sMENBQ0R2QixJQURDLEVBQ00sUUFETiw0QkFFREQsR0FGQyxFQUVLLGtCQUZMLDRCQUdERyxRQUhDLEVBR1UsSUFIViw0QkFJREMsUUFKQyxFQUlVLFVBQUFHLE9BQU87QUFBQSxXQUFJQSxPQUFPLENBQUNOLElBQVIsS0FBaUIsUUFBckI7QUFBQSxHQUpqQixXQURTO0FBT2Z3QixFQUFBQSxPQUFPLDRDQUNGeEIsSUFERSxFQUNLLFFBREwsNkJBRUZELEdBRkUsRUFFSSxtQkFGSiw2QkFHRkcsUUFIRSxFQUdTLElBSFQsNkJBSUZDLFFBSkUsRUFJUyxVQUFBRyxPQUFPO0FBQUEsV0FBSUEsT0FBTyxDQUFDTixJQUFSLEtBQWlCLFFBQXJCO0FBQUEsR0FKaEIsWUFQUTtBQWFmeUIsRUFBQUEsTUFBTSwwQ0FDRHpCLElBREMsRUFDTSxTQUROLDRCQUVERCxHQUZDLEVBRUssaURBRkwsNEJBR0RFLFlBSEMsRUFHYyxLQUhkLDRCQUlERSxRQUpDLEVBSVUsVUFBQUcsT0FBTztBQUFBLFdBQUlBLE9BQU8sQ0FBQ04sSUFBUixLQUFpQixRQUFyQjtBQUFBLEdBSmpCLFdBYlM7QUFtQmYwQixFQUFBQSxNQUFNLDBDQUNEMUIsSUFEQyxFQUNNLFNBRE4sNEJBRURELEdBRkMsRUFFSyxrQ0FGTCw0QkFHREUsWUFIQyxFQUdjLEtBSGQsNEJBSURFLFFBSkMsRUFJVSxVQUFBRyxPQUFPO0FBQUEsV0FBSUEsT0FBTyxDQUFDTixJQUFSLEtBQWlCLFFBQXJCO0FBQUEsR0FKakIsV0FuQlM7QUF5QmYyQixFQUFBQSxXQUFXLG9EQUNOM0IsSUFETSxFQUNDLFFBREQsaUNBRU5ELEdBRk0sRUFFQSxxQ0FGQSxpQ0FHTkUsWUFITSxFQUdTLGtCQUhULGlDQUlORSxRQUpNLEVBSUssVUFBQUcsT0FBTztBQUFBLFdBQUlBLE9BQU8sQ0FBQ04sSUFBUixLQUFpQixRQUFyQjtBQUFBLEdBSlo7QUF6QkksQ0FBbkI7QUFpQ0E0QixNQUFNLENBQUNDLE9BQVAsdUVBQ0s3QixJQURMLEVBQ1ksUUFEWixtQ0FFS0QsR0FGTCxFQUVXLGtHQUZYLCtFQUlTQyxJQUpULEVBSWdCLFFBSmhCLDBCQUtTRCxHQUxULEVBS2UsNEJBTGYsMEJBTVNFLFlBTlQsRUFNd0IsSUFOeEIsNkJBUU9HLFlBUlAsTUFTT0ksVUFUUCxNQVVPRSxpQkFWUCxNQVdPUSxRQVhQLE1BWU9FLFVBWlAsTUFhT0UsVUFiUCIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvc3BlY3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGRvYywgdHlwZSwgZGVmYXVsdFZhbHVlLCByZXF1aXJlZCwgcmVxdWlyZXMgfSA9IHJlcXVpcmUoJy4uL2NvbW1vbi91dGlscycpLmRlc2NyaXB0b3JzO1xuXG5jb25zdCBDaGFuZ1lhblNwZWMgPSB7XG4gICAgYXBwaWQ6IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdDaGFuZ3lhbiBjb21tZW50IGFwcCBJRCcsXG4gICAgICAgIFtyZXF1aXJlZF06IHRydWUsXG4gICAgICAgIFtyZXF1aXJlc106IGNvbW1lbnQgPT4gY29tbWVudC50eXBlID09PSAnY2hhbmd5YW4nXG4gICAgfSxcbiAgICBjb25mOiB7XG4gICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgIFtkb2NdOiAnQ2hhbmd5YW4gY29tbWVudCBjb25maWd1cmF0aW9uIElEJyxcbiAgICAgICAgW3JlcXVpcmVkXTogdHJ1ZSxcbiAgICAgICAgW3JlcXVpcmVzXTogY29tbWVudCA9PiBjb21tZW50LnR5cGUgPT09ICdjaGFuZ3lhbidcbiAgICB9XG59O1xuXG5jb25zdCBEaXNxdXNTcGVjID0ge1xuICAgIHNob3J0bmFtZToge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ0Rpc3F1cyBzaG9ydG5hbWUnLFxuICAgICAgICBbcmVxdWlyZWRdOiB0cnVlLFxuICAgICAgICBbcmVxdWlyZXNdOiBjb21tZW50ID0+IGNvbW1lbnQudHlwZSA9PT0gJ2Rpc3F1cydcbiAgICB9XG59O1xuXG5jb25zdCBHaXRtZW50R2l0YWxrU3BlYyA9IHtcbiAgICBvd25lcjoge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ0dpdEh1YiB1c2VyIElEJyxcbiAgICAgICAgW3JlcXVpcmVkXTogdHJ1ZSxcbiAgICAgICAgW3JlcXVpcmVzXTogY29tbWVudCA9PiBjb21tZW50LnR5cGUgPT09ICdnaXRtZW50JyB8fCBjb21tZW50LnR5cGUgPT09ICdnaXRhbGsnXG4gICAgfSxcbiAgICByZXBvOiB7XG4gICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgIFtkb2NdOiAnR2l0SHViIHJlcG8gbmFtZSB0byBzdG9yZSBjb21tZW50cycsXG4gICAgICAgIFtyZXF1aXJlZF06IHRydWUsXG4gICAgICAgIFtyZXF1aXJlc106IGNvbW1lbnQgPT4gY29tbWVudC50eXBlID09PSAnZ2l0bWVudCcgfHwgY29tbWVudC50eXBlID09PSAnZ2l0YWxrJ1xuICAgIH0sXG4gICAgY2xpZW50X2lkOiB7XG4gICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgIFtkb2NdOiAnR2l0SHViIGFwcGxpY2F0aW9uIGNsaWVudCBJRCcsXG4gICAgICAgIFtyZXF1aXJlZF06IHRydWUsXG4gICAgICAgIFtyZXF1aXJlc106IGNvbW1lbnQgPT4gY29tbWVudC50eXBlID09PSAnZ2l0bWVudCcgfHwgY29tbWVudC50eXBlID09PSAnZ2l0YWxrJ1xuICAgIH0sXG4gICAgY2xpZW50X3NlY3JldDoge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ0dpdEh1YiBhcHBsaWNhdGlvbiBjbGllbnQgc2VjcmV0JyxcbiAgICAgICAgW3JlcXVpcmVkXTogdHJ1ZSxcbiAgICAgICAgW3JlcXVpcmVzXTogY29tbWVudCA9PiBjb21tZW50LnR5cGUgPT09ICdnaXRtZW50JyB8fCBjb21tZW50LnR5cGUgPT09ICdnaXRhbGsnXG4gICAgfSxcbiAgICBhZG1pbjoge1xuICAgICAgICBbdHlwZV06IFsnc3RyaW5nJywgJ2FycmF5J10sXG4gICAgICAgIFtkb2NdOiAnR2l0SHViIHJlcG8gb3duZXIgYW5kIGNvbGxhYm9yYXRvcnMgd2hvIGNhbiBjYW4gaW5pdGlhbGl6ZSBnaXRodWIgaXNzdWVzJyxcbiAgICAgICAgW3JlcXVpcmVkXTogdHJ1ZSxcbiAgICAgICAgW3JlcXVpcmVzXTogY29tbWVudCA9PiBjb21tZW50LnR5cGUgPT09ICdnaXRhbGsnLFxuICAgICAgICAnKic6IHtcbiAgICAgICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgICAgICBbcmVxdWlyZWRdOiB0cnVlXG4gICAgICAgIH1cbiAgICB9LFxuICAgIGNyZWF0ZV9pc3N1ZV9tYW51YWxseToge1xuICAgICAgICBbdHlwZV06ICdib29sZWFuJyxcbiAgICAgICAgW2RvY106ICdDcmVhdGUgR2l0SHViIGlzc3VlIG1hbnVhbGx5IGZvciBlYWNoIHBhZ2UnLFxuICAgICAgICBbZGVmYXVsdFZhbHVlXTogZmFsc2UsXG4gICAgICAgIFtyZXF1aXJlc106IGNvbW1lbnQgPT4gY29tbWVudC50eXBlID09PSAnZ2l0YWxrJ1xuICAgIH0sXG4gICAgZGlzdHJhY3Rpb25fZnJlZV9tb2RlOiB7XG4gICAgICAgIFt0eXBlXTogJ2Jvb2xlYW4nLFxuICAgICAgICBbZG9jXTogJ0ZhY2Vib29rLWxpa2UgZGlzdHJhY3Rpb24gZnJlZSBtb2RlJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IGZhbHNlLFxuICAgICAgICBbcmVxdWlyZXNdOiBjb21tZW50ID0+IGNvbW1lbnQudHlwZSA9PT0gJ2dpdGFsaydcbiAgICB9XG59O1xuXG5jb25zdCBJc3NvU3BlYyA9IHtcbiAgICB1cmw6IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdVUkwgdG8geW91ciBJc3NvIGNvbW1lbnQgc2VydmljZScsXG4gICAgICAgIFtyZXF1aXJlZF06IHRydWUsXG4gICAgICAgIFtyZXF1aXJlc106IGNvbW1lbnQgPT4gY29tbWVudC50eXBlID09PSAnaXNzbydcbiAgICB9XG59O1xuXG5jb25zdCBMaXZlUmVTcGVjID0ge1xuICAgIHVpZDoge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ0xpdmVSZSBjb21tZW50IHNlcnZpY2UgVUlEJyxcbiAgICAgICAgW3JlcXVpcmVkXTogdHJ1ZSxcbiAgICAgICAgW3JlcXVpcmVzXTogY29tbWVudCA9PiBjb21tZW50LnR5cGUgPT09ICdsaXZlcmUnXG4gICAgfVxufTtcblxuY29uc3QgVmFsaW5lU3BlYyA9IHtcbiAgICBhcHBfaWQ6IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdMZWFuQ2xvdWQgQVBQIElEJyxcbiAgICAgICAgW3JlcXVpcmVkXTogdHJ1ZSxcbiAgICAgICAgW3JlcXVpcmVzXTogY29tbWVudCA9PiBjb21tZW50LnR5cGUgPT09ICd2YWxpbmUnXG4gICAgfSxcbiAgICBhcHBfa2V5OiB7XG4gICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgIFtkb2NdOiAnTGVhbkNsb3VkIEFQUCBrZXknLFxuICAgICAgICBbcmVxdWlyZWRdOiB0cnVlLFxuICAgICAgICBbcmVxdWlyZXNdOiBjb21tZW50ID0+IGNvbW1lbnQudHlwZSA9PT0gJ3ZhbGluZSdcbiAgICB9LFxuICAgIG5vdGlmeToge1xuICAgICAgICBbdHlwZV06ICdib29sZWFuJyxcbiAgICAgICAgW2RvY106ICdFbmFibGUgZW1haWwgbm90aWZpY2F0aW9uIHdoZW4gc29tZW9uZSBjb21tZW50cycsXG4gICAgICAgIFtkZWZhdWx0VmFsdWVdOiBmYWxzZSxcbiAgICAgICAgW3JlcXVpcmVzXTogY29tbWVudCA9PiBjb21tZW50LnR5cGUgPT09ICd2YWxpbmUnXG4gICAgfSxcbiAgICB2ZXJpZnk6IHtcbiAgICAgICAgW3R5cGVdOiAnYm9vbGVhbicsXG4gICAgICAgIFtkb2NdOiAnRW5hYmxlIHZlcmlmaWNhdGlvbiBjb2RlIHNlcnZpY2UnLFxuICAgICAgICBbZGVmYXVsdFZhbHVlXTogZmFsc2UsXG4gICAgICAgIFtyZXF1aXJlc106IGNvbW1lbnQgPT4gY29tbWVudC50eXBlID09PSAndmFsaW5lJ1xuICAgIH0sXG4gICAgcGxhY2Vob2xkZXI6IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdQbGFjZWhvbGRlciB0ZXh0IGluIHRoZSBjb21tZW50IGJveCcsXG4gICAgICAgIFtkZWZhdWx0VmFsdWVdOiAnU2F5IHNvbWV0aGluZy4uLicsXG4gICAgICAgIFtyZXF1aXJlc106IGNvbW1lbnQgPT4gY29tbWVudC50eXBlID09PSAndmFsaW5lJ1xuICAgIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFt0eXBlXTogJ29iamVjdCcsXG4gICAgW2RvY106ICdDb21tZW50IHBsdWdpbiBzZXR0aW5nc1xcbmh0dHBzOi8vcHBvZmZpY2UuZ2l0aHViLmlvL2hleG8tdGhlbWUtaWNhcnVzL2NhdGVnb3JpZXMvUGx1Z2lucy9Db21tZW50JyxcbiAgICB0eXBlOiB7XG4gICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgIFtkb2NdOiAnTmFtZSBvZiB0aGUgY29tbWVudCBwbHVnaW4nLFxuICAgICAgICBbZGVmYXVsdFZhbHVlXTogbnVsbFxuICAgIH0sXG4gICAgLi4uQ2hhbmdZYW5TcGVjLFxuICAgIC4uLkRpc3F1c1NwZWMsXG4gICAgLi4uR2l0bWVudEdpdGFsa1NwZWMsXG4gICAgLi4uSXNzb1NwZWMsXG4gICAgLi4uTGl2ZVJlU3BlYyxcbiAgICAuLi5WYWxpbmVTcGVjXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "comment.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "required",
        "requires",
        "ChangYanSpec",
        "appid",
        "comment",
        "conf",
        "DisqusSpec",
        "shortname",
        "GitmentGitalkSpec",
        "owner",
        "repo",
        "client_id",
        "client_secret",
        "admin",
        "create_issue_manually",
        "distraction_free_mode",
        "IssoSpec",
        "url",
        "LiveReSpec",
        "uid",
        "ValineSpec",
        "app_id",
        "app_key",
        "notify",
        "verify",
        "placeholder",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;2BAAwDA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAA3EC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;IAAcC,Q,wBAAAA,Q;IAAUC,Q,wBAAAA,Q;;AAE3C,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,wCACAL,IADA,EACO,QADP,2BAEAD,GAFA,EAEM,yBAFN,2BAGAG,QAHA,EAGW,IAHX,2BAIAC,QAJA,EAIW,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,UAArB;AAAA,GAJlB,UADY;AAOjBO,EAAAA,IAAI,sCACCP,IADD,EACQ,QADR,0BAECD,GAFD,EAEO,mCAFP,0BAGCG,QAHD,EAGY,IAHZ,0BAICC,QAJD,EAIY,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,UAArB;AAAA,GAJnB;AAPa,CAArB;AAeA,IAAMQ,UAAU,GAAG;AACfC,EAAAA,SAAS,gDACJT,IADI,EACG,QADH,+BAEJD,GAFI,EAEE,kBAFF,+BAGJG,QAHI,EAGO,IAHP,+BAIJC,QAJI,EAIO,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJd;AADM,CAAnB;AASA,IAAMU,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,wCACAX,IADA,EACO,QADP,2BAEAD,GAFA,EAEM,gBAFN,2BAGAG,QAHA,EAGW,IAHX,2BAIAC,QAJA,EAIW,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,SAAjB,IAA8BM,OAAO,CAACN,IAAR,KAAiB,QAAnD;AAAA,GAJlB,UADiB;AAOtBY,EAAAA,IAAI,sCACCZ,IADD,EACQ,QADR,0BAECD,GAFD,EAEO,oCAFP,0BAGCG,QAHD,EAGY,IAHZ,0BAICC,QAJD,EAIY,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,SAAjB,IAA8BM,OAAO,CAACN,IAAR,KAAiB,QAAnD;AAAA,GAJnB,SAPkB;AAatBa,EAAAA,SAAS,gDACJb,IADI,EACG,QADH,+BAEJD,GAFI,EAEE,8BAFF,+BAGJG,QAHI,EAGO,IAHP,+BAIJC,QAJI,EAIO,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,SAAjB,IAA8BM,OAAO,CAACN,IAAR,KAAiB,QAAnD;AAAA,GAJd,cAba;AAmBtBc,EAAAA,aAAa,wDACRd,IADQ,EACD,QADC,mCAERD,GAFQ,EAEF,kCAFE,mCAGRG,QAHQ,EAGG,IAHH,mCAIRC,QAJQ,EAIG,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,SAAjB,IAA8BM,OAAO,CAACN,IAAR,KAAiB,QAAnD;AAAA,GAJV,kBAnBS;AAyBtBe,EAAAA,KAAK,wCACAf,IADA,EACO,CAAC,QAAD,EAAW,OAAX,CADP,2BAEAD,GAFA,EAEM,0EAFN,2BAGAG,QAHA,EAGW,IAHX,2BAIAC,QAJA,EAIW,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJlB,2BAKD,GALC,8BAMIA,IANJ,EAMW,QANX,sBAOIE,QAPJ,EAOe,IAPf,eAzBiB;AAmCtBc,EAAAA,qBAAqB,sEAChBhB,IADgB,EACT,SADS,0CAEhBD,GAFgB,EAEV,4CAFU,0CAGhBE,YAHgB,EAGD,KAHC,0CAIhBE,QAJgB,EAIL,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJF,yBAnCC;AAyCtBiB,EAAAA,qBAAqB,sEAChBjB,IADgB,EACT,SADS,0CAEhBD,GAFgB,EAEV,qCAFU,0CAGhBE,YAHgB,EAGD,KAHC,0CAIhBE,QAJgB,EAIL,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJF;AAzCC,CAA1B;AAiDA,IAAMkB,QAAQ,GAAG;AACbC,EAAAA,GAAG,oCACEnB,IADF,EACS,QADT,yBAEED,GAFF,EAEQ,kCAFR,yBAGEG,QAHF,EAGa,IAHb,yBAIEC,QAJF,EAIa,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,MAArB;AAAA,GAJpB;AADU,CAAjB;AASA,IAAMoB,UAAU,GAAG;AACfC,EAAAA,GAAG,oCACErB,IADF,EACS,QADT,yBAEED,GAFF,EAEQ,4BAFR,yBAGEG,QAHF,EAGa,IAHb,yBAIEC,QAJF,EAIa,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJpB;AADY,CAAnB;AASA,IAAMsB,UAAU,GAAG;AACfC,EAAAA,MAAM,0CACDvB,IADC,EACM,QADN,4BAEDD,GAFC,EAEK,kBAFL,4BAGDG,QAHC,EAGU,IAHV,4BAIDC,QAJC,EAIU,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJjB,WADS;AAOfwB,EAAAA,OAAO,4CACFxB,IADE,EACK,QADL,6BAEFD,GAFE,EAEI,mBAFJ,6BAGFG,QAHE,EAGS,IAHT,6BAIFC,QAJE,EAIS,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJhB,YAPQ;AAafyB,EAAAA,MAAM,0CACDzB,IADC,EACM,SADN,4BAEDD,GAFC,EAEK,iDAFL,4BAGDE,YAHC,EAGc,KAHd,4BAIDE,QAJC,EAIU,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJjB,WAbS;AAmBf0B,EAAAA,MAAM,0CACD1B,IADC,EACM,SADN,4BAEDD,GAFC,EAEK,kCAFL,4BAGDE,YAHC,EAGc,KAHd,4BAIDE,QAJC,EAIU,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJjB,WAnBS;AAyBf2B,EAAAA,WAAW,oDACN3B,IADM,EACC,QADD,iCAEND,GAFM,EAEA,qCAFA,iCAGNE,YAHM,EAGS,kBAHT,iCAINE,QAJM,EAIK,UAAAG,OAAO;AAAA,WAAIA,OAAO,CAACN,IAAR,KAAiB,QAArB;AAAA,GAJZ;AAzBI,CAAnB;AAiCA4B,MAAM,CAACC,OAAP,uEACK7B,IADL,EACY,QADZ,mCAEKD,GAFL,EAEW,kGAFX,+EAISC,IAJT,EAIgB,QAJhB,0BAKSD,GALT,EAKe,4BALf,0BAMSE,YANT,EAMwB,IANxB,6BAQOG,YARP,MASOI,UATP,MAUOE,iBAVP,MAWOQ,QAXP,MAYOE,UAZP,MAaOE,UAbP",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue, required, requires } = require('../common/utils').descriptors;\n\nconst ChangYanSpec = {\n    appid: {\n        [type]: 'string',\n        [doc]: 'Changyan comment app ID',\n        [required]: true,\n        [requires]: comment => comment.type === 'changyan'\n    },\n    conf: {\n        [type]: 'string',\n        [doc]: 'Changyan comment configuration ID',\n        [required]: true,\n        [requires]: comment => comment.type === 'changyan'\n    }\n};\n\nconst DisqusSpec = {\n    shortname: {\n        [type]: 'string',\n        [doc]: 'Disqus shortname',\n        [required]: true,\n        [requires]: comment => comment.type === 'disqus'\n    }\n};\n\nconst GitmentGitalkSpec = {\n    owner: {\n        [type]: 'string',\n        [doc]: 'GitHub user ID',\n        [required]: true,\n        [requires]: comment => comment.type === 'gitment' || comment.type === 'gitalk'\n    },\n    repo: {\n        [type]: 'string',\n        [doc]: 'GitHub repo name to store comments',\n        [required]: true,\n        [requires]: comment => comment.type === 'gitment' || comment.type === 'gitalk'\n    },\n    client_id: {\n        [type]: 'string',\n        [doc]: 'GitHub application client ID',\n        [required]: true,\n        [requires]: comment => comment.type === 'gitment' || comment.type === 'gitalk'\n    },\n    client_secret: {\n        [type]: 'string',\n        [doc]: 'GitHub application client secret',\n        [required]: true,\n        [requires]: comment => comment.type === 'gitment' || comment.type === 'gitalk'\n    },\n    admin: {\n        [type]: ['string', 'array'],\n        [doc]: 'GitHub repo owner and collaborators who can can initialize github issues',\n        [required]: true,\n        [requires]: comment => comment.type === 'gitalk',\n        '*': {\n            [type]: 'string',\n            [required]: true\n        }\n    },\n    create_issue_manually: {\n        [type]: 'boolean',\n        [doc]: 'Create GitHub issue manually for each page',\n        [defaultValue]: false,\n        [requires]: comment => comment.type === 'gitalk'\n    },\n    distraction_free_mode: {\n        [type]: 'boolean',\n        [doc]: 'Facebook-like distraction free mode',\n        [defaultValue]: false,\n        [requires]: comment => comment.type === 'gitalk'\n    }\n};\n\nconst IssoSpec = {\n    url: {\n        [type]: 'string',\n        [doc]: 'URL to your Isso comment service',\n        [required]: true,\n        [requires]: comment => comment.type === 'isso'\n    }\n};\n\nconst LiveReSpec = {\n    uid: {\n        [type]: 'string',\n        [doc]: 'LiveRe comment service UID',\n        [required]: true,\n        [requires]: comment => comment.type === 'livere'\n    }\n};\n\nconst ValineSpec = {\n    app_id: {\n        [type]: 'string',\n        [doc]: 'LeanCloud APP ID',\n        [required]: true,\n        [requires]: comment => comment.type === 'valine'\n    },\n    app_key: {\n        [type]: 'string',\n        [doc]: 'LeanCloud APP key',\n        [required]: true,\n        [requires]: comment => comment.type === 'valine'\n    },\n    notify: {\n        [type]: 'boolean',\n        [doc]: 'Enable email notification when someone comments',\n        [defaultValue]: false,\n        [requires]: comment => comment.type === 'valine'\n    },\n    verify: {\n        [type]: 'boolean',\n        [doc]: 'Enable verification code service',\n        [defaultValue]: false,\n        [requires]: comment => comment.type === 'valine'\n    },\n    placeholder: {\n        [type]: 'string',\n        [doc]: 'Placeholder text in the comment box',\n        [defaultValue]: 'Say something...',\n        [requires]: comment => comment.type === 'valine'\n    }\n};\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Comment plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Comment',\n    type: {\n        [type]: 'string',\n        [doc]: 'Name of the comment plugin',\n        [defaultValue]: null\n    },\n    ...ChangYanSpec,\n    ...DisqusSpec,\n    ...GitmentGitalkSpec,\n    ...IssoSpec,\n    ...LiveReSpec,\n    ...ValineSpec\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525717
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/donate.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/donate.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/donate.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/donate.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "donate.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _qrcode, _business, _currency_code, _url, _type, _objectSpread2, _module$exports;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue,\n    required = _require$descriptors.required,\n    requires = _require$descriptors.requires,\n    format = _require$descriptors.format;\n\nvar DEFAULT_DONATE = [{\n  type: 'alipay',\n  qrcode: ''\n}, {\n  type: 'wechat',\n  qrcode: ''\n}, {\n  type: 'paypal',\n  business: '',\n  currency_code: 'USD'\n}, {\n  type: 'patreon',\n  url: ''\n}];\nvar QrcodeSpec = {\n  qrcode: (_qrcode = {}, _defineProperty(_qrcode, type, 'string'), _defineProperty(_qrcode, doc, 'Qrcode image URL'), _defineProperty(_qrcode, required, true), _defineProperty(_qrcode, requires, function (donate) {\n    return donate.type === 'alipay' || donate.type === 'wechat';\n  }), _qrcode)\n};\nvar PaypalSpec = {\n  business: (_business = {}, _defineProperty(_business, type, 'string'), _defineProperty(_business, doc, 'Paypal business ID or email address'), _defineProperty(_business, required, true), _defineProperty(_business, requires, function (donate) {\n    return donate.type === 'paypal';\n  }), _business),\n  currency_code: (_currency_code = {}, _defineProperty(_currency_code, type, 'string'), _defineProperty(_currency_code, doc, 'Currency code'), _defineProperty(_currency_code, required, true), _defineProperty(_currency_code, requires, function (donate) {\n    return donate.type === 'paypal';\n  }), _currency_code)\n};\nvar PatreonSpec = {\n  url: (_url = {}, _defineProperty(_url, type, 'string'), _defineProperty(_url, doc, 'URL to the Patreon page'), _defineProperty(_url, required, true), _defineProperty(_url, requires, function (donate) {\n    return donate.type === 'patreon';\n  }), _url)\n};\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'array'), _defineProperty(_module$exports, doc, 'Donation entries\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Donation/'), _defineProperty(_module$exports, defaultValue, DEFAULT_DONATE), _defineProperty(_module$exports, '*', _objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, type, 'object'), _defineProperty(_objectSpread2, doc, 'Single donation entry settings'), _defineProperty(_objectSpread2, \"type\", (_type = {}, _defineProperty(_type, type, 'string'), _defineProperty(_type, doc, 'Donation entry name'), _defineProperty(_type, required, true), _type)), _objectSpread2), QrcodeSpec, {}, PaypalSpec, {}, PatreonSpec)), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbmF0ZS5zcGVjLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJkZXNjcmlwdG9ycyIsImRvYyIsInR5cGUiLCJkZWZhdWx0VmFsdWUiLCJyZXF1aXJlZCIsInJlcXVpcmVzIiwiZm9ybWF0IiwiREVGQVVMVF9ET05BVEUiLCJxcmNvZGUiLCJidXNpbmVzcyIsImN1cnJlbmN5X2NvZGUiLCJ1cmwiLCJRcmNvZGVTcGVjIiwiZG9uYXRlIiwiUGF5cGFsU3BlYyIsIlBhdHJlb25TcGVjIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OzsyQkFBZ0VBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCQyxXO0lBQW5GQyxHLHdCQUFBQSxHO0lBQUtDLEksd0JBQUFBLEk7SUFBTUMsWSx3QkFBQUEsWTtJQUFjQyxRLHdCQUFBQSxRO0lBQVVDLFEsd0JBQUFBLFE7SUFBVUMsTSx3QkFBQUEsTTs7QUFFckQsSUFBTUMsY0FBYyxHQUFHLENBQ25CO0FBQ0lMLEVBQUFBLElBQUksRUFBRSxRQURWO0FBRUlNLEVBQUFBLE1BQU0sRUFBRTtBQUZaLENBRG1CLEVBS25CO0FBQ0lOLEVBQUFBLElBQUksRUFBRSxRQURWO0FBRUlNLEVBQUFBLE1BQU0sRUFBRTtBQUZaLENBTG1CLEVBU25CO0FBQ0lOLEVBQUFBLElBQUksRUFBRSxRQURWO0FBRUlPLEVBQUFBLFFBQVEsRUFBRSxFQUZkO0FBR0lDLEVBQUFBLGFBQWEsRUFBRTtBQUhuQixDQVRtQixFQWNuQjtBQUNJUixFQUFBQSxJQUFJLEVBQUUsU0FEVjtBQUVJUyxFQUFBQSxHQUFHLEVBQUU7QUFGVCxDQWRtQixDQUF2QjtBQW9CQSxJQUFNQyxVQUFVLEdBQUc7QUFDZkosRUFBQUEsTUFBTSwwQ0FDRE4sSUFEQyxFQUNNLFFBRE4sNEJBRURELEdBRkMsRUFFSyxrQkFGTCw0QkFHREcsUUFIQyxFQUdVLElBSFYsNEJBSURDLFFBSkMsRUFJVSxVQUFBUSxNQUFNO0FBQUEsV0FBSUEsTUFBTSxDQUFDWCxJQUFQLEtBQWdCLFFBQWhCLElBQTRCVyxNQUFNLENBQUNYLElBQVAsS0FBZ0IsUUFBaEQ7QUFBQSxHQUpoQjtBQURTLENBQW5CO0FBU0EsSUFBTVksVUFBVSxHQUFHO0FBQ2ZMLEVBQUFBLFFBQVEsOENBQ0hQLElBREcsRUFDSSxRQURKLDhCQUVIRCxHQUZHLEVBRUcscUNBRkgsOEJBR0hHLFFBSEcsRUFHUSxJQUhSLDhCQUlIQyxRQUpHLEVBSVEsVUFBQVEsTUFBTTtBQUFBLFdBQUlBLE1BQU0sQ0FBQ1gsSUFBUCxLQUFnQixRQUFwQjtBQUFBLEdBSmQsYUFETztBQU9mUSxFQUFBQSxhQUFhLHdEQUNSUixJQURRLEVBQ0QsUUFEQyxtQ0FFUkQsR0FGUSxFQUVGLGVBRkUsbUNBR1JHLFFBSFEsRUFHRyxJQUhILG1DQUlSQyxRQUpRLEVBSUcsVUFBQVEsTUFBTTtBQUFBLFdBQUlBLE1BQU0sQ0FBQ1gsSUFBUCxLQUFnQixRQUFwQjtBQUFBLEdBSlQ7QUFQRSxDQUFuQjtBQWVBLElBQU1hLFdBQVcsR0FBRztBQUNoQkosRUFBQUEsR0FBRyxvQ0FDRVQsSUFERixFQUNTLFFBRFQseUJBRUVELEdBRkYsRUFFUSx5QkFGUix5QkFHRUcsUUFIRixFQUdhLElBSGIseUJBSUVDLFFBSkYsRUFJYSxVQUFBUSxNQUFNO0FBQUEsV0FBSUEsTUFBTSxDQUFDWCxJQUFQLEtBQWdCLFNBQXBCO0FBQUEsR0FKbkI7QUFEYSxDQUFwQjtBQVNBYyxNQUFNLENBQUNDLE9BQVAsMkRBQ0tmLElBREwsRUFDWSxPQURaLG9DQUVLRCxHQUZMLEVBRVcscUZBRlgsb0NBR0tFLFlBSEwsRUFHb0JJLGNBSHBCLG9DQUlJLEdBSkosc0VBS1NMLElBTFQsRUFLZ0IsUUFMaEIsbUNBTVNELEdBTlQsRUFNZSxnQ0FOZiwrRUFRYUMsSUFSYixFQVFvQixRQVJwQiwwQkFTYUQsR0FUYixFQVNtQixxQkFUbkIsMEJBVWFHLFFBVmIsRUFVd0IsSUFWeEIsNkJBWVdRLFVBWlgsTUFhV0UsVUFiWCxNQWNXQyxXQWRYIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1cy9pbmNsdWRlcy9zcGVjcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZG9jLCB0eXBlLCBkZWZhdWx0VmFsdWUsIHJlcXVpcmVkLCByZXF1aXJlcywgZm9ybWF0IH0gPSByZXF1aXJlKCcuLi9jb21tb24vdXRpbHMnKS5kZXNjcmlwdG9ycztcblxuY29uc3QgREVGQVVMVF9ET05BVEUgPSBbXG4gICAge1xuICAgICAgICB0eXBlOiAnYWxpcGF5JyxcbiAgICAgICAgcXJjb2RlOiAnJ1xuICAgIH0sXG4gICAge1xuICAgICAgICB0eXBlOiAnd2VjaGF0JyxcbiAgICAgICAgcXJjb2RlOiAnJ1xuICAgIH0sXG4gICAge1xuICAgICAgICB0eXBlOiAncGF5cGFsJyxcbiAgICAgICAgYnVzaW5lc3M6ICcnLFxuICAgICAgICBjdXJyZW5jeV9jb2RlOiAnVVNEJ1xuICAgIH0sXG4gICAge1xuICAgICAgICB0eXBlOiAncGF0cmVvbicsXG4gICAgICAgIHVybDogJydcbiAgICB9XG5dO1xuXG5jb25zdCBRcmNvZGVTcGVjID0ge1xuICAgIHFyY29kZToge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ1FyY29kZSBpbWFnZSBVUkwnLFxuICAgICAgICBbcmVxdWlyZWRdOiB0cnVlLFxuICAgICAgICBbcmVxdWlyZXNdOiBkb25hdGUgPT4gZG9uYXRlLnR5cGUgPT09ICdhbGlwYXknIHx8IGRvbmF0ZS50eXBlID09PSAnd2VjaGF0J1xuICAgIH1cbn07XG5cbmNvbnN0IFBheXBhbFNwZWMgPSB7XG4gICAgYnVzaW5lc3M6IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdQYXlwYWwgYnVzaW5lc3MgSUQgb3IgZW1haWwgYWRkcmVzcycsXG4gICAgICAgIFtyZXF1aXJlZF06IHRydWUsXG4gICAgICAgIFtyZXF1aXJlc106IGRvbmF0ZSA9PiBkb25hdGUudHlwZSA9PT0gJ3BheXBhbCdcbiAgICB9LFxuICAgIGN1cnJlbmN5X2NvZGU6IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdDdXJyZW5jeSBjb2RlJyxcbiAgICAgICAgW3JlcXVpcmVkXTogdHJ1ZSxcbiAgICAgICAgW3JlcXVpcmVzXTogZG9uYXRlID0+IGRvbmF0ZS50eXBlID09PSAncGF5cGFsJ1xuICAgIH1cbn07XG5cbmNvbnN0IFBhdHJlb25TcGVjID0ge1xuICAgIHVybDoge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ1VSTCB0byB0aGUgUGF0cmVvbiBwYWdlJyxcbiAgICAgICAgW3JlcXVpcmVkXTogdHJ1ZSxcbiAgICAgICAgW3JlcXVpcmVzXTogZG9uYXRlID0+IGRvbmF0ZS50eXBlID09PSAncGF0cmVvbidcbiAgICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBbdHlwZV06ICdhcnJheScsXG4gICAgW2RvY106ICdEb25hdGlvbiBlbnRyaWVzXFxuaHR0cHM6Ly9wcG9mZmljZS5naXRodWIuaW8vaGV4by10aGVtZS1pY2FydXMvY2F0ZWdvcmllcy9Eb25hdGlvbi8nLFxuICAgIFtkZWZhdWx0VmFsdWVdOiBERUZBVUxUX0RPTkFURSxcbiAgICAnKic6IHtcbiAgICAgICAgW3R5cGVdOiAnb2JqZWN0JyxcbiAgICAgICAgW2RvY106ICdTaW5nbGUgZG9uYXRpb24gZW50cnkgc2V0dGluZ3MnLFxuICAgICAgICB0eXBlOiB7XG4gICAgICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICAgICAgW2RvY106ICdEb25hdGlvbiBlbnRyeSBuYW1lJyxcbiAgICAgICAgICAgIFtyZXF1aXJlZF06IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgLi4uUXJjb2RlU3BlYyxcbiAgICAgICAgLi4uUGF5cGFsU3BlYyxcbiAgICAgICAgLi4uUGF0cmVvblNwZWNcbiAgICB9XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "donate.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "required",
        "requires",
        "format",
        "DEFAULT_DONATE",
        "qrcode",
        "business",
        "currency_code",
        "url",
        "QrcodeSpec",
        "donate",
        "PaypalSpec",
        "PatreonSpec",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;2BAAgEA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAnFC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;IAAcC,Q,wBAAAA,Q;IAAUC,Q,wBAAAA,Q;IAAUC,M,wBAAAA,M;;AAErD,IAAMC,cAAc,GAAG,CACnB;AACIL,EAAAA,IAAI,EAAE,QADV;AAEIM,EAAAA,MAAM,EAAE;AAFZ,CADmB,EAKnB;AACIN,EAAAA,IAAI,EAAE,QADV;AAEIM,EAAAA,MAAM,EAAE;AAFZ,CALmB,EASnB;AACIN,EAAAA,IAAI,EAAE,QADV;AAEIO,EAAAA,QAAQ,EAAE,EAFd;AAGIC,EAAAA,aAAa,EAAE;AAHnB,CATmB,EAcnB;AACIR,EAAAA,IAAI,EAAE,SADV;AAEIS,EAAAA,GAAG,EAAE;AAFT,CAdmB,CAAvB;AAoBA,IAAMC,UAAU,GAAG;AACfJ,EAAAA,MAAM,0CACDN,IADC,EACM,QADN,4BAEDD,GAFC,EAEK,kBAFL,4BAGDG,QAHC,EAGU,IAHV,4BAIDC,QAJC,EAIU,UAAAQ,MAAM;AAAA,WAAIA,MAAM,CAACX,IAAP,KAAgB,QAAhB,IAA4BW,MAAM,CAACX,IAAP,KAAgB,QAAhD;AAAA,GAJhB;AADS,CAAnB;AASA,IAAMY,UAAU,GAAG;AACfL,EAAAA,QAAQ,8CACHP,IADG,EACI,QADJ,8BAEHD,GAFG,EAEG,qCAFH,8BAGHG,QAHG,EAGQ,IAHR,8BAIHC,QAJG,EAIQ,UAAAQ,MAAM;AAAA,WAAIA,MAAM,CAACX,IAAP,KAAgB,QAApB;AAAA,GAJd,aADO;AAOfQ,EAAAA,aAAa,wDACRR,IADQ,EACD,QADC,mCAERD,GAFQ,EAEF,eAFE,mCAGRG,QAHQ,EAGG,IAHH,mCAIRC,QAJQ,EAIG,UAAAQ,MAAM;AAAA,WAAIA,MAAM,CAACX,IAAP,KAAgB,QAApB;AAAA,GAJT;AAPE,CAAnB;AAeA,IAAMa,WAAW,GAAG;AAChBJ,EAAAA,GAAG,oCACET,IADF,EACS,QADT,yBAEED,GAFF,EAEQ,yBAFR,yBAGEG,QAHF,EAGa,IAHb,yBAIEC,QAJF,EAIa,UAAAQ,MAAM;AAAA,WAAIA,MAAM,CAACX,IAAP,KAAgB,SAApB;AAAA,GAJnB;AADa,CAApB;AASAc,MAAM,CAACC,OAAP,2DACKf,IADL,EACY,OADZ,oCAEKD,GAFL,EAEW,qFAFX,oCAGKE,YAHL,EAGoBI,cAHpB,oCAII,GAJJ,sEAKSL,IALT,EAKgB,QALhB,mCAMSD,GANT,EAMe,gCANf,+EAQaC,IARb,EAQoB,QARpB,0BASaD,GATb,EASmB,qBATnB,0BAUaG,QAVb,EAUwB,IAVxB,6BAYWQ,UAZX,MAaWE,UAbX,MAcWC,WAdX",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue, required, requires, format } = require('../common/utils').descriptors;\n\nconst DEFAULT_DONATE = [\n    {\n        type: 'alipay',\n        qrcode: ''\n    },\n    {\n        type: 'wechat',\n        qrcode: ''\n    },\n    {\n        type: 'paypal',\n        business: '',\n        currency_code: 'USD'\n    },\n    {\n        type: 'patreon',\n        url: ''\n    }\n];\n\nconst QrcodeSpec = {\n    qrcode: {\n        [type]: 'string',\n        [doc]: 'Qrcode image URL',\n        [required]: true,\n        [requires]: donate => donate.type === 'alipay' || donate.type === 'wechat'\n    }\n};\n\nconst PaypalSpec = {\n    business: {\n        [type]: 'string',\n        [doc]: 'Paypal business ID or email address',\n        [required]: true,\n        [requires]: donate => donate.type === 'paypal'\n    },\n    currency_code: {\n        [type]: 'string',\n        [doc]: 'Currency code',\n        [required]: true,\n        [requires]: donate => donate.type === 'paypal'\n    }\n};\n\nconst PatreonSpec = {\n    url: {\n        [type]: 'string',\n        [doc]: 'URL to the Patreon page',\n        [required]: true,\n        [requires]: donate => donate.type === 'patreon'\n    }\n};\n\nmodule.exports = {\n    [type]: 'array',\n    [doc]: 'Donation entries\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Donation/',\n    [defaultValue]: DEFAULT_DONATE,\n    '*': {\n        [type]: 'object',\n        [doc]: 'Single donation entry settings',\n        type: {\n            [type]: 'string',\n            [doc]: 'Donation entry name',\n            [required]: true\n        },\n        ...QrcodeSpec,\n        ...PaypalSpec,\n        ...PatreonSpec\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525721
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/share.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/share.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/share.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/share.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "share.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _type, _install_url, _module$exports;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue,\n    required = _require$descriptors.required,\n    requires = _require$descriptors.requires;\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'Share plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Share'), _defineProperty(_module$exports, \"type\", (_type = {}, _defineProperty(_type, type, 'string'), _defineProperty(_type, doc, 'Share plugin name'), _defineProperty(_type, defaultValue, null), _type)), _defineProperty(_module$exports, \"install_url\", (_install_url = {}, _defineProperty(_install_url, type, 'string'), _defineProperty(_install_url, doc, 'URL to the share plugin script provided by share plugin service provider'), _defineProperty(_install_url, required, true), _defineProperty(_install_url, requires, function (share) {\n  return share.type === 'sharethis' || share.type === 'addthis';\n}), _install_url)), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNoYXJlLnNwZWMuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsImRlc2NyaXB0b3JzIiwiZG9jIiwidHlwZSIsImRlZmF1bHRWYWx1ZSIsInJlcXVpcmVkIiwicmVxdWlyZXMiLCJtb2R1bGUiLCJleHBvcnRzIiwic2hhcmUiXSwibWFwcGluZ3MiOiI7Ozs7OzsyQkFBd0RBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCQyxXO0lBQTNFQyxHLHdCQUFBQSxHO0lBQUtDLEksd0JBQUFBLEk7SUFBTUMsWSx3QkFBQUEsWTtJQUFjQyxRLHdCQUFBQSxRO0lBQVVDLFEsd0JBQUFBLFE7O0FBRTNDQyxNQUFNLENBQUNDLE9BQVAsMkRBQ0tMLElBREwsRUFDWSxRQURaLG9DQUVLRCxHQUZMLEVBRVcsOEZBRlgsZ0ZBSVNDLElBSlQsRUFJZ0IsUUFKaEIsMEJBS1NELEdBTFQsRUFLZSxtQkFMZiwwQkFNU0UsWUFOVCxFQU13QixJQU54Qiw4R0FTU0QsSUFUVCxFQVNnQixRQVRoQixpQ0FVU0QsR0FWVCxFQVVlLDBFQVZmLGlDQVdTRyxRQVhULEVBV29CLElBWHBCLGlDQVlTQyxRQVpULEVBWW9CLFVBQUFHLEtBQUs7QUFBQSxTQUFJQSxLQUFLLENBQUNOLElBQU4sS0FBZSxXQUFmLElBQThCTSxLQUFLLENBQUNOLElBQU4sS0FBZSxTQUFqRDtBQUFBLENBWnpCIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1cy9pbmNsdWRlcy9zcGVjcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZG9jLCB0eXBlLCBkZWZhdWx0VmFsdWUsIHJlcXVpcmVkLCByZXF1aXJlcyB9ID0gcmVxdWlyZSgnLi4vY29tbW9uL3V0aWxzJykuZGVzY3JpcHRvcnM7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFt0eXBlXTogJ29iamVjdCcsXG4gICAgW2RvY106ICdTaGFyZSBwbHVnaW4gc2V0dGluZ3NcXG5odHRwczovL3Bwb2ZmaWNlLmdpdGh1Yi5pby9oZXhvLXRoZW1lLWljYXJ1cy9jYXRlZ29yaWVzL1BsdWdpbnMvU2hhcmUnLFxuICAgIHR5cGU6IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdTaGFyZSBwbHVnaW4gbmFtZScsXG4gICAgICAgIFtkZWZhdWx0VmFsdWVdOiBudWxsXG4gICAgfSxcbiAgICBpbnN0YWxsX3VybDoge1xuICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICBbZG9jXTogJ1VSTCB0byB0aGUgc2hhcmUgcGx1Z2luIHNjcmlwdCBwcm92aWRlZCBieSBzaGFyZSBwbHVnaW4gc2VydmljZSBwcm92aWRlcicsXG4gICAgICAgIFtyZXF1aXJlZF06IHRydWUsXG4gICAgICAgIFtyZXF1aXJlc106IHNoYXJlID0+IHNoYXJlLnR5cGUgPT09ICdzaGFyZXRoaXMnIHx8IHNoYXJlLnR5cGUgPT09ICdhZGR0aGlzJ1xuICAgIH1cbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "share.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "required",
        "requires",
        "module",
        "exports",
        "share"
      ],
      "mappings": ";;;;;;2BAAwDA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAA3EC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;IAAcC,Q,wBAAAA,Q;IAAUC,Q,wBAAAA,Q;;AAE3CC,MAAM,CAACC,OAAP,2DACKL,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,8FAFX,gFAISC,IAJT,EAIgB,QAJhB,0BAKSD,GALT,EAKe,mBALf,0BAMSE,YANT,EAMwB,IANxB,8GASSD,IATT,EASgB,QAThB,iCAUSD,GAVT,EAUe,0EAVf,iCAWSG,QAXT,EAWoB,IAXpB,iCAYSC,QAZT,EAYoB,UAAAG,KAAK;AAAA,SAAIA,KAAK,CAACN,IAAN,KAAe,WAAf,IAA8BM,KAAK,CAACN,IAAN,KAAe,SAAjD;AAAA,CAZzB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue, required, requires } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Share plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Share',\n    type: {\n        [type]: 'string',\n        [doc]: 'Share plugin name',\n        [defaultValue]: null\n    },\n    install_url: {\n        [type]: 'string',\n        [doc]: 'URL to the share plugin script provided by share plugin service provider',\n        [required]: true,\n        [requires]: share => share.type === 'sharethis' || share.type === 'addthis'\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525725
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/sidebar.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/sidebar.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/sidebar.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/sidebar.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "sidebar.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _module$exports;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue,\n    required = _require$descriptors.required,\n    requires = _require$descriptors.requires,\n    format = _require$descriptors.format;\n\nfunction commonSettings(position) {\n  var _sticky, _ref;\n\n  return _ref = {}, _defineProperty(_ref, type, 'object'), _defineProperty(_ref, doc, position + ' sidebar settings'), _defineProperty(_ref, \"sticky\", (_sticky = {}, _defineProperty(_sticky, type, 'boolean'), _defineProperty(_sticky, doc, 'Whether the ' + position + ' sidebar is sticky when page scrolls\\nhttps://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/'), _defineProperty(_sticky, defaultValue, false), _sticky)), _ref;\n}\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'Sidebar settings.\\nPlease be noted that a sidebar is only visible when it has at least one widget'), _defineProperty(_module$exports, \"left\", commonSettings('left')), _defineProperty(_module$exports, \"right\", commonSettings('right')), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZGViYXIuc3BlYy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiZGVzY3JpcHRvcnMiLCJkb2MiLCJ0eXBlIiwiZGVmYXVsdFZhbHVlIiwicmVxdWlyZWQiLCJyZXF1aXJlcyIsImZvcm1hdCIsImNvbW1vblNldHRpbmdzIiwicG9zaXRpb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7MkJBQWdFQSxPQUFPLENBQUMsaUJBQUQsQ0FBUCxDQUEyQkMsVztJQUFuRkMsRyx3QkFBQUEsRztJQUFLQyxJLHdCQUFBQSxJO0lBQU1DLFksd0JBQUFBLFk7SUFBY0MsUSx3QkFBQUEsUTtJQUFVQyxRLHdCQUFBQSxRO0lBQVVDLE0sd0JBQUFBLE07O0FBRXJELFNBQVNDLGNBQVQsQ0FBd0JDLFFBQXhCLEVBQWtDO0FBQUE7O0FBQzlCLDBDQUNLTixJQURMLEVBQ1ksUUFEWix5QkFFS0QsR0FGTCxFQUVXTyxRQUFRLEdBQUcsbUJBRnRCLDJFQUlTTixJQUpULEVBSWdCLFNBSmhCLDRCQUtTRCxHQUxULEVBS2UsaUJBQWlCTyxRQUFqQixHQUE0QixpSkFMM0MsNEJBTVNMLFlBTlQsRUFNd0IsS0FOeEI7QUFTSDs7QUFFRE0sTUFBTSxDQUFDQyxPQUFQLDJEQUNLUixJQURMLEVBQ1ksUUFEWixvQ0FFS0QsR0FGTCxFQUVXLG1HQUZYLDRDQUdVTSxjQUFjLENBQUMsTUFBRCxDQUh4Qiw2Q0FJV0EsY0FBYyxDQUFDLE9BQUQsQ0FKekIiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2luY2x1ZGVzL3NwZWNzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBkb2MsIHR5cGUsIGRlZmF1bHRWYWx1ZSwgcmVxdWlyZWQsIHJlcXVpcmVzLCBmb3JtYXQgfSA9IHJlcXVpcmUoJy4uL2NvbW1vbi91dGlscycpLmRlc2NyaXB0b3JzO1xuXG5mdW5jdGlvbiBjb21tb25TZXR0aW5ncyhwb3NpdGlvbikge1xuICAgIHJldHVybiB7XG4gICAgICAgIFt0eXBlXTogJ29iamVjdCcsXG4gICAgICAgIFtkb2NdOiBwb3NpdGlvbiArICcgc2lkZWJhciBzZXR0aW5ncycsXG4gICAgICAgIHN0aWNreToge1xuICAgICAgICAgICAgW3R5cGVdOiAnYm9vbGVhbicsXG4gICAgICAgICAgICBbZG9jXTogJ1doZXRoZXIgdGhlICcgKyBwb3NpdGlvbiArICcgc2lkZWJhciBpcyBzdGlja3kgd2hlbiBwYWdlIHNjcm9sbHNcXG5odHRwczovL3Bwb2ZmaWNlLmdpdGh1Yi5pby9oZXhvLXRoZW1lLWljYXJ1cy9Db25maWd1cmF0aW9uL1RoZW1lL21ha2UtYS1zaWRlYmFyLXN0aWNreS13aGVuLXBhZ2Utc2Nyb2xscy8nLFxuICAgICAgICAgICAgW2RlZmF1bHRWYWx1ZV06IGZhbHNlXG4gICAgICAgIH1cbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFt0eXBlXTogJ29iamVjdCcsXG4gICAgW2RvY106ICdTaWRlYmFyIHNldHRpbmdzLlxcblBsZWFzZSBiZSBub3RlZCB0aGF0IGEgc2lkZWJhciBpcyBvbmx5IHZpc2libGUgd2hlbiBpdCBoYXMgYXQgbGVhc3Qgb25lIHdpZGdldCcsXG4gICAgbGVmdDogY29tbW9uU2V0dGluZ3MoJ2xlZnQnKSxcbiAgICByaWdodDogY29tbW9uU2V0dGluZ3MoJ3JpZ2h0Jylcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "sidebar.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "required",
        "requires",
        "format",
        "commonSettings",
        "position",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;2BAAgEA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAnFC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;IAAcC,Q,wBAAAA,Q;IAAUC,Q,wBAAAA,Q;IAAUC,M,wBAAAA,M;;AAErD,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAAA;;AAC9B,0CACKN,IADL,EACY,QADZ,yBAEKD,GAFL,EAEWO,QAAQ,GAAG,mBAFtB,2EAISN,IAJT,EAIgB,SAJhB,4BAKSD,GALT,EAKe,iBAAiBO,QAAjB,GAA4B,iJAL3C,4BAMSL,YANT,EAMwB,KANxB;AASH;;AAEDM,MAAM,CAACC,OAAP,2DACKR,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,mGAFX,4CAGUM,cAAc,CAAC,MAAD,CAHxB,6CAIWA,cAAc,CAAC,OAAD,CAJzB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue, required, requires, format } = require('../common/utils').descriptors;\n\nfunction commonSettings(position) {\n    return {\n        [type]: 'object',\n        [doc]: position + ' sidebar settings',\n        sticky: {\n            [type]: 'boolean',\n            [doc]: 'Whether the ' + position + ' sidebar is sticky when page scrolls\\nhttps://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/',\n            [defaultValue]: false\n        }\n    }\n}\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Sidebar settings.\\nPlease be noted that a sidebar is only visible when it has at least one widget',\n    left: commonSettings('left'),\n    right: commonSettings('right')\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525729
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/widgets.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/widgets.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/widgets.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/widgets.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "widgets.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _author, _author_title, _location, _avatar, _avatar_rounded, _gravatar, _follow_link, _, _links, _feedburner_id, _description, _type, _position, _objectSpread3, _module$exports;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue,\n    required = _require$descriptors.required,\n    requires = _require$descriptors.requires,\n    format = _require$descriptors.format;\n\nvar DEFAULT_WIDGETS = [{\n  type: 'profile',\n  position: 'left',\n  author: 'Your name',\n  author_title: 'Your title',\n  location: 'Your location',\n  avatar: null,\n  gravatar: null,\n  avatar_rounded: false,\n  follow_link: 'https://github.com/ppoffice',\n  social_links: {\n    Github: {\n      icon: 'fab fa-github',\n      url: 'https://github.com/ppoffice'\n    },\n    Facebook: {\n      icon: 'fab fa-facebook',\n      url: 'https://facebook.com'\n    },\n    Twitter: {\n      icon: 'fab fa-twitter',\n      url: 'https://twitter.com'\n    },\n    Dribbble: {\n      icon: 'fab fa-dribbble',\n      url: 'https://dribbble.com'\n    },\n    RSS: {\n      icon: 'fas fa-rss',\n      url: '/'\n    }\n  }\n}, {\n  type: 'toc',\n  position: 'left'\n}, {\n  type: 'links',\n  position: 'left',\n  links: {\n    Hexo: 'https://hexo.io',\n    PPOffice: 'https://github.com/ppoffice'\n  }\n}, {\n  type: 'category',\n  position: 'left'\n}, {\n  type: 'tagcloud',\n  position: 'left'\n}, {\n  type: 'recent_posts',\n  position: 'right'\n}, {\n  type: 'archive',\n  position: 'right'\n}, {\n  type: 'tag',\n  position: 'right'\n}];\nvar ProfileSpec = {\n  author: (_author = {}, _defineProperty(_author, type, 'string'), _defineProperty(_author, doc, 'Author name to be shown in the profile widget'), _defineProperty(_author, defaultValue, 'Your name'), _author),\n  author_title: (_author_title = {}, _defineProperty(_author_title, type, 'string'), _defineProperty(_author_title, doc, 'Title of the author to be shown in the profile widget'), _defineProperty(_author_title, defaultValue, 'Your title'), _author_title),\n  location: (_location = {}, _defineProperty(_location, type, 'string'), _defineProperty(_location, doc, 'Author\\'s current location to be shown in the profile widget'), _defineProperty(_location, defaultValue, 'Your location'), _location),\n  avatar: (_avatar = {}, _defineProperty(_avatar, type, 'string'), _defineProperty(_avatar, doc, 'Path or URL to the avatar to be shown in the profile widget'), _defineProperty(_avatar, defaultValue, '/images/avatar.png'), _avatar),\n  avatar_rounded: (_avatar_rounded = {}, _defineProperty(_avatar_rounded, type, 'boolean'), _defineProperty(_avatar_rounded, doc, 'Whether to show avatar image rounded or square'), _defineProperty(_avatar_rounded, defaultValue, false), _avatar_rounded),\n  gravatar: (_gravatar = {}, _defineProperty(_gravatar, type, 'string'), _defineProperty(_gravatar, doc, 'Email address for the Gravatar to be shown in the profile widget'), _gravatar),\n  follow_link: (_follow_link = {}, _defineProperty(_follow_link, type, 'string'), _defineProperty(_follow_link, doc, 'Path or URL for the follow button'), _follow_link),\n  social_links: _objectSpread({}, require('./icon_link.spec'), _defineProperty({}, doc, 'Links to be shown on the bottom of the profile widget'))\n};\n\nfor (var key in ProfileSpec) {\n  ProfileSpec[key][requires] = function (widget) {\n    return widget.type === 'profile';\n  };\n}\n\nvar LinksSpec = {\n  links: (_links = {}, _defineProperty(_links, type, 'object'), _defineProperty(_links, doc, 'Links to be shown in the links widget'), _defineProperty(_links, requires, function (parent) {\n    return parent.type === 'links';\n  }), _defineProperty(_links, '*', (_ = {}, _defineProperty(_, type, 'string'), _defineProperty(_, doc, 'Path or URL to the link'), _defineProperty(_, required, true), _)), _links)\n};\nvar SubscrbieEmailSpec = {\n  feedburner_id: (_feedburner_id = {}, _defineProperty(_feedburner_id, type, 'string'), _defineProperty(_feedburner_id, doc, 'Feedburner ID'), _defineProperty(_feedburner_id, required, true), _defineProperty(_feedburner_id, requires, function (parent) {\n    return parent.type === 'subscribe_email';\n  }), _feedburner_id),\n  description: (_description = {}, _defineProperty(_description, type, 'string'), _defineProperty(_description, doc, 'Hint text under the subscription input'), _defineProperty(_description, requires, function (parent) {\n    return parent.type === 'subscribe_email';\n  }), _description)\n};\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'array'), _defineProperty(_module$exports, doc, 'Sidebar widget settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Widgets/'), _defineProperty(_module$exports, defaultValue, DEFAULT_WIDGETS), _defineProperty(_module$exports, '*', _objectSpread((_objectSpread3 = {}, _defineProperty(_objectSpread3, type, 'object'), _defineProperty(_objectSpread3, doc, 'Single widget settings'), _defineProperty(_objectSpread3, \"type\", (_type = {}, _defineProperty(_type, type, 'string'), _defineProperty(_type, doc, 'Widget name'), _defineProperty(_type, required, true), _defineProperty(_type, defaultValue, 'profile'), _type)), _defineProperty(_objectSpread3, \"position\", (_position = {}, _defineProperty(_position, type, 'string'), _defineProperty(_position, doc, 'Where should the widget be placed, left or right'), _defineProperty(_position, format, /^(left|right)$/), _defineProperty(_position, required, true), _defineProperty(_position, defaultValue, 'left'), _position)), _objectSpread3), ProfileSpec, {}, LinksSpec, {}, SubscrbieEmailSpec)), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "widgets.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "required",
        "requires",
        "format",
        "DEFAULT_WIDGETS",
        "position",
        "author",
        "author_title",
        "location",
        "avatar",
        "gravatar",
        "avatar_rounded",
        "follow_link",
        "social_links",
        "Github",
        "icon",
        "url",
        "Facebook",
        "Twitter",
        "Dribbble",
        "RSS",
        "links",
        "Hexo",
        "PPOffice",
        "ProfileSpec",
        "key",
        "widget",
        "LinksSpec",
        "parent",
        "SubscrbieEmailSpec",
        "feedburner_id",
        "description",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;2BAAgEA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAnFC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;IAAcC,Q,wBAAAA,Q;IAAUC,Q,wBAAAA,Q;IAAUC,M,wBAAAA,M;;AAErD,IAAMC,eAAe,GAAG,CACpB;AACIL,EAAAA,IAAI,EAAE,SADV;AAEIM,EAAAA,QAAQ,EAAE,MAFd;AAGIC,EAAAA,MAAM,EAAE,WAHZ;AAIIC,EAAAA,YAAY,EAAE,YAJlB;AAKIC,EAAAA,QAAQ,EAAE,eALd;AAMIC,EAAAA,MAAM,EAAE,IANZ;AAOIC,EAAAA,QAAQ,EAAE,IAPd;AAQIC,EAAAA,cAAc,EAAE,KARpB;AASIC,EAAAA,WAAW,EAAE,6BATjB;AAUIC,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE,eADF;AAEJC,MAAAA,GAAG,EAAE;AAFD,KADE;AAKVC,IAAAA,QAAQ,EAAE;AACNF,MAAAA,IAAI,EAAE,iBADA;AAENC,MAAAA,GAAG,EAAE;AAFC,KALA;AASVE,IAAAA,OAAO,EAAE;AACLH,MAAAA,IAAI,EAAE,gBADD;AAELC,MAAAA,GAAG,EAAE;AAFA,KATC;AAaVG,IAAAA,QAAQ,EAAE;AACNJ,MAAAA,IAAI,EAAE,iBADA;AAENC,MAAAA,GAAG,EAAE;AAFC,KAbA;AAiBVI,IAAAA,GAAG,EAAE;AACDL,MAAAA,IAAI,EAAE,YADL;AAEDC,MAAAA,GAAG,EAAE;AAFJ;AAjBK;AAVlB,CADoB,EAkCpB;AACIjB,EAAAA,IAAI,EAAE,KADV;AAEIM,EAAAA,QAAQ,EAAE;AAFd,CAlCoB,EAsCpB;AACIN,EAAAA,IAAI,EAAE,OADV;AAEIM,EAAAA,QAAQ,EAAE,MAFd;AAGIgB,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE,iBADH;AAEHC,IAAAA,QAAQ,EAAE;AAFP;AAHX,CAtCoB,EA8CpB;AACIxB,EAAAA,IAAI,EAAE,UADV;AAEIM,EAAAA,QAAQ,EAAE;AAFd,CA9CoB,EAkDpB;AACIN,EAAAA,IAAI,EAAE,UADV;AAEIM,EAAAA,QAAQ,EAAE;AAFd,CAlDoB,EAsDpB;AACIN,EAAAA,IAAI,EAAE,cADV;AAEIM,EAAAA,QAAQ,EAAE;AAFd,CAtDoB,EA0DpB;AACIN,EAAAA,IAAI,EAAE,SADV;AAEIM,EAAAA,QAAQ,EAAE;AAFd,CA1DoB,EA8DpB;AACIN,EAAAA,IAAI,EAAE,KADV;AAEIM,EAAAA,QAAQ,EAAE;AAFd,CA9DoB,CAAxB;AAoEA,IAAMmB,WAAW,GAAG;AAChBlB,EAAAA,MAAM,0CACDP,IADC,EACM,QADN,4BAEDD,GAFC,EAEK,+CAFL,4BAGDE,YAHC,EAGc,WAHd,WADU;AAMhBO,EAAAA,YAAY,sDACPR,IADO,EACA,QADA,kCAEPD,GAFO,EAED,uDAFC,kCAGPE,YAHO,EAGQ,YAHR,iBANI;AAWhBQ,EAAAA,QAAQ,8CACHT,IADG,EACI,QADJ,8BAEHD,GAFG,EAEG,8DAFH,8BAGHE,YAHG,EAGY,eAHZ,aAXQ;AAgBhBS,EAAAA,MAAM,0CACDV,IADC,EACM,QADN,4BAEDD,GAFC,EAEK,6DAFL,4BAGDE,YAHC,EAGc,oBAHd,WAhBU;AAqBhBW,EAAAA,cAAc,0DACTZ,IADS,EACF,SADE,oCAETD,GAFS,EAEH,gDAFG,oCAGTE,YAHS,EAGM,KAHN,mBArBE;AA0BhBU,EAAAA,QAAQ,8CACHX,IADG,EACI,QADJ,8BAEHD,GAFG,EAEG,kEAFH,aA1BQ;AA8BhBc,EAAAA,WAAW,oDACNb,IADM,EACC,QADD,iCAEND,GAFM,EAEA,mCAFA,gBA9BK;AAkChBe,EAAAA,YAAY,oBACLjB,OAAO,CAAC,kBAAD,CADF,sBAEPE,GAFO,EAED,uDAFC;AAlCI,CAApB;;AAwCA,KAAK,IAAI2B,GAAT,IAAgBD,WAAhB,EAA6B;AACzBA,EAAAA,WAAW,CAACC,GAAD,CAAX,CAAiBvB,QAAjB,IAA6B,UAAAwB,MAAM;AAAA,WAAIA,MAAM,CAAC3B,IAAP,KAAgB,SAApB;AAAA,GAAnC;AACH;;AAED,IAAM4B,SAAS,GAAG;AACdN,EAAAA,KAAK,wCACAtB,IADA,EACO,QADP,2BAEAD,GAFA,EAEM,uCAFN,2BAGAI,QAHA,EAGW,UAAA0B,MAAM;AAAA,WAAIA,MAAM,CAAC7B,IAAP,KAAgB,OAApB;AAAA,GAHjB,2BAID,GAJC,8BAKIA,IALJ,EAKW,QALX,sBAMID,GANJ,EAMU,yBANV,sBAOIG,QAPJ,EAOe,IAPf;AADS,CAAlB;AAaA,IAAM4B,kBAAkB,GAAG;AACvBC,EAAAA,aAAa,wDACR/B,IADQ,EACD,QADC,mCAERD,GAFQ,EAEF,eAFE,mCAGRG,QAHQ,EAGG,IAHH,mCAIRC,QAJQ,EAIG,UAAA0B,MAAM;AAAA,WAAIA,MAAM,CAAC7B,IAAP,KAAgB,iBAApB;AAAA,GAJT,kBADU;AAOvBgC,EAAAA,WAAW,oDACNhC,IADM,EACC,QADD,iCAEND,GAFM,EAEA,wCAFA,iCAGNI,QAHM,EAGK,UAAA0B,MAAM;AAAA,WAAIA,MAAM,CAAC7B,IAAP,KAAgB,iBAApB;AAAA,GAHX;AAPY,CAA3B;AAcAiC,MAAM,CAACC,OAAP,2DACKlC,IADL,EACY,OADZ,oCAEKD,GAFL,EAEW,2FAFX,oCAGKE,YAHL,EAGoBI,eAHpB,oCAII,GAJJ,sEAKSL,IALT,EAKgB,QALhB,mCAMSD,GANT,EAMe,wBANf,+EAQaC,IARb,EAQoB,QARpB,0BASaD,GATb,EASmB,aATnB,0BAUaG,QAVb,EAUwB,IAVxB,0BAWaD,YAXb,EAW4B,SAX5B,oGAcaD,IAdb,EAcoB,QAdpB,8BAeaD,GAfb,EAemB,kDAfnB,8BAgBaK,MAhBb,EAgBsB,gBAhBtB,8BAiBaF,QAjBb,EAiBwB,IAjBxB,8BAkBaD,YAlBb,EAkB4B,MAlB5B,iCAoBWwB,WApBX,MAqBWG,SArBX,MAsBWE,kBAtBX",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue, required, requires, format } = require('../common/utils').descriptors;\n\nconst DEFAULT_WIDGETS = [\n    {\n        type: 'profile',\n        position: 'left',\n        author: 'Your name',\n        author_title: 'Your title',\n        location: 'Your location',\n        avatar: null,\n        gravatar: null,\n        avatar_rounded: false,\n        follow_link: 'https://github.com/ppoffice',\n        social_links: {\n            Github: {\n                icon: 'fab fa-github',\n                url: 'https://github.com/ppoffice'\n            },\n            Facebook: {\n                icon: 'fab fa-facebook',\n                url: 'https://facebook.com'\n            },\n            Twitter: {\n                icon: 'fab fa-twitter',\n                url: 'https://twitter.com'\n            },\n            Dribbble: {\n                icon: 'fab fa-dribbble',\n                url: 'https://dribbble.com'\n            },\n            RSS: {\n                icon: 'fas fa-rss',\n                url: '/'\n            }\n        }\n    },\n    {\n        type: 'toc',\n        position: 'left'\n    },\n    {\n        type: 'links',\n        position: 'left',\n        links: {\n            Hexo: 'https://hexo.io',\n            PPOffice: 'https://github.com/ppoffice'\n        }\n    },\n    {\n        type: 'category',\n        position: 'left'\n    },\n    {\n        type: 'tagcloud',\n        position: 'left'\n    },\n    {\n        type: 'recent_posts',\n        position: 'right'\n    },\n    {\n        type: 'archive',\n        position: 'right'\n    },\n    {\n        type: 'tag',\n        position: 'right'\n    }\n];\n\nconst ProfileSpec = {\n    author: {\n        [type]: 'string',\n        [doc]: 'Author name to be shown in the profile widget',\n        [defaultValue]: 'Your name'\n    },\n    author_title: {\n        [type]: 'string',\n        [doc]: 'Title of the author to be shown in the profile widget',\n        [defaultValue]: 'Your title'\n    },\n    location: {\n        [type]: 'string',\n        [doc]: 'Author\\'s current location to be shown in the profile widget',\n        [defaultValue]: 'Your location'\n    },\n    avatar: {\n        [type]: 'string',\n        [doc]: 'Path or URL to the avatar to be shown in the profile widget',\n        [defaultValue]: '/images/avatar.png'\n    },\n    avatar_rounded: {\n        [type]: 'boolean',\n        [doc]: 'Whether to show avatar image rounded or square',\n        [defaultValue]: false\n    },\n    gravatar: {\n        [type]: 'string',\n        [doc]: 'Email address for the Gravatar to be shown in the profile widget',\n    },\n    follow_link: {\n        [type]: 'string',\n        [doc]: 'Path or URL for the follow button',\n    },\n    social_links: {\n        ...require('./icon_link.spec'),\n        [doc]: 'Links to be shown on the bottom of the profile widget',\n    }\n};\n\nfor (let key in ProfileSpec) {\n    ProfileSpec[key][requires] = widget => widget.type === 'profile';\n}\n\nconst LinksSpec = {\n    links: {\n        [type]: 'object',\n        [doc]: 'Links to be shown in the links widget',\n        [requires]: parent => parent.type === 'links',\n        '*': {\n            [type]: 'string',\n            [doc]: 'Path or URL to the link',\n            [required]: true\n        }\n    }\n};\n\nconst SubscrbieEmailSpec = {\n    feedburner_id: {\n        [type]: 'string',\n        [doc]: 'Feedburner ID',\n        [required]: true,\n        [requires]: parent => parent.type === 'subscribe_email'\n    },\n    description: {\n        [type]: 'string',\n        [doc]: 'Hint text under the subscription input',\n        [requires]: parent => parent.type === 'subscribe_email'\n    }\n};\n\nmodule.exports = {\n    [type]: 'array',\n    [doc]: 'Sidebar widget settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/categories/Widgets/',\n    [defaultValue]: DEFAULT_WIDGETS,\n    '*': {\n        [type]: 'object',\n        [doc]: 'Single widget settings',\n        type: {\n            [type]: 'string',\n            [doc]: 'Widget name',\n            [required]: true,\n            [defaultValue]: 'profile'\n        },\n        position: {\n            [type]: 'string',\n            [doc]: 'Where should the widget be placed, left or right',\n            [format]: /^(left|right)$/,\n            [required]: true,\n            [defaultValue]: 'left'\n        },\n        ...ProfileSpec,\n        ...LinksSpec,\n        ...SubscrbieEmailSpec\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525729
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/plugins.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/plugins.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/plugins.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/plugins.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "plugins.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _animejs, _gallery, _outdatedBrowser, _mathjax, _backToTop, _tracking_id, _googleAnalytics, _tracking_id2, _baiduAnalytics, _site_id, _hotjar, _progressbar, _busuanzi, _module$exports;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue;\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'Other plugin settings'), _defineProperty(_module$exports, \"animejs\", (_animejs = {}, _defineProperty(_animejs, type, 'boolean'), _defineProperty(_animejs, doc, 'Enable page animations'), _defineProperty(_animejs, defaultValue, true), _animejs)), _defineProperty(_module$exports, \"gallery\", (_gallery = {}, _defineProperty(_gallery, type, 'boolean'), _defineProperty(_gallery, doc, 'Enable the lightGallery and Justified Gallery plugins\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/gallery-plugin/'), _defineProperty(_gallery, defaultValue, true), _gallery)), _defineProperty(_module$exports, 'outdated-browser', (_outdatedBrowser = {}, _defineProperty(_outdatedBrowser, type, 'boolean'), _defineProperty(_outdatedBrowser, doc, 'Enable the Outdated Browser plugin\\nhttp://outdatedbrowser.com/'), _defineProperty(_outdatedBrowser, defaultValue, true), _outdatedBrowser)), _defineProperty(_module$exports, \"mathjax\", (_mathjax = {}, _defineProperty(_mathjax, type, 'boolean'), _defineProperty(_mathjax, doc, 'Enable the MathJax plugin\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/mathjax-plugin/'), _defineProperty(_mathjax, defaultValue, true), _mathjax)), _defineProperty(_module$exports, 'back-to-top', (_backToTop = {}, _defineProperty(_backToTop, type, 'boolean'), _defineProperty(_backToTop, doc, 'Show the back to top button on mobile devices'), _defineProperty(_backToTop, defaultValue, true), _backToTop)), _defineProperty(_module$exports, 'google-analytics', (_googleAnalytics = {}, _defineProperty(_googleAnalytics, type, ['boolean', 'object']), _defineProperty(_googleAnalytics, doc, 'Google Analytics plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Google-Analytics'), _defineProperty(_googleAnalytics, \"tracking_id\", (_tracking_id = {}, _defineProperty(_tracking_id, type, 'string'), _defineProperty(_tracking_id, doc, 'Google Analytics tracking id'), _defineProperty(_tracking_id, defaultValue, null), _tracking_id)), _googleAnalytics)), _defineProperty(_module$exports, 'baidu-analytics', (_baiduAnalytics = {}, _defineProperty(_baiduAnalytics, type, ['boolean', 'object']), _defineProperty(_baiduAnalytics, doc, 'Baidu Analytics plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Baidu-Analytics'), _defineProperty(_baiduAnalytics, \"tracking_id\", (_tracking_id2 = {}, _defineProperty(_tracking_id2, type, 'string'), _defineProperty(_tracking_id2, doc, 'Baidu Analytics tracking id'), _defineProperty(_tracking_id2, defaultValue, null), _tracking_id2)), _baiduAnalytics)), _defineProperty(_module$exports, \"hotjar\", (_hotjar = {}, _defineProperty(_hotjar, type, ['boolean', 'object']), _defineProperty(_hotjar, doc, 'Hotjar user feedback plugin\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Hotjar'), _defineProperty(_hotjar, \"site_id\", (_site_id = {}, _defineProperty(_site_id, type, ['string', 'number']), _defineProperty(_site_id, doc, 'Hotjar site id'), _defineProperty(_site_id, defaultValue, null), _site_id)), _hotjar)), _defineProperty(_module$exports, \"progressbar\", (_progressbar = {}, _defineProperty(_progressbar, type, 'boolean'), _defineProperty(_progressbar, doc, 'Show a loading progress bar at top of the page'), _defineProperty(_progressbar, defaultValue, true), _progressbar)), _defineProperty(_module$exports, \"busuanzi\", (_busuanzi = {}, _defineProperty(_busuanzi, type, 'boolean'), _defineProperty(_busuanzi, doc, 'BuSuanZi site/page view counter\\nhttps://busuanzi.ibruce.info'), _defineProperty(_busuanzi, defaultValue, false), _busuanzi)), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsdWdpbnMuc3BlYy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiZGVzY3JpcHRvcnMiLCJkb2MiLCJ0eXBlIiwiZGVmYXVsdFZhbHVlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OzJCQUFvQ0EsT0FBTyxDQUFDLGlCQUFELENBQVAsQ0FBMkJDLFc7SUFBdkRDLEcsd0JBQUFBLEc7SUFBS0MsSSx3QkFBQUEsSTtJQUFNQyxZLHdCQUFBQSxZOztBQUVuQkMsTUFBTSxDQUFDQyxPQUFQLDJEQUNLSCxJQURMLEVBQ1ksUUFEWixvQ0FFS0QsR0FGTCxFQUVXLHVCQUZYLHlGQUlTQyxJQUpULEVBSWdCLFNBSmhCLDZCQUtTRCxHQUxULEVBS2Usd0JBTGYsNkJBTVNFLFlBTlQsRUFNd0IsSUFOeEIscUdBU1NELElBVFQsRUFTZ0IsU0FUaEIsNkJBVVNELEdBVlQsRUFVZSxxSUFWZiw2QkFXU0UsWUFYVCxFQVd3QixJQVh4QixnREFhSSxrQkFiSiw0REFjU0QsSUFkVCxFQWNnQixTQWRoQixxQ0FlU0QsR0FmVCxFQWVlLGlFQWZmLHFDQWdCU0UsWUFoQlQsRUFnQndCLElBaEJ4Qiw2R0FtQlNELElBbkJULEVBbUJnQixTQW5CaEIsNkJBb0JTRCxHQXBCVCxFQW9CZSx5R0FwQmYsNkJBcUJTRSxZQXJCVCxFQXFCd0IsSUFyQnhCLGdEQXVCSSxhQXZCSixnREF3QlNELElBeEJULEVBd0JnQixTQXhCaEIsK0JBeUJTRCxHQXpCVCxFQXlCZSwrQ0F6QmYsK0JBMEJTRSxZQTFCVCxFQTBCd0IsSUExQnhCLGtEQTRCSSxrQkE1QkosNERBNkJTRCxJQTdCVCxFQTZCZ0IsQ0FBQyxTQUFELEVBQVksUUFBWixDQTdCaEIscUNBOEJTRCxHQTlCVCxFQThCZSx3SUE5QmYsc0dBZ0NhQyxJQWhDYixFQWdDb0IsUUFoQ3BCLGlDQWlDYUQsR0FqQ2IsRUFpQ21CLDhCQWpDbkIsaUNBa0NhRSxZQWxDYixFQWtDNEIsSUFsQzVCLHdFQXFDSSxpQkFyQ0osMERBc0NTRCxJQXRDVCxFQXNDZ0IsQ0FBQyxTQUFELEVBQVksUUFBWixDQXRDaEIsb0NBdUNTRCxHQXZDVCxFQXVDZSxzSUF2Q2YsdUdBeUNhQyxJQXpDYixFQXlDb0IsUUF6Q3BCLGtDQTBDYUQsR0ExQ2IsRUEwQ21CLDZCQTFDbkIsa0NBMkNhRSxZQTNDYixFQTJDNEIsSUEzQzVCLDBIQStDU0QsSUEvQ1QsRUErQ2dCLENBQUMsU0FBRCxFQUFZLFFBQVosQ0EvQ2hCLDRCQWdEU0QsR0FoRFQsRUFnRGUseUhBaERmLGlGQWtEYUMsSUFsRGIsRUFrRG9CLENBQUMsUUFBRCxFQUFXLFFBQVgsQ0FsRHBCLDZCQW1EYUQsR0FuRGIsRUFtRG1CLGdCQW5EbkIsNkJBb0RhRSxZQXBEYixFQW9ENEIsSUFwRDVCLDRIQXdEU0QsSUF4RFQsRUF3RGdCLFNBeERoQixpQ0F5RFNELEdBekRULEVBeURlLGdEQXpEZixpQ0EwRFNFLFlBMURULEVBMER3QixJQTFEeEIsNEdBNkRTRCxJQTdEVCxFQTZEZ0IsU0E3RGhCLDhCQThEU0QsR0E5RFQsRUE4RGUsK0RBOURmLDhCQStEU0UsWUEvRFQsRUErRHdCLEtBL0R4QiIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvc3BlY3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGRvYywgdHlwZSwgZGVmYXVsdFZhbHVlIH0gPSByZXF1aXJlKCcuLi9jb21tb24vdXRpbHMnKS5kZXNjcmlwdG9ycztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgW3R5cGVdOiAnb2JqZWN0JyxcbiAgICBbZG9jXTogJ090aGVyIHBsdWdpbiBzZXR0aW5ncycsXG4gICAgYW5pbWVqczoge1xuICAgICAgICBbdHlwZV06ICdib29sZWFuJyxcbiAgICAgICAgW2RvY106ICdFbmFibGUgcGFnZSBhbmltYXRpb25zJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IHRydWVcbiAgICB9LFxuICAgIGdhbGxlcnk6IHtcbiAgICAgICAgW3R5cGVdOiAnYm9vbGVhbicsXG4gICAgICAgIFtkb2NdOiAnRW5hYmxlIHRoZSBsaWdodEdhbGxlcnkgYW5kIEp1c3RpZmllZCBHYWxsZXJ5IHBsdWdpbnNcXG5odHRwczovL3Bwb2ZmaWNlLmdpdGh1Yi5pby9oZXhvLXRoZW1lLWljYXJ1cy9QbHVnaW5zL0dlbmVyYWwvZ2FsbGVyeS1wbHVnaW4vJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IHRydWVcbiAgICB9LFxuICAgICdvdXRkYXRlZC1icm93c2VyJzoge1xuICAgICAgICBbdHlwZV06ICdib29sZWFuJyxcbiAgICAgICAgW2RvY106ICdFbmFibGUgdGhlIE91dGRhdGVkIEJyb3dzZXIgcGx1Z2luXFxuaHR0cDovL291dGRhdGVkYnJvd3Nlci5jb20vJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IHRydWVcbiAgICB9LFxuICAgIG1hdGhqYXg6IHtcbiAgICAgICAgW3R5cGVdOiAnYm9vbGVhbicsXG4gICAgICAgIFtkb2NdOiAnRW5hYmxlIHRoZSBNYXRoSmF4IHBsdWdpblxcbmh0dHBzOi8vcHBvZmZpY2UuZ2l0aHViLmlvL2hleG8tdGhlbWUtaWNhcnVzL1BsdWdpbnMvR2VuZXJhbC9tYXRoamF4LXBsdWdpbi8nLFxuICAgICAgICBbZGVmYXVsdFZhbHVlXTogdHJ1ZVxuICAgIH0sXG4gICAgJ2JhY2stdG8tdG9wJzoge1xuICAgICAgICBbdHlwZV06ICdib29sZWFuJyxcbiAgICAgICAgW2RvY106ICdTaG93IHRoZSBiYWNrIHRvIHRvcCBidXR0b24gb24gbW9iaWxlIGRldmljZXMnLFxuICAgICAgICBbZGVmYXVsdFZhbHVlXTogdHJ1ZVxuICAgIH0sXG4gICAgJ2dvb2dsZS1hbmFseXRpY3MnOiB7XG4gICAgICAgIFt0eXBlXTogWydib29sZWFuJywgJ29iamVjdCddLFxuICAgICAgICBbZG9jXTogJ0dvb2dsZSBBbmFseXRpY3MgcGx1Z2luIHNldHRpbmdzXFxuaHR0cHM6Ly9wcG9mZmljZS5naXRodWIuaW8vaGV4by10aGVtZS1pY2FydXMvUGx1Z2lucy9HZW5lcmFsL3NpdGUtYW5hbHl0aWNzLXBsdWdpbi8jR29vZ2xlLUFuYWx5dGljcycsXG4gICAgICAgIHRyYWNraW5nX2lkOiB7XG4gICAgICAgICAgICBbdHlwZV06ICdzdHJpbmcnLFxuICAgICAgICAgICAgW2RvY106ICdHb29nbGUgQW5hbHl0aWNzIHRyYWNraW5nIGlkJyxcbiAgICAgICAgICAgIFtkZWZhdWx0VmFsdWVdOiBudWxsXG4gICAgICAgIH1cbiAgICB9LFxuICAgICdiYWlkdS1hbmFseXRpY3MnOiB7XG4gICAgICAgIFt0eXBlXTogWydib29sZWFuJywgJ29iamVjdCddLFxuICAgICAgICBbZG9jXTogJ0JhaWR1IEFuYWx5dGljcyBwbHVnaW4gc2V0dGluZ3NcXG5odHRwczovL3Bwb2ZmaWNlLmdpdGh1Yi5pby9oZXhvLXRoZW1lLWljYXJ1cy9QbHVnaW5zL0dlbmVyYWwvc2l0ZS1hbmFseXRpY3MtcGx1Z2luLyNCYWlkdS1BbmFseXRpY3MnLFxuICAgICAgICB0cmFja2luZ19pZDoge1xuICAgICAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgICAgIFtkb2NdOiAnQmFpZHUgQW5hbHl0aWNzIHRyYWNraW5nIGlkJyxcbiAgICAgICAgICAgIFtkZWZhdWx0VmFsdWVdOiBudWxsXG4gICAgICAgIH1cbiAgICB9LFxuICAgIGhvdGphcjoge1xuICAgICAgICBbdHlwZV06IFsnYm9vbGVhbicsICdvYmplY3QnXSxcbiAgICAgICAgW2RvY106ICdIb3RqYXIgdXNlciBmZWVkYmFjayBwbHVnaW5cXG5odHRwczovL3Bwb2ZmaWNlLmdpdGh1Yi5pby9oZXhvLXRoZW1lLWljYXJ1cy9QbHVnaW5zL0dlbmVyYWwvc2l0ZS1hbmFseXRpY3MtcGx1Z2luLyNIb3RqYXInLFxuICAgICAgICBzaXRlX2lkOiB7XG4gICAgICAgICAgICBbdHlwZV06IFsnc3RyaW5nJywgJ251bWJlciddLFxuICAgICAgICAgICAgW2RvY106ICdIb3RqYXIgc2l0ZSBpZCcsXG4gICAgICAgICAgICBbZGVmYXVsdFZhbHVlXTogbnVsbFxuICAgICAgICB9XG4gICAgfSxcbiAgICBwcm9ncmVzc2Jhcjoge1xuICAgICAgICBbdHlwZV06ICdib29sZWFuJyxcbiAgICAgICAgW2RvY106ICdTaG93IGEgbG9hZGluZyBwcm9ncmVzcyBiYXIgYXQgdG9wIG9mIHRoZSBwYWdlJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IHRydWVcbiAgICB9LFxuICAgIGJ1c3VhbnppOiB7XG4gICAgICAgIFt0eXBlXTogJ2Jvb2xlYW4nLFxuICAgICAgICBbZG9jXTogJ0J1U3VhblppIHNpdGUvcGFnZSB2aWV3IGNvdW50ZXJcXG5odHRwczovL2J1c3VhbnppLmlicnVjZS5pbmZvJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06IGZhbHNlXG4gICAgfVxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "plugins.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;2BAAoCA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAvDC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;;AAEnBC,MAAM,CAACC,OAAP,2DACKH,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,uBAFX,yFAISC,IAJT,EAIgB,SAJhB,6BAKSD,GALT,EAKe,wBALf,6BAMSE,YANT,EAMwB,IANxB,qGASSD,IATT,EASgB,SAThB,6BAUSD,GAVT,EAUe,qIAVf,6BAWSE,YAXT,EAWwB,IAXxB,gDAaI,kBAbJ,4DAcSD,IAdT,EAcgB,SAdhB,qCAeSD,GAfT,EAee,iEAff,qCAgBSE,YAhBT,EAgBwB,IAhBxB,6GAmBSD,IAnBT,EAmBgB,SAnBhB,6BAoBSD,GApBT,EAoBe,yGApBf,6BAqBSE,YArBT,EAqBwB,IArBxB,gDAuBI,aAvBJ,gDAwBSD,IAxBT,EAwBgB,SAxBhB,+BAyBSD,GAzBT,EAyBe,+CAzBf,+BA0BSE,YA1BT,EA0BwB,IA1BxB,kDA4BI,kBA5BJ,4DA6BSD,IA7BT,EA6BgB,CAAC,SAAD,EAAY,QAAZ,CA7BhB,qCA8BSD,GA9BT,EA8Be,wIA9Bf,sGAgCaC,IAhCb,EAgCoB,QAhCpB,iCAiCaD,GAjCb,EAiCmB,8BAjCnB,iCAkCaE,YAlCb,EAkC4B,IAlC5B,wEAqCI,iBArCJ,0DAsCSD,IAtCT,EAsCgB,CAAC,SAAD,EAAY,QAAZ,CAtChB,oCAuCSD,GAvCT,EAuCe,sIAvCf,uGAyCaC,IAzCb,EAyCoB,QAzCpB,kCA0CaD,GA1Cb,EA0CmB,6BA1CnB,kCA2CaE,YA3Cb,EA2C4B,IA3C5B,0HA+CSD,IA/CT,EA+CgB,CAAC,SAAD,EAAY,QAAZ,CA/ChB,4BAgDSD,GAhDT,EAgDe,yHAhDf,iFAkDaC,IAlDb,EAkDoB,CAAC,QAAD,EAAW,QAAX,CAlDpB,6BAmDaD,GAnDb,EAmDmB,gBAnDnB,6BAoDaE,YApDb,EAoD4B,IApD5B,4HAwDSD,IAxDT,EAwDgB,SAxDhB,iCAyDSD,GAzDT,EAyDe,gDAzDf,iCA0DSE,YA1DT,EA0DwB,IA1DxB,4GA6DSD,IA7DT,EA6DgB,SA7DhB,8BA8DSD,GA9DT,EA8De,+DA9Df,8BA+DSE,YA/DT,EA+DwB,KA/DxB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'Other plugin settings',\n    animejs: {\n        [type]: 'boolean',\n        [doc]: 'Enable page animations',\n        [defaultValue]: true\n    },\n    gallery: {\n        [type]: 'boolean',\n        [doc]: 'Enable the lightGallery and Justified Gallery plugins\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/gallery-plugin/',\n        [defaultValue]: true\n    },\n    'outdated-browser': {\n        [type]: 'boolean',\n        [doc]: 'Enable the Outdated Browser plugin\\nhttp://outdatedbrowser.com/',\n        [defaultValue]: true\n    },\n    mathjax: {\n        [type]: 'boolean',\n        [doc]: 'Enable the MathJax plugin\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/mathjax-plugin/',\n        [defaultValue]: true\n    },\n    'back-to-top': {\n        [type]: 'boolean',\n        [doc]: 'Show the back to top button on mobile devices',\n        [defaultValue]: true\n    },\n    'google-analytics': {\n        [type]: ['boolean', 'object'],\n        [doc]: 'Google Analytics plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Google-Analytics',\n        tracking_id: {\n            [type]: 'string',\n            [doc]: 'Google Analytics tracking id',\n            [defaultValue]: null\n        }\n    },\n    'baidu-analytics': {\n        [type]: ['boolean', 'object'],\n        [doc]: 'Baidu Analytics plugin settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Baidu-Analytics',\n        tracking_id: {\n            [type]: 'string',\n            [doc]: 'Baidu Analytics tracking id',\n            [defaultValue]: null\n        }\n    },\n    hotjar: {\n        [type]: ['boolean', 'object'],\n        [doc]: 'Hotjar user feedback plugin\\nhttps://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Hotjar',\n        site_id: {\n            [type]: ['string', 'number'],\n            [doc]: 'Hotjar site id',\n            [defaultValue]: null\n        }\n    },\n    progressbar: {\n        [type]: 'boolean',\n        [doc]: 'Show a loading progress bar at top of the page',\n        [defaultValue]: true\n    },\n    busuanzi: {\n        [type]: 'boolean',\n        [doc]: 'BuSuanZi site/page view counter\\nhttps://busuanzi.ibruce.info',\n        [defaultValue]: false\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525725
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/specs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/specs/providers.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/specs/providers.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/specs/providers.spec.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/specs/providers.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
        "sourceFileName": "providers.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _cdn, _fontcdn, _iconcdn, _module$exports;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require$descriptors = require('../common/utils').descriptors,\n    doc = _require$descriptors.doc,\n    type = _require$descriptors.type,\n    defaultValue = _require$descriptors.defaultValue;\n\nmodule.exports = (_module$exports = {}, _defineProperty(_module$exports, type, 'object'), _defineProperty(_module$exports, doc, 'CDN provider settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/speed-up-your-site-with-custom-cdn/'), _defineProperty(_module$exports, \"cdn\", (_cdn = {}, _defineProperty(_cdn, type, 'string'), _defineProperty(_cdn, doc, 'Name or URL of the JavaScript and/or stylesheet CDN provider'), _defineProperty(_cdn, defaultValue, 'jsdelivr'), _cdn)), _defineProperty(_module$exports, \"fontcdn\", (_fontcdn = {}, _defineProperty(_fontcdn, type, 'string'), _defineProperty(_fontcdn, doc, 'Name or URL of the webfont CDN provider'), _defineProperty(_fontcdn, defaultValue, 'google'), _fontcdn)), _defineProperty(_module$exports, \"iconcdn\", (_iconcdn = {}, _defineProperty(_iconcdn, type, 'string'), _defineProperty(_iconcdn, doc, 'Name or URL of the webfont Icon CDN provider'), _defineProperty(_iconcdn, defaultValue, 'fontawesome'), _iconcdn)), _module$exports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3ZpZGVycy5zcGVjLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJkZXNjcmlwdG9ycyIsImRvYyIsInR5cGUiLCJkZWZhdWx0VmFsdWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7MkJBQW9DQSxPQUFPLENBQUMsaUJBQUQsQ0FBUCxDQUEyQkMsVztJQUF2REMsRyx3QkFBQUEsRztJQUFLQyxJLHdCQUFBQSxJO0lBQU1DLFksd0JBQUFBLFk7O0FBRW5CQyxNQUFNLENBQUNDLE9BQVAsMkRBQ0tILElBREwsRUFDWSxRQURaLG9DQUVLRCxHQUZMLEVBRVcsNkhBRlgsNkVBSVNDLElBSlQsRUFJZ0IsUUFKaEIseUJBS1NELEdBTFQsRUFLZSw4REFMZix5QkFNU0UsWUFOVCxFQU13QixVQU54QixpR0FTU0QsSUFUVCxFQVNnQixRQVRoQiw2QkFVU0QsR0FWVCxFQVVlLHlDQVZmLDZCQVdTRSxZQVhULEVBV3dCLFFBWHhCLHFHQWNTRCxJQWRULEVBY2dCLFFBZGhCLDZCQWVTRCxHQWZULEVBZWUsOENBZmYsNkJBZ0JTRSxZQWhCVCxFQWdCd0IsYUFoQnhCIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1cy9pbmNsdWRlcy9zcGVjcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZG9jLCB0eXBlLCBkZWZhdWx0VmFsdWUgfSA9IHJlcXVpcmUoJy4uL2NvbW1vbi91dGlscycpLmRlc2NyaXB0b3JzO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBbdHlwZV06ICdvYmplY3QnLFxuICAgIFtkb2NdOiAnQ0ROIHByb3ZpZGVyIHNldHRpbmdzXFxuaHR0cHM6Ly9wcG9mZmljZS5naXRodWIuaW8vaGV4by10aGVtZS1pY2FydXMvQ29uZmlndXJhdGlvbi9UaGVtZS9zcGVlZC11cC15b3VyLXNpdGUtd2l0aC1jdXN0b20tY2RuLycsXG4gICAgY2RuOiB7XG4gICAgICAgIFt0eXBlXTogJ3N0cmluZycsXG4gICAgICAgIFtkb2NdOiAnTmFtZSBvciBVUkwgb2YgdGhlIEphdmFTY3JpcHQgYW5kL29yIHN0eWxlc2hlZXQgQ0ROIHByb3ZpZGVyJyxcbiAgICAgICAgW2RlZmF1bHRWYWx1ZV06ICdqc2RlbGl2cidcbiAgICB9LFxuICAgIGZvbnRjZG46IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdOYW1lIG9yIFVSTCBvZiB0aGUgd2ViZm9udCBDRE4gcHJvdmlkZXInLFxuICAgICAgICBbZGVmYXVsdFZhbHVlXTogJ2dvb2dsZSdcbiAgICB9LFxuICAgIGljb25jZG46IHtcbiAgICAgICAgW3R5cGVdOiAnc3RyaW5nJyxcbiAgICAgICAgW2RvY106ICdOYW1lIG9yIFVSTCBvZiB0aGUgd2ViZm9udCBJY29uIENETiBwcm92aWRlcicsXG4gICAgICAgIFtkZWZhdWx0VmFsdWVdOiAnZm9udGF3ZXNvbWUnXG4gICAgfVxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "providers.spec.js"
      ],
      "names": [
        "require",
        "descriptors",
        "doc",
        "type",
        "defaultValue",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;2BAAoCA,OAAO,CAAC,iBAAD,CAAP,CAA2BC,W;IAAvDC,G,wBAAAA,G;IAAKC,I,wBAAAA,I;IAAMC,Y,wBAAAA,Y;;AAEnBC,MAAM,CAACC,OAAP,2DACKH,IADL,EACY,QADZ,oCAEKD,GAFL,EAEW,6HAFX,6EAISC,IAJT,EAIgB,QAJhB,yBAKSD,GALT,EAKe,8DALf,yBAMSE,YANT,EAMwB,UANxB,iGASSD,IATT,EASgB,QAThB,6BAUSD,GAVT,EAUe,yCAVf,6BAWSE,YAXT,EAWwB,QAXxB,qGAcSD,IAdT,EAcgB,QAdhB,6BAeSD,GAfT,EAee,8CAff,6BAgBSE,YAhBT,EAgBwB,aAhBxB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/specs",
      "sourcesContent": [
        "const { doc, type, defaultValue } = require('../common/utils').descriptors;\n\nmodule.exports = {\n    [type]: 'object',\n    [doc]: 'CDN provider settings\\nhttps://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/speed-up-your-site-with-custom-cdn/',\n    cdn: {\n        [type]: 'string',\n        [doc]: 'Name or URL of the JavaScript and/or stylesheet CDN provider',\n        [defaultValue]: 'jsdelivr'\n    },\n    fontcdn: {\n        [type]: 'string',\n        [doc]: 'Name or URL of the webfont CDN provider',\n        [defaultValue]: 'google'\n    },\n    iconcdn: {\n        [type]: 'string',\n        [doc]: 'Name or URL of the webfont Icon CDN provider',\n        [defaultValue]: 'fontawesome'\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525725
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/common/ConfigValidator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/common/ConfigValidator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/common/ConfigValidator.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/common/ConfigValidator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
        "sourceFileName": "ConfigValidator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('./utils'),\n    is = _require.is,\n    descriptors = _require.descriptors;\n\nvar type = descriptors.type,\n    required = descriptors.required,\n    requires = descriptors.requires,\n    format = descriptors.format,\n    defaultValue = descriptors.defaultValue;\n\nvar _require$errors = require('./utils').errors,\n    InvalidSpecError = _require$errors.InvalidSpecError,\n    MissingRequiredError = _require$errors.MissingRequiredError,\n    TypeMismatchError = _require$errors.TypeMismatchError,\n    FormatMismatchError = _require$errors.FormatMismatchError,\n    VersionMalformedError = _require$errors.VersionMalformedError,\n    VersionNotFoundError = _require$errors.VersionNotFoundError,\n    VersionMismatchError = _require$errors.VersionMismatchError;\n\nfunction isRequiresSatisfied(spec, config) {\n  try {\n    if (!spec.hasOwnProperty(requires) || spec[requires](config) === true) {\n      return true;\n    }\n  } catch (e) {}\n\n  return false;\n}\n\nfunction getConfigType(spec, config) {\n  var specTypes = is.array(spec[type]) ? spec[type] : [spec[type]];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = specTypes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var specType = _step.value;\n\n      if (is[specType](config)) {\n        return specType;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction hasFormat(spec, config) {\n  if (!spec.hasOwnProperty(format)) {\n    return true;\n  }\n\n  return spec[format].test(config);\n}\n\nfunction _validate(spec, config, parentConfig, path) {\n  if (!is.spec(spec)) {\n    throw new InvalidSpecError(spec, path);\n  }\n\n  if (!isRequiresSatisfied(spec, parentConfig)) {\n    return;\n  }\n\n  if (is.undefined(config) || is[\"null\"](config)) {\n    if (spec[required] === true) {\n      throw new MissingRequiredError(spec, path);\n    }\n\n    return;\n  }\n\n  var type = getConfigType(spec, config);\n\n  if (type === null) {\n    throw new TypeMismatchError(spec, path, config);\n  }\n\n  if (type === 'string') {\n    if (!hasFormat(spec, config)) {\n      throw new FormatMismatchError(spec, path, config);\n    }\n  } else if (type === 'array' && spec.hasOwnProperty('*')) {\n    config.forEach(function (child, i) {\n      return _validate(spec['*'], child, config, path.concat(\"[\".concat(i, \"]\")));\n    });\n  } else if (type === 'object') {\n    for (var key in spec) {\n      if (key === '*') {\n        Object.keys(config).forEach(function (k) {\n          return _validate(spec['*'], config[k], config, path.concat(k));\n        });\n      } else {\n        _validate(spec[key], config[key], config, path.concat(key));\n      }\n    }\n  }\n}\n\nfunction formatVersion(ver) {\n  var m = /^(\\d)+\\.(\\d)+\\.(\\d)+(?:-([0-9A-Za-z-]+))*$/.exec(ver);\n\n  if (m === null) {\n    throw new VersionMalformedError(ver);\n  }\n\n  return {\n    major: m[1],\n    minor: m[2],\n    patch: m[3],\n    identifier: m.length > 4 ? m[4] : null\n  };\n}\n\nfunction compareVersion(ver1, ver2) {\n  for (var _i = 0, _arr = ['major', 'minor', 'patch']; _i < _arr.length; _i++) {\n    var section = _arr[_i];\n\n    if (ver1[section] !== ver2[section]) {\n      return Math.sign(ver1[section] - ver2[section]);\n    }\n  }\n\n  var id1 = ver1.hasOwnProperty('identifier') ? ver1.identifier : null;\n  var id2 = ver2.hasOwnProperty('identifier') ? ver2.identifier : null;\n\n  if (id1 === id2) {\n    return 0;\n  }\n\n  if (id1 === null) {\n    return 1;\n  }\n\n  if (id2 === null) {\n    return -1;\n  }\n\n  return id1.localeCompare(id2);\n}\n\nfunction isBreakingChange(base, ver) {\n  return base.major !== ver.major || base.minor !== ver.minor;\n}\n\nfunction checkVersion(spec, config) {\n  if (!config.hasOwnProperty('version')) {\n    throw new VersionNotFoundError();\n  }\n\n  var configVersion = formatVersion(config.version);\n  var specVersion = formatVersion(spec.version[defaultValue]);\n\n  if (isBreakingChange(specVersion, configVersion)) {\n    throw new VersionMismatchError(spec.version[defaultValue], config.version, compareVersion(specVersion, configVersion) > 0);\n  }\n}\n\nvar ConfigValidator = /*#__PURE__*/function () {\n  function ConfigValidator(spec) {\n    _classCallCheck(this, ConfigValidator);\n\n    this.spec = spec;\n  }\n\n  _createClass(ConfigValidator, [{\n    key: \"validate\",\n    value: function validate(config) {\n      checkVersion(this.spec, config);\n\n      _validate(this.spec, config, null, []);\n    }\n  }]);\n\n  return ConfigValidator;\n}();\n\nmodule.exports = ConfigValidator;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "ConfigValidator.js"
      ],
      "names": [
        "require",
        "is",
        "descriptors",
        "type",
        "required",
        "requires",
        "format",
        "defaultValue",
        "errors",
        "InvalidSpecError",
        "MissingRequiredError",
        "TypeMismatchError",
        "FormatMismatchError",
        "VersionMalformedError",
        "VersionNotFoundError",
        "VersionMismatchError",
        "isRequiresSatisfied",
        "spec",
        "config",
        "hasOwnProperty",
        "e",
        "getConfigType",
        "specTypes",
        "array",
        "specType",
        "hasFormat",
        "test",
        "validate",
        "parentConfig",
        "path",
        "undefined",
        "forEach",
        "child",
        "i",
        "concat",
        "key",
        "Object",
        "keys",
        "k",
        "formatVersion",
        "ver",
        "m",
        "exec",
        "major",
        "minor",
        "patch",
        "identifier",
        "length",
        "compareVersion",
        "ver1",
        "ver2",
        "section",
        "Math",
        "sign",
        "id1",
        "id2",
        "localeCompare",
        "isBreakingChange",
        "base",
        "checkVersion",
        "configVersion",
        "version",
        "specVersion",
        "ConfigValidator",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;eAA4BA,OAAO,CAAC,SAAD,C;IAA3BC,E,YAAAA,E;IAAIC,W,YAAAA,W;;IACJC,I,GAAmDD,W,CAAnDC,I;IAAMC,Q,GAA6CF,W,CAA7CE,Q;IAAUC,Q,GAAmCH,W,CAAnCG,Q;IAAUC,M,GAAyBJ,W,CAAzBI,M;IAAQC,Y,GAAiBL,W,CAAjBK,Y;;sBAQbP,OAAO,CAAC,SAAD,CAAP,CAAmBQ,M;IAN5CC,gB,mBAAAA,gB;IACAC,oB,mBAAAA,oB;IACAC,iB,mBAAAA,iB;IACAC,mB,mBAAAA,mB;IACAC,qB,mBAAAA,qB;IACAC,oB,mBAAAA,oB;IACAC,oB,mBAAAA,oB;;AAEJ,SAASC,mBAAT,CAA6BC,IAA7B,EAAmCC,MAAnC,EAA2C;AACvC,MAAI;AACA,QAAI,CAACD,IAAI,CAACE,cAAL,CAAoBd,QAApB,CAAD,IAAkCY,IAAI,CAACZ,QAAD,CAAJ,CAAea,MAAf,MAA2B,IAAjE,EAAuE;AACnE,aAAO,IAAP;AACH;AACJ,GAJD,CAIE,OAAOE,CAAP,EAAU,CAAG;;AACf,SAAO,KAAP;AACH;;AAED,SAASC,aAAT,CAAuBJ,IAAvB,EAA6BC,MAA7B,EAAqC;AACjC,MAAMI,SAAS,GAAGrB,EAAE,CAACsB,KAAH,CAASN,IAAI,CAACd,IAAD,CAAb,IAAuBc,IAAI,CAACd,IAAD,CAA3B,GAAoC,CAACc,IAAI,CAACd,IAAD,CAAL,CAAtD;AADiC;AAAA;AAAA;;AAAA;AAEjC,yBAAqBmB,SAArB,8HAAgC;AAAA,UAAvBE,QAAuB;;AAC5B,UAAIvB,EAAE,CAACuB,QAAD,CAAF,CAAaN,MAAb,CAAJ,EAA0B;AACtB,eAAOM,QAAP;AACH;AACJ;AANgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOjC,SAAO,IAAP;AACH;;AAED,SAASC,SAAT,CAAmBR,IAAnB,EAAyBC,MAAzB,EAAiC;AAC7B,MAAI,CAACD,IAAI,CAACE,cAAL,CAAoBb,MAApB,CAAL,EAAkC;AAC9B,WAAO,IAAP;AACH;;AACD,SAAOW,IAAI,CAACX,MAAD,CAAJ,CAAaoB,IAAb,CAAkBR,MAAlB,CAAP;AACH;;AAED,SAASS,SAAT,CAAkBV,IAAlB,EAAwBC,MAAxB,EAAgCU,YAAhC,EAA8CC,IAA9C,EAAoD;AAChD,MAAI,CAAC5B,EAAE,CAACgB,IAAH,CAAQA,IAAR,CAAL,EAAoB;AAChB,UAAM,IAAIR,gBAAJ,CAAqBQ,IAArB,EAA2BY,IAA3B,CAAN;AACH;;AACD,MAAI,CAACb,mBAAmB,CAACC,IAAD,EAAOW,YAAP,CAAxB,EAA8C;AAC1C;AACH;;AACD,MAAI3B,EAAE,CAAC6B,SAAH,CAAaZ,MAAb,KAAwBjB,EAAE,QAAF,CAAQiB,MAAR,CAA5B,EAA6C;AACzC,QAAID,IAAI,CAACb,QAAD,CAAJ,KAAmB,IAAvB,EAA6B;AACzB,YAAM,IAAIM,oBAAJ,CAAyBO,IAAzB,EAA+BY,IAA/B,CAAN;AACH;;AACD;AACH;;AACD,MAAM1B,IAAI,GAAGkB,aAAa,CAACJ,IAAD,EAAOC,MAAP,CAA1B;;AACA,MAAIf,IAAI,KAAK,IAAb,EAAmB;AACf,UAAM,IAAIQ,iBAAJ,CAAsBM,IAAtB,EAA4BY,IAA5B,EAAkCX,MAAlC,CAAN;AACH;;AACD,MAAIf,IAAI,KAAK,QAAb,EAAuB;AACnB,QAAI,CAACsB,SAAS,CAACR,IAAD,EAAOC,MAAP,CAAd,EAA8B;AAC1B,YAAM,IAAIN,mBAAJ,CAAwBK,IAAxB,EAA8BY,IAA9B,EAAoCX,MAApC,CAAN;AACH;AACJ,GAJD,MAIO,IAAIf,IAAI,KAAK,OAAT,IAAoBc,IAAI,CAACE,cAAL,CAAoB,GAApB,CAAxB,EAAkD;AACrDD,IAAAA,MAAM,CAACa,OAAP,CAAe,UAACC,KAAD,EAAQC,CAAR;AAAA,aAAcN,SAAQ,CAACV,IAAI,CAAC,GAAD,CAAL,EAAYe,KAAZ,EAAmBd,MAAnB,EAA2BW,IAAI,CAACK,MAAL,YAAgBD,CAAhB,OAA3B,CAAtB;AAAA,KAAf;AACH,GAFM,MAEA,IAAI9B,IAAI,KAAK,QAAb,EAAuB;AAC1B,SAAK,IAAIgC,GAAT,IAAgBlB,IAAhB,EAAsB;AAClB,UAAIkB,GAAG,KAAK,GAAZ,EAAiB;AACbC,QAAAA,MAAM,CAACC,IAAP,CAAYnB,MAAZ,EAAoBa,OAApB,CAA4B,UAAAO,CAAC;AAAA,iBAAIX,SAAQ,CAACV,IAAI,CAAC,GAAD,CAAL,EAAYC,MAAM,CAACoB,CAAD,CAAlB,EAAuBpB,MAAvB,EAA+BW,IAAI,CAACK,MAAL,CAAYI,CAAZ,CAA/B,CAAZ;AAAA,SAA7B;AACH,OAFD,MAEO;AACHX,QAAAA,SAAQ,CAACV,IAAI,CAACkB,GAAD,CAAL,EAAYjB,MAAM,CAACiB,GAAD,CAAlB,EAAyBjB,MAAzB,EAAiCW,IAAI,CAACK,MAAL,CAAYC,GAAZ,CAAjC,CAAR;AACH;AACJ;AACJ;AACJ;;AAED,SAASI,aAAT,CAAuBC,GAAvB,EAA4B;AACxB,MAAMC,CAAC,GAAG,6CAA6CC,IAA7C,CAAkDF,GAAlD,CAAV;;AACA,MAAIC,CAAC,KAAK,IAAV,EAAgB;AACZ,UAAM,IAAI5B,qBAAJ,CAA0B2B,GAA1B,CAAN;AACH;;AACD,SAAO;AACHG,IAAAA,KAAK,EAAEF,CAAC,CAAC,CAAD,CADL;AAEHG,IAAAA,KAAK,EAAEH,CAAC,CAAC,CAAD,CAFL;AAGHI,IAAAA,KAAK,EAAEJ,CAAC,CAAC,CAAD,CAHL;AAIHK,IAAAA,UAAU,EAAEL,CAAC,CAACM,MAAF,GAAW,CAAX,GAAeN,CAAC,CAAC,CAAD,CAAhB,GAAsB;AAJ/B,GAAP;AAMH;;AAED,SAASO,cAAT,CAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;AAChC,0BAAoB,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAApB,0BAAiD;AAA5C,QAAIC,OAAO,WAAX;;AACD,QAAIF,IAAI,CAACE,OAAD,CAAJ,KAAkBD,IAAI,CAACC,OAAD,CAA1B,EAAqC;AACjC,aAAOC,IAAI,CAACC,IAAL,CAAUJ,IAAI,CAACE,OAAD,CAAJ,GAAgBD,IAAI,CAACC,OAAD,CAA9B,CAAP;AACH;AACJ;;AACD,MAAMG,GAAG,GAAGL,IAAI,CAAC9B,cAAL,CAAoB,YAApB,IAAoC8B,IAAI,CAACH,UAAzC,GAAsD,IAAlE;AACA,MAAMS,GAAG,GAAGL,IAAI,CAAC/B,cAAL,CAAoB,YAApB,IAAoC+B,IAAI,CAACJ,UAAzC,GAAsD,IAAlE;;AACA,MAAIQ,GAAG,KAAKC,GAAZ,EAAiB;AACb,WAAO,CAAP;AACH;;AACD,MAAID,GAAG,KAAK,IAAZ,EAAkB;AACd,WAAO,CAAP;AACH;;AACD,MAAIC,GAAG,KAAK,IAAZ,EAAkB;AACd,WAAO,CAAC,CAAR;AACH;;AACD,SAAOD,GAAG,CAACE,aAAJ,CAAkBD,GAAlB,CAAP;AACH;;AAED,SAASE,gBAAT,CAA0BC,IAA1B,EAAgClB,GAAhC,EAAqC;AACjC,SAAOkB,IAAI,CAACf,KAAL,KAAeH,GAAG,CAACG,KAAnB,IAA4Be,IAAI,CAACd,KAAL,KAAeJ,GAAG,CAACI,KAAtD;AACH;;AAGD,SAASe,YAAT,CAAsB1C,IAAtB,EAA4BC,MAA5B,EAAoC;AAChC,MAAI,CAACA,MAAM,CAACC,cAAP,CAAsB,SAAtB,CAAL,EAAuC;AACnC,UAAM,IAAIL,oBAAJ,EAAN;AACH;;AACD,MAAM8C,aAAa,GAAGrB,aAAa,CAACrB,MAAM,CAAC2C,OAAR,CAAnC;AACA,MAAMC,WAAW,GAAGvB,aAAa,CAACtB,IAAI,CAAC4C,OAAL,CAAatD,YAAb,CAAD,CAAjC;;AACA,MAAIkD,gBAAgB,CAACK,WAAD,EAAcF,aAAd,CAApB,EAAkD;AAC9C,UAAM,IAAI7C,oBAAJ,CAAyBE,IAAI,CAAC4C,OAAL,CAAatD,YAAb,CAAzB,EAAqDW,MAAM,CAAC2C,OAA5D,EAAqEb,cAAc,CAACc,WAAD,EAAcF,aAAd,CAAd,GAA6C,CAAlH,CAAN;AACH;AACJ;;IAEKG,e;AACF,2BAAY9C,IAAZ,EAAkB;AAAA;;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;;;6BAEQC,M,EAAQ;AACbyC,MAAAA,YAAY,CAAC,KAAK1C,IAAN,EAAYC,MAAZ,CAAZ;;AACAS,MAAAA,SAAQ,CAAC,KAAKV,IAAN,EAAYC,MAAZ,EAAoB,IAApB,EAA0B,EAA1B,CAAR;AACH;;;;;;AAGL8C,MAAM,CAACC,OAAP,GAAiBF,eAAjB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
      "sourcesContent": [
        "const { is, descriptors } = require('./utils');\nconst { type, required, requires, format, defaultValue } = descriptors;\nconst {\n    InvalidSpecError,\n    MissingRequiredError,\n    TypeMismatchError,\n    FormatMismatchError,\n    VersionMalformedError,\n    VersionNotFoundError,\n    VersionMismatchError } = require('./utils').errors;\n\nfunction isRequiresSatisfied(spec, config) {\n    try {\n        if (!spec.hasOwnProperty(requires) || spec[requires](config) === true) {\n            return true;\n        }\n    } catch (e) { }\n    return false;\n}\n\nfunction getConfigType(spec, config) {\n    const specTypes = is.array(spec[type]) ? spec[type] : [spec[type]];\n    for (let specType of specTypes) {\n        if (is[specType](config)) {\n            return specType;\n        }\n    }\n    return null;\n}\n\nfunction hasFormat(spec, config) {\n    if (!spec.hasOwnProperty(format)) {\n        return true;\n    }\n    return spec[format].test(config);\n}\n\nfunction validate(spec, config, parentConfig, path) {\n    if (!is.spec(spec)) {\n        throw new InvalidSpecError(spec, path);\n    }\n    if (!isRequiresSatisfied(spec, parentConfig)) {\n        return;\n    }\n    if (is.undefined(config) || is.null(config)) {\n        if (spec[required] === true) {\n            throw new MissingRequiredError(spec, path);\n        }\n        return;\n    }\n    const type = getConfigType(spec, config);\n    if (type === null) {\n        throw new TypeMismatchError(spec, path, config);\n    }\n    if (type === 'string') {\n        if (!hasFormat(spec, config)) {\n            throw new FormatMismatchError(spec, path, config);\n        }\n    } else if (type === 'array' && spec.hasOwnProperty('*')) {\n        config.forEach((child, i) => validate(spec['*'], child, config, path.concat(`[${i}]`)));\n    } else if (type === 'object') {\n        for (let key in spec) {\n            if (key === '*') {\n                Object.keys(config).forEach(k => validate(spec['*'], config[k], config, path.concat(k)));\n            } else {\n                validate(spec[key], config[key], config, path.concat(key));\n            }\n        }\n    }\n}\n\nfunction formatVersion(ver) {\n    const m = /^(\\d)+\\.(\\d)+\\.(\\d)+(?:-([0-9A-Za-z-]+))*$/.exec(ver);\n    if (m === null) {\n        throw new VersionMalformedError(ver);\n    }\n    return {\n        major: m[1],\n        minor: m[2],\n        patch: m[3],\n        identifier: m.length > 4 ? m[4] : null\n    };\n}\n\nfunction compareVersion(ver1, ver2) {\n    for (let section of ['major', 'minor', 'patch']) {\n        if (ver1[section] !== ver2[section]) {\n            return Math.sign(ver1[section] - ver2[section]);\n        }\n    }\n    const id1 = ver1.hasOwnProperty('identifier') ? ver1.identifier : null;\n    const id2 = ver2.hasOwnProperty('identifier') ? ver2.identifier : null;\n    if (id1 === id2) {\n        return 0;\n    }\n    if (id1 === null) {\n        return 1;\n    }\n    if (id2 === null) {\n        return -1;\n    }\n    return id1.localeCompare(id2);\n}\n\nfunction isBreakingChange(base, ver) {\n    return base.major !== ver.major || base.minor !== ver.minor;\n}\n\n\nfunction checkVersion(spec, config) {\n    if (!config.hasOwnProperty('version')) {\n        throw new VersionNotFoundError();\n    }\n    const configVersion = formatVersion(config.version);\n    const specVersion = formatVersion(spec.version[defaultValue]);\n    if (isBreakingChange(specVersion, configVersion)) {\n        throw new VersionMismatchError(spec.version[defaultValue], config.version, compareVersion(specVersion, configVersion) > 0);\n    }\n}\n\nclass ConfigValidator {\n    constructor(spec) {\n        this.spec = spec;\n    }\n\n    validate(config) {\n        checkVersion(this.spec, config);\n        validate(this.spec, config, null, []);\n    }\n}\n\nmodule.exports = ConfigValidator;"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525709
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/common\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/common/ConfigGenerator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/common/ConfigGenerator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/common/ConfigGenerator.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/common/ConfigGenerator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
        "sourceFileName": "ConfigGenerator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar yaml = require('js-yaml');\n\nvar Type = require('js-yaml/lib/js-yaml/type');\n\nvar Schema = require('js-yaml/lib/js-yaml/schema');\n\nvar _require = require('./utils'),\n    is = _require.is,\n    descriptors = _require.descriptors;\n\nvar doc = descriptors.doc,\n    type = descriptors.type,\n    requires = descriptors.requires,\n    defaultValue = descriptors.defaultValue;\nvar UNDEFINED = Symbol('undefined'); // output null as empty in yaml\n\nvar YAML_SCHEMA = new Schema({\n  include: [require('js-yaml/lib/js-yaml/schema/default_full')],\n  implicit: [new Type('tag:yaml.org,2002:null', {\n    kind: 'scalar',\n    resolve: function resolve(data) {\n      if (data === null) {\n        return true;\n      }\n\n      var max = data.length;\n      return max === 1 && data === '~' || max === 4 && (data === 'null' || data === 'Null' || data === 'NULL');\n    },\n    construct: function construct() {\n      return null;\n    },\n    predicate: function predicate(object) {\n      return object === null;\n    },\n    represent: {\n      empty: function empty() {\n        return '';\n      }\n    },\n    defaultStyle: 'empty'\n  })]\n});\n\nfunction appendDoc(spec, defaults) {\n  if (defaults === null) {\n    return null;\n  }\n\n  if (is.array(defaults) && spec.hasOwnProperty('*')) {\n    return defaults.map(function (value) {\n      return appendDoc(spec['*'], value);\n    });\n  } else if (is.object(defaults)) {\n    var _defaults = {};\n\n    for (var key in defaults) {\n      if (spec.hasOwnProperty(key) && spec[key].hasOwnProperty(doc)) {\n        var i = 0;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = spec[key][doc].split('\\n')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var line = _step.value;\n            _defaults['#' + key + i++] = line;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      _defaults[key] = appendDoc(spec.hasOwnProperty(key) ? spec[key] : {}, defaults[key]);\n    }\n\n    return _defaults;\n  }\n\n  return defaults;\n}\n\nfunction _generate(spec) {\n  var parentConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (!is.spec(spec)) {\n    return UNDEFINED;\n  }\n\n  if (spec.hasOwnProperty(requires) && !spec[requires](parentConfig)) {\n    return UNDEFINED;\n  }\n\n  if (spec.hasOwnProperty(defaultValue)) {\n    return appendDoc(spec, spec[defaultValue]);\n  }\n\n  var types = is.array(spec[type]) ? spec[type] : [spec[type]];\n\n  if (types.includes('object')) {\n    var defaults = UNDEFINED;\n\n    for (var key in spec) {\n      if (key === '*') {\n        continue;\n      }\n\n      var value = _generate(spec[key], defaults);\n\n      if (value !== UNDEFINED) {\n        if (defaults === UNDEFINED) {\n          defaults = {};\n        }\n\n        defaults[key] = value;\n      }\n    }\n\n    return appendDoc(spec, defaults);\n  } else if (types.includes('array') && spec.hasOwnProperty('*')) {\n    return [_generate(spec['*'], {})];\n  }\n\n  return UNDEFINED;\n}\n\nvar ConfigGenerator = /*#__PURE__*/function () {\n  function ConfigGenerator(spec) {\n    _classCallCheck(this, ConfigGenerator);\n\n    this.spec = spec;\n  }\n\n  _createClass(ConfigGenerator, [{\n    key: \"generate\",\n    value: function generate() {\n      return yaml.safeDump(_generate(this.spec), {\n        indent: 4,\n        lineWidth: 1024,\n        schema: YAML_SCHEMA\n      }).replace(/^(\\s*)\\'#.*?\\':\\s*\\'*(.*?)\\'*$/mg, '$1# $2'); // make comment lines\n    }\n  }]);\n\n  return ConfigGenerator;\n}();\n\nmodule.exports = ConfigGenerator;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "ConfigGenerator.js"
      ],
      "names": [
        "yaml",
        "require",
        "Type",
        "Schema",
        "is",
        "descriptors",
        "doc",
        "type",
        "requires",
        "defaultValue",
        "UNDEFINED",
        "Symbol",
        "YAML_SCHEMA",
        "include",
        "implicit",
        "kind",
        "resolve",
        "data",
        "max",
        "length",
        "construct",
        "predicate",
        "object",
        "represent",
        "empty",
        "defaultStyle",
        "appendDoc",
        "spec",
        "defaults",
        "array",
        "hasOwnProperty",
        "map",
        "value",
        "_defaults",
        "key",
        "i",
        "split",
        "line",
        "generate",
        "parentConfig",
        "types",
        "includes",
        "ConfigGenerator",
        "safeDump",
        "indent",
        "lineWidth",
        "schema",
        "replace",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAApB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,0BAAD,CAApB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,4BAAD,CAAtB;;eAE4BA,OAAO,CAAC,SAAD,C;IAA3BG,E,YAAAA,E;IAAIC,W,YAAAA,W;;IACJC,G,GAAsCD,W,CAAtCC,G;IAAKC,I,GAAiCF,W,CAAjCE,I;IAAMC,Q,GAA2BH,W,CAA3BG,Q;IAAUC,Y,GAAiBJ,W,CAAjBI,Y;AAE7B,IAAMC,SAAS,GAAGC,MAAM,CAAC,WAAD,CAAxB,C,CACA;;AACA,IAAMC,WAAW,GAAG,IAAIT,MAAJ,CAAW;AAC3BU,EAAAA,OAAO,EAAE,CACLZ,OAAO,CAAC,yCAAD,CADF,CADkB;AAI3Ba,EAAAA,QAAQ,EAAE,CACN,IAAIZ,IAAJ,CAAS,wBAAT,EAAmC;AAC/Ba,IAAAA,IAAI,EAAE,QADyB;AAE/BC,IAAAA,OAF+B,mBAEvBC,IAFuB,EAEjB;AACV,UAAIA,IAAI,KAAK,IAAb,EAAmB;AACf,eAAO,IAAP;AACH;;AACD,UAAMC,GAAG,GAAGD,IAAI,CAACE,MAAjB;AACA,aAAQD,GAAG,KAAK,CAAR,IAAaD,IAAI,KAAK,GAAvB,IACFC,GAAG,KAAK,CAAR,KAAcD,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,MAA5B,IAAsCA,IAAI,KAAK,MAA7D,CADL;AAEH,KAT8B;AAU/BG,IAAAA,SAAS,EAAE;AAAA,aAAM,IAAN;AAAA,KAVoB;AAW/BC,IAAAA,SAAS,EAAE,mBAAAC,MAAM;AAAA,aAAIA,MAAM,KAAK,IAAf;AAAA,KAXc;AAY/BC,IAAAA,SAAS,EAAE;AACPC,MAAAA,KAAK,EAAE,iBAAY;AAAE,eAAO,EAAP;AAAY;AAD1B,KAZoB;AAe/BC,IAAAA,YAAY,EAAE;AAfiB,GAAnC,CADM;AAJiB,CAAX,CAApB;;AAyBA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,QAAzB,EAAmC;AAC/B,MAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACnB,WAAO,IAAP;AACH;;AACD,MAAIxB,EAAE,CAACyB,KAAH,CAASD,QAAT,KAAsBD,IAAI,CAACG,cAAL,CAAoB,GAApB,CAA1B,EAAoD;AAChD,WAAOF,QAAQ,CAACG,GAAT,CAAa,UAAAC,KAAK;AAAA,aAAIN,SAAS,CAACC,IAAI,CAAC,GAAD,CAAL,EAAYK,KAAZ,CAAb;AAAA,KAAlB,CAAP;AACH,GAFD,MAEO,IAAI5B,EAAE,CAACkB,MAAH,CAAUM,QAAV,CAAJ,EAAyB;AAC5B,QAAMK,SAAS,GAAG,EAAlB;;AACA,SAAK,IAAIC,GAAT,IAAgBN,QAAhB,EAA0B;AACtB,UAAID,IAAI,CAACG,cAAL,CAAoBI,GAApB,KAA4BP,IAAI,CAACO,GAAD,CAAJ,CAAUJ,cAAV,CAAyBxB,GAAzB,CAAhC,EAA+D;AAC3D,YAAI6B,CAAC,GAAG,CAAR;AAD2D;AAAA;AAAA;;AAAA;AAE3D,+BAAiBR,IAAI,CAACO,GAAD,CAAJ,CAAU5B,GAAV,EAAe8B,KAAf,CAAqB,IAArB,CAAjB,8HAA6C;AAAA,gBAApCC,IAAoC;AACzCJ,YAAAA,SAAS,CAAC,MAAMC,GAAN,GAAYC,CAAC,EAAd,CAAT,GAA6BE,IAA7B;AACH;AAJ0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK9D;;AACDJ,MAAAA,SAAS,CAACC,GAAD,CAAT,GAAiBR,SAAS,CAACC,IAAI,CAACG,cAAL,CAAoBI,GAApB,IAA2BP,IAAI,CAACO,GAAD,CAA/B,GAAuC,EAAxC,EAA4CN,QAAQ,CAACM,GAAD,CAApD,CAA1B;AACH;;AACD,WAAOD,SAAP;AACH;;AACD,SAAOL,QAAP;AACH;;AAED,SAASU,SAAT,CAAkBX,IAAlB,EAA6C;AAAA,MAArBY,YAAqB,uEAAN,IAAM;;AACzC,MAAI,CAACnC,EAAE,CAACuB,IAAH,CAAQA,IAAR,CAAL,EAAoB;AAChB,WAAOjB,SAAP;AACH;;AACD,MAAIiB,IAAI,CAACG,cAAL,CAAoBtB,QAApB,KAAiC,CAACmB,IAAI,CAACnB,QAAD,CAAJ,CAAe+B,YAAf,CAAtC,EAAoE;AAChE,WAAO7B,SAAP;AACH;;AACD,MAAIiB,IAAI,CAACG,cAAL,CAAoBrB,YAApB,CAAJ,EAAuC;AACnC,WAAOiB,SAAS,CAACC,IAAD,EAAOA,IAAI,CAAClB,YAAD,CAAX,CAAhB;AACH;;AACD,MAAM+B,KAAK,GAAGpC,EAAE,CAACyB,KAAH,CAASF,IAAI,CAACpB,IAAD,CAAb,IAAuBoB,IAAI,CAACpB,IAAD,CAA3B,GAAoC,CAACoB,IAAI,CAACpB,IAAD,CAAL,CAAlD;;AACA,MAAIiC,KAAK,CAACC,QAAN,CAAe,QAAf,CAAJ,EAA8B;AAC1B,QAAIb,QAAQ,GAAGlB,SAAf;;AACA,SAAK,IAAIwB,GAAT,IAAgBP,IAAhB,EAAsB;AAClB,UAAIO,GAAG,KAAK,GAAZ,EAAiB;AACb;AACH;;AACD,UAAMF,KAAK,GAAGM,SAAQ,CAACX,IAAI,CAACO,GAAD,CAAL,EAAYN,QAAZ,CAAtB;;AACA,UAAII,KAAK,KAAKtB,SAAd,EAAyB;AACrB,YAAIkB,QAAQ,KAAKlB,SAAjB,EAA4B;AACxBkB,UAAAA,QAAQ,GAAG,EAAX;AACH;;AACDA,QAAAA,QAAQ,CAACM,GAAD,CAAR,GAAgBF,KAAhB;AACH;AACJ;;AACD,WAAON,SAAS,CAACC,IAAD,EAAOC,QAAP,CAAhB;AACH,GAfD,MAeO,IAAIY,KAAK,CAACC,QAAN,CAAe,OAAf,KAA2Bd,IAAI,CAACG,cAAL,CAAoB,GAApB,CAA/B,EAAyD;AAC5D,WAAO,CAACQ,SAAQ,CAACX,IAAI,CAAC,GAAD,CAAL,EAAY,EAAZ,CAAT,CAAP;AACH;;AACD,SAAOjB,SAAP;AACH;;IAEKgC,e;AACF,2BAAYf,IAAZ,EAAkB;AAAA;;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;;;+BAEU;AACP,aAAO3B,IAAI,CAAC2C,QAAL,CAAcL,SAAQ,CAAC,KAAKX,IAAN,CAAtB,EAAmC;AACtCiB,QAAAA,MAAM,EAAE,CAD8B;AAEtCC,QAAAA,SAAS,EAAE,IAF2B;AAGtCC,QAAAA,MAAM,EAAElC;AAH8B,OAAnC,EAIJmC,OAJI,CAII,kCAJJ,EAIwC,QAJxC,CAAP,CADO,CAKmD;AAC7D;;;;;;AAGLC,MAAM,CAACC,OAAP,GAAiBP,eAAjB",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/common",
      "sourcesContent": [
        "const yaml = require('js-yaml');\nconst Type = require('js-yaml/lib/js-yaml/type');\nconst Schema = require('js-yaml/lib/js-yaml/schema');\n\nconst { is, descriptors } = require('./utils');\nconst { doc, type, requires, defaultValue } = descriptors;\n\nconst UNDEFINED = Symbol('undefined');\n// output null as empty in yaml\nconst YAML_SCHEMA = new Schema({\n    include: [\n        require('js-yaml/lib/js-yaml/schema/default_full')\n    ],\n    implicit: [\n        new Type('tag:yaml.org,2002:null', {\n            kind: 'scalar',\n            resolve(data) {\n                if (data === null) {\n                    return true;\n                }\n                const max = data.length;\n                return (max === 1 && data === '~') ||\n                    (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n            },\n            construct: () => null,\n            predicate: object => object === null,\n            represent: {\n                empty: function () { return ''; }\n            },\n            defaultStyle: 'empty'\n        })\n    ]\n});\n\nfunction appendDoc(spec, defaults) {\n    if (defaults === null) {\n        return null;\n    }\n    if (is.array(defaults) && spec.hasOwnProperty('*')) {\n        return defaults.map(value => appendDoc(spec['*'], value));\n    } else if (is.object(defaults)) {\n        const _defaults = {};\n        for (let key in defaults) {\n            if (spec.hasOwnProperty(key) && spec[key].hasOwnProperty(doc)) {\n                let i = 0;\n                for (let line of spec[key][doc].split('\\n')) {\n                    _defaults['#' + key + i++] = line;\n                }\n            }\n            _defaults[key] = appendDoc(spec.hasOwnProperty(key) ? spec[key] : {}, defaults[key]);\n        }\n        return _defaults;\n    }\n    return defaults;\n}\n\nfunction generate(spec, parentConfig = null) {\n    if (!is.spec(spec)) {\n        return UNDEFINED;\n    }\n    if (spec.hasOwnProperty(requires) && !spec[requires](parentConfig)) {\n        return UNDEFINED;\n    }\n    if (spec.hasOwnProperty(defaultValue)) {\n        return appendDoc(spec, spec[defaultValue]);\n    }\n    const types = is.array(spec[type]) ? spec[type] : [spec[type]];\n    if (types.includes('object')) {\n        let defaults = UNDEFINED;\n        for (let key in spec) {\n            if (key === '*') {\n                continue;\n            }\n            const value = generate(spec[key], defaults);\n            if (value !== UNDEFINED) {\n                if (defaults === UNDEFINED) {\n                    defaults = {};\n                }\n                defaults[key] = value;\n            }\n        }\n        return appendDoc(spec, defaults);\n    } else if (types.includes('array') && spec.hasOwnProperty('*')) {\n        return [generate(spec['*'], {})];\n    }\n    return UNDEFINED;\n}\n\nclass ConfigGenerator {\n    constructor(spec) {\n        this.spec = spec;\n    }\n\n    generate() {\n        return yaml.safeDump(generate(this.spec), {\n            indent: 4,\n            lineWidth: 1024,\n            schema: YAML_SCHEMA\n        }).replace(/^(\\s*)\\'#.*?\\':\\s*\\'*(.*?)\\'*$/mg, '$1# $2'); // make comment lines\n    }\n}\n\nmodule.exports = ConfigGenerator;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525709
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/generators\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/generators/categories.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/generators/categories.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/generators/categories.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/generators/categories.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
        "sourceFileName": "categories.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Category list page generator\n */\nmodule.exports = function (hexo) {\n  hexo.extend.generator.register('categories', function (locals) {\n    return {\n      path: 'categories/',\n      layout: ['categories'],\n      data: Object.assign({}, locals, {\n        __categories: true\n      })\n    };\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3JpZXMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImhleG8iLCJleHRlbmQiLCJnZW5lcmF0b3IiLCJyZWdpc3RlciIsImxvY2FscyIsInBhdGgiLCJsYXlvdXQiLCJkYXRhIiwiT2JqZWN0IiwiYXNzaWduIiwiX19jYXRlZ29yaWVzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7QUFHQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVVDLElBQVYsRUFBZ0I7QUFDN0JBLEVBQUFBLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxTQUFaLENBQXNCQyxRQUF0QixDQUErQixZQUEvQixFQUE2QyxVQUFVQyxNQUFWLEVBQWtCO0FBQzNELFdBQU87QUFDSEMsTUFBQUEsSUFBSSxFQUFFLGFBREg7QUFFSEMsTUFBQUEsTUFBTSxFQUFFLENBQUMsWUFBRCxDQUZMO0FBR0hDLE1BQUFBLElBQUksRUFBRUMsTUFBTSxDQUFDQyxNQUFQLENBQWMsRUFBZCxFQUFrQkwsTUFBbEIsRUFBMEI7QUFDNUJNLFFBQUFBLFlBQVksRUFBRTtBQURjLE9BQTFCO0FBSEgsS0FBUDtBQU9ILEdBUkQ7QUFTSCxDQVZEIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1cy9pbmNsdWRlcy9nZW5lcmF0b3JzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDYXRlZ29yeSBsaXN0IHBhZ2UgZ2VuZXJhdG9yXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGhleG8pIHtcbiAgICBoZXhvLmV4dGVuZC5nZW5lcmF0b3IucmVnaXN0ZXIoJ2NhdGVnb3JpZXMnLCBmdW5jdGlvbiAobG9jYWxzKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwYXRoOiAnY2F0ZWdvcmllcy8nLFxuICAgICAgICAgICAgbGF5b3V0OiBbJ2NhdGVnb3JpZXMnXSxcbiAgICAgICAgICAgIGRhdGE6IE9iamVjdC5hc3NpZ24oe30sIGxvY2Fscywge1xuICAgICAgICAgICAgICAgIF9fY2F0ZWdvcmllczogdHJ1ZVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfTtcbiAgICB9KTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "categories.js"
      ],
      "names": [
        "module",
        "exports",
        "hexo",
        "extend",
        "generator",
        "register",
        "locals",
        "path",
        "layout",
        "data",
        "Object",
        "assign",
        "__categories"
      ],
      "mappings": ";;AAAA;;;AAGAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,SAAZ,CAAsBC,QAAtB,CAA+B,YAA/B,EAA6C,UAAUC,MAAV,EAAkB;AAC3D,WAAO;AACHC,MAAAA,IAAI,EAAE,aADH;AAEHC,MAAAA,MAAM,EAAE,CAAC,YAAD,CAFL;AAGHC,MAAAA,IAAI,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAlB,EAA0B;AAC5BM,QAAAA,YAAY,EAAE;AADc,OAA1B;AAHH,KAAP;AAOH,GARD;AASH,CAVD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
      "sourcesContent": [
        "/**\n * Category list page generator\n */\nmodule.exports = function (hexo) {\n    hexo.extend.generator.register('categories', function (locals) {\n        return {\n            path: 'categories/',\n            layout: ['categories'],\n            data: Object.assign({}, locals, {\n                __categories: true\n            })\n        };\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525709
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/generators\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/generators/category.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/generators/category.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/generators/category.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/generators/category.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
        "sourceFileName": "category.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar pagination = require('hexo-pagination');\n\nmodule.exports = function (hexo) {\n  // ATTENTION: This will override the default category generator!\n  hexo.extend.generator.register('category', function (locals) {\n    var config = this.config;\n    var perPage = config.category_generator.per_page;\n    var paginationDir = config.pagination_dir || 'page';\n\n    function findParent(category) {\n      var parents = [];\n\n      if (category && category.hasOwnProperty('parent')) {\n        var parent = locals.categories.filter(function (cat) {\n          return cat._id === category.parent;\n        }).first();\n        parents = [parent].concat(findParent(parent));\n      }\n\n      return parents;\n    }\n\n    return locals.categories.reduce(function (result, category) {\n      var posts = category.posts.sort('-date');\n      var data = pagination(category.path, posts, {\n        perPage: perPage,\n        layout: ['category', 'archive', 'index'],\n        format: paginationDir + '/%d/',\n        data: {\n          category: category.name,\n          parents: findParent(category)\n        }\n      });\n      return result.concat(data);\n    }, []);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LmpzIl0sIm5hbWVzIjpbInBhZ2luYXRpb24iLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImhleG8iLCJleHRlbmQiLCJnZW5lcmF0b3IiLCJyZWdpc3RlciIsImxvY2FscyIsImNvbmZpZyIsInBlclBhZ2UiLCJjYXRlZ29yeV9nZW5lcmF0b3IiLCJwZXJfcGFnZSIsInBhZ2luYXRpb25EaXIiLCJwYWdpbmF0aW9uX2RpciIsImZpbmRQYXJlbnQiLCJjYXRlZ29yeSIsInBhcmVudHMiLCJoYXNPd25Qcm9wZXJ0eSIsInBhcmVudCIsImNhdGVnb3JpZXMiLCJmaWx0ZXIiLCJjYXQiLCJfaWQiLCJmaXJzdCIsImNvbmNhdCIsInJlZHVjZSIsInJlc3VsdCIsInBvc3RzIiwic29ydCIsImRhdGEiLCJwYXRoIiwibGF5b3V0IiwiZm9ybWF0IiwibmFtZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxpQkFBRCxDQUExQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVVDLElBQVYsRUFBZ0I7QUFDN0I7QUFDQUEsRUFBQUEsSUFBSSxDQUFDQyxNQUFMLENBQVlDLFNBQVosQ0FBc0JDLFFBQXRCLENBQStCLFVBQS9CLEVBQTJDLFVBQVNDLE1BQVQsRUFBaUI7QUFDeEQsUUFBTUMsTUFBTSxHQUFHLEtBQUtBLE1BQXBCO0FBQ0EsUUFBTUMsT0FBTyxHQUFHRCxNQUFNLENBQUNFLGtCQUFQLENBQTBCQyxRQUExQztBQUNBLFFBQU1DLGFBQWEsR0FBR0osTUFBTSxDQUFDSyxjQUFQLElBQXlCLE1BQS9DOztBQUVBLGFBQVNDLFVBQVQsQ0FBb0JDLFFBQXBCLEVBQThCO0FBQzFCLFVBQUlDLE9BQU8sR0FBRyxFQUFkOztBQUNBLFVBQUlELFFBQVEsSUFBSUEsUUFBUSxDQUFDRSxjQUFULENBQXdCLFFBQXhCLENBQWhCLEVBQW1EO0FBQy9DLFlBQU1DLE1BQU0sR0FBR1gsTUFBTSxDQUFDWSxVQUFQLENBQWtCQyxNQUFsQixDQUF5QixVQUFBQyxHQUFHO0FBQUEsaUJBQUlBLEdBQUcsQ0FBQ0MsR0FBSixLQUFZUCxRQUFRLENBQUNHLE1BQXpCO0FBQUEsU0FBNUIsRUFBNkRLLEtBQTdELEVBQWY7QUFDQVAsUUFBQUEsT0FBTyxHQUFHLENBQUNFLE1BQUQsRUFBU00sTUFBVCxDQUFnQlYsVUFBVSxDQUFDSSxNQUFELENBQTFCLENBQVY7QUFDSDs7QUFDRCxhQUFPRixPQUFQO0FBQ0g7O0FBRUQsV0FBT1QsTUFBTSxDQUFDWSxVQUFQLENBQWtCTSxNQUFsQixDQUF5QixVQUFTQyxNQUFULEVBQWlCWCxRQUFqQixFQUEwQjtBQUN0RCxVQUFNWSxLQUFLLEdBQUdaLFFBQVEsQ0FBQ1ksS0FBVCxDQUFlQyxJQUFmLENBQW9CLE9BQXBCLENBQWQ7QUFDQSxVQUFNQyxJQUFJLEdBQUc5QixVQUFVLENBQUNnQixRQUFRLENBQUNlLElBQVYsRUFBZ0JILEtBQWhCLEVBQXVCO0FBQzFDbEIsUUFBQUEsT0FBTyxFQUFFQSxPQURpQztBQUUxQ3NCLFFBQUFBLE1BQU0sRUFBRSxDQUFDLFVBQUQsRUFBYSxTQUFiLEVBQXdCLE9BQXhCLENBRmtDO0FBRzFDQyxRQUFBQSxNQUFNLEVBQUVwQixhQUFhLEdBQUcsTUFIa0I7QUFJMUNpQixRQUFBQSxJQUFJLEVBQUU7QUFDRmQsVUFBQUEsUUFBUSxFQUFFQSxRQUFRLENBQUNrQixJQURqQjtBQUVGakIsVUFBQUEsT0FBTyxFQUFFRixVQUFVLENBQUNDLFFBQUQ7QUFGakI7QUFKb0MsT0FBdkIsQ0FBdkI7QUFVQSxhQUFPVyxNQUFNLENBQUNGLE1BQVAsQ0FBY0ssSUFBZCxDQUFQO0FBQ0gsS0FiTSxFQWFKLEVBYkksQ0FBUDtBQWNILEdBNUJEO0FBNkJILENBL0JEIiwic291cmNlUm9vdCI6Ii9ob21lL2NvZGluZy93b3Jrc3BhY2UvdGhlbWVzL2ljYXJ1cy9pbmNsdWRlcy9nZW5lcmF0b3JzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGFnaW5hdGlvbiA9IHJlcXVpcmUoJ2hleG8tcGFnaW5hdGlvbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChoZXhvKSB7XG4gICAgLy8gQVRURU5USU9OOiBUaGlzIHdpbGwgb3ZlcnJpZGUgdGhlIGRlZmF1bHQgY2F0ZWdvcnkgZ2VuZXJhdG9yIVxuICAgIGhleG8uZXh0ZW5kLmdlbmVyYXRvci5yZWdpc3RlcignY2F0ZWdvcnknLCBmdW5jdGlvbihsb2NhbHMpIHtcbiAgICAgICAgY29uc3QgY29uZmlnID0gdGhpcy5jb25maWc7XG4gICAgICAgIGNvbnN0IHBlclBhZ2UgPSBjb25maWcuY2F0ZWdvcnlfZ2VuZXJhdG9yLnBlcl9wYWdlO1xuICAgICAgICBjb25zdCBwYWdpbmF0aW9uRGlyID0gY29uZmlnLnBhZ2luYXRpb25fZGlyIHx8ICdwYWdlJztcblxuICAgICAgICBmdW5jdGlvbiBmaW5kUGFyZW50KGNhdGVnb3J5KSB7XG4gICAgICAgICAgICBsZXQgcGFyZW50cyA9IFtdO1xuICAgICAgICAgICAgaWYgKGNhdGVnb3J5ICYmIGNhdGVnb3J5Lmhhc093blByb3BlcnR5KCdwYXJlbnQnKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhcmVudCA9IGxvY2Fscy5jYXRlZ29yaWVzLmZpbHRlcihjYXQgPT4gY2F0Ll9pZCA9PT0gY2F0ZWdvcnkucGFyZW50KS5maXJzdCgpO1xuICAgICAgICAgICAgICAgIHBhcmVudHMgPSBbcGFyZW50XS5jb25jYXQoZmluZFBhcmVudChwYXJlbnQpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBwYXJlbnRzO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gbG9jYWxzLmNhdGVnb3JpZXMucmVkdWNlKGZ1bmN0aW9uKHJlc3VsdCwgY2F0ZWdvcnkpe1xuICAgICAgICAgICAgY29uc3QgcG9zdHMgPSBjYXRlZ29yeS5wb3N0cy5zb3J0KCctZGF0ZScpO1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IHBhZ2luYXRpb24oY2F0ZWdvcnkucGF0aCwgcG9zdHMsIHtcbiAgICAgICAgICAgICAgICBwZXJQYWdlOiBwZXJQYWdlLFxuICAgICAgICAgICAgICAgIGxheW91dDogWydjYXRlZ29yeScsICdhcmNoaXZlJywgJ2luZGV4J10sXG4gICAgICAgICAgICAgICAgZm9ybWF0OiBwYWdpbmF0aW9uRGlyICsgJy8lZC8nLFxuICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnk6IGNhdGVnb3J5Lm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudHM6IGZpbmRQYXJlbnQoY2F0ZWdvcnkpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC5jb25jYXQoZGF0YSk7XG4gICAgICAgIH0sIFtdKTtcbiAgICB9KTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "category.js"
      ],
      "names": [
        "pagination",
        "require",
        "module",
        "exports",
        "hexo",
        "extend",
        "generator",
        "register",
        "locals",
        "config",
        "perPage",
        "category_generator",
        "per_page",
        "paginationDir",
        "pagination_dir",
        "findParent",
        "category",
        "parents",
        "hasOwnProperty",
        "parent",
        "categories",
        "filter",
        "cat",
        "_id",
        "first",
        "concat",
        "reduce",
        "result",
        "posts",
        "sort",
        "data",
        "path",
        "layout",
        "format",
        "name"
      ],
      "mappings": ";;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,iBAAD,CAA1B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7B;AACAA,EAAAA,IAAI,CAACC,MAAL,CAAYC,SAAZ,CAAsBC,QAAtB,CAA+B,UAA/B,EAA2C,UAASC,MAAT,EAAiB;AACxD,QAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,QAAMC,OAAO,GAAGD,MAAM,CAACE,kBAAP,CAA0BC,QAA1C;AACA,QAAMC,aAAa,GAAGJ,MAAM,CAACK,cAAP,IAAyB,MAA/C;;AAEA,aAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC1B,UAAIC,OAAO,GAAG,EAAd;;AACA,UAAID,QAAQ,IAAIA,QAAQ,CAACE,cAAT,CAAwB,QAAxB,CAAhB,EAAmD;AAC/C,YAAMC,MAAM,GAAGX,MAAM,CAACY,UAAP,CAAkBC,MAAlB,CAAyB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,GAAJ,KAAYP,QAAQ,CAACG,MAAzB;AAAA,SAA5B,EAA6DK,KAA7D,EAAf;AACAP,QAAAA,OAAO,GAAG,CAACE,MAAD,EAASM,MAAT,CAAgBV,UAAU,CAACI,MAAD,CAA1B,CAAV;AACH;;AACD,aAAOF,OAAP;AACH;;AAED,WAAOT,MAAM,CAACY,UAAP,CAAkBM,MAAlB,CAAyB,UAASC,MAAT,EAAiBX,QAAjB,EAA0B;AACtD,UAAMY,KAAK,GAAGZ,QAAQ,CAACY,KAAT,CAAeC,IAAf,CAAoB,OAApB,CAAd;AACA,UAAMC,IAAI,GAAG9B,UAAU,CAACgB,QAAQ,CAACe,IAAV,EAAgBH,KAAhB,EAAuB;AAC1ClB,QAAAA,OAAO,EAAEA,OADiC;AAE1CsB,QAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,SAAb,EAAwB,OAAxB,CAFkC;AAG1CC,QAAAA,MAAM,EAAEpB,aAAa,GAAG,MAHkB;AAI1CiB,QAAAA,IAAI,EAAE;AACFd,UAAAA,QAAQ,EAAEA,QAAQ,CAACkB,IADjB;AAEFjB,UAAAA,OAAO,EAAEF,UAAU,CAACC,QAAD;AAFjB;AAJoC,OAAvB,CAAvB;AAUA,aAAOW,MAAM,CAACF,MAAP,CAAcK,IAAd,CAAP;AACH,KAbM,EAaJ,EAbI,CAAP;AAcH,GA5BD;AA6BH,CA/BD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
      "sourcesContent": [
        "const pagination = require('hexo-pagination');\n\nmodule.exports = function (hexo) {\n    // ATTENTION: This will override the default category generator!\n    hexo.extend.generator.register('category', function(locals) {\n        const config = this.config;\n        const perPage = config.category_generator.per_page;\n        const paginationDir = config.pagination_dir || 'page';\n\n        function findParent(category) {\n            let parents = [];\n            if (category && category.hasOwnProperty('parent')) {\n                const parent = locals.categories.filter(cat => cat._id === category.parent).first();\n                parents = [parent].concat(findParent(parent));\n            }\n            return parents;\n        }\n        \n        return locals.categories.reduce(function(result, category){\n            const posts = category.posts.sort('-date');\n            const data = pagination(category.path, posts, {\n                perPage: perPage,\n                layout: ['category', 'archive', 'index'],\n                format: paginationDir + '/%d/',\n                data: {\n                    category: category.name,\n                    parents: findParent(category)\n                }\n            });\n        \n            return result.concat(data);\n        }, []);\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525713
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/generators\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/generators/tags.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/generators/tags.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/generators/tags.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/generators/tags.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
        "sourceFileName": "tags.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Tag list page generator\n */\nmodule.exports = function (hexo) {\n  hexo.extend.generator.register('tags', function (locals) {\n    return {\n      path: 'tags/',\n      layout: ['tags'],\n      data: Object.assign({}, locals, {\n        __tags: true\n      })\n    };\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhZ3MuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImhleG8iLCJleHRlbmQiLCJnZW5lcmF0b3IiLCJyZWdpc3RlciIsImxvY2FscyIsInBhdGgiLCJsYXlvdXQiLCJkYXRhIiwiT2JqZWN0IiwiYXNzaWduIiwiX190YWdzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7QUFHQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVVDLElBQVYsRUFBZ0I7QUFDN0JBLEVBQUFBLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxTQUFaLENBQXNCQyxRQUF0QixDQUErQixNQUEvQixFQUF1QyxVQUFVQyxNQUFWLEVBQWtCO0FBQ3JELFdBQU87QUFDSEMsTUFBQUEsSUFBSSxFQUFFLE9BREg7QUFFSEMsTUFBQUEsTUFBTSxFQUFFLENBQUMsTUFBRCxDQUZMO0FBR0hDLE1BQUFBLElBQUksRUFBRUMsTUFBTSxDQUFDQyxNQUFQLENBQWMsRUFBZCxFQUFrQkwsTUFBbEIsRUFBMEI7QUFDNUJNLFFBQUFBLE1BQU0sRUFBRTtBQURvQixPQUExQjtBQUhILEtBQVA7QUFPSCxHQVJEO0FBU0gsQ0FWRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvZ2VuZXJhdG9ycyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGFnIGxpc3QgcGFnZSBnZW5lcmF0b3JcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaGV4bykge1xuICAgIGhleG8uZXh0ZW5kLmdlbmVyYXRvci5yZWdpc3RlcigndGFncycsIGZ1bmN0aW9uIChsb2NhbHMpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHBhdGg6ICd0YWdzLycsXG4gICAgICAgICAgICBsYXlvdXQ6IFsndGFncyddLFxuICAgICAgICAgICAgZGF0YTogT2JqZWN0LmFzc2lnbih7fSwgbG9jYWxzLCB7XG4gICAgICAgICAgICAgICAgX190YWdzOiB0cnVlXG4gICAgICAgICAgICB9KVxuICAgICAgICB9O1xuICAgIH0pO1xufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "tags.js"
      ],
      "names": [
        "module",
        "exports",
        "hexo",
        "extend",
        "generator",
        "register",
        "locals",
        "path",
        "layout",
        "data",
        "Object",
        "assign",
        "__tags"
      ],
      "mappings": ";;AAAA;;;AAGAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,SAAZ,CAAsBC,QAAtB,CAA+B,MAA/B,EAAuC,UAAUC,MAAV,EAAkB;AACrD,WAAO;AACHC,MAAAA,IAAI,EAAE,OADH;AAEHC,MAAAA,MAAM,EAAE,CAAC,MAAD,CAFL;AAGHC,MAAAA,IAAI,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAlB,EAA0B;AAC5BM,QAAAA,MAAM,EAAE;AADoB,OAA1B;AAHH,KAAP;AAOH,GARD;AASH,CAVD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
      "sourcesContent": [
        "/**\n * Tag list page generator\n */\nmodule.exports = function (hexo) {\n    hexo.extend.generator.register('tags', function (locals) {\n        return {\n            path: 'tags/',\n            layout: ['tags'],\n            data: Object.assign({}, locals, {\n                __tags: true\n            })\n        };\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525713
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/generators\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/generators/insight.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/generators/insight.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/generators/insight.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/generators/insight.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
        "sourceFileName": "insight.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar util = require('hexo-util');\n/**\n * Insight search content.json generator.\n */\n\n\nmodule.exports = function (hexo) {\n  hexo.extend.generator.register('insight', function (locals) {\n    var url_for = hexo.extend.helper.get('url_for').bind(this);\n\n    function minify(str) {\n      return util.stripHTML(str).trim().replace(/\\n/g, ' ').replace(/\\s+/g, ' ').replace(/&#x([\\da-fA-F]+);/g, function (match, hex) {\n        return String.fromCharCode(parseInt(hex, 16));\n      }).replace(/&#([\\d]+);/g, function (match, dec) {\n        return String.fromCharCode(dec);\n      });\n    }\n\n    function postMapper(post) {\n      return {\n        title: post.title,\n        text: minify(post.content),\n        link: url_for(post.path)\n      };\n    }\n\n    function tagMapper(tag) {\n      return {\n        name: tag.name,\n        slug: tag.slug,\n        link: url_for(tag.path)\n      };\n    }\n\n    var site = {\n      pages: locals.pages.map(postMapper),\n      posts: locals.posts.map(postMapper),\n      tags: locals.tags.map(tagMapper),\n      categories: locals.categories.map(tagMapper)\n    };\n    return {\n      path: '/content.json',\n      data: JSON.stringify(site)\n    };\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluc2lnaHQuanMiXSwibmFtZXMiOlsidXRpbCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiaGV4byIsImV4dGVuZCIsImdlbmVyYXRvciIsInJlZ2lzdGVyIiwibG9jYWxzIiwidXJsX2ZvciIsImhlbHBlciIsImdldCIsImJpbmQiLCJtaW5pZnkiLCJzdHIiLCJzdHJpcEhUTUwiLCJ0cmltIiwicmVwbGFjZSIsIm1hdGNoIiwiaGV4IiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwicGFyc2VJbnQiLCJkZWMiLCJwb3N0TWFwcGVyIiwicG9zdCIsInRpdGxlIiwidGV4dCIsImNvbnRlbnQiLCJsaW5rIiwicGF0aCIsInRhZ01hcHBlciIsInRhZyIsIm5hbWUiLCJzbHVnIiwic2l0ZSIsInBhZ2VzIiwibWFwIiwicG9zdHMiLCJ0YWdzIiwiY2F0ZWdvcmllcyIsImRhdGEiLCJKU09OIiwic3RyaW5naWZ5Il0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBcEI7QUFFQTs7Ozs7QUFHQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVVDLElBQVYsRUFBZ0I7QUFDN0JBLEVBQUFBLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxTQUFaLENBQXNCQyxRQUF0QixDQUErQixTQUEvQixFQUEwQyxVQUFVQyxNQUFWLEVBQWtCO0FBQ3hELFFBQU1DLE9BQU8sR0FBR0wsSUFBSSxDQUFDQyxNQUFMLENBQVlLLE1BQVosQ0FBbUJDLEdBQW5CLENBQXVCLFNBQXZCLEVBQWtDQyxJQUFsQyxDQUF1QyxJQUF2QyxDQUFoQjs7QUFDQSxhQUFTQyxNQUFULENBQWdCQyxHQUFoQixFQUFxQjtBQUNqQixhQUFPZCxJQUFJLENBQUNlLFNBQUwsQ0FBZUQsR0FBZixFQUFvQkUsSUFBcEIsR0FBMkJDLE9BQTNCLENBQW1DLEtBQW5DLEVBQTBDLEdBQTFDLEVBQStDQSxPQUEvQyxDQUF1RCxNQUF2RCxFQUErRCxHQUEvRCxFQUNGQSxPQURFLENBQ00sb0JBRE4sRUFDNEIsVUFBVUMsS0FBVixFQUFpQkMsR0FBakIsRUFBc0I7QUFDakQsZUFBT0MsTUFBTSxDQUFDQyxZQUFQLENBQW9CQyxRQUFRLENBQUNILEdBQUQsRUFBTSxFQUFOLENBQTVCLENBQVA7QUFDSCxPQUhFLEVBSUZGLE9BSkUsQ0FJTSxhQUpOLEVBSXFCLFVBQVVDLEtBQVYsRUFBaUJLLEdBQWpCLEVBQXNCO0FBQzFDLGVBQU9ILE1BQU0sQ0FBQ0MsWUFBUCxDQUFvQkUsR0FBcEIsQ0FBUDtBQUNILE9BTkUsQ0FBUDtBQU9IOztBQUNELGFBQVNDLFVBQVQsQ0FBb0JDLElBQXBCLEVBQTBCO0FBQ3RCLGFBQU87QUFDSEMsUUFBQUEsS0FBSyxFQUFFRCxJQUFJLENBQUNDLEtBRFQ7QUFFSEMsUUFBQUEsSUFBSSxFQUFFZCxNQUFNLENBQUNZLElBQUksQ0FBQ0csT0FBTixDQUZUO0FBR0hDLFFBQUFBLElBQUksRUFBRXBCLE9BQU8sQ0FBQ2dCLElBQUksQ0FBQ0ssSUFBTjtBQUhWLE9BQVA7QUFLSDs7QUFDRCxhQUFTQyxTQUFULENBQW1CQyxHQUFuQixFQUF3QjtBQUNwQixhQUFPO0FBQ0hDLFFBQUFBLElBQUksRUFBRUQsR0FBRyxDQUFDQyxJQURQO0FBRUhDLFFBQUFBLElBQUksRUFBRUYsR0FBRyxDQUFDRSxJQUZQO0FBR0hMLFFBQUFBLElBQUksRUFBRXBCLE9BQU8sQ0FBQ3VCLEdBQUcsQ0FBQ0YsSUFBTDtBQUhWLE9BQVA7QUFLSDs7QUFDRCxRQUFNSyxJQUFJLEdBQUc7QUFDVEMsTUFBQUEsS0FBSyxFQUFFNUIsTUFBTSxDQUFDNEIsS0FBUCxDQUFhQyxHQUFiLENBQWlCYixVQUFqQixDQURFO0FBRVRjLE1BQUFBLEtBQUssRUFBRTlCLE1BQU0sQ0FBQzhCLEtBQVAsQ0FBYUQsR0FBYixDQUFpQmIsVUFBakIsQ0FGRTtBQUdUZSxNQUFBQSxJQUFJLEVBQUUvQixNQUFNLENBQUMrQixJQUFQLENBQVlGLEdBQVosQ0FBZ0JOLFNBQWhCLENBSEc7QUFJVFMsTUFBQUEsVUFBVSxFQUFFaEMsTUFBTSxDQUFDZ0MsVUFBUCxDQUFrQkgsR0FBbEIsQ0FBc0JOLFNBQXRCO0FBSkgsS0FBYjtBQU1BLFdBQU87QUFDSEQsTUFBQUEsSUFBSSxFQUFFLGVBREg7QUFFSFcsTUFBQUEsSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQUwsQ0FBZVIsSUFBZjtBQUZILEtBQVA7QUFJSCxHQW5DRDtBQW9DSCxDQXJDRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9jb2Rpbmcvd29ya3NwYWNlL3RoZW1lcy9pY2FydXMvaW5jbHVkZXMvZ2VuZXJhdG9ycyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHV0aWwgPSByZXF1aXJlKCdoZXhvLXV0aWwnKTtcblxuLyoqXG4gKiBJbnNpZ2h0IHNlYXJjaCBjb250ZW50Lmpzb24gZ2VuZXJhdG9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChoZXhvKSB7XG4gICAgaGV4by5leHRlbmQuZ2VuZXJhdG9yLnJlZ2lzdGVyKCdpbnNpZ2h0JywgZnVuY3Rpb24gKGxvY2Fscykge1xuICAgICAgICBjb25zdCB1cmxfZm9yID0gaGV4by5leHRlbmQuaGVscGVyLmdldCgndXJsX2ZvcicpLmJpbmQodGhpcyk7XG4gICAgICAgIGZ1bmN0aW9uIG1pbmlmeShzdHIpIHtcbiAgICAgICAgICAgIHJldHVybiB1dGlsLnN0cmlwSFRNTChzdHIpLnRyaW0oKS5yZXBsYWNlKC9cXG4vZywgJyAnKS5yZXBsYWNlKC9cXHMrL2csICcgJylcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgvJiN4KFtcXGRhLWZBLUZdKyk7L2csIGZ1bmN0aW9uIChtYXRjaCwgaGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKHBhcnNlSW50KGhleCwgMTYpKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKC8mIyhbXFxkXSspOy9nLCBmdW5jdGlvbiAobWF0Y2gsIGRlYykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShkZWMpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHBvc3RNYXBwZXIocG9zdCkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogcG9zdC50aXRsZSxcbiAgICAgICAgICAgICAgICB0ZXh0OiBtaW5pZnkocG9zdC5jb250ZW50KSxcbiAgICAgICAgICAgICAgICBsaW5rOiB1cmxfZm9yKHBvc3QucGF0aClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiB0YWdNYXBwZXIodGFnKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG5hbWU6IHRhZy5uYW1lLFxuICAgICAgICAgICAgICAgIHNsdWc6IHRhZy5zbHVnLFxuICAgICAgICAgICAgICAgIGxpbms6IHVybF9mb3IodGFnLnBhdGgpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2l0ZSA9IHtcbiAgICAgICAgICAgIHBhZ2VzOiBsb2NhbHMucGFnZXMubWFwKHBvc3RNYXBwZXIpLFxuICAgICAgICAgICAgcG9zdHM6IGxvY2Fscy5wb3N0cy5tYXAocG9zdE1hcHBlciksXG4gICAgICAgICAgICB0YWdzOiBsb2NhbHMudGFncy5tYXAodGFnTWFwcGVyKSxcbiAgICAgICAgICAgIGNhdGVnb3JpZXM6IGxvY2Fscy5jYXRlZ29yaWVzLm1hcCh0YWdNYXBwZXIpXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwYXRoOiAnL2NvbnRlbnQuanNvbicsXG4gICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShzaXRlKVxuICAgICAgICB9O1xuICAgIH0pO1xufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "insight.js"
      ],
      "names": [
        "util",
        "require",
        "module",
        "exports",
        "hexo",
        "extend",
        "generator",
        "register",
        "locals",
        "url_for",
        "helper",
        "get",
        "bind",
        "minify",
        "str",
        "stripHTML",
        "trim",
        "replace",
        "match",
        "hex",
        "String",
        "fromCharCode",
        "parseInt",
        "dec",
        "postMapper",
        "post",
        "title",
        "text",
        "content",
        "link",
        "path",
        "tagMapper",
        "tag",
        "name",
        "slug",
        "site",
        "pages",
        "map",
        "posts",
        "tags",
        "categories",
        "data",
        "JSON",
        "stringify"
      ],
      "mappings": ";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB;AAEA;;;;;AAGAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,SAAZ,CAAsBC,QAAtB,CAA+B,SAA/B,EAA0C,UAAUC,MAAV,EAAkB;AACxD,QAAMC,OAAO,GAAGL,IAAI,CAACC,MAAL,CAAYK,MAAZ,CAAmBC,GAAnB,CAAuB,SAAvB,EAAkCC,IAAlC,CAAuC,IAAvC,CAAhB;;AACA,aAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACjB,aAAOd,IAAI,CAACe,SAAL,CAAeD,GAAf,EAAoBE,IAApB,GAA2BC,OAA3B,CAAmC,KAAnC,EAA0C,GAA1C,EAA+CA,OAA/C,CAAuD,MAAvD,EAA+D,GAA/D,EACFA,OADE,CACM,oBADN,EAC4B,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACjD,eAAOC,MAAM,CAACC,YAAP,CAAoBC,QAAQ,CAACH,GAAD,EAAM,EAAN,CAA5B,CAAP;AACH,OAHE,EAIFF,OAJE,CAIM,aAJN,EAIqB,UAAUC,KAAV,EAAiBK,GAAjB,EAAsB;AAC1C,eAAOH,MAAM,CAACC,YAAP,CAAoBE,GAApB,CAAP;AACH,OANE,CAAP;AAOH;;AACD,aAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,aAAO;AACHC,QAAAA,KAAK,EAAED,IAAI,CAACC,KADT;AAEHC,QAAAA,IAAI,EAAEd,MAAM,CAACY,IAAI,CAACG,OAAN,CAFT;AAGHC,QAAAA,IAAI,EAAEpB,OAAO,CAACgB,IAAI,CAACK,IAAN;AAHV,OAAP;AAKH;;AACD,aAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACpB,aAAO;AACHC,QAAAA,IAAI,EAAED,GAAG,CAACC,IADP;AAEHC,QAAAA,IAAI,EAAEF,GAAG,CAACE,IAFP;AAGHL,QAAAA,IAAI,EAAEpB,OAAO,CAACuB,GAAG,CAACF,IAAL;AAHV,OAAP;AAKH;;AACD,QAAMK,IAAI,GAAG;AACTC,MAAAA,KAAK,EAAE5B,MAAM,CAAC4B,KAAP,CAAaC,GAAb,CAAiBb,UAAjB,CADE;AAETc,MAAAA,KAAK,EAAE9B,MAAM,CAAC8B,KAAP,CAAaD,GAAb,CAAiBb,UAAjB,CAFE;AAGTe,MAAAA,IAAI,EAAE/B,MAAM,CAAC+B,IAAP,CAAYF,GAAZ,CAAgBN,SAAhB,CAHG;AAITS,MAAAA,UAAU,EAAEhC,MAAM,CAACgC,UAAP,CAAkBH,GAAlB,CAAsBN,SAAtB;AAJH,KAAb;AAMA,WAAO;AACHD,MAAAA,IAAI,EAAE,eADH;AAEHW,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAFH,KAAP;AAIH,GAnCD;AAoCH,CArCD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/generators",
      "sourcesContent": [
        "const util = require('hexo-util');\n\n/**\n * Insight search content.json generator.\n */\nmodule.exports = function (hexo) {\n    hexo.extend.generator.register('insight', function (locals) {\n        const url_for = hexo.extend.helper.get('url_for').bind(this);\n        function minify(str) {\n            return util.stripHTML(str).trim().replace(/\\n/g, ' ').replace(/\\s+/g, ' ')\n                .replace(/&#x([\\da-fA-F]+);/g, function (match, hex) {\n                    return String.fromCharCode(parseInt(hex, 16));\n                })\n                .replace(/&#([\\d]+);/g, function (match, dec) {\n                    return String.fromCharCode(dec);\n                });\n        }\n        function postMapper(post) {\n            return {\n                title: post.title,\n                text: minify(post.content),\n                link: url_for(post.path)\n            }\n        }\n        function tagMapper(tag) {\n            return {\n                name: tag.name,\n                slug: tag.slug,\n                link: url_for(tag.path)\n            }\n        }\n        const site = {\n            pages: locals.pages.map(postMapper),\n            posts: locals.posts.map(postMapper),\n            tags: locals.tags.map(tagMapper),\n            categories: locals.categories.map(tagMapper)\n        };\n        return {\n            path: '/content.json',\n            data: JSON.stringify(site)\n        };\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525713
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/helpers/cdn.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/helpers/cdn.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/helpers/cdn.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/helpers/cdn.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
        "sourceFileName": "cdn.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * CDN static file resolvers.\n *\n * @example\n *     <%- cdn(package, version, filename) %>\n *     <%- fontcdn(fontName) %>\n *     <%- iconcdn() %>\n */\nvar cdn_providers = {\n  cdnjs: 'https://cdnjs.loli.net/ajax/libs/${ package }/${ version }/${ filename }',\n  jsdelivr: 'https://cdn.jsdelivr.net/npm/${ package }@${ version }/${ filename }',\n  unpkg: 'https://unpkg.com/${ package }@${ version }/${ filename }'\n};\nvar font_providers = {\n  google: 'https://fonts.loli.net/${ type }?family=${ fontname }'\n};\nvar icon_providers = {\n  fontawesome: 'https://cdn.staticfile.org/font-awesome/5.4.1/css/all.css'\n};\n\nmodule.exports = function (hexo) {\n  hexo.extend.helper.register('cdn', function (_package, version, filename) {\n    var provider = hexo.extend.helper.get('get_config').bind(this)('providers.cdn'); // cdn.js does not follow a GitHub npm style like jsdeliver and unpkg do. Patch it!\n\n    if (provider === 'cdnjs' || provider.startsWith('[cdnjs]')) {\n      if (provider.startsWith('[cdnjs]')) {\n        provider = provider.substr(7);\n      }\n\n      if (filename.startsWith('dist/')) {\n        filename = filename.substr(5);\n      }\n\n      if (_package === 'moment') {\n        _package = 'moment.js';\n        filename = filename.startsWith('min/') ? filename.substr(4) : filename;\n      }\n\n      if (_package === 'outdatedbrowser') {\n        _package = 'outdated-browser';\n        filename = filename.startsWith('outdatedbrowser/') ? filename.substr(16) : filename;\n      }\n\n      if (_package === 'highlight.js') {\n        filename = filename.endsWith('.css') && filename.indexOf('.min.') === -1 ? filename.substr(0, filename.length - 4) + '.min.css' : filename;\n      }\n\n      if (_package === 'mathjax') {\n        filename = filename.startsWith('unpacked/') ? filename.substr(9) : filename;\n      }\n\n      if (_package === 'pace-js') {\n        _package = 'pace';\n      }\n\n      if (_package === 'clipboard') {\n        _package = 'clipboard.js';\n      }\n    }\n\n    if (provider !== null && cdn_providers.hasOwnProperty(provider)) {\n      provider = cdn_providers[provider];\n    }\n\n    return provider.replace(/\\${\\s*package\\s*}/gi, _package).replace(/\\${\\s*version\\s*}/gi, version).replace(/\\${\\s*filename\\s*}/gi, filename);\n  });\n  hexo.extend.helper.register('fontcdn', function (fontName) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'css';\n    var provider = hexo.extend.helper.get('get_config').bind(this)('providers.fontcdn');\n\n    if (provider !== null && font_providers.hasOwnProperty(provider)) {\n      provider = font_providers[provider];\n    }\n\n    return provider.replace(/\\${\\s*fontname\\s*}/gi, fontName).replace(/\\${\\s*type\\s*}/gi, type);\n  });\n  hexo.extend.helper.register('iconcdn', function () {\n    var provider = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    if (provider !== null && icon_providers.hasOwnProperty(provider)) {\n      provider = icon_providers[provider];\n    } else {\n      provider = hexo.extend.helper.get('get_config').bind(this)('providers.iconcdn');\n\n      if (provider !== null && icon_providers.hasOwnProperty(provider)) {\n        provider = icon_providers[provider];\n      }\n    }\n\n    return provider;\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNkbi5qcyJdLCJuYW1lcyI6WyJjZG5fcHJvdmlkZXJzIiwiY2RuanMiLCJqc2RlbGl2ciIsInVucGtnIiwiZm9udF9wcm92aWRlcnMiLCJnb29nbGUiLCJpY29uX3Byb3ZpZGVycyIsImZvbnRhd2Vzb21lIiwibW9kdWxlIiwiZXhwb3J0cyIsImhleG8iLCJleHRlbmQiLCJoZWxwZXIiLCJyZWdpc3RlciIsIl9wYWNrYWdlIiwidmVyc2lvbiIsImZpbGVuYW1lIiwicHJvdmlkZXIiLCJnZXQiLCJiaW5kIiwic3RhcnRzV2l0aCIsInN1YnN0ciIsImVuZHNXaXRoIiwiaW5kZXhPZiIsImxlbmd0aCIsImhhc093blByb3BlcnR5IiwicmVwbGFjZSIsImZvbnROYW1lIiwidHlwZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7QUFRQSxJQUFNQSxhQUFhLEdBQUc7QUFDbEJDLEVBQUFBLEtBQUssRUFBRSwwRUFEVztBQUVsQkMsRUFBQUEsUUFBUSxFQUFFLHNFQUZRO0FBR2xCQyxFQUFBQSxLQUFLLEVBQUU7QUFIVyxDQUF0QjtBQU1BLElBQU1DLGNBQWMsR0FBRztBQUNuQkMsRUFBQUEsTUFBTSxFQUFFO0FBRFcsQ0FBdkI7QUFJQSxJQUFNQyxjQUFjLEdBQUc7QUFDbkJDLEVBQUFBLFdBQVcsRUFBRTtBQURNLENBQXZCOztBQUlBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsSUFBVixFQUFnQjtBQUM3QkEsRUFBQUEsSUFBSSxDQUFDQyxNQUFMLENBQVlDLE1BQVosQ0FBbUJDLFFBQW5CLENBQTRCLEtBQTVCLEVBQW1DLFVBQVVDLFFBQVYsRUFBb0JDLE9BQXBCLEVBQTZCQyxRQUE3QixFQUF1QztBQUN0RSxRQUFJQyxRQUFRLEdBQUdQLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxNQUFaLENBQW1CTSxHQUFuQixDQUF1QixZQUF2QixFQUFxQ0MsSUFBckMsQ0FBMEMsSUFBMUMsRUFBZ0QsZUFBaEQsQ0FBZixDQURzRSxDQUV0RTs7QUFDQSxRQUFJRixRQUFRLEtBQUssT0FBYixJQUF3QkEsUUFBUSxDQUFDRyxVQUFULENBQW9CLFNBQXBCLENBQTVCLEVBQTREO0FBQ3hELFVBQUlILFFBQVEsQ0FBQ0csVUFBVCxDQUFvQixTQUFwQixDQUFKLEVBQW9DO0FBQ2hDSCxRQUFBQSxRQUFRLEdBQUdBLFFBQVEsQ0FBQ0ksTUFBVCxDQUFnQixDQUFoQixDQUFYO0FBQ0g7O0FBQ0QsVUFBSUwsUUFBUSxDQUFDSSxVQUFULENBQW9CLE9BQXBCLENBQUosRUFBa0M7QUFDOUJKLFFBQUFBLFFBQVEsR0FBR0EsUUFBUSxDQUFDSyxNQUFULENBQWdCLENBQWhCLENBQVg7QUFDSDs7QUFDRCxVQUFJUCxRQUFRLEtBQUssUUFBakIsRUFBMkI7QUFDdkJBLFFBQUFBLFFBQVEsR0FBRyxXQUFYO0FBQ0FFLFFBQUFBLFFBQVEsR0FBR0EsUUFBUSxDQUFDSSxVQUFULENBQW9CLE1BQXBCLElBQThCSixRQUFRLENBQUNLLE1BQVQsQ0FBZ0IsQ0FBaEIsQ0FBOUIsR0FBbURMLFFBQTlEO0FBQ0g7O0FBQ0QsVUFBSUYsUUFBUSxLQUFLLGlCQUFqQixFQUFvQztBQUNoQ0EsUUFBQUEsUUFBUSxHQUFHLGtCQUFYO0FBQ0FFLFFBQUFBLFFBQVEsR0FBR0EsUUFBUSxDQUFDSSxVQUFULENBQW9CLGtCQUFwQixJQUEwQ0osUUFBUSxDQUFDSyxNQUFULENBQWdCLEVBQWhCLENBQTFDLEdBQWdFTCxRQUEzRTtBQUNIOztBQUNELFVBQUlGLFFBQVEsS0FBSyxjQUFqQixFQUFpQztBQUM3QkUsUUFBQUEsUUFBUSxHQUFHQSxRQUFRLENBQUNNLFFBQVQsQ0FBa0IsTUFBbEIsS0FBNkJOLFFBQVEsQ0FBQ08sT0FBVCxDQUFpQixPQUFqQixNQUE4QixDQUFDLENBQTVELEdBQ1BQLFFBQVEsQ0FBQ0ssTUFBVCxDQUFnQixDQUFoQixFQUFtQkwsUUFBUSxDQUFDUSxNQUFULEdBQWtCLENBQXJDLElBQTBDLFVBRG5DLEdBQ2dEUixRQUQzRDtBQUVIOztBQUNELFVBQUlGLFFBQVEsS0FBSyxTQUFqQixFQUE0QjtBQUN4QkUsUUFBQUEsUUFBUSxHQUFHQSxRQUFRLENBQUNJLFVBQVQsQ0FBb0IsV0FBcEIsSUFBbUNKLFFBQVEsQ0FBQ0ssTUFBVCxDQUFnQixDQUFoQixDQUFuQyxHQUF3REwsUUFBbkU7QUFDSDs7QUFDRCxVQUFJRixRQUFRLEtBQUssU0FBakIsRUFBNEI7QUFDeEJBLFFBQUFBLFFBQVEsR0FBRyxNQUFYO0FBQ0g7O0FBQ0QsVUFBSUEsUUFBUSxLQUFLLFdBQWpCLEVBQThCO0FBQzFCQSxRQUFBQSxRQUFRLEdBQUcsY0FBWDtBQUNIO0FBQ0o7O0FBQ0QsUUFBSUcsUUFBUSxLQUFLLElBQWIsSUFBcUJqQixhQUFhLENBQUN5QixjQUFkLENBQTZCUixRQUE3QixDQUF6QixFQUFpRTtBQUM3REEsTUFBQUEsUUFBUSxHQUFHakIsYUFBYSxDQUFDaUIsUUFBRCxDQUF4QjtBQUNIOztBQUNELFdBQU9BLFFBQVEsQ0FBQ1MsT0FBVCxDQUFpQixxQkFBakIsRUFBd0NaLFFBQXhDLEVBQ0ZZLE9BREUsQ0FDTSxxQkFETixFQUM2QlgsT0FEN0IsRUFFRlcsT0FGRSxDQUVNLHNCQUZOLEVBRThCVixRQUY5QixDQUFQO0FBR0gsR0F0Q0Q7QUF3Q0FOLEVBQUFBLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxNQUFaLENBQW1CQyxRQUFuQixDQUE0QixTQUE1QixFQUF1QyxVQUFVYyxRQUFWLEVBQWtDO0FBQUEsUUFBZEMsSUFBYyx1RUFBUCxLQUFPO0FBQ3JFLFFBQUlYLFFBQVEsR0FBR1AsSUFBSSxDQUFDQyxNQUFMLENBQVlDLE1BQVosQ0FBbUJNLEdBQW5CLENBQXVCLFlBQXZCLEVBQXFDQyxJQUFyQyxDQUEwQyxJQUExQyxFQUFnRCxtQkFBaEQsQ0FBZjs7QUFDQSxRQUFJRixRQUFRLEtBQUssSUFBYixJQUFxQmIsY0FBYyxDQUFDcUIsY0FBZixDQUE4QlIsUUFBOUIsQ0FBekIsRUFBa0U7QUFDOURBLE1BQUFBLFFBQVEsR0FBR2IsY0FBYyxDQUFDYSxRQUFELENBQXpCO0FBQ0g7O0FBQ0QsV0FBT0EsUUFBUSxDQUFDUyxPQUFULENBQWlCLHNCQUFqQixFQUF5Q0MsUUFBekMsRUFDRkQsT0FERSxDQUNNLGtCQUROLEVBQzBCRSxJQUQxQixDQUFQO0FBRUgsR0FQRDtBQVNBbEIsRUFBQUEsSUFBSSxDQUFDQyxNQUFMLENBQVlDLE1BQVosQ0FBbUJDLFFBQW5CLENBQTRCLFNBQTVCLEVBQXVDLFlBQTJCO0FBQUEsUUFBakJJLFFBQWlCLHVFQUFOLElBQU07O0FBQzlELFFBQUlBLFFBQVEsS0FBSyxJQUFiLElBQXFCWCxjQUFjLENBQUNtQixjQUFmLENBQThCUixRQUE5QixDQUF6QixFQUFrRTtBQUM5REEsTUFBQUEsUUFBUSxHQUFHWCxjQUFjLENBQUNXLFFBQUQsQ0FBekI7QUFDSCxLQUZELE1BRU87QUFDSEEsTUFBQUEsUUFBUSxHQUFHUCxJQUFJLENBQUNDLE1BQUwsQ0FBWUMsTUFBWixDQUFtQk0sR0FBbkIsQ0FBdUIsWUFBdkIsRUFBcUNDLElBQXJDLENBQTBDLElBQTFDLEVBQWdELG1CQUFoRCxDQUFYOztBQUNBLFVBQUlGLFFBQVEsS0FBSyxJQUFiLElBQXFCWCxjQUFjLENBQUNtQixjQUFmLENBQThCUixRQUE5QixDQUF6QixFQUFrRTtBQUM5REEsUUFBQUEsUUFBUSxHQUFHWCxjQUFjLENBQUNXLFFBQUQsQ0FBekI7QUFDSDtBQUNKOztBQUNELFdBQU9BLFFBQVA7QUFDSCxHQVZEO0FBV0gsQ0E3REQiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2luY2x1ZGVzL2hlbHBlcnMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENETiBzdGF0aWMgZmlsZSByZXNvbHZlcnMuXG4gKlxuICogQGV4YW1wbGVcbiAqICAgICA8JS0gY2RuKHBhY2thZ2UsIHZlcnNpb24sIGZpbGVuYW1lKSAlPlxuICogICAgIDwlLSBmb250Y2RuKGZvbnROYW1lKSAlPlxuICogICAgIDwlLSBpY29uY2RuKCkgJT5cbiAqL1xuY29uc3QgY2RuX3Byb3ZpZGVycyA9IHtcbiAgICBjZG5qczogJ2h0dHBzOi8vY2RuanMubG9saS5uZXQvYWpheC9saWJzLyR7IHBhY2thZ2UgfS8keyB2ZXJzaW9uIH0vJHsgZmlsZW5hbWUgfScsXG4gICAganNkZWxpdnI6ICdodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtLyR7IHBhY2thZ2UgfUAkeyB2ZXJzaW9uIH0vJHsgZmlsZW5hbWUgfScsXG4gICAgdW5wa2c6ICdodHRwczovL3VucGtnLmNvbS8keyBwYWNrYWdlIH1AJHsgdmVyc2lvbiB9LyR7IGZpbGVuYW1lIH0nXG59O1xuXG5jb25zdCBmb250X3Byb3ZpZGVycyA9IHtcbiAgICBnb29nbGU6ICdodHRwczovL2ZvbnRzLmxvbGkubmV0LyR7IHR5cGUgfT9mYW1pbHk9JHsgZm9udG5hbWUgfSdcbn07XG5cbmNvbnN0IGljb25fcHJvdmlkZXJzID0ge1xuICAgIGZvbnRhd2Vzb21lOiAnaHR0cHM6Ly9jZG4uc3RhdGljZmlsZS5vcmcvZm9udC1hd2Vzb21lLzUuNC4xL2Nzcy9hbGwuY3NzJ1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaGV4bykge1xuICAgIGhleG8uZXh0ZW5kLmhlbHBlci5yZWdpc3RlcignY2RuJywgZnVuY3Rpb24gKF9wYWNrYWdlLCB2ZXJzaW9uLCBmaWxlbmFtZSkge1xuICAgICAgICBsZXQgcHJvdmlkZXIgPSBoZXhvLmV4dGVuZC5oZWxwZXIuZ2V0KCdnZXRfY29uZmlnJykuYmluZCh0aGlzKSgncHJvdmlkZXJzLmNkbicpO1xuICAgICAgICAvLyBjZG4uanMgZG9lcyBub3QgZm9sbG93IGEgR2l0SHViIG5wbSBzdHlsZSBsaWtlIGpzZGVsaXZlciBhbmQgdW5wa2cgZG8uIFBhdGNoIGl0IVxuICAgICAgICBpZiAocHJvdmlkZXIgPT09ICdjZG5qcycgfHwgcHJvdmlkZXIuc3RhcnRzV2l0aCgnW2NkbmpzXScpKSB7XG4gICAgICAgICAgICBpZiAocHJvdmlkZXIuc3RhcnRzV2l0aCgnW2NkbmpzXScpKSB7XG4gICAgICAgICAgICAgICAgcHJvdmlkZXIgPSBwcm92aWRlci5zdWJzdHIoNyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZmlsZW5hbWUuc3RhcnRzV2l0aCgnZGlzdC8nKSkge1xuICAgICAgICAgICAgICAgIGZpbGVuYW1lID0gZmlsZW5hbWUuc3Vic3RyKDUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKF9wYWNrYWdlID09PSAnbW9tZW50Jykge1xuICAgICAgICAgICAgICAgIF9wYWNrYWdlID0gJ21vbWVudC5qcyc7XG4gICAgICAgICAgICAgICAgZmlsZW5hbWUgPSBmaWxlbmFtZS5zdGFydHNXaXRoKCdtaW4vJykgPyBmaWxlbmFtZS5zdWJzdHIoNCkgOiBmaWxlbmFtZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChfcGFja2FnZSA9PT0gJ291dGRhdGVkYnJvd3NlcicpIHtcbiAgICAgICAgICAgICAgICBfcGFja2FnZSA9ICdvdXRkYXRlZC1icm93c2VyJztcbiAgICAgICAgICAgICAgICBmaWxlbmFtZSA9IGZpbGVuYW1lLnN0YXJ0c1dpdGgoJ291dGRhdGVkYnJvd3Nlci8nKSA/IGZpbGVuYW1lLnN1YnN0cigxNikgOiBmaWxlbmFtZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChfcGFja2FnZSA9PT0gJ2hpZ2hsaWdodC5qcycpIHtcbiAgICAgICAgICAgICAgICBmaWxlbmFtZSA9IGZpbGVuYW1lLmVuZHNXaXRoKCcuY3NzJykgJiYgZmlsZW5hbWUuaW5kZXhPZignLm1pbi4nKSA9PT0gLTEgP1xuICAgICAgICAgICAgICAgICAgICBmaWxlbmFtZS5zdWJzdHIoMCwgZmlsZW5hbWUubGVuZ3RoIC0gNCkgKyAnLm1pbi5jc3MnIDogZmlsZW5hbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoX3BhY2thZ2UgPT09ICdtYXRoamF4Jykge1xuICAgICAgICAgICAgICAgIGZpbGVuYW1lID0gZmlsZW5hbWUuc3RhcnRzV2l0aCgndW5wYWNrZWQvJykgPyBmaWxlbmFtZS5zdWJzdHIoOSkgOiBmaWxlbmFtZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChfcGFja2FnZSA9PT0gJ3BhY2UtanMnKSB7XG4gICAgICAgICAgICAgICAgX3BhY2thZ2UgPSAncGFjZSc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoX3BhY2thZ2UgPT09ICdjbGlwYm9hcmQnKSB7XG4gICAgICAgICAgICAgICAgX3BhY2thZ2UgPSAnY2xpcGJvYXJkLmpzJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvdmlkZXIgIT09IG51bGwgJiYgY2RuX3Byb3ZpZGVycy5oYXNPd25Qcm9wZXJ0eShwcm92aWRlcikpIHtcbiAgICAgICAgICAgIHByb3ZpZGVyID0gY2RuX3Byb3ZpZGVyc1twcm92aWRlcl07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHByb3ZpZGVyLnJlcGxhY2UoL1xcJHtcXHMqcGFja2FnZVxccyp9L2dpLCBfcGFja2FnZSlcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXCR7XFxzKnZlcnNpb25cXHMqfS9naSwgdmVyc2lvbilcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXCR7XFxzKmZpbGVuYW1lXFxzKn0vZ2ksIGZpbGVuYW1lKTtcbiAgICB9KTtcblxuICAgIGhleG8uZXh0ZW5kLmhlbHBlci5yZWdpc3RlcignZm9udGNkbicsIGZ1bmN0aW9uIChmb250TmFtZSwgdHlwZSA9ICdjc3MnKSB7XG4gICAgICAgIGxldCBwcm92aWRlciA9IGhleG8uZXh0ZW5kLmhlbHBlci5nZXQoJ2dldF9jb25maWcnKS5iaW5kKHRoaXMpKCdwcm92aWRlcnMuZm9udGNkbicpO1xuICAgICAgICBpZiAocHJvdmlkZXIgIT09IG51bGwgJiYgZm9udF9wcm92aWRlcnMuaGFzT3duUHJvcGVydHkocHJvdmlkZXIpKSB7XG4gICAgICAgICAgICBwcm92aWRlciA9IGZvbnRfcHJvdmlkZXJzW3Byb3ZpZGVyXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcHJvdmlkZXIucmVwbGFjZSgvXFwke1xccypmb250bmFtZVxccyp9L2dpLCBmb250TmFtZSlcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXCR7XFxzKnR5cGVcXHMqfS9naSwgdHlwZSk7XG4gICAgfSk7XG5cbiAgICBoZXhvLmV4dGVuZC5oZWxwZXIucmVnaXN0ZXIoJ2ljb25jZG4nLCBmdW5jdGlvbiAocHJvdmlkZXIgPSBudWxsKSB7XG4gICAgICAgIGlmIChwcm92aWRlciAhPT0gbnVsbCAmJiBpY29uX3Byb3ZpZGVycy5oYXNPd25Qcm9wZXJ0eShwcm92aWRlcikpIHtcbiAgICAgICAgICAgIHByb3ZpZGVyID0gaWNvbl9wcm92aWRlcnNbcHJvdmlkZXJdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcHJvdmlkZXIgPSBoZXhvLmV4dGVuZC5oZWxwZXIuZ2V0KCdnZXRfY29uZmlnJykuYmluZCh0aGlzKSgncHJvdmlkZXJzLmljb25jZG4nKTtcbiAgICAgICAgICAgIGlmIChwcm92aWRlciAhPT0gbnVsbCAmJiBpY29uX3Byb3ZpZGVycy5oYXNPd25Qcm9wZXJ0eShwcm92aWRlcikpIHtcbiAgICAgICAgICAgICAgICBwcm92aWRlciA9IGljb25fcHJvdmlkZXJzW3Byb3ZpZGVyXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcHJvdmlkZXI7XG4gICAgfSk7XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "cdn.js"
      ],
      "names": [
        "cdn_providers",
        "cdnjs",
        "jsdelivr",
        "unpkg",
        "font_providers",
        "google",
        "icon_providers",
        "fontawesome",
        "module",
        "exports",
        "hexo",
        "extend",
        "helper",
        "register",
        "_package",
        "version",
        "filename",
        "provider",
        "get",
        "bind",
        "startsWith",
        "substr",
        "endsWith",
        "indexOf",
        "length",
        "hasOwnProperty",
        "replace",
        "fontName",
        "type"
      ],
      "mappings": ";;AAAA;;;;;;;;AAQA,IAAMA,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,0EADW;AAElBC,EAAAA,QAAQ,EAAE,sEAFQ;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAAtB;AAMA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAAvB;AAIA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAAvB;;AAIAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,KAA5B,EAAmC,UAAUC,QAAV,EAAoBC,OAApB,EAA6BC,QAA7B,EAAuC;AACtE,QAAIC,QAAQ,GAAGP,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBM,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,EAAgD,eAAhD,CAAf,CADsE,CAEtE;;AACA,QAAIF,QAAQ,KAAK,OAAb,IAAwBA,QAAQ,CAACG,UAAT,CAAoB,SAApB,CAA5B,EAA4D;AACxD,UAAIH,QAAQ,CAACG,UAAT,CAAoB,SAApB,CAAJ,EAAoC;AAChCH,QAAAA,QAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgB,CAAhB,CAAX;AACH;;AACD,UAAIL,QAAQ,CAACI,UAAT,CAAoB,OAApB,CAAJ,EAAkC;AAC9BJ,QAAAA,QAAQ,GAAGA,QAAQ,CAACK,MAAT,CAAgB,CAAhB,CAAX;AACH;;AACD,UAAIP,QAAQ,KAAK,QAAjB,EAA2B;AACvBA,QAAAA,QAAQ,GAAG,WAAX;AACAE,QAAAA,QAAQ,GAAGA,QAAQ,CAACI,UAAT,CAAoB,MAApB,IAA8BJ,QAAQ,CAACK,MAAT,CAAgB,CAAhB,CAA9B,GAAmDL,QAA9D;AACH;;AACD,UAAIF,QAAQ,KAAK,iBAAjB,EAAoC;AAChCA,QAAAA,QAAQ,GAAG,kBAAX;AACAE,QAAAA,QAAQ,GAAGA,QAAQ,CAACI,UAAT,CAAoB,kBAApB,IAA0CJ,QAAQ,CAACK,MAAT,CAAgB,EAAhB,CAA1C,GAAgEL,QAA3E;AACH;;AACD,UAAIF,QAAQ,KAAK,cAAjB,EAAiC;AAC7BE,QAAAA,QAAQ,GAAGA,QAAQ,CAACM,QAAT,CAAkB,MAAlB,KAA6BN,QAAQ,CAACO,OAAT,CAAiB,OAAjB,MAA8B,CAAC,CAA5D,GACPP,QAAQ,CAACK,MAAT,CAAgB,CAAhB,EAAmBL,QAAQ,CAACQ,MAAT,GAAkB,CAArC,IAA0C,UADnC,GACgDR,QAD3D;AAEH;;AACD,UAAIF,QAAQ,KAAK,SAAjB,EAA4B;AACxBE,QAAAA,QAAQ,GAAGA,QAAQ,CAACI,UAAT,CAAoB,WAApB,IAAmCJ,QAAQ,CAACK,MAAT,CAAgB,CAAhB,CAAnC,GAAwDL,QAAnE;AACH;;AACD,UAAIF,QAAQ,KAAK,SAAjB,EAA4B;AACxBA,QAAAA,QAAQ,GAAG,MAAX;AACH;;AACD,UAAIA,QAAQ,KAAK,WAAjB,EAA8B;AAC1BA,QAAAA,QAAQ,GAAG,cAAX;AACH;AACJ;;AACD,QAAIG,QAAQ,KAAK,IAAb,IAAqBjB,aAAa,CAACyB,cAAd,CAA6BR,QAA7B,CAAzB,EAAiE;AAC7DA,MAAAA,QAAQ,GAAGjB,aAAa,CAACiB,QAAD,CAAxB;AACH;;AACD,WAAOA,QAAQ,CAACS,OAAT,CAAiB,qBAAjB,EAAwCZ,QAAxC,EACFY,OADE,CACM,qBADN,EAC6BX,OAD7B,EAEFW,OAFE,CAEM,sBAFN,EAE8BV,QAF9B,CAAP;AAGH,GAtCD;AAwCAN,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,SAA5B,EAAuC,UAAUc,QAAV,EAAkC;AAAA,QAAdC,IAAc,uEAAP,KAAO;AACrE,QAAIX,QAAQ,GAAGP,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBM,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,EAAgD,mBAAhD,CAAf;;AACA,QAAIF,QAAQ,KAAK,IAAb,IAAqBb,cAAc,CAACqB,cAAf,CAA8BR,QAA9B,CAAzB,EAAkE;AAC9DA,MAAAA,QAAQ,GAAGb,cAAc,CAACa,QAAD,CAAzB;AACH;;AACD,WAAOA,QAAQ,CAACS,OAAT,CAAiB,sBAAjB,EAAyCC,QAAzC,EACFD,OADE,CACM,kBADN,EAC0BE,IAD1B,CAAP;AAEH,GAPD;AASAlB,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,SAA5B,EAAuC,YAA2B;AAAA,QAAjBI,QAAiB,uEAAN,IAAM;;AAC9D,QAAIA,QAAQ,KAAK,IAAb,IAAqBX,cAAc,CAACmB,cAAf,CAA8BR,QAA9B,CAAzB,EAAkE;AAC9DA,MAAAA,QAAQ,GAAGX,cAAc,CAACW,QAAD,CAAzB;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ,GAAGP,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBM,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,EAAgD,mBAAhD,CAAX;;AACA,UAAIF,QAAQ,KAAK,IAAb,IAAqBX,cAAc,CAACmB,cAAf,CAA8BR,QAA9B,CAAzB,EAAkE;AAC9DA,QAAAA,QAAQ,GAAGX,cAAc,CAACW,QAAD,CAAzB;AACH;AACJ;;AACD,WAAOA,QAAP;AACH,GAVD;AAWH,CA7DD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "sourcesContent": [
        "/**\n * CDN static file resolvers.\n *\n * @example\n *     <%- cdn(package, version, filename) %>\n *     <%- fontcdn(fontName) %>\n *     <%- iconcdn() %>\n */\nconst cdn_providers = {\n    cdnjs: 'https://cdnjs.loli.net/ajax/libs/${ package }/${ version }/${ filename }',\n    jsdelivr: 'https://cdn.jsdelivr.net/npm/${ package }@${ version }/${ filename }',\n    unpkg: 'https://unpkg.com/${ package }@${ version }/${ filename }'\n};\n\nconst font_providers = {\n    google: 'https://fonts.loli.net/${ type }?family=${ fontname }'\n};\n\nconst icon_providers = {\n    fontawesome: 'https://cdn.staticfile.org/font-awesome/5.4.1/css/all.css'\n};\n\nmodule.exports = function (hexo) {\n    hexo.extend.helper.register('cdn', function (_package, version, filename) {\n        let provider = hexo.extend.helper.get('get_config').bind(this)('providers.cdn');\n        // cdn.js does not follow a GitHub npm style like jsdeliver and unpkg do. Patch it!\n        if (provider === 'cdnjs' || provider.startsWith('[cdnjs]')) {\n            if (provider.startsWith('[cdnjs]')) {\n                provider = provider.substr(7);\n            }\n            if (filename.startsWith('dist/')) {\n                filename = filename.substr(5);\n            }\n            if (_package === 'moment') {\n                _package = 'moment.js';\n                filename = filename.startsWith('min/') ? filename.substr(4) : filename;\n            }\n            if (_package === 'outdatedbrowser') {\n                _package = 'outdated-browser';\n                filename = filename.startsWith('outdatedbrowser/') ? filename.substr(16) : filename;\n            }\n            if (_package === 'highlight.js') {\n                filename = filename.endsWith('.css') && filename.indexOf('.min.') === -1 ?\n                    filename.substr(0, filename.length - 4) + '.min.css' : filename;\n            }\n            if (_package === 'mathjax') {\n                filename = filename.startsWith('unpacked/') ? filename.substr(9) : filename;\n            }\n            if (_package === 'pace-js') {\n                _package = 'pace';\n            }\n            if (_package === 'clipboard') {\n                _package = 'clipboard.js';\n            }\n        }\n        if (provider !== null && cdn_providers.hasOwnProperty(provider)) {\n            provider = cdn_providers[provider];\n        }\n        return provider.replace(/\\${\\s*package\\s*}/gi, _package)\n            .replace(/\\${\\s*version\\s*}/gi, version)\n            .replace(/\\${\\s*filename\\s*}/gi, filename);\n    });\n\n    hexo.extend.helper.register('fontcdn', function (fontName, type = 'css') {\n        let provider = hexo.extend.helper.get('get_config').bind(this)('providers.fontcdn');\n        if (provider !== null && font_providers.hasOwnProperty(provider)) {\n            provider = font_providers[provider];\n        }\n        return provider.replace(/\\${\\s*fontname\\s*}/gi, fontName)\n            .replace(/\\${\\s*type\\s*}/gi, type);\n    });\n\n    hexo.extend.helper.register('iconcdn', function (provider = null) {\n        if (provider !== null && icon_providers.hasOwnProperty(provider)) {\n            provider = icon_providers[provider];\n        } else {\n            provider = hexo.extend.helper.get('get_config').bind(this)('providers.iconcdn');\n            if (provider !== null && icon_providers.hasOwnProperty(provider)) {\n                provider = icon_providers[provider];\n            }\n        }\n        return provider;\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525713
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/helpers/config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/helpers/config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/helpers/config.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/helpers/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Theme configuration helpers.\n *\n * @description Test if a configuration is set or fetch its value. If `exclude_page` is set, the helpers will\n *              not look up configurations in the current page's front matter.\n * @example\n *     <%- has_config(config_name, exclude_page) %>\n *     <%- get_config(config_name, default_value, exclude_page) %>\n */\nvar specs = require('../specs/config.spec');\n\nvar descriptors = require('../common/utils').descriptors;\n\nmodule.exports = function (hexo) {\n  function readProperty(object, path) {\n    var paths = path.split('.');\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = paths[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var _path = _step.value;\n\n        if (typeof object === 'undefined' || object === null || !object.hasOwnProperty(_path)) {\n          return null;\n        }\n\n        object = object[_path];\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return object;\n  }\n\n  hexo.extend.helper.register('get_config', function (configName) {\n    var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    var excludePage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var value = readProperty(Object.assign({}, this.config, hexo.theme.config, !excludePage ? this.page : {}), configName);\n\n    if (value === null) {\n      if (typeof defaultValue !== 'undefined') {\n        return defaultValue;\n      } else {\n        var property = readProperty(specs, configName);\n        return property === null ? null : property[descriptors.defaultValue];\n      }\n    }\n\n    return value;\n  });\n  hexo.extend.helper.register('has_config', function (configName) {\n    var excludePage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var readProperty = hexo.extend.helper.get('get_config').bind(this);\n    return readProperty(configName, null, excludePage) != null;\n  });\n  hexo.extend.helper.register('get_config_from_obj', function (object, configName) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var value = readProperty(object, configName);\n    return value === null ? defaultValue : value;\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJzcGVjcyIsInJlcXVpcmUiLCJkZXNjcmlwdG9ycyIsIm1vZHVsZSIsImV4cG9ydHMiLCJoZXhvIiwicmVhZFByb3BlcnR5Iiwib2JqZWN0IiwicGF0aCIsInBhdGhzIiwic3BsaXQiLCJoYXNPd25Qcm9wZXJ0eSIsImV4dGVuZCIsImhlbHBlciIsInJlZ2lzdGVyIiwiY29uZmlnTmFtZSIsImRlZmF1bHRWYWx1ZSIsInVuZGVmaW5lZCIsImV4Y2x1ZGVQYWdlIiwidmFsdWUiLCJPYmplY3QiLCJhc3NpZ24iLCJjb25maWciLCJ0aGVtZSIsInBhZ2UiLCJwcm9wZXJ0eSIsImdldCIsImJpbmQiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7OztBQVNBLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLHNCQUFELENBQXJCOztBQUNBLElBQU1DLFdBQVcsR0FBR0QsT0FBTyxDQUFDLGlCQUFELENBQVAsQ0FBMkJDLFdBQS9DOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsSUFBVixFQUFnQjtBQUM3QixXQUFTQyxZQUFULENBQXNCQyxNQUF0QixFQUE4QkMsSUFBOUIsRUFBb0M7QUFDaEMsUUFBTUMsS0FBSyxHQUFHRCxJQUFJLENBQUNFLEtBQUwsQ0FBVyxHQUFYLENBQWQ7QUFEZ0M7QUFBQTtBQUFBOztBQUFBO0FBRWhDLDJCQUFpQkQsS0FBakIsOEhBQXdCO0FBQUEsWUFBZkQsS0FBZTs7QUFDcEIsWUFBSSxPQUFRRCxNQUFSLEtBQW9CLFdBQXBCLElBQW1DQSxNQUFNLEtBQUssSUFBOUMsSUFBc0QsQ0FBQ0EsTUFBTSxDQUFDSSxjQUFQLENBQXNCSCxLQUF0QixDQUEzRCxFQUF3RjtBQUNwRixpQkFBTyxJQUFQO0FBQ0g7O0FBQ0RELFFBQUFBLE1BQU0sR0FBR0EsTUFBTSxDQUFDQyxLQUFELENBQWY7QUFDSDtBQVArQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQVFoQyxXQUFPRCxNQUFQO0FBQ0g7O0FBRURGLEVBQUFBLElBQUksQ0FBQ08sTUFBTCxDQUFZQyxNQUFaLENBQW1CQyxRQUFuQixDQUE0QixZQUE1QixFQUEwQyxVQUFVQyxVQUFWLEVBQXFFO0FBQUEsUUFBL0NDLFlBQStDLHVFQUFoQ0MsU0FBZ0M7QUFBQSxRQUFyQkMsV0FBcUIsdUVBQVAsS0FBTztBQUMzRyxRQUFNQyxLQUFLLEdBQUdiLFlBQVksQ0FBQ2MsTUFBTSxDQUFDQyxNQUFQLENBQWMsRUFBZCxFQUFrQixLQUFLQyxNQUF2QixFQUErQmpCLElBQUksQ0FBQ2tCLEtBQUwsQ0FBV0QsTUFBMUMsRUFDdkIsQ0FBQ0osV0FBRCxHQUFlLEtBQUtNLElBQXBCLEdBQTJCLEVBREosQ0FBRCxFQUNVVCxVQURWLENBQTFCOztBQUVBLFFBQUlJLEtBQUssS0FBSyxJQUFkLEVBQW9CO0FBQ2hCLFVBQUksT0FBT0gsWUFBUCxLQUF5QixXQUE3QixFQUEwQztBQUN0QyxlQUFPQSxZQUFQO0FBQ0gsT0FGRCxNQUVPO0FBQ0gsWUFBTVMsUUFBUSxHQUFHbkIsWUFBWSxDQUFDTixLQUFELEVBQVFlLFVBQVIsQ0FBN0I7QUFDQSxlQUFPVSxRQUFRLEtBQUssSUFBYixHQUFvQixJQUFwQixHQUEyQkEsUUFBUSxDQUFDdkIsV0FBVyxDQUFDYyxZQUFiLENBQTFDO0FBQ0g7QUFDSjs7QUFDRCxXQUFPRyxLQUFQO0FBQ0gsR0FaRDtBQWNBZCxFQUFBQSxJQUFJLENBQUNPLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkMsUUFBbkIsQ0FBNEIsWUFBNUIsRUFBMEMsVUFBVUMsVUFBVixFQUEyQztBQUFBLFFBQXJCRyxXQUFxQix1RUFBUCxLQUFPO0FBQ2pGLFFBQU1aLFlBQVksR0FBR0QsSUFBSSxDQUFDTyxNQUFMLENBQVlDLE1BQVosQ0FBbUJhLEdBQW5CLENBQXVCLFlBQXZCLEVBQXFDQyxJQUFyQyxDQUEwQyxJQUExQyxDQUFyQjtBQUNBLFdBQU9yQixZQUFZLENBQUNTLFVBQUQsRUFBYSxJQUFiLEVBQW1CRyxXQUFuQixDQUFaLElBQStDLElBQXREO0FBQ0gsR0FIRDtBQUtBYixFQUFBQSxJQUFJLENBQUNPLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkMsUUFBbkIsQ0FBNEIscUJBQTVCLEVBQW1ELFVBQVVQLE1BQVYsRUFBa0JRLFVBQWxCLEVBQW1EO0FBQUEsUUFBckJDLFlBQXFCLHVFQUFOLElBQU07QUFDbEcsUUFBTUcsS0FBSyxHQUFHYixZQUFZLENBQUNDLE1BQUQsRUFBU1EsVUFBVCxDQUExQjtBQUNBLFdBQU9JLEtBQUssS0FBSyxJQUFWLEdBQWlCSCxZQUFqQixHQUFnQ0csS0FBdkM7QUFDSCxHQUhEO0FBSUgsQ0FuQ0QiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2luY2x1ZGVzL2hlbHBlcnMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoZW1lIGNvbmZpZ3VyYXRpb24gaGVscGVycy5cbiAqXG4gKiBAZGVzY3JpcHRpb24gVGVzdCBpZiBhIGNvbmZpZ3VyYXRpb24gaXMgc2V0IG9yIGZldGNoIGl0cyB2YWx1ZS4gSWYgYGV4Y2x1ZGVfcGFnZWAgaXMgc2V0LCB0aGUgaGVscGVycyB3aWxsXG4gKiAgICAgICAgICAgICAgbm90IGxvb2sgdXAgY29uZmlndXJhdGlvbnMgaW4gdGhlIGN1cnJlbnQgcGFnZSdzIGZyb250IG1hdHRlci5cbiAqIEBleGFtcGxlXG4gKiAgICAgPCUtIGhhc19jb25maWcoY29uZmlnX25hbWUsIGV4Y2x1ZGVfcGFnZSkgJT5cbiAqICAgICA8JS0gZ2V0X2NvbmZpZyhjb25maWdfbmFtZSwgZGVmYXVsdF92YWx1ZSwgZXhjbHVkZV9wYWdlKSAlPlxuICovXG5jb25zdCBzcGVjcyA9IHJlcXVpcmUoJy4uL3NwZWNzL2NvbmZpZy5zcGVjJyk7XG5jb25zdCBkZXNjcmlwdG9ycyA9IHJlcXVpcmUoJy4uL2NvbW1vbi91dGlscycpLmRlc2NyaXB0b3JzO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChoZXhvKSB7XG4gICAgZnVuY3Rpb24gcmVhZFByb3BlcnR5KG9iamVjdCwgcGF0aCkge1xuICAgICAgICBjb25zdCBwYXRocyA9IHBhdGguc3BsaXQoJy4nKTtcbiAgICAgICAgZm9yIChsZXQgcGF0aCBvZiBwYXRocykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiAob2JqZWN0KSA9PT0gJ3VuZGVmaW5lZCcgfHwgb2JqZWN0ID09PSBudWxsIHx8ICFvYmplY3QuaGFzT3duUHJvcGVydHkocGF0aCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9iamVjdCA9IG9iamVjdFtwYXRoXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb2JqZWN0O1xuICAgIH1cblxuICAgIGhleG8uZXh0ZW5kLmhlbHBlci5yZWdpc3RlcignZ2V0X2NvbmZpZycsIGZ1bmN0aW9uIChjb25maWdOYW1lLCBkZWZhdWx0VmFsdWUgPSB1bmRlZmluZWQsIGV4Y2x1ZGVQYWdlID0gZmFsc2UpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSByZWFkUHJvcGVydHkoT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5jb25maWcsIGhleG8udGhlbWUuY29uZmlnLFxuICAgICAgICAgICAgIWV4Y2x1ZGVQYWdlID8gdGhpcy5wYWdlIDoge30pLCBjb25maWdOYW1lKTtcbiAgICAgICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mKGRlZmF1bHRWYWx1ZSkgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcHJvcGVydHkgPSByZWFkUHJvcGVydHkoc3BlY3MsIGNvbmZpZ05hbWUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBwcm9wZXJ0eSA9PT0gbnVsbCA/IG51bGwgOiBwcm9wZXJ0eVtkZXNjcmlwdG9ycy5kZWZhdWx0VmFsdWVdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9KTtcblxuICAgIGhleG8uZXh0ZW5kLmhlbHBlci5yZWdpc3RlcignaGFzX2NvbmZpZycsIGZ1bmN0aW9uIChjb25maWdOYW1lLCBleGNsdWRlUGFnZSA9IGZhbHNlKSB7XG4gICAgICAgIGNvbnN0IHJlYWRQcm9wZXJ0eSA9IGhleG8uZXh0ZW5kLmhlbHBlci5nZXQoJ2dldF9jb25maWcnKS5iaW5kKHRoaXMpO1xuICAgICAgICByZXR1cm4gcmVhZFByb3BlcnR5KGNvbmZpZ05hbWUsIG51bGwsIGV4Y2x1ZGVQYWdlKSAhPSBudWxsO1xuICAgIH0pO1xuXG4gICAgaGV4by5leHRlbmQuaGVscGVyLnJlZ2lzdGVyKCdnZXRfY29uZmlnX2Zyb21fb2JqJywgZnVuY3Rpb24gKG9iamVjdCwgY29uZmlnTmFtZSwgZGVmYXVsdFZhbHVlID0gbnVsbCkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHJlYWRQcm9wZXJ0eShvYmplY3QsIGNvbmZpZ05hbWUpO1xuICAgICAgICByZXR1cm4gdmFsdWUgPT09IG51bGwgPyBkZWZhdWx0VmFsdWUgOiB2YWx1ZTtcbiAgICB9KTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "specs",
        "require",
        "descriptors",
        "module",
        "exports",
        "hexo",
        "readProperty",
        "object",
        "path",
        "paths",
        "split",
        "hasOwnProperty",
        "extend",
        "helper",
        "register",
        "configName",
        "defaultValue",
        "undefined",
        "excludePage",
        "value",
        "Object",
        "assign",
        "config",
        "theme",
        "page",
        "property",
        "get",
        "bind"
      ],
      "mappings": ";;AAAA;;;;;;;;;AASA,IAAMA,KAAK,GAAGC,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,WAA/C;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7B,WAASC,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoC;AAChC,QAAMC,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAd;AADgC;AAAA;AAAA;;AAAA;AAEhC,2BAAiBD,KAAjB,8HAAwB;AAAA,YAAfD,KAAe;;AACpB,YAAI,OAAQD,MAAR,KAAoB,WAApB,IAAmCA,MAAM,KAAK,IAA9C,IAAsD,CAACA,MAAM,CAACI,cAAP,CAAsBH,KAAtB,CAA3D,EAAwF;AACpF,iBAAO,IAAP;AACH;;AACDD,QAAAA,MAAM,GAAGA,MAAM,CAACC,KAAD,CAAf;AACH;AAP+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQhC,WAAOD,MAAP;AACH;;AAEDF,EAAAA,IAAI,CAACO,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,UAAUC,UAAV,EAAqE;AAAA,QAA/CC,YAA+C,uEAAhCC,SAAgC;AAAA,QAArBC,WAAqB,uEAAP,KAAO;AAC3G,QAAMC,KAAK,GAAGb,YAAY,CAACc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,MAAvB,EAA+BjB,IAAI,CAACkB,KAAL,CAAWD,MAA1C,EACvB,CAACJ,WAAD,GAAe,KAAKM,IAApB,GAA2B,EADJ,CAAD,EACUT,UADV,CAA1B;;AAEA,QAAII,KAAK,KAAK,IAAd,EAAoB;AAChB,UAAI,OAAOH,YAAP,KAAyB,WAA7B,EAA0C;AACtC,eAAOA,YAAP;AACH,OAFD,MAEO;AACH,YAAMS,QAAQ,GAAGnB,YAAY,CAACN,KAAD,EAAQe,UAAR,CAA7B;AACA,eAAOU,QAAQ,KAAK,IAAb,GAAoB,IAApB,GAA2BA,QAAQ,CAACvB,WAAW,CAACc,YAAb,CAA1C;AACH;AACJ;;AACD,WAAOG,KAAP;AACH,GAZD;AAcAd,EAAAA,IAAI,CAACO,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,UAAUC,UAAV,EAA2C;AAAA,QAArBG,WAAqB,uEAAP,KAAO;AACjF,QAAMZ,YAAY,GAAGD,IAAI,CAACO,MAAL,CAAYC,MAAZ,CAAmBa,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,CAArB;AACA,WAAOrB,YAAY,CAACS,UAAD,EAAa,IAAb,EAAmBG,WAAnB,CAAZ,IAA+C,IAAtD;AACH,GAHD;AAKAb,EAAAA,IAAI,CAACO,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,qBAA5B,EAAmD,UAAUP,MAAV,EAAkBQ,UAAlB,EAAmD;AAAA,QAArBC,YAAqB,uEAAN,IAAM;AAClG,QAAMG,KAAK,GAAGb,YAAY,CAACC,MAAD,EAASQ,UAAT,CAA1B;AACA,WAAOI,KAAK,KAAK,IAAV,GAAiBH,YAAjB,GAAgCG,KAAvC;AACH,GAHD;AAIH,CAnCD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "sourcesContent": [
        "/**\n * Theme configuration helpers.\n *\n * @description Test if a configuration is set or fetch its value. If `exclude_page` is set, the helpers will\n *              not look up configurations in the current page's front matter.\n * @example\n *     <%- has_config(config_name, exclude_page) %>\n *     <%- get_config(config_name, default_value, exclude_page) %>\n */\nconst specs = require('../specs/config.spec');\nconst descriptors = require('../common/utils').descriptors;\n\nmodule.exports = function (hexo) {\n    function readProperty(object, path) {\n        const paths = path.split('.');\n        for (let path of paths) {\n            if (typeof (object) === 'undefined' || object === null || !object.hasOwnProperty(path)) {\n                return null;\n            }\n            object = object[path];\n        }\n        return object;\n    }\n\n    hexo.extend.helper.register('get_config', function (configName, defaultValue = undefined, excludePage = false) {\n        const value = readProperty(Object.assign({}, this.config, hexo.theme.config,\n            !excludePage ? this.page : {}), configName);\n        if (value === null) {\n            if (typeof(defaultValue) !== 'undefined') {\n                return defaultValue;\n            } else {\n                const property = readProperty(specs, configName);\n                return property === null ? null : property[descriptors.defaultValue];\n            }\n        }\n        return value;\n    });\n\n    hexo.extend.helper.register('has_config', function (configName, excludePage = false) {\n        const readProperty = hexo.extend.helper.get('get_config').bind(this);\n        return readProperty(configName, null, excludePage) != null;\n    });\n\n    hexo.extend.helper.register('get_config_from_obj', function (object, configName, defaultValue = null) {\n        const value = readProperty(object, configName);\n        return value === null ? defaultValue : value;\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525713
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/helpers/layout.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/helpers/layout.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/helpers/layout.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/helpers/layout.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
        "sourceFileName": "layout.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Helper functions for controlling layout.\n *\n* @example\n*     <%- get_widgets(position) %>\n*     <%- has_column() %>\n*     <%- column_count() %>\n */\nmodule.exports = function (hexo) {\n  hexo.extend.helper.register('has_widget', function (type) {\n    var hasWidgets = hexo.extend.helper.get('has_config').bind(this)('widgets');\n\n    if (!hasWidgets) {\n      return false;\n    }\n\n    var widgets = hexo.extend.helper.get('get_config').bind(this)('widgets');\n    return widgets.some(function (widget) {\n      return widget.hasOwnProperty('type') && widget.type === type;\n    });\n  });\n  hexo.extend.helper.register('get_widgets', function (position) {\n    var hasWidgets = hexo.extend.helper.get('has_config').bind(this)('widgets');\n\n    if (!hasWidgets) {\n      return [];\n    }\n\n    var widgets = hexo.extend.helper.get('get_config').bind(this)('widgets');\n    return widgets.filter(function (widget) {\n      return widget.hasOwnProperty('position') && widget.position === position;\n    });\n  });\n  hexo.extend.helper.register('has_column', function (position) {\n    var getWidgets = hexo.extend.helper.get('get_widgets').bind(this);\n    return getWidgets(position).length > 0;\n  });\n  hexo.extend.helper.register('column_count', function () {\n    var columns = 1;\n    var hasColumn = hexo.extend.helper.get('has_column').bind(this);\n    columns += hasColumn('left') ? 1 : 0;\n    columns += hasColumn('right') ? 1 : 0;\n    return columns;\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxheW91dC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiaGV4byIsImV4dGVuZCIsImhlbHBlciIsInJlZ2lzdGVyIiwidHlwZSIsImhhc1dpZGdldHMiLCJnZXQiLCJiaW5kIiwid2lkZ2V0cyIsInNvbWUiLCJ3aWRnZXQiLCJoYXNPd25Qcm9wZXJ0eSIsInBvc2l0aW9uIiwiZmlsdGVyIiwiZ2V0V2lkZ2V0cyIsImxlbmd0aCIsImNvbHVtbnMiLCJoYXNDb2x1bW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7O0FBUUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFVQyxJQUFWLEVBQWdCO0FBQzdCQSxFQUFBQSxJQUFJLENBQUNDLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkMsUUFBbkIsQ0FBNEIsWUFBNUIsRUFBMEMsVUFBVUMsSUFBVixFQUFnQjtBQUN0RCxRQUFNQyxVQUFVLEdBQUdMLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxNQUFaLENBQW1CSSxHQUFuQixDQUF1QixZQUF2QixFQUFxQ0MsSUFBckMsQ0FBMEMsSUFBMUMsRUFBZ0QsU0FBaEQsQ0FBbkI7O0FBQ0EsUUFBSSxDQUFDRixVQUFMLEVBQWlCO0FBQ2IsYUFBTyxLQUFQO0FBQ0g7O0FBQ0QsUUFBTUcsT0FBTyxHQUFHUixJQUFJLENBQUNDLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkksR0FBbkIsQ0FBdUIsWUFBdkIsRUFBcUNDLElBQXJDLENBQTBDLElBQTFDLEVBQWdELFNBQWhELENBQWhCO0FBQ0EsV0FBT0MsT0FBTyxDQUFDQyxJQUFSLENBQWEsVUFBQUMsTUFBTTtBQUFBLGFBQUlBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQixNQUF0QixLQUFpQ0QsTUFBTSxDQUFDTixJQUFQLEtBQWdCQSxJQUFyRDtBQUFBLEtBQW5CLENBQVA7QUFDSCxHQVBEO0FBU0FKLEVBQUFBLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxNQUFaLENBQW1CQyxRQUFuQixDQUE0QixhQUE1QixFQUEyQyxVQUFVUyxRQUFWLEVBQW9CO0FBQzNELFFBQU1QLFVBQVUsR0FBR0wsSUFBSSxDQUFDQyxNQUFMLENBQVlDLE1BQVosQ0FBbUJJLEdBQW5CLENBQXVCLFlBQXZCLEVBQXFDQyxJQUFyQyxDQUEwQyxJQUExQyxFQUFnRCxTQUFoRCxDQUFuQjs7QUFDQSxRQUFJLENBQUNGLFVBQUwsRUFBaUI7QUFDYixhQUFPLEVBQVA7QUFDSDs7QUFDRCxRQUFNRyxPQUFPLEdBQUdSLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxNQUFaLENBQW1CSSxHQUFuQixDQUF1QixZQUF2QixFQUFxQ0MsSUFBckMsQ0FBMEMsSUFBMUMsRUFBZ0QsU0FBaEQsQ0FBaEI7QUFDQSxXQUFPQyxPQUFPLENBQUNLLE1BQVIsQ0FBZSxVQUFBSCxNQUFNO0FBQUEsYUFBSUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCLFVBQXRCLEtBQXFDRCxNQUFNLENBQUNFLFFBQVAsS0FBb0JBLFFBQTdEO0FBQUEsS0FBckIsQ0FBUDtBQUNILEdBUEQ7QUFTQVosRUFBQUEsSUFBSSxDQUFDQyxNQUFMLENBQVlDLE1BQVosQ0FBbUJDLFFBQW5CLENBQTRCLFlBQTVCLEVBQTBDLFVBQVVTLFFBQVYsRUFBb0I7QUFDMUQsUUFBTUUsVUFBVSxHQUFHZCxJQUFJLENBQUNDLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkksR0FBbkIsQ0FBdUIsYUFBdkIsRUFBc0NDLElBQXRDLENBQTJDLElBQTNDLENBQW5CO0FBQ0EsV0FBT08sVUFBVSxDQUFDRixRQUFELENBQVYsQ0FBcUJHLE1BQXJCLEdBQThCLENBQXJDO0FBQ0gsR0FIRDtBQUtBZixFQUFBQSxJQUFJLENBQUNDLE1BQUwsQ0FBWUMsTUFBWixDQUFtQkMsUUFBbkIsQ0FBNEIsY0FBNUIsRUFBNEMsWUFBWTtBQUNwRCxRQUFJYSxPQUFPLEdBQUcsQ0FBZDtBQUNBLFFBQU1DLFNBQVMsR0FBR2pCLElBQUksQ0FBQ0MsTUFBTCxDQUFZQyxNQUFaLENBQW1CSSxHQUFuQixDQUF1QixZQUF2QixFQUFxQ0MsSUFBckMsQ0FBMEMsSUFBMUMsQ0FBbEI7QUFDQVMsSUFBQUEsT0FBTyxJQUFJQyxTQUFTLENBQUMsTUFBRCxDQUFULEdBQW9CLENBQXBCLEdBQXdCLENBQW5DO0FBQ0FELElBQUFBLE9BQU8sSUFBSUMsU0FBUyxDQUFDLE9BQUQsQ0FBVCxHQUFxQixDQUFyQixHQUF5QixDQUFwQztBQUNBLFdBQU9ELE9BQVA7QUFDSCxHQU5EO0FBT0gsQ0EvQkQiLCJzb3VyY2VSb290IjoiL2hvbWUvY29kaW5nL3dvcmtzcGFjZS90aGVtZXMvaWNhcnVzL2luY2x1ZGVzL2hlbHBlcnMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEhlbHBlciBmdW5jdGlvbnMgZm9yIGNvbnRyb2xsaW5nIGxheW91dC5cbiAqXG4qIEBleGFtcGxlXG4qICAgICA8JS0gZ2V0X3dpZGdldHMocG9zaXRpb24pICU+XG4qICAgICA8JS0gaGFzX2NvbHVtbigpICU+XG4qICAgICA8JS0gY29sdW1uX2NvdW50KCkgJT5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaGV4bykge1xuICAgIGhleG8uZXh0ZW5kLmhlbHBlci5yZWdpc3RlcignaGFzX3dpZGdldCcsIGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICAgIGNvbnN0IGhhc1dpZGdldHMgPSBoZXhvLmV4dGVuZC5oZWxwZXIuZ2V0KCdoYXNfY29uZmlnJykuYmluZCh0aGlzKSgnd2lkZ2V0cycpO1xuICAgICAgICBpZiAoIWhhc1dpZGdldHMpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB3aWRnZXRzID0gaGV4by5leHRlbmQuaGVscGVyLmdldCgnZ2V0X2NvbmZpZycpLmJpbmQodGhpcykoJ3dpZGdldHMnKTtcbiAgICAgICAgcmV0dXJuIHdpZGdldHMuc29tZSh3aWRnZXQgPT4gd2lkZ2V0Lmhhc093blByb3BlcnR5KCd0eXBlJykgJiYgd2lkZ2V0LnR5cGUgPT09IHR5cGUpO1xuICAgIH0pO1xuXG4gICAgaGV4by5leHRlbmQuaGVscGVyLnJlZ2lzdGVyKCdnZXRfd2lkZ2V0cycsIGZ1bmN0aW9uIChwb3NpdGlvbikge1xuICAgICAgICBjb25zdCBoYXNXaWRnZXRzID0gaGV4by5leHRlbmQuaGVscGVyLmdldCgnaGFzX2NvbmZpZycpLmJpbmQodGhpcykoJ3dpZGdldHMnKTtcbiAgICAgICAgaWYgKCFoYXNXaWRnZXRzKSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgd2lkZ2V0cyA9IGhleG8uZXh0ZW5kLmhlbHBlci5nZXQoJ2dldF9jb25maWcnKS5iaW5kKHRoaXMpKCd3aWRnZXRzJyk7XG4gICAgICAgIHJldHVybiB3aWRnZXRzLmZpbHRlcih3aWRnZXQgPT4gd2lkZ2V0Lmhhc093blByb3BlcnR5KCdwb3NpdGlvbicpICYmIHdpZGdldC5wb3NpdGlvbiA9PT0gcG9zaXRpb24pO1xuICAgIH0pO1xuXG4gICAgaGV4by5leHRlbmQuaGVscGVyLnJlZ2lzdGVyKCdoYXNfY29sdW1uJywgZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgIGNvbnN0IGdldFdpZGdldHMgPSBoZXhvLmV4dGVuZC5oZWxwZXIuZ2V0KCdnZXRfd2lkZ2V0cycpLmJpbmQodGhpcyk7XG4gICAgICAgIHJldHVybiBnZXRXaWRnZXRzKHBvc2l0aW9uKS5sZW5ndGggPiAwO1xuICAgIH0pO1xuXG4gICAgaGV4by5leHRlbmQuaGVscGVyLnJlZ2lzdGVyKCdjb2x1bW5fY291bnQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGxldCBjb2x1bW5zID0gMTtcbiAgICAgICAgY29uc3QgaGFzQ29sdW1uID0gaGV4by5leHRlbmQuaGVscGVyLmdldCgnaGFzX2NvbHVtbicpLmJpbmQodGhpcyk7XG4gICAgICAgIGNvbHVtbnMgKz0gaGFzQ29sdW1uKCdsZWZ0JykgPyAxIDogMDtcbiAgICAgICAgY29sdW1ucyArPSBoYXNDb2x1bW4oJ3JpZ2h0JykgPyAxIDogMDtcbiAgICAgICAgcmV0dXJuIGNvbHVtbnM7XG4gICAgfSk7XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "layout.js"
      ],
      "names": [
        "module",
        "exports",
        "hexo",
        "extend",
        "helper",
        "register",
        "type",
        "hasWidgets",
        "get",
        "bind",
        "widgets",
        "some",
        "widget",
        "hasOwnProperty",
        "position",
        "filter",
        "getWidgets",
        "length",
        "columns",
        "hasColumn"
      ],
      "mappings": ";;AAAA;;;;;;;;AAQAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,UAAUC,IAAV,EAAgB;AACtD,QAAMC,UAAU,GAAGL,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBI,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,EAAgD,SAAhD,CAAnB;;AACA,QAAI,CAACF,UAAL,EAAiB;AACb,aAAO,KAAP;AACH;;AACD,QAAMG,OAAO,GAAGR,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBI,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,EAAgD,SAAhD,CAAhB;AACA,WAAOC,OAAO,CAACC,IAAR,CAAa,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,cAAP,CAAsB,MAAtB,KAAiCD,MAAM,CAACN,IAAP,KAAgBA,IAArD;AAAA,KAAnB,CAAP;AACH,GAPD;AASAJ,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,aAA5B,EAA2C,UAAUS,QAAV,EAAoB;AAC3D,QAAMP,UAAU,GAAGL,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBI,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,EAAgD,SAAhD,CAAnB;;AACA,QAAI,CAACF,UAAL,EAAiB;AACb,aAAO,EAAP;AACH;;AACD,QAAMG,OAAO,GAAGR,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBI,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,EAAgD,SAAhD,CAAhB;AACA,WAAOC,OAAO,CAACK,MAAR,CAAe,UAAAH,MAAM;AAAA,aAAIA,MAAM,CAACC,cAAP,CAAsB,UAAtB,KAAqCD,MAAM,CAACE,QAAP,KAAoBA,QAA7D;AAAA,KAArB,CAAP;AACH,GAPD;AASAZ,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,UAAUS,QAAV,EAAoB;AAC1D,QAAME,UAAU,GAAGd,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBI,GAAnB,CAAuB,aAAvB,EAAsCC,IAAtC,CAA2C,IAA3C,CAAnB;AACA,WAAOO,UAAU,CAACF,QAAD,CAAV,CAAqBG,MAArB,GAA8B,CAArC;AACH,GAHD;AAKAf,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,cAA5B,EAA4C,YAAY;AACpD,QAAIa,OAAO,GAAG,CAAd;AACA,QAAMC,SAAS,GAAGjB,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBI,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,CAAlB;AACAS,IAAAA,OAAO,IAAIC,SAAS,CAAC,MAAD,CAAT,GAAoB,CAApB,GAAwB,CAAnC;AACAD,IAAAA,OAAO,IAAIC,SAAS,CAAC,OAAD,CAAT,GAAqB,CAArB,GAAyB,CAApC;AACA,WAAOD,OAAP;AACH,GAND;AAOH,CA/BD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "sourcesContent": [
        "/**\n * Helper functions for controlling layout.\n *\n* @example\n*     <%- get_widgets(position) %>\n*     <%- has_column() %>\n*     <%- column_count() %>\n */\nmodule.exports = function (hexo) {\n    hexo.extend.helper.register('has_widget', function (type) {\n        const hasWidgets = hexo.extend.helper.get('has_config').bind(this)('widgets');\n        if (!hasWidgets) {\n            return false;\n        }\n        const widgets = hexo.extend.helper.get('get_config').bind(this)('widgets');\n        return widgets.some(widget => widget.hasOwnProperty('type') && widget.type === type);\n    });\n\n    hexo.extend.helper.register('get_widgets', function (position) {\n        const hasWidgets = hexo.extend.helper.get('has_config').bind(this)('widgets');\n        if (!hasWidgets) {\n            return [];\n        }\n        const widgets = hexo.extend.helper.get('get_config').bind(this)('widgets');\n        return widgets.filter(widget => widget.hasOwnProperty('position') && widget.position === position);\n    });\n\n    hexo.extend.helper.register('has_column', function (position) {\n        const getWidgets = hexo.extend.helper.get('get_widgets').bind(this);\n        return getWidgets(position).length > 0;\n    });\n\n    hexo.extend.helper.register('column_count', function () {\n        let columns = 1;\n        const hasColumn = hexo.extend.helper.get('has_column').bind(this);\n        columns += hasColumn('left') ? 1 : 0;\n        columns += hasColumn('right') ? 1 : 0;\n        return columns;\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525713
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/helpers/override.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/helpers/override.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/helpers/override.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/helpers/override.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
        "sourceFileName": "override.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * Helper functions that override Hexo built-in helpers.\n *\n * @example\n*     <%- _list_archives() %>\n*     <%- _list_categories() %>\n*     <%- _list_tags() %>\n*     <%- _toc(content) %>\n*     <%- _js(url, defer, async) %>\n*     <%- _css(url) %>\n*     <%- _partial(url) %>\n */\nvar cheerio = require('cheerio');\n\nvar _require = require('fs'),\n    existsSync = _require.existsSync;\n\nvar _require2 = require('path'),\n    relative = _require2.relative,\n    dirname = _require2.dirname,\n    join = _require2.join,\n    extname = _require2.extname;\n\nvar _require3 = require('../utils/lru'),\n    LRUMap = _require3.LRUMap;\n\nvar __archives = [];\nvar __categories = [];\nvar __tags = [];\n\nvar __fragmentCache = new LRUMap(20);\n\nmodule.exports = function (hexo) {\n  hexo.extend.helper.register('_list_archives', function () {\n    if (__archives.length) {\n      return __archives;\n    }\n\n    var $ = cheerio.load(this.list_archives(), {\n      decodeEntities: false\n    });\n    $('.archive-list-item').each(function () {\n      __archives.push({\n        url: $(this).find('.archive-list-link').attr('href'),\n        name: $(this).find('.archive-list-link').text(),\n        count: $(this).find('.archive-list-count').text()\n      });\n    });\n    return __archives;\n  });\n  hexo.extend.helper.register('_list_categories', function () {\n    if (__categories.length) {\n      return __categories;\n    }\n\n    var $ = cheerio.load(this.list_categories({\n      depth: 2\n    }), {\n      decodeEntities: false\n    });\n\n    function traverse(root) {\n      var categories = [];\n      root.find('> .category-list-item').each(function () {\n        var category = {\n          url: $(this).find('> .category-list-link').attr('href'),\n          name: $(this).find('> .category-list-link').text(),\n          count: $(this).find('> .category-list-count').text()\n        };\n\n        if ($(this).find('> .category-list-child').length) {\n          category['children'] = traverse($(this).find('> .category-list-child'));\n        }\n\n        categories.push(category);\n      });\n      return categories;\n    }\n\n    __categories.push.apply(__categories, _toConsumableArray(traverse($('.category-list'))));\n\n    return __categories;\n  });\n  hexo.extend.helper.register('_list_tags', function () {\n    if (__tags.length) {\n      return __tags;\n    }\n\n    var $ = cheerio.load(this.list_tags(), {\n      decodeEntities: false\n    });\n    $('.tag-list-item').each(function () {\n      __tags.push({\n        url: $(this).find('.tag-list-link').attr('href'),\n        name: $(this).find('.tag-list-link').text(),\n        count: $(this).find('.tag-list-count').text()\n      });\n    });\n    return __tags;\n  });\n  /**\n   * Export a tree of headings of an article\n   * {\n   *    \"1\": {\n   *        \"id\": \"How-to-enable-table-of-content-for-a-post\",\n   *        \"index\": \"1\"\n   *    },\n   *    \"2\": {\n   *        \"1\": {\n   *            \"1\": {\n   *                \"id\": \"Third-level-title\",\n   *                \"index\": \"2.1.1\"\n   *            },\n   *            \"id\": \"Second-level-title\",\n   *            \"index\": \"2.1\"\n   *        },\n   *        \"2\": {\n   *            \"id\": \"Another-second-level-title\",\n   *            \"index\": \"2.2\"\n   *        },\n   *        \"id\": \"First-level-title\",\n   *        \"index\": \"2\"\n   *    }\n   * }\n   */\n\n  hexo.extend.helper.register('_toc', function (content) {\n    var $ = cheerio.load(content, {\n      decodeEntities: false\n    });\n    var toc = {};\n    var levels = [0, 0, 0]; // Get top 3 headings that are present in the content\n\n    var tags = [1, 2, 3, 4, 5, 6].map(function (i) {\n      return 'h' + i;\n    }).filter(function (h) {\n      return $(h).length > 0;\n    }).slice(0, 3);\n\n    if (tags.length === 0) {\n      return toc;\n    }\n\n    $(tags.join(',')).each(function () {\n      var level = tags.indexOf(this.name);\n      var id = $(this).attr('id');\n      var text = $(this).text();\n\n      for (var i = 0; i < levels.length; i++) {\n        if (i > level) {\n          levels[i] = 0;\n        } else if (i < level) {\n          if (levels[i] === 0) {\n            // if headings start with a lower level heading, set the former heading index to 1\n            // e.g. h3, h2, h1, h2, h3 => 1.1.1, 1.2, 2, 2.1, 2.1.1\n            levels[i] = 1;\n          }\n        } else {\n          levels[i] += 1;\n        }\n      }\n\n      var node = toc;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = levels.slice(0, level + 1)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _i = _step.value;\n\n          if (!node.hasOwnProperty(_i)) {\n            node[_i] = {};\n          }\n\n          node = node[_i];\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      node.id = id;\n      node.text = text;\n      node.index = levels.slice(0, level + 1).join('.');\n    });\n    return toc;\n  });\n  hexo.extend.helper.register('_js', function (url) {\n    var defer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var async = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var urlFor = hexo.extend.helper.get('url_for').bind(this);\n\n    if (!url.endsWith('.js') && !url.includes('?')) {\n      url += '.js';\n    }\n\n    return \"<script src=\\\"\".concat(urlFor(url), \"\\\"\").concat(async ? ' async' : '').concat(defer ? ' defer' : '', \"></script>\");\n  });\n  hexo.extend.helper.register('_css', function (url) {\n    var urlFor = hexo.extend.helper.get('url_for').bind(this);\n\n    if (!url.endsWith('.css') && !url.includes('?')) {\n      url += '.css';\n    }\n\n    return \"<link rel=\\\"stylesheet\\\" href=\\\"\".concat(urlFor(url), \"\\\">\");\n  });\n  hexo.extend.helper.register('_partial', function (name, locals) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var md5 = this.md5,\n        partial = this.partial,\n        view_dir = this.view_dir,\n        page = this.page;\n    var currentView = this.filename.substring(view_dir.length);\n\n    var _locals = Object.assign({}, locals, {\n      layout: false\n    });\n\n    var _ref = hexo.theme.getView(join(dirname(currentView), name)) || hexo.theme.getView(name),\n        path = _ref.path;\n\n    path = join(view_dir, path.substring(0, path.length - extname(path).length) + '.locals.js');\n\n    if (!existsSync(path)) {\n      // fallback to default partial\n      return partial(name, locals, options);\n    }\n\n    _locals = require(path)(this, _locals);\n\n    if (_locals === null) {\n      // partial should be empty\n      return '';\n    }\n\n    if (_locals === false) {\n      // do not cache this fragment\n      return partial(name, locals, options);\n    }\n\n    var language = page.lang || page.language;\n    var fragment = relative(view_dir, path.substring(0, path.length - '.locals.js'.length));\n    var cacheId = [fragment, language, md5(JSON.stringify(_locals))].join('-');\n\n    if (!__fragmentCache.has(cacheId)) {\n      __fragmentCache.set(cacheId, partial(name, _locals, {\n        cache: false,\n        only: options.only || false\n      }));\n    }\n\n    return __fragmentCache.get(cacheId);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "override.js"
      ],
      "names": [
        "cheerio",
        "require",
        "existsSync",
        "relative",
        "dirname",
        "join",
        "extname",
        "LRUMap",
        "__archives",
        "__categories",
        "__tags",
        "__fragmentCache",
        "module",
        "exports",
        "hexo",
        "extend",
        "helper",
        "register",
        "length",
        "$",
        "load",
        "list_archives",
        "decodeEntities",
        "each",
        "push",
        "url",
        "find",
        "attr",
        "name",
        "text",
        "count",
        "list_categories",
        "depth",
        "traverse",
        "root",
        "categories",
        "category",
        "list_tags",
        "content",
        "toc",
        "levels",
        "tags",
        "map",
        "i",
        "filter",
        "h",
        "slice",
        "level",
        "indexOf",
        "id",
        "node",
        "hasOwnProperty",
        "index",
        "defer",
        "async",
        "urlFor",
        "get",
        "bind",
        "endsWith",
        "includes",
        "locals",
        "options",
        "md5",
        "partial",
        "view_dir",
        "page",
        "currentView",
        "filename",
        "substring",
        "_locals",
        "Object",
        "assign",
        "layout",
        "theme",
        "getView",
        "path",
        "language",
        "lang",
        "fragment",
        "cacheId",
        "JSON",
        "stringify",
        "has",
        "set",
        "cache",
        "only"
      ],
      "mappings": ";;;;;;;;;;AAAA;;;;;;;;;;;;AAYA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACuBA,OAAO,CAAC,IAAD,C;IAAtBC,U,YAAAA,U;;gBACqCD,OAAO,CAAC,MAAD,C;IAA5CE,Q,aAAAA,Q;IAAUC,O,aAAAA,O;IAASC,I,aAAAA,I;IAAMC,O,aAAAA,O;;gBACdL,OAAO,CAAC,cAAD,C;IAAlBM,M,aAAAA,M;;AAER,IAAMC,UAAU,GAAG,EAAnB;AACA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,MAAM,GAAG,EAAf;;AAEA,IAAMC,eAAe,GAAG,IAAIJ,MAAJ,CAAW,EAAX,CAAxB;;AAEAK,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,gBAA5B,EAA8C,YAAY;AACtD,QAAIT,UAAU,CAACU,MAAf,EAAuB;AACnB,aAAOV,UAAP;AACH;;AACD,QAAMW,CAAC,GAAGnB,OAAO,CAACoB,IAAR,CAAa,KAAKC,aAAL,EAAb,EAAmC;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KAAnC,CAAV;AACAH,IAAAA,CAAC,CAAC,oBAAD,CAAD,CAAwBI,IAAxB,CAA6B,YAAY;AACrCf,MAAAA,UAAU,CAACgB,IAAX,CAAgB;AACZC,QAAAA,GAAG,EAAEN,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,oBAAb,EAAmCC,IAAnC,CAAwC,MAAxC,CADO;AAEZC,QAAAA,IAAI,EAAET,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,oBAAb,EAAmCG,IAAnC,EAFM;AAGZC,QAAAA,KAAK,EAAEX,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,qBAAb,EAAoCG,IAApC;AAHK,OAAhB;AAKH,KAND;AAOA,WAAOrB,UAAP;AACH,GAbD;AAeAM,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,kBAA5B,EAAgD,YAAY;AACxD,QAAIR,YAAY,CAACS,MAAjB,EAAyB;AACrB,aAAOT,YAAP;AACH;;AACD,QAAMU,CAAC,GAAGnB,OAAO,CAACoB,IAAR,CAAa,KAAKW,eAAL,CAAqB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAArB,CAAb,EAAiD;AAAEV,MAAAA,cAAc,EAAE;AAAlB,KAAjD,CAAV;;AACA,aAASW,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,UAAMC,UAAU,GAAG,EAAnB;AACAD,MAAAA,IAAI,CAACR,IAAL,CAAU,uBAAV,EAAmCH,IAAnC,CAAwC,YAAY;AAChD,YAAMa,QAAQ,GAAG;AACbX,UAAAA,GAAG,EAAEN,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,uBAAb,EAAsCC,IAAtC,CAA2C,MAA3C,CADQ;AAEbC,UAAAA,IAAI,EAAET,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,uBAAb,EAAsCG,IAAtC,EAFO;AAGbC,UAAAA,KAAK,EAAEX,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,wBAAb,EAAuCG,IAAvC;AAHM,SAAjB;;AAKA,YAAIV,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,wBAAb,EAAuCR,MAA3C,EAAmD;AAC/CkB,UAAAA,QAAQ,CAAC,UAAD,CAAR,GAAuBH,QAAQ,CAACd,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,wBAAb,CAAD,CAA/B;AACH;;AACDS,QAAAA,UAAU,CAACX,IAAX,CAAgBY,QAAhB;AACH,OAVD;AAWA,aAAOD,UAAP;AACH;;AACD1B,IAAAA,YAAY,CAACe,IAAb,OAAAf,YAAY,qBAASwB,QAAQ,CAACd,CAAC,CAAC,gBAAD,CAAF,CAAjB,EAAZ;;AACA,WAAOV,YAAP;AACH,GAtBD;AAwBAK,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,YAAY;AAClD,QAAIP,MAAM,CAACQ,MAAX,EAAmB;AACf,aAAOR,MAAP;AACH;;AACD,QAAMS,CAAC,GAAGnB,OAAO,CAACoB,IAAR,CAAa,KAAKiB,SAAL,EAAb,EAA+B;AAAEf,MAAAA,cAAc,EAAE;AAAlB,KAA/B,CAAV;AACAH,IAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBI,IAApB,CAAyB,YAAY;AACjCb,MAAAA,MAAM,CAACc,IAAP,CAAY;AACRC,QAAAA,GAAG,EAAEN,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,gBAAb,EAA+BC,IAA/B,CAAoC,MAApC,CADG;AAERC,QAAAA,IAAI,EAAET,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,gBAAb,EAA+BG,IAA/B,EAFE;AAGRC,QAAAA,KAAK,EAAEX,CAAC,CAAC,IAAD,CAAD,CAAQO,IAAR,CAAa,iBAAb,EAAgCG,IAAhC;AAHC,OAAZ;AAKH,KAND;AAOA,WAAOnB,MAAP;AACH,GAbD;AAeA;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAI,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,MAA5B,EAAoC,UAACqB,OAAD,EAAa;AAC7C,QAAMnB,CAAC,GAAGnB,OAAO,CAACoB,IAAR,CAAakB,OAAb,EAAsB;AAAEhB,MAAAA,cAAc,EAAE;AAAlB,KAAtB,CAAV;AACA,QAAMiB,GAAG,GAAG,EAAZ;AACA,QAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAf,CAH6C,CAI7C;;AACA,QAAMC,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmBC,GAAnB,CAAuB,UAAAC,CAAC;AAAA,aAAI,MAAMA,CAAV;AAAA,KAAxB,EAAqCC,MAArC,CAA4C,UAAAC,CAAC;AAAA,aAAI1B,CAAC,CAAC0B,CAAD,CAAD,CAAK3B,MAAL,GAAc,CAAlB;AAAA,KAA7C,EAAkE4B,KAAlE,CAAwE,CAAxE,EAA2E,CAA3E,CAAb;;AACA,QAAIL,IAAI,CAACvB,MAAL,KAAgB,CAApB,EAAuB;AACnB,aAAOqB,GAAP;AACH;;AACDpB,IAAAA,CAAC,CAACsB,IAAI,CAACpC,IAAL,CAAU,GAAV,CAAD,CAAD,CAAkBkB,IAAlB,CAAuB,YAAY;AAC/B,UAAMwB,KAAK,GAAGN,IAAI,CAACO,OAAL,CAAa,KAAKpB,IAAlB,CAAd;AACA,UAAMqB,EAAE,GAAG9B,CAAC,CAAC,IAAD,CAAD,CAAQQ,IAAR,CAAa,IAAb,CAAX;AACA,UAAME,IAAI,GAAGV,CAAC,CAAC,IAAD,CAAD,CAAQU,IAAR,EAAb;;AAEA,WAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACtB,MAA3B,EAAmCyB,CAAC,EAApC,EAAwC;AACpC,YAAIA,CAAC,GAAGI,KAAR,EAAe;AACXP,UAAAA,MAAM,CAACG,CAAD,CAAN,GAAY,CAAZ;AACH,SAFD,MAEO,IAAIA,CAAC,GAAGI,KAAR,EAAe;AAClB,cAAIP,MAAM,CAACG,CAAD,CAAN,KAAc,CAAlB,EAAqB;AACjB;AACA;AACAH,YAAAA,MAAM,CAACG,CAAD,CAAN,GAAY,CAAZ;AACH;AACJ,SANM,MAMA;AACHH,UAAAA,MAAM,CAACG,CAAD,CAAN,IAAa,CAAb;AACH;AACJ;;AACD,UAAIO,IAAI,GAAGX,GAAX;AAlB+B;AAAA;AAAA;;AAAA;AAmB/B,6BAAcC,MAAM,CAACM,KAAP,CAAa,CAAb,EAAgBC,KAAK,GAAG,CAAxB,CAAd,8HAA0C;AAAA,cAAjCJ,EAAiC;;AACtC,cAAI,CAACO,IAAI,CAACC,cAAL,CAAoBR,EAApB,CAAL,EAA6B;AACzBO,YAAAA,IAAI,CAACP,EAAD,CAAJ,GAAU,EAAV;AACH;;AACDO,UAAAA,IAAI,GAAGA,IAAI,CAACP,EAAD,CAAX;AACH;AAxB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyB/BO,MAAAA,IAAI,CAACD,EAAL,GAAUA,EAAV;AACAC,MAAAA,IAAI,CAACrB,IAAL,GAAYA,IAAZ;AACAqB,MAAAA,IAAI,CAACE,KAAL,GAAaZ,MAAM,CAACM,KAAP,CAAa,CAAb,EAAgBC,KAAK,GAAG,CAAxB,EAA2B1C,IAA3B,CAAgC,GAAhC,CAAb;AACH,KA5BD;AA6BA,WAAOkC,GAAP;AACH,GAvCD;AAyCAzB,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,KAA5B,EAAmC,UAAUQ,GAAV,EAA6C;AAAA,QAA9B4B,KAA8B,uEAAtB,KAAsB;AAAA,QAAfC,KAAe,uEAAP,KAAO;AAC5E,QAAMC,MAAM,GAAGzC,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBwC,GAAnB,CAAuB,SAAvB,EAAkCC,IAAlC,CAAuC,IAAvC,CAAf;;AACA,QAAI,CAAChC,GAAG,CAACiC,QAAJ,CAAa,KAAb,CAAD,IAAwB,CAACjC,GAAG,CAACkC,QAAJ,CAAa,GAAb,CAA7B,EAAgD;AAC5ClC,MAAAA,GAAG,IAAI,KAAP;AACH;;AACD,mCAAuB8B,MAAM,CAAC9B,GAAD,CAA7B,eAAsC6B,KAAK,GAAG,QAAH,GAAc,EAAzD,SAA8DD,KAAK,GAAG,QAAH,GAAc,EAAjF;AACH,GAND;AAQAvC,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,MAA5B,EAAoC,UAAUQ,GAAV,EAAe;AAC/C,QAAM8B,MAAM,GAAGzC,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBwC,GAAnB,CAAuB,SAAvB,EAAkCC,IAAlC,CAAuC,IAAvC,CAAf;;AACA,QAAI,CAAChC,GAAG,CAACiC,QAAJ,CAAa,MAAb,CAAD,IAAyB,CAACjC,GAAG,CAACkC,QAAJ,CAAa,GAAb,CAA9B,EAAiD;AAC7ClC,MAAAA,GAAG,IAAI,MAAP;AACH;;AACD,qDAAuC8B,MAAM,CAAC9B,GAAD,CAA7C;AACH,GAND;AAQAX,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,UAA5B,EAAwC,UAAUW,IAAV,EAAgBgC,MAAhB,EAAsC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAAA,QAClEC,GADkE,GACjC,IADiC,CAClEA,GADkE;AAAA,QAC7DC,OAD6D,GACjC,IADiC,CAC7DA,OAD6D;AAAA,QACpDC,QADoD,GACjC,IADiC,CACpDA,QADoD;AAAA,QAC1CC,IAD0C,GACjC,IADiC,CAC1CA,IAD0C;AAE1E,QAAMC,WAAW,GAAG,KAAKC,QAAL,CAAcC,SAAd,CAAwBJ,QAAQ,CAAC9C,MAAjC,CAApB;;AACA,QAAImD,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,MAAlB,EAA0B;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAA1B,CAAd;;AAH0E,eAK3D1D,IAAI,CAAC2D,KAAL,CAAWC,OAAX,CAAmBrE,IAAI,CAACD,OAAO,CAAC8D,WAAD,CAAR,EAAuBtC,IAAvB,CAAvB,KAAwDd,IAAI,CAAC2D,KAAL,CAAWC,OAAX,CAAmB9C,IAAnB,CALG;AAAA,QAKpE+C,IALoE,QAKpEA,IALoE;;AAM1EA,IAAAA,IAAI,GAAGtE,IAAI,CAAC2D,QAAD,EAAWW,IAAI,CAACP,SAAL,CAAe,CAAf,EAAkBO,IAAI,CAACzD,MAAL,GAAcZ,OAAO,CAACqE,IAAD,CAAP,CAAczD,MAA9C,IAAwD,YAAnE,CAAX;;AAEA,QAAI,CAAChB,UAAU,CAACyE,IAAD,CAAf,EAAuB;AACnB;AACA,aAAOZ,OAAO,CAACnC,IAAD,EAAOgC,MAAP,EAAeC,OAAf,CAAd;AACH;;AAEDQ,IAAAA,OAAO,GAAGpE,OAAO,CAAC0E,IAAD,CAAP,CAAc,IAAd,EAAoBN,OAApB,CAAV;;AACA,QAAIA,OAAO,KAAK,IAAhB,EAAsB;AAClB;AACA,aAAO,EAAP;AACH;;AAED,QAAIA,OAAO,KAAK,KAAhB,EAAuB;AACnB;AACA,aAAON,OAAO,CAACnC,IAAD,EAAOgC,MAAP,EAAeC,OAAf,CAAd;AACH;;AAED,QAAMe,QAAQ,GAAGX,IAAI,CAACY,IAAL,IAAaZ,IAAI,CAACW,QAAnC;AACA,QAAME,QAAQ,GAAG3E,QAAQ,CAAC6D,QAAD,EAAWW,IAAI,CAACP,SAAL,CAAe,CAAf,EAAkBO,IAAI,CAACzD,MAAL,GAAc,aAAaA,MAA7C,CAAX,CAAzB;AACA,QAAM6D,OAAO,GAAG,CAACD,QAAD,EAAWF,QAAX,EAAqBd,GAAG,CAACkB,IAAI,CAACC,SAAL,CAAeZ,OAAf,CAAD,CAAxB,EAAmDhE,IAAnD,CAAwD,GAAxD,CAAhB;;AAEA,QAAI,CAACM,eAAe,CAACuE,GAAhB,CAAoBH,OAApB,CAAL,EAAmC;AAC/BpE,MAAAA,eAAe,CAACwE,GAAhB,CAAoBJ,OAApB,EAA6BhB,OAAO,CAACnC,IAAD,EAAOyC,OAAP,EAAgB;AAAEe,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,IAAI,EAAExB,OAAO,CAACwB,IAAR,IAAgB;AAAtC,OAAhB,CAApC;AACH;;AACD,WAAO1E,eAAe,CAAC6C,GAAhB,CAAoBuB,OAApB,CAAP;AACH,GAhCD;AAiCH,CA1KD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "sourcesContent": [
        "/**\n * Helper functions that override Hexo built-in helpers.\n *\n * @example\n*     <%- _list_archives() %>\n*     <%- _list_categories() %>\n*     <%- _list_tags() %>\n*     <%- _toc(content) %>\n*     <%- _js(url, defer, async) %>\n*     <%- _css(url) %>\n*     <%- _partial(url) %>\n */\nconst cheerio = require('cheerio');\nconst { existsSync } = require('fs');\nconst { relative, dirname, join, extname } = require('path');\nconst { LRUMap } = require('../utils/lru');\n\nconst __archives = [];\nconst __categories = [];\nconst __tags = [];\n\nconst __fragmentCache = new LRUMap(20);\n\nmodule.exports = function (hexo) {\n    hexo.extend.helper.register('_list_archives', function () {\n        if (__archives.length) {\n            return __archives;\n        }\n        const $ = cheerio.load(this.list_archives(), { decodeEntities: false });\n        $('.archive-list-item').each(function () {\n            __archives.push({\n                url: $(this).find('.archive-list-link').attr('href'),\n                name: $(this).find('.archive-list-link').text(),\n                count: $(this).find('.archive-list-count').text()\n            });\n        });\n        return __archives;\n    });\n\n    hexo.extend.helper.register('_list_categories', function () {\n        if (__categories.length) {\n            return __categories;\n        }\n        const $ = cheerio.load(this.list_categories({ depth: 2 }), { decodeEntities: false });\n        function traverse(root) {\n            const categories = [];\n            root.find('> .category-list-item').each(function () {\n                const category = {\n                    url: $(this).find('> .category-list-link').attr('href'),\n                    name: $(this).find('> .category-list-link').text(),\n                    count: $(this).find('> .category-list-count').text()\n                };\n                if ($(this).find('> .category-list-child').length) {\n                    category['children'] = traverse($(this).find('> .category-list-child'));\n                }\n                categories.push(category);\n            });\n            return categories;\n        }\n        __categories.push(...traverse($('.category-list')));\n        return __categories;\n    });\n\n    hexo.extend.helper.register('_list_tags', function () {\n        if (__tags.length) {\n            return __tags;\n        }\n        const $ = cheerio.load(this.list_tags(), { decodeEntities: false });\n        $('.tag-list-item').each(function () {\n            __tags.push({\n                url: $(this).find('.tag-list-link').attr('href'),\n                name: $(this).find('.tag-list-link').text(),\n                count: $(this).find('.tag-list-count').text()\n            });\n        });\n        return __tags;\n    });\n\n    /**\n     * Export a tree of headings of an article\n     * {\n     *    \"1\": {\n     *        \"id\": \"How-to-enable-table-of-content-for-a-post\",\n     *        \"index\": \"1\"\n     *    },\n     *    \"2\": {\n     *        \"1\": {\n     *            \"1\": {\n     *                \"id\": \"Third-level-title\",\n     *                \"index\": \"2.1.1\"\n     *            },\n     *            \"id\": \"Second-level-title\",\n     *            \"index\": \"2.1\"\n     *        },\n     *        \"2\": {\n     *            \"id\": \"Another-second-level-title\",\n     *            \"index\": \"2.2\"\n     *        },\n     *        \"id\": \"First-level-title\",\n     *        \"index\": \"2\"\n     *    }\n     * }\n     */\n    hexo.extend.helper.register('_toc', (content) => {\n        const $ = cheerio.load(content, { decodeEntities: false });\n        const toc = {};\n        const levels = [0, 0, 0];\n        // Get top 3 headings that are present in the content\n        const tags = [1, 2, 3, 4, 5, 6].map(i => 'h' + i).filter(h => $(h).length > 0).slice(0, 3);\n        if (tags.length === 0) {\n            return toc;\n        }\n        $(tags.join(',')).each(function () {\n            const level = tags.indexOf(this.name);\n            const id = $(this).attr('id');\n            const text = $(this).text();\n\n            for (let i = 0; i < levels.length; i++) {\n                if (i > level) {\n                    levels[i] = 0;\n                } else if (i < level) {\n                    if (levels[i] === 0) {\n                        // if headings start with a lower level heading, set the former heading index to 1\n                        // e.g. h3, h2, h1, h2, h3 => 1.1.1, 1.2, 2, 2.1, 2.1.1\n                        levels[i] = 1;\n                    }\n                } else {\n                    levels[i] += 1;\n                }\n            }\n            let node = toc;\n            for (let i of levels.slice(0, level + 1)) {\n                if (!node.hasOwnProperty(i)) {\n                    node[i] = {};\n                }\n                node = node[i];\n            }\n            node.id = id;\n            node.text = text;\n            node.index = levels.slice(0, level + 1).join('.');\n        });\n        return toc;\n    });\n\n    hexo.extend.helper.register('_js', function (url, defer = false, async = false) {\n        const urlFor = hexo.extend.helper.get('url_for').bind(this);\n        if (!url.endsWith('.js') && !url.includes('?')) {\n            url += '.js';\n        }\n        return `<script src=\"${urlFor(url)}\"${async ? ' async' : ''}${defer ? ' defer' : ''}></script>`;\n    });\n\n    hexo.extend.helper.register('_css', function (url) {\n        const urlFor = hexo.extend.helper.get('url_for').bind(this);\n        if (!url.endsWith('.css') && !url.includes('?')) {\n            url += '.css';\n        }\n        return `<link rel=\"stylesheet\" href=\"${urlFor(url)}\">`;\n    });\n\n    hexo.extend.helper.register('_partial', function (name, locals, options = {}) {\n        const { md5, partial, view_dir, page } = this;\n        const currentView = this.filename.substring(view_dir.length);\n        let _locals = Object.assign({}, locals, { layout: false });\n\n        let { path } = hexo.theme.getView(join(dirname(currentView), name)) || hexo.theme.getView(name);\n        path = join(view_dir, path.substring(0, path.length - extname(path).length) + '.locals.js');\n\n        if (!existsSync(path)) {\n            // fallback to default partial\n            return partial(name, locals, options);\n        }\n\n        _locals = require(path)(this, _locals);\n        if (_locals === null) {\n            // partial should be empty\n            return '';\n        }\n\n        if (_locals === false) {\n            // do not cache this fragment\n            return partial(name, locals, options);\n        }\n\n        const language = page.lang || page.language;\n        const fragment = relative(view_dir, path.substring(0, path.length - '.locals.js'.length));\n        const cacheId = [fragment, language, md5(JSON.stringify(_locals))].join('-');\n\n        if (!__fragmentCache.has(cacheId)) {\n            __fragmentCache.set(cacheId, partial(name, _locals, { cache: false, only: options.only || false }));\n        }\n        return __fragmentCache.get(cacheId);\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1577095398479
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/utils\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/utils/lru.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/utils",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/utils/lru.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/utils/lru.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/utils/lru.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/utils",
        "sourceFileName": "lru.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\r\n * A doubly linked list-based Least Recently Used (LRU) cache. Will keep most\r\n * recently used items while discarding least recently used items when its limit\r\n * is reached.\r\n *\r\n * Licensed under MIT. Copyright (c) 2010 Rasmus Andersson <http://hunch.se/>\r\n * See README.md for details.\r\n *\r\n * Illustration of the design:\r\n *\r\n *       entry             entry             entry             entry\r\n *       ______            ______            ______            ______\r\n *      | head |.newer => |      |.newer => |      |.newer => | tail |\r\n *      |  A   |          |  B   |          |  C   |          |  D   |\r\n *      |______| <= older.|______| <= older.|______| <= older.|______|\r\n *\r\n *  removed  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  added\r\n */\n(function (g, f) {\n  var e = (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) == 'object' ? exports : _typeof(g) == 'object' ? g : {};\n  f(e);\n\n  if (typeof define == 'function' && define.amd) {\n    define('lru', e);\n  }\n})(void 0, function (exports) {\n  var NEWER = Symbol('newer');\n  var OLDER = Symbol('older');\n\n  function LRUMap(limit, entries) {\n    if (typeof limit !== 'number') {\n      // called as (entries)\n      entries = limit;\n      limit = 0;\n    }\n\n    this.size = 0;\n    this.limit = limit;\n    this.oldest = this.newest = undefined;\n    this._keymap = new Map();\n\n    if (entries) {\n      this.assign(entries);\n\n      if (limit < 1) {\n        this.limit = this.size;\n      }\n    }\n  }\n\n  exports.LRUMap = LRUMap;\n\n  function Entry(key, value) {\n    this.key = key;\n    this.value = value;\n    this[NEWER] = undefined;\n    this[OLDER] = undefined;\n  }\n\n  LRUMap.prototype._markEntryAsUsed = function (entry) {\n    if (entry === this.newest) {\n      // Already the most recenlty used entry, so no need to update the list\n      return;\n    } // HEAD--------------TAIL\n    //   <.older   .newer>\n    //  <--- add direction --\n    //   A  B  C  <D>  E\n\n\n    if (entry[NEWER]) {\n      if (entry === this.oldest) {\n        this.oldest = entry[NEWER];\n      }\n\n      entry[NEWER][OLDER] = entry[OLDER]; // C <-- E.\n    }\n\n    if (entry[OLDER]) {\n      entry[OLDER][NEWER] = entry[NEWER]; // C. --> E\n    }\n\n    entry[NEWER] = undefined; // D --x\n\n    entry[OLDER] = this.newest; // D. --> E\n\n    if (this.newest) {\n      this.newest[NEWER] = entry; // E. <-- D\n    }\n\n    this.newest = entry;\n  };\n\n  LRUMap.prototype.assign = function (entries) {\n    var entry,\n        limit = this.limit || Number.MAX_VALUE;\n\n    this._keymap.clear();\n\n    var it = entries[Symbol.iterator]();\n\n    for (var itv = it.next(); !itv.done; itv = it.next()) {\n      var e = new Entry(itv.value[0], itv.value[1]);\n\n      this._keymap.set(e.key, e);\n\n      if (!entry) {\n        this.oldest = e;\n      } else {\n        entry[NEWER] = e;\n        e[OLDER] = entry;\n      }\n\n      entry = e;\n\n      if (limit-- == 0) {\n        throw new Error('overflow');\n      }\n    }\n\n    this.newest = entry;\n    this.size = this._keymap.size;\n  };\n\n  LRUMap.prototype.get = function (key) {\n    // First, find our cache entry\n    var entry = this._keymap.get(key);\n\n    if (!entry) return; // Not cached. Sorry.\n    // As <key> was found in the cache, register it as being requested recently\n\n    this._markEntryAsUsed(entry);\n\n    return entry.value;\n  };\n\n  LRUMap.prototype.set = function (key, value) {\n    var entry = this._keymap.get(key);\n\n    if (entry) {\n      // update existing\n      entry.value = value;\n\n      this._markEntryAsUsed(entry);\n\n      return this;\n    } // new entry\n\n\n    this._keymap.set(key, entry = new Entry(key, value));\n\n    if (this.newest) {\n      // link previous tail to the new tail (entry)\n      this.newest[NEWER] = entry;\n      entry[OLDER] = this.newest;\n    } else {\n      // we're first in -- yay\n      this.oldest = entry;\n    } // add new entry to the end of the linked list -- it's now the freshest entry.\n\n\n    this.newest = entry;\n    ++this.size;\n\n    if (this.size > this.limit) {\n      // we hit the limit -- remove the head\n      this.shift();\n    }\n\n    return this;\n  };\n\n  LRUMap.prototype.shift = function () {\n    // todo: handle special case when limit == 1\n    var entry = this.oldest;\n\n    if (entry) {\n      if (this.oldest[NEWER]) {\n        // advance the list\n        this.oldest = this.oldest[NEWER];\n        this.oldest[OLDER] = undefined;\n      } else {\n        // the cache is exhausted\n        this.oldest = undefined;\n        this.newest = undefined;\n      } // Remove last strong reference to <entry> and remove links from the purged\n      // entry being returned:\n\n\n      entry[NEWER] = entry[OLDER] = undefined;\n\n      this._keymap[\"delete\"](entry.key);\n\n      --this.size;\n      return [entry.key, entry.value];\n    }\n  }; // ----------------------------------------------------------------------------\n  // Following code is optional and can be removed without breaking the core\n  // functionality.\n\n\n  LRUMap.prototype.find = function (key) {\n    var e = this._keymap.get(key);\n\n    return e ? e.value : undefined;\n  };\n\n  LRUMap.prototype.has = function (key) {\n    return this._keymap.has(key);\n  };\n\n  LRUMap.prototype['delete'] = function (key) {\n    var entry = this._keymap.get(key);\n\n    if (!entry) return;\n\n    this._keymap[\"delete\"](entry.key);\n\n    if (entry[NEWER] && entry[OLDER]) {\n      // relink the older entry with the newer entry\n      entry[OLDER][NEWER] = entry[NEWER];\n      entry[NEWER][OLDER] = entry[OLDER];\n    } else if (entry[NEWER]) {\n      // remove the link to us\n      entry[NEWER][OLDER] = undefined; // link the newer entry to head\n\n      this.oldest = entry[NEWER];\n    } else if (entry[OLDER]) {\n      // remove the link to us\n      entry[OLDER][NEWER] = undefined; // link the newer entry to head\n\n      this.newest = entry[OLDER];\n    } else {\n      // if(entry[OLDER] === undefined && entry.newer === undefined) {\n      this.oldest = this.newest = undefined;\n    }\n\n    this.size--;\n    return entry.value;\n  };\n\n  LRUMap.prototype.clear = function () {\n    // Not clearing links should be safe, as we don't expose live links to user\n    this.oldest = this.newest = undefined;\n    this.size = 0;\n\n    this._keymap.clear();\n  };\n\n  function EntryIterator(oldestEntry) {\n    this.entry = oldestEntry;\n  }\n\n  EntryIterator.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n  EntryIterator.prototype.next = function () {\n    var ent = this.entry;\n\n    if (ent) {\n      this.entry = ent[NEWER];\n      return {\n        done: false,\n        value: [ent.key, ent.value]\n      };\n    } else {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n  };\n\n  function KeyIterator(oldestEntry) {\n    this.entry = oldestEntry;\n  }\n\n  KeyIterator.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n  KeyIterator.prototype.next = function () {\n    var ent = this.entry;\n\n    if (ent) {\n      this.entry = ent[NEWER];\n      return {\n        done: false,\n        value: ent.key\n      };\n    } else {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n  };\n\n  function ValueIterator(oldestEntry) {\n    this.entry = oldestEntry;\n  }\n\n  ValueIterator.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n  ValueIterator.prototype.next = function () {\n    var ent = this.entry;\n\n    if (ent) {\n      this.entry = ent[NEWER];\n      return {\n        done: false,\n        value: ent.value\n      };\n    } else {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n  };\n\n  LRUMap.prototype.keys = function () {\n    return new KeyIterator(this.oldest);\n  };\n\n  LRUMap.prototype.values = function () {\n    return new ValueIterator(this.oldest);\n  };\n\n  LRUMap.prototype.entries = function () {\n    return this;\n  };\n\n  LRUMap.prototype[Symbol.iterator] = function () {\n    return new EntryIterator(this.oldest);\n  };\n\n  LRUMap.prototype.forEach = function (fun, thisObj) {\n    if (_typeof(thisObj) !== 'object') {\n      thisObj = this;\n    }\n\n    var entry = this.oldest;\n\n    while (entry) {\n      fun.call(thisObj, entry.value, entry.key, this);\n      entry = entry[NEWER];\n    }\n  };\n  /** Returns a JSON (array) representation */\n\n\n  LRUMap.prototype.toJSON = function () {\n    var s = new Array(this.size),\n        i = 0,\n        entry = this.oldest;\n\n    while (entry) {\n      s[i++] = {\n        key: entry.key,\n        value: entry.value\n      };\n      entry = entry[NEWER];\n    }\n\n    return s;\n  };\n  /** Returns a String representation */\n\n\n  LRUMap.prototype.toString = function () {\n    var s = '',\n        entry = this.oldest;\n\n    while (entry) {\n      s += String(entry.key) + ':' + entry.value;\n      entry = entry[NEWER];\n\n      if (entry) {\n        s += ' < ';\n      }\n    }\n\n    return s;\n  };\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "lru.js"
      ],
      "names": [
        "g",
        "f",
        "e",
        "exports",
        "define",
        "amd",
        "NEWER",
        "Symbol",
        "OLDER",
        "LRUMap",
        "limit",
        "entries",
        "size",
        "oldest",
        "newest",
        "undefined",
        "_keymap",
        "Map",
        "assign",
        "Entry",
        "key",
        "value",
        "prototype",
        "_markEntryAsUsed",
        "entry",
        "Number",
        "MAX_VALUE",
        "clear",
        "it",
        "iterator",
        "itv",
        "next",
        "done",
        "set",
        "Error",
        "get",
        "shift",
        "find",
        "has",
        "EntryIterator",
        "oldestEntry",
        "ent",
        "KeyIterator",
        "ValueIterator",
        "keys",
        "values",
        "forEach",
        "fun",
        "thisObj",
        "call",
        "toJSON",
        "s",
        "Array",
        "i",
        "toString",
        "String"
      ],
      "mappings": ";;;;AAAA;;;;;;;;;;;;;;;;;;AAkBA,CAAC,UAAUA,CAAV,EAAaC,CAAb,EAAgB;AACb,MAAMC,CAAC,GAAG,QAAOC,OAAP,yCAAOA,OAAP,MAAkB,QAAlB,GAA6BA,OAA7B,GAAuC,QAAOH,CAAP,KAAY,QAAZ,GAAuBA,CAAvB,GAA2B,EAA5E;AACAC,EAAAA,CAAC,CAACC,CAAD,CAAD;;AACA,MAAI,OAAOE,MAAP,IAAiB,UAAjB,IAA+BA,MAAM,CAACC,GAA1C,EAA+C;AAAED,IAAAA,MAAM,CAAC,KAAD,EAAQF,CAAR,CAAN;AAAmB;AACvE,CAJD,UAIS,UAAUC,OAAV,EAAmB;AAExB,MAAMG,KAAK,GAAGC,MAAM,CAAC,OAAD,CAApB;AACA,MAAMC,KAAK,GAAGD,MAAM,CAAC,OAAD,CAApB;;AAEA,WAASE,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAC5B,QAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC3B;AACAC,MAAAA,OAAO,GAAGD,KAAV;AACAA,MAAAA,KAAK,GAAG,CAAR;AACH;;AAED,SAAKE,IAAL,GAAY,CAAZ;AACA,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAKG,MAAL,GAAc,KAAKC,MAAL,GAAcC,SAA5B;AACA,SAAKC,OAAL,GAAe,IAAIC,GAAJ,EAAf;;AAEA,QAAIN,OAAJ,EAAa;AACT,WAAKO,MAAL,CAAYP,OAAZ;;AACA,UAAID,KAAK,GAAG,CAAZ,EAAe;AACX,aAAKA,KAAL,GAAa,KAAKE,IAAlB;AACH;AACJ;AACJ;;AAEDT,EAAAA,OAAO,CAACM,MAAR,GAAiBA,MAAjB;;AAEA,WAASU,KAAT,CAAeC,GAAf,EAAoBC,KAApB,EAA2B;AACvB,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKf,KAAL,IAAcS,SAAd;AACA,SAAKP,KAAL,IAAcO,SAAd;AACH;;AAGDN,EAAAA,MAAM,CAACa,SAAP,CAAiBC,gBAAjB,GAAoC,UAAUC,KAAV,EAAiB;AACjD,QAAIA,KAAK,KAAK,KAAKV,MAAnB,EAA2B;AACvB;AACA;AACH,KAJgD,CAKjD;AACA;AACA;AACA;;;AACA,QAAIU,KAAK,CAAClB,KAAD,CAAT,EAAkB;AACd,UAAIkB,KAAK,KAAK,KAAKX,MAAnB,EAA2B;AACvB,aAAKA,MAAL,GAAcW,KAAK,CAAClB,KAAD,CAAnB;AACH;;AACDkB,MAAAA,KAAK,CAAClB,KAAD,CAAL,CAAaE,KAAb,IAAsBgB,KAAK,CAAChB,KAAD,CAA3B,CAJc,CAIsB;AACvC;;AACD,QAAIgB,KAAK,CAAChB,KAAD,CAAT,EAAkB;AACdgB,MAAAA,KAAK,CAAChB,KAAD,CAAL,CAAaF,KAAb,IAAsBkB,KAAK,CAAClB,KAAD,CAA3B,CADc,CACsB;AACvC;;AACDkB,IAAAA,KAAK,CAAClB,KAAD,CAAL,GAAeS,SAAf,CAlBiD,CAkBvB;;AAC1BS,IAAAA,KAAK,CAAChB,KAAD,CAAL,GAAe,KAAKM,MAApB,CAnBiD,CAmBrB;;AAC5B,QAAI,KAAKA,MAAT,EAAiB;AACb,WAAKA,MAAL,CAAYR,KAAZ,IAAqBkB,KAArB,CADa,CACe;AAC/B;;AACD,SAAKV,MAAL,GAAcU,KAAd;AACH,GAxBD;;AA0BAf,EAAAA,MAAM,CAACa,SAAP,CAAiBJ,MAAjB,GAA0B,UAAUP,OAAV,EAAmB;AACzC,QAAIa,KAAJ;AAAA,QAAWd,KAAK,GAAG,KAAKA,KAAL,IAAce,MAAM,CAACC,SAAxC;;AACA,SAAKV,OAAL,CAAaW,KAAb;;AACA,QAAIC,EAAE,GAAGjB,OAAO,CAACJ,MAAM,CAACsB,QAAR,CAAP,EAAT;;AACA,SAAK,IAAIC,GAAG,GAAGF,EAAE,CAACG,IAAH,EAAf,EAA0B,CAACD,GAAG,CAACE,IAA/B,EAAqCF,GAAG,GAAGF,EAAE,CAACG,IAAH,EAA3C,EAAsD;AAClD,UAAI7B,CAAC,GAAG,IAAIiB,KAAJ,CAAUW,GAAG,CAACT,KAAJ,CAAU,CAAV,CAAV,EAAwBS,GAAG,CAACT,KAAJ,CAAU,CAAV,CAAxB,CAAR;;AACA,WAAKL,OAAL,CAAaiB,GAAb,CAAiB/B,CAAC,CAACkB,GAAnB,EAAwBlB,CAAxB;;AACA,UAAI,CAACsB,KAAL,EAAY;AACR,aAAKX,MAAL,GAAcX,CAAd;AACH,OAFD,MAEO;AACHsB,QAAAA,KAAK,CAAClB,KAAD,CAAL,GAAeJ,CAAf;AACAA,QAAAA,CAAC,CAACM,KAAD,CAAD,GAAWgB,KAAX;AACH;;AACDA,MAAAA,KAAK,GAAGtB,CAAR;;AACA,UAAIQ,KAAK,MAAM,CAAf,EAAkB;AACd,cAAM,IAAIwB,KAAJ,CAAU,UAAV,CAAN;AACH;AACJ;;AACD,SAAKpB,MAAL,GAAcU,KAAd;AACA,SAAKZ,IAAL,GAAY,KAAKI,OAAL,CAAaJ,IAAzB;AACH,GApBD;;AAsBAH,EAAAA,MAAM,CAACa,SAAP,CAAiBa,GAAjB,GAAuB,UAAUf,GAAV,EAAe;AAClC;AACA,QAAII,KAAK,GAAG,KAAKR,OAAL,CAAamB,GAAb,CAAiBf,GAAjB,CAAZ;;AACA,QAAI,CAACI,KAAL,EAAY,OAHsB,CAGd;AACpB;;AACA,SAAKD,gBAAL,CAAsBC,KAAtB;;AACA,WAAOA,KAAK,CAACH,KAAb;AACH,GAPD;;AASAZ,EAAAA,MAAM,CAACa,SAAP,CAAiBW,GAAjB,GAAuB,UAAUb,GAAV,EAAeC,KAAf,EAAsB;AACzC,QAAIG,KAAK,GAAG,KAAKR,OAAL,CAAamB,GAAb,CAAiBf,GAAjB,CAAZ;;AAEA,QAAII,KAAJ,EAAW;AACP;AACAA,MAAAA,KAAK,CAACH,KAAN,GAAcA,KAAd;;AACA,WAAKE,gBAAL,CAAsBC,KAAtB;;AACA,aAAO,IAAP;AACH,KARwC,CAUzC;;;AACA,SAAKR,OAAL,CAAaiB,GAAb,CAAiBb,GAAjB,EAAuBI,KAAK,GAAG,IAAIL,KAAJ,CAAUC,GAAV,EAAeC,KAAf,CAA/B;;AAEA,QAAI,KAAKP,MAAT,EAAiB;AACb;AACA,WAAKA,MAAL,CAAYR,KAAZ,IAAqBkB,KAArB;AACAA,MAAAA,KAAK,CAAChB,KAAD,CAAL,GAAe,KAAKM,MAApB;AACH,KAJD,MAIO;AACH;AACA,WAAKD,MAAL,GAAcW,KAAd;AACH,KApBwC,CAsBzC;;;AACA,SAAKV,MAAL,GAAcU,KAAd;AACA,MAAE,KAAKZ,IAAP;;AACA,QAAI,KAAKA,IAAL,GAAY,KAAKF,KAArB,EAA4B;AACxB;AACA,WAAK0B,KAAL;AACH;;AAED,WAAO,IAAP;AACH,GA/BD;;AAiCA3B,EAAAA,MAAM,CAACa,SAAP,CAAiBc,KAAjB,GAAyB,YAAY;AACjC;AACA,QAAIZ,KAAK,GAAG,KAAKX,MAAjB;;AACA,QAAIW,KAAJ,EAAW;AACP,UAAI,KAAKX,MAAL,CAAYP,KAAZ,CAAJ,EAAwB;AACpB;AACA,aAAKO,MAAL,GAAc,KAAKA,MAAL,CAAYP,KAAZ,CAAd;AACA,aAAKO,MAAL,CAAYL,KAAZ,IAAqBO,SAArB;AACH,OAJD,MAIO;AACH;AACA,aAAKF,MAAL,GAAcE,SAAd;AACA,aAAKD,MAAL,GAAcC,SAAd;AACH,OATM,CAUP;AACA;;;AACAS,MAAAA,KAAK,CAAClB,KAAD,CAAL,GAAekB,KAAK,CAAChB,KAAD,CAAL,GAAeO,SAA9B;;AACA,WAAKC,OAAL,WAAoBQ,KAAK,CAACJ,GAA1B;;AACA,QAAE,KAAKR,IAAP;AACA,aAAO,CAACY,KAAK,CAACJ,GAAP,EAAYI,KAAK,CAACH,KAAlB,CAAP;AACH;AACJ,GApBD,CA7HwB,CAmJxB;AACA;AACA;;;AAEAZ,EAAAA,MAAM,CAACa,SAAP,CAAiBe,IAAjB,GAAwB,UAAUjB,GAAV,EAAe;AACnC,QAAIlB,CAAC,GAAG,KAAKc,OAAL,CAAamB,GAAb,CAAiBf,GAAjB,CAAR;;AACA,WAAOlB,CAAC,GAAGA,CAAC,CAACmB,KAAL,GAAaN,SAArB;AACH,GAHD;;AAKAN,EAAAA,MAAM,CAACa,SAAP,CAAiBgB,GAAjB,GAAuB,UAAUlB,GAAV,EAAe;AAClC,WAAO,KAAKJ,OAAL,CAAasB,GAAb,CAAiBlB,GAAjB,CAAP;AACH,GAFD;;AAIAX,EAAAA,MAAM,CAACa,SAAP,CAAiB,QAAjB,IAA6B,UAAUF,GAAV,EAAe;AACxC,QAAII,KAAK,GAAG,KAAKR,OAAL,CAAamB,GAAb,CAAiBf,GAAjB,CAAZ;;AACA,QAAI,CAACI,KAAL,EAAY;;AACZ,SAAKR,OAAL,WAAoBQ,KAAK,CAACJ,GAA1B;;AACA,QAAII,KAAK,CAAClB,KAAD,CAAL,IAAgBkB,KAAK,CAAChB,KAAD,CAAzB,EAAkC;AAC9B;AACAgB,MAAAA,KAAK,CAAChB,KAAD,CAAL,CAAaF,KAAb,IAAsBkB,KAAK,CAAClB,KAAD,CAA3B;AACAkB,MAAAA,KAAK,CAAClB,KAAD,CAAL,CAAaE,KAAb,IAAsBgB,KAAK,CAAChB,KAAD,CAA3B;AACH,KAJD,MAIO,IAAIgB,KAAK,CAAClB,KAAD,CAAT,EAAkB;AACrB;AACAkB,MAAAA,KAAK,CAAClB,KAAD,CAAL,CAAaE,KAAb,IAAsBO,SAAtB,CAFqB,CAGrB;;AACA,WAAKF,MAAL,GAAcW,KAAK,CAAClB,KAAD,CAAnB;AACH,KALM,MAKA,IAAIkB,KAAK,CAAChB,KAAD,CAAT,EAAkB;AACrB;AACAgB,MAAAA,KAAK,CAAChB,KAAD,CAAL,CAAaF,KAAb,IAAsBS,SAAtB,CAFqB,CAGrB;;AACA,WAAKD,MAAL,GAAcU,KAAK,CAAChB,KAAD,CAAnB;AACH,KALM,MAKA;AAAC;AACJ,WAAKK,MAAL,GAAc,KAAKC,MAAL,GAAcC,SAA5B;AACH;;AAED,SAAKH,IAAL;AACA,WAAOY,KAAK,CAACH,KAAb;AACH,GAxBD;;AA0BAZ,EAAAA,MAAM,CAACa,SAAP,CAAiBK,KAAjB,GAAyB,YAAY;AACjC;AACA,SAAKd,MAAL,GAAc,KAAKC,MAAL,GAAcC,SAA5B;AACA,SAAKH,IAAL,GAAY,CAAZ;;AACA,SAAKI,OAAL,CAAaW,KAAb;AACH,GALD;;AAQA,WAASY,aAAT,CAAuBC,WAAvB,EAAoC;AAAE,SAAKhB,KAAL,GAAagB,WAAb;AAA2B;;AACjED,EAAAA,aAAa,CAACjB,SAAd,CAAwBf,MAAM,CAACsB,QAA/B,IAA2C,YAAY;AAAE,WAAO,IAAP;AAAc,GAAvE;;AACAU,EAAAA,aAAa,CAACjB,SAAd,CAAwBS,IAAxB,GAA+B,YAAY;AACvC,QAAIU,GAAG,GAAG,KAAKjB,KAAf;;AACA,QAAIiB,GAAJ,EAAS;AACL,WAAKjB,KAAL,GAAaiB,GAAG,CAACnC,KAAD,CAAhB;AACA,aAAO;AAAE0B,QAAAA,IAAI,EAAE,KAAR;AAAeX,QAAAA,KAAK,EAAE,CAACoB,GAAG,CAACrB,GAAL,EAAUqB,GAAG,CAACpB,KAAd;AAAtB,OAAP;AACH,KAHD,MAGO;AACH,aAAO;AAAEW,QAAAA,IAAI,EAAE,IAAR;AAAcX,QAAAA,KAAK,EAAEN;AAArB,OAAP;AACH;AACJ,GARD;;AAWA,WAAS2B,WAAT,CAAqBF,WAArB,EAAkC;AAAE,SAAKhB,KAAL,GAAagB,WAAb;AAA2B;;AAC/DE,EAAAA,WAAW,CAACpB,SAAZ,CAAsBf,MAAM,CAACsB,QAA7B,IAAyC,YAAY;AAAE,WAAO,IAAP;AAAc,GAArE;;AACAa,EAAAA,WAAW,CAACpB,SAAZ,CAAsBS,IAAtB,GAA6B,YAAY;AACrC,QAAIU,GAAG,GAAG,KAAKjB,KAAf;;AACA,QAAIiB,GAAJ,EAAS;AACL,WAAKjB,KAAL,GAAaiB,GAAG,CAACnC,KAAD,CAAhB;AACA,aAAO;AAAE0B,QAAAA,IAAI,EAAE,KAAR;AAAeX,QAAAA,KAAK,EAAEoB,GAAG,CAACrB;AAA1B,OAAP;AACH,KAHD,MAGO;AACH,aAAO;AAAEY,QAAAA,IAAI,EAAE,IAAR;AAAcX,QAAAA,KAAK,EAAEN;AAArB,OAAP;AACH;AACJ,GARD;;AAUA,WAAS4B,aAAT,CAAuBH,WAAvB,EAAoC;AAAE,SAAKhB,KAAL,GAAagB,WAAb;AAA2B;;AACjEG,EAAAA,aAAa,CAACrB,SAAd,CAAwBf,MAAM,CAACsB,QAA/B,IAA2C,YAAY;AAAE,WAAO,IAAP;AAAc,GAAvE;;AACAc,EAAAA,aAAa,CAACrB,SAAd,CAAwBS,IAAxB,GAA+B,YAAY;AACvC,QAAIU,GAAG,GAAG,KAAKjB,KAAf;;AACA,QAAIiB,GAAJ,EAAS;AACL,WAAKjB,KAAL,GAAaiB,GAAG,CAACnC,KAAD,CAAhB;AACA,aAAO;AAAE0B,QAAAA,IAAI,EAAE,KAAR;AAAeX,QAAAA,KAAK,EAAEoB,GAAG,CAACpB;AAA1B,OAAP;AACH,KAHD,MAGO;AACH,aAAO;AAAEW,QAAAA,IAAI,EAAE,IAAR;AAAcX,QAAAA,KAAK,EAAEN;AAArB,OAAP;AACH;AACJ,GARD;;AAWAN,EAAAA,MAAM,CAACa,SAAP,CAAiBsB,IAAjB,GAAwB,YAAY;AAChC,WAAO,IAAIF,WAAJ,CAAgB,KAAK7B,MAArB,CAAP;AACH,GAFD;;AAIAJ,EAAAA,MAAM,CAACa,SAAP,CAAiBuB,MAAjB,GAA0B,YAAY;AAClC,WAAO,IAAIF,aAAJ,CAAkB,KAAK9B,MAAvB,CAAP;AACH,GAFD;;AAIAJ,EAAAA,MAAM,CAACa,SAAP,CAAiBX,OAAjB,GAA2B,YAAY;AACnC,WAAO,IAAP;AACH,GAFD;;AAIAF,EAAAA,MAAM,CAACa,SAAP,CAAiBf,MAAM,CAACsB,QAAxB,IAAoC,YAAY;AAC5C,WAAO,IAAIU,aAAJ,CAAkB,KAAK1B,MAAvB,CAAP;AACH,GAFD;;AAIAJ,EAAAA,MAAM,CAACa,SAAP,CAAiBwB,OAAjB,GAA2B,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AAC/C,QAAI,QAAOA,OAAP,MAAmB,QAAvB,EAAiC;AAC7BA,MAAAA,OAAO,GAAG,IAAV;AACH;;AACD,QAAIxB,KAAK,GAAG,KAAKX,MAAjB;;AACA,WAAOW,KAAP,EAAc;AACVuB,MAAAA,GAAG,CAACE,IAAJ,CAASD,OAAT,EAAkBxB,KAAK,CAACH,KAAxB,EAA+BG,KAAK,CAACJ,GAArC,EAA0C,IAA1C;AACAI,MAAAA,KAAK,GAAGA,KAAK,CAAClB,KAAD,CAAb;AACH;AACJ,GATD;AAWA;;;AACAG,EAAAA,MAAM,CAACa,SAAP,CAAiB4B,MAAjB,GAA0B,YAAY;AAClC,QAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,KAAKxC,IAAf,CAAR;AAAA,QAA8ByC,CAAC,GAAG,CAAlC;AAAA,QAAqC7B,KAAK,GAAG,KAAKX,MAAlD;;AACA,WAAOW,KAAP,EAAc;AACV2B,MAAAA,CAAC,CAACE,CAAC,EAAF,CAAD,GAAS;AAAEjC,QAAAA,GAAG,EAAEI,KAAK,CAACJ,GAAb;AAAkBC,QAAAA,KAAK,EAAEG,KAAK,CAACH;AAA/B,OAAT;AACAG,MAAAA,KAAK,GAAGA,KAAK,CAAClB,KAAD,CAAb;AACH;;AACD,WAAO6C,CAAP;AACH,GAPD;AASA;;;AACA1C,EAAAA,MAAM,CAACa,SAAP,CAAiBgC,QAAjB,GAA4B,YAAY;AACpC,QAAIH,CAAC,GAAG,EAAR;AAAA,QAAY3B,KAAK,GAAG,KAAKX,MAAzB;;AACA,WAAOW,KAAP,EAAc;AACV2B,MAAAA,CAAC,IAAII,MAAM,CAAC/B,KAAK,CAACJ,GAAP,CAAN,GAAoB,GAApB,GAA0BI,KAAK,CAACH,KAArC;AACAG,MAAAA,KAAK,GAAGA,KAAK,CAAClB,KAAD,CAAb;;AACA,UAAIkB,KAAJ,EAAW;AACP2B,QAAAA,CAAC,IAAI,KAAL;AACH;AACJ;;AACD,WAAOA,CAAP;AACH,GAVD;AAYH,CA9RD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/utils",
      "sourcesContent": [
        "/**\r\n * A doubly linked list-based Least Recently Used (LRU) cache. Will keep most\r\n * recently used items while discarding least recently used items when its limit\r\n * is reached.\r\n *\r\n * Licensed under MIT. Copyright (c) 2010 Rasmus Andersson <http://hunch.se/>\r\n * See README.md for details.\r\n *\r\n * Illustration of the design:\r\n *\r\n *       entry             entry             entry             entry\r\n *       ______            ______            ______            ______\r\n *      | head |.newer => |      |.newer => |      |.newer => | tail |\r\n *      |  A   |          |  B   |          |  C   |          |  D   |\r\n *      |______| <= older.|______| <= older.|______| <= older.|______|\r\n *\r\n *  removed  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  added\r\n */\r\n(function (g, f) {\r\n    const e = typeof exports == 'object' ? exports : typeof g == 'object' ? g : {};\r\n    f(e);\r\n    if (typeof define == 'function' && define.amd) { define('lru', e); }\r\n})(this, function (exports) {\r\n\r\n    const NEWER = Symbol('newer');\r\n    const OLDER = Symbol('older');\r\n\r\n    function LRUMap(limit, entries) {\r\n        if (typeof limit !== 'number') {\r\n            // called as (entries)\r\n            entries = limit;\r\n            limit = 0;\r\n        }\r\n\r\n        this.size = 0;\r\n        this.limit = limit;\r\n        this.oldest = this.newest = undefined;\r\n        this._keymap = new Map();\r\n\r\n        if (entries) {\r\n            this.assign(entries);\r\n            if (limit < 1) {\r\n                this.limit = this.size;\r\n            }\r\n        }\r\n    }\r\n\r\n    exports.LRUMap = LRUMap;\r\n\r\n    function Entry(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this[NEWER] = undefined;\r\n        this[OLDER] = undefined;\r\n    }\r\n\r\n\r\n    LRUMap.prototype._markEntryAsUsed = function (entry) {\r\n        if (entry === this.newest) {\r\n            // Already the most recenlty used entry, so no need to update the list\r\n            return;\r\n        }\r\n        // HEAD--------------TAIL\r\n        //   <.older   .newer>\r\n        //  <--- add direction --\r\n        //   A  B  C  <D>  E\r\n        if (entry[NEWER]) {\r\n            if (entry === this.oldest) {\r\n                this.oldest = entry[NEWER];\r\n            }\r\n            entry[NEWER][OLDER] = entry[OLDER]; // C <-- E.\r\n        }\r\n        if (entry[OLDER]) {\r\n            entry[OLDER][NEWER] = entry[NEWER]; // C. --> E\r\n        }\r\n        entry[NEWER] = undefined; // D --x\r\n        entry[OLDER] = this.newest; // D. --> E\r\n        if (this.newest) {\r\n            this.newest[NEWER] = entry; // E. <-- D\r\n        }\r\n        this.newest = entry;\r\n    };\r\n\r\n    LRUMap.prototype.assign = function (entries) {\r\n        let entry, limit = this.limit || Number.MAX_VALUE;\r\n        this._keymap.clear();\r\n        let it = entries[Symbol.iterator]();\r\n        for (let itv = it.next(); !itv.done; itv = it.next()) {\r\n            let e = new Entry(itv.value[0], itv.value[1]);\r\n            this._keymap.set(e.key, e);\r\n            if (!entry) {\r\n                this.oldest = e;\r\n            } else {\r\n                entry[NEWER] = e;\r\n                e[OLDER] = entry;\r\n            }\r\n            entry = e;\r\n            if (limit-- == 0) {\r\n                throw new Error('overflow');\r\n            }\r\n        }\r\n        this.newest = entry;\r\n        this.size = this._keymap.size;\r\n    };\r\n\r\n    LRUMap.prototype.get = function (key) {\r\n        // First, find our cache entry\r\n        var entry = this._keymap.get(key);\r\n        if (!entry) return; // Not cached. Sorry.\r\n        // As <key> was found in the cache, register it as being requested recently\r\n        this._markEntryAsUsed(entry);\r\n        return entry.value;\r\n    };\r\n\r\n    LRUMap.prototype.set = function (key, value) {\r\n        var entry = this._keymap.get(key);\r\n\r\n        if (entry) {\r\n            // update existing\r\n            entry.value = value;\r\n            this._markEntryAsUsed(entry);\r\n            return this;\r\n        }\r\n\r\n        // new entry\r\n        this._keymap.set(key, (entry = new Entry(key, value)));\r\n\r\n        if (this.newest) {\r\n            // link previous tail to the new tail (entry)\r\n            this.newest[NEWER] = entry;\r\n            entry[OLDER] = this.newest;\r\n        } else {\r\n            // we're first in -- yay\r\n            this.oldest = entry;\r\n        }\r\n\r\n        // add new entry to the end of the linked list -- it's now the freshest entry.\r\n        this.newest = entry;\r\n        ++this.size;\r\n        if (this.size > this.limit) {\r\n            // we hit the limit -- remove the head\r\n            this.shift();\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    LRUMap.prototype.shift = function () {\r\n        // todo: handle special case when limit == 1\r\n        var entry = this.oldest;\r\n        if (entry) {\r\n            if (this.oldest[NEWER]) {\r\n                // advance the list\r\n                this.oldest = this.oldest[NEWER];\r\n                this.oldest[OLDER] = undefined;\r\n            } else {\r\n                // the cache is exhausted\r\n                this.oldest = undefined;\r\n                this.newest = undefined;\r\n            }\r\n            // Remove last strong reference to <entry> and remove links from the purged\r\n            // entry being returned:\r\n            entry[NEWER] = entry[OLDER] = undefined;\r\n            this._keymap.delete(entry.key);\r\n            --this.size;\r\n            return [entry.key, entry.value];\r\n        }\r\n    };\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // Following code is optional and can be removed without breaking the core\r\n    // functionality.\r\n\r\n    LRUMap.prototype.find = function (key) {\r\n        let e = this._keymap.get(key);\r\n        return e ? e.value : undefined;\r\n    };\r\n\r\n    LRUMap.prototype.has = function (key) {\r\n        return this._keymap.has(key);\r\n    };\r\n\r\n    LRUMap.prototype['delete'] = function (key) {\r\n        var entry = this._keymap.get(key);\r\n        if (!entry) return;\r\n        this._keymap.delete(entry.key);\r\n        if (entry[NEWER] && entry[OLDER]) {\r\n            // relink the older entry with the newer entry\r\n            entry[OLDER][NEWER] = entry[NEWER];\r\n            entry[NEWER][OLDER] = entry[OLDER];\r\n        } else if (entry[NEWER]) {\r\n            // remove the link to us\r\n            entry[NEWER][OLDER] = undefined;\r\n            // link the newer entry to head\r\n            this.oldest = entry[NEWER];\r\n        } else if (entry[OLDER]) {\r\n            // remove the link to us\r\n            entry[OLDER][NEWER] = undefined;\r\n            // link the newer entry to head\r\n            this.newest = entry[OLDER];\r\n        } else {// if(entry[OLDER] === undefined && entry.newer === undefined) {\r\n            this.oldest = this.newest = undefined;\r\n        }\r\n\r\n        this.size--;\r\n        return entry.value;\r\n    };\r\n\r\n    LRUMap.prototype.clear = function () {\r\n        // Not clearing links should be safe, as we don't expose live links to user\r\n        this.oldest = this.newest = undefined;\r\n        this.size = 0;\r\n        this._keymap.clear();\r\n    };\r\n\r\n\r\n    function EntryIterator(oldestEntry) { this.entry = oldestEntry; }\r\n    EntryIterator.prototype[Symbol.iterator] = function () { return this; }\r\n    EntryIterator.prototype.next = function () {\r\n        let ent = this.entry;\r\n        if (ent) {\r\n            this.entry = ent[NEWER];\r\n            return { done: false, value: [ent.key, ent.value] };\r\n        } else {\r\n            return { done: true, value: undefined };\r\n        }\r\n    };\r\n\r\n\r\n    function KeyIterator(oldestEntry) { this.entry = oldestEntry; }\r\n    KeyIterator.prototype[Symbol.iterator] = function () { return this; }\r\n    KeyIterator.prototype.next = function () {\r\n        let ent = this.entry;\r\n        if (ent) {\r\n            this.entry = ent[NEWER];\r\n            return { done: false, value: ent.key };\r\n        } else {\r\n            return { done: true, value: undefined };\r\n        }\r\n    };\r\n\r\n    function ValueIterator(oldestEntry) { this.entry = oldestEntry; }\r\n    ValueIterator.prototype[Symbol.iterator] = function () { return this; }\r\n    ValueIterator.prototype.next = function () {\r\n        let ent = this.entry;\r\n        if (ent) {\r\n            this.entry = ent[NEWER];\r\n            return { done: false, value: ent.value };\r\n        } else {\r\n            return { done: true, value: undefined };\r\n        }\r\n    };\r\n\r\n\r\n    LRUMap.prototype.keys = function () {\r\n        return new KeyIterator(this.oldest);\r\n    };\r\n\r\n    LRUMap.prototype.values = function () {\r\n        return new ValueIterator(this.oldest);\r\n    };\r\n\r\n    LRUMap.prototype.entries = function () {\r\n        return this;\r\n    };\r\n\r\n    LRUMap.prototype[Symbol.iterator] = function () {\r\n        return new EntryIterator(this.oldest);\r\n    };\r\n\r\n    LRUMap.prototype.forEach = function (fun, thisObj) {\r\n        if (typeof thisObj !== 'object') {\r\n            thisObj = this;\r\n        }\r\n        let entry = this.oldest;\r\n        while (entry) {\r\n            fun.call(thisObj, entry.value, entry.key, this);\r\n            entry = entry[NEWER];\r\n        }\r\n    };\r\n\r\n    /** Returns a JSON (array) representation */\r\n    LRUMap.prototype.toJSON = function () {\r\n        var s = new Array(this.size), i = 0, entry = this.oldest;\r\n        while (entry) {\r\n            s[i++] = { key: entry.key, value: entry.value };\r\n            entry = entry[NEWER];\r\n        }\r\n        return s;\r\n    };\r\n\r\n    /** Returns a String representation */\r\n    LRUMap.prototype.toString = function () {\r\n        var s = '', entry = this.oldest;\r\n        while (entry) {\r\n            s += String(entry.key) + ':' + entry.value;\r\n            entry = entry[NEWER];\r\n            if (entry) {\r\n                s += ' < ';\r\n            }\r\n        }\r\n        return s;\r\n    };\r\n\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1577095442579
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/helpers/page.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/helpers/page.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/helpers/page.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/helpers/page.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
        "sourceFileName": "page.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n* Helper functions for page/post.\n*\n* @example\n*     <%- is_categories(page) %>\n*     <%- is_tags(page) %>\n*     <%- page_title(page) %>\n*     <%- has_thumbnail(post) %>\n*     <%- get_thumbnail(post) %>\n*     <%- get_og_image(post) %>\n*/\nmodule.exports = function (hexo) {\n  hexo.extend.helper.register('is_categories', function () {\n    var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return (page === null ? this.page : page).__categories;\n  });\n  hexo.extend.helper.register('is_tags', function () {\n    var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return (page === null ? this.page : page).__tags;\n  });\n  /**\n   * Generate html head title based on page type\n   */\n\n  hexo.extend.helper.register('page_title', function () {\n    var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    page = page === null ? this.page : page;\n    var title = page.title;\n\n    if (this.is_archive()) {\n      title = this._p('common.archive', Infinity);\n\n      if (this.is_month()) {\n        title += ': ' + page.year + '/' + page.month;\n      } else if (this.is_year()) {\n        title += ': ' + page.year;\n      }\n    } else if (this.is_category()) {\n      title = this._p('common.category', 1) + ': ' + page.category;\n    } else if (this.is_tag()) {\n      title = this._p('common.tag', 1) + ': ' + page.tag;\n    } else if (this.is_categories()) {\n      title = this._p('common.category', Infinity);\n    } else if (this.is_tags()) {\n      title = this._p('common.tag', Infinity);\n    }\n\n    var siteTitle = hexo.extend.helper.get('get_config').bind(this)('title', '', true);\n    return [title, siteTitle].filter(function (str) {\n      return typeof str !== 'undefined' && str.trim() !== '';\n    }).join(' - ');\n  });\n  hexo.extend.helper.register('has_thumbnail', function (post) {\n    var getConfig = hexo.extend.helper.get('get_config').bind(this);\n    var allowThumbnail = getConfig('article.thumbnail', true);\n\n    if (!allowThumbnail) {\n      return false;\n    }\n\n    return post.hasOwnProperty('thumbnail') && post.thumbnail;\n  });\n  hexo.extend.helper.register('get_thumbnail', function (post) {\n    var hasThumbnail = hexo.extend.helper.get('has_thumbnail').bind(this)(post);\n    return this.url_for(hasThumbnail ? post.thumbnail : 'images/thumbnail.svg');\n  });\n  hexo.extend.helper.register('has_og_image', function (post) {\n    return post.hasOwnProperty('og_image');\n  });\n  hexo.extend.helper.register('get_og_image', function (post) {\n    var getConfig = hexo.extend.helper.get('get_config').bind(this);\n    var hasConfig = hexo.extend.helper.get('has_config').bind(this);\n    var hasOGImage = hexo.extend.helper.get('has_og_image').bind(this)(post);\n    var hasThumbnail = hexo.extend.helper.get('has_thumbnail').bind(this)(post);\n    var getThumbnail = hexo.extend.helper.get('get_thumbnail').bind(this);\n    var og_image;\n    if (hasOGImage) og_image = post.og_image;else if (hasThumbnail) og_image = getThumbnail(post);else og_image = getConfig('article.og_image', '/images/og_image.png');\n    return this.url_for(og_image);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "page.js"
      ],
      "names": [
        "module",
        "exports",
        "hexo",
        "extend",
        "helper",
        "register",
        "page",
        "__categories",
        "__tags",
        "title",
        "is_archive",
        "_p",
        "Infinity",
        "is_month",
        "year",
        "month",
        "is_year",
        "is_category",
        "category",
        "is_tag",
        "tag",
        "is_categories",
        "is_tags",
        "siteTitle",
        "get",
        "bind",
        "filter",
        "str",
        "trim",
        "join",
        "post",
        "getConfig",
        "allowThumbnail",
        "hasOwnProperty",
        "thumbnail",
        "hasThumbnail",
        "url_for",
        "hasConfig",
        "hasOGImage",
        "getThumbnail",
        "og_image"
      ],
      "mappings": ";;AAAA;;;;;;;;;;;AAWAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,eAA5B,EAA6C,YAAuB;AAAA,QAAbC,IAAa,uEAAN,IAAM;AAChE,WAAO,CAACA,IAAI,KAAK,IAAT,GAAgB,KAAKA,IAArB,GAA4BA,IAA7B,EAAmCC,YAA1C;AACH,GAFD;AAIAL,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,SAA5B,EAAuC,YAAuB;AAAA,QAAbC,IAAa,uEAAN,IAAM;AAC1D,WAAO,CAACA,IAAI,KAAK,IAAT,GAAgB,KAAKA,IAArB,GAA4BA,IAA7B,EAAmCE,MAA1C;AACH,GAFD;AAIA;;;;AAGAN,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,YAAuB;AAAA,QAAbC,IAAa,uEAAN,IAAM;AAC7DA,IAAAA,IAAI,GAAGA,IAAI,KAAK,IAAT,GAAgB,KAAKA,IAArB,GAA4BA,IAAnC;AACA,QAAIG,KAAK,GAAGH,IAAI,CAACG,KAAjB;;AAEA,QAAI,KAAKC,UAAL,EAAJ,EAAuB;AACnBD,MAAAA,KAAK,GAAG,KAAKE,EAAL,CAAQ,gBAAR,EAA0BC,QAA1B,CAAR;;AACA,UAAI,KAAKC,QAAL,EAAJ,EAAqB;AACjBJ,QAAAA,KAAK,IAAI,OAAOH,IAAI,CAACQ,IAAZ,GAAmB,GAAnB,GAAyBR,IAAI,CAACS,KAAvC;AACH,OAFD,MAEO,IAAI,KAAKC,OAAL,EAAJ,EAAoB;AACvBP,QAAAA,KAAK,IAAI,OAAOH,IAAI,CAACQ,IAArB;AACH;AACJ,KAPD,MAOO,IAAI,KAAKG,WAAL,EAAJ,EAAwB;AAC3BR,MAAAA,KAAK,GAAG,KAAKE,EAAL,CAAQ,iBAAR,EAA2B,CAA3B,IAAgC,IAAhC,GAAuCL,IAAI,CAACY,QAApD;AACH,KAFM,MAEA,IAAI,KAAKC,MAAL,EAAJ,EAAmB;AACtBV,MAAAA,KAAK,GAAG,KAAKE,EAAL,CAAQ,YAAR,EAAsB,CAAtB,IAA2B,IAA3B,GAAkCL,IAAI,CAACc,GAA/C;AACH,KAFM,MAEA,IAAI,KAAKC,aAAL,EAAJ,EAA0B;AAC7BZ,MAAAA,KAAK,GAAG,KAAKE,EAAL,CAAQ,iBAAR,EAA2BC,QAA3B,CAAR;AACH,KAFM,MAEA,IAAI,KAAKU,OAAL,EAAJ,EAAoB;AACvBb,MAAAA,KAAK,GAAG,KAAKE,EAAL,CAAQ,YAAR,EAAsBC,QAAtB,CAAR;AACH;;AAED,QAAMW,SAAS,GAAGrB,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBoB,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,EAAgD,OAAhD,EAAyD,EAAzD,EAA6D,IAA7D,CAAlB;AACA,WAAO,CAAChB,KAAD,EAAQc,SAAR,EAAmBG,MAAnB,CAA0B,UAAAC,GAAG;AAAA,aAAI,OAAQA,GAAR,KAAiB,WAAjB,IAAgCA,GAAG,CAACC,IAAJ,OAAe,EAAnD;AAAA,KAA7B,EAAoFC,IAApF,CAAyF,KAAzF,CAAP;AACH,GAvBD;AAyBA3B,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,eAA5B,EAA6C,UAAUyB,IAAV,EAAgB;AACzD,QAAMC,SAAS,GAAG7B,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBoB,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,CAAlB;AACA,QAAMO,cAAc,GAAGD,SAAS,CAAC,mBAAD,EAAsB,IAAtB,CAAhC;;AACA,QAAI,CAACC,cAAL,EAAqB;AACjB,aAAO,KAAP;AACH;;AACD,WAAOF,IAAI,CAACG,cAAL,CAAoB,WAApB,KAAoCH,IAAI,CAACI,SAAhD;AACH,GAPD;AASAhC,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,eAA5B,EAA6C,UAAUyB,IAAV,EAAgB;AACzD,QAAMK,YAAY,GAAGjC,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBoB,GAAnB,CAAuB,eAAvB,EAAwCC,IAAxC,CAA6C,IAA7C,EAAmDK,IAAnD,CAArB;AACA,WAAO,KAAKM,OAAL,CAAaD,YAAY,GAAGL,IAAI,CAACI,SAAR,GAAoB,sBAA7C,CAAP;AACH,GAHD;AAKAhC,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,cAA5B,EAA4C,UAAUyB,IAAV,EAAgB;AACxD,WAAOA,IAAI,CAACG,cAAL,CAAoB,UAApB,CAAP;AACH,GAFD;AAIA/B,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,cAA5B,EAA4C,UAAUyB,IAAV,EAAgB;AACxD,QAAMC,SAAS,GAAG7B,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBoB,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,CAAlB;AACA,QAAMY,SAAS,GAAGnC,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBoB,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,CAAlB;AAEA,QAAMa,UAAU,GAAGpC,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBoB,GAAnB,CAAuB,cAAvB,EAAuCC,IAAvC,CAA4C,IAA5C,EAAkDK,IAAlD,CAAnB;AACA,QAAMK,YAAY,GAAGjC,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBoB,GAAnB,CAAuB,eAAvB,EAAwCC,IAAxC,CAA6C,IAA7C,EAAmDK,IAAnD,CAArB;AAEA,QAAMS,YAAY,GAAGrC,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBoB,GAAnB,CAAuB,eAAvB,EAAwCC,IAAxC,CAA6C,IAA7C,CAArB;AAEA,QAAIe,QAAJ;AAEA,QAAIF,UAAJ,EACIE,QAAQ,GAAGV,IAAI,CAACU,QAAhB,CADJ,KAEK,IAAIL,YAAJ,EACDK,QAAQ,GAAGD,YAAY,CAACT,IAAD,CAAvB,CADC,KAGDU,QAAQ,GAAGT,SAAS,CAAC,kBAAD,EAAqB,sBAArB,CAApB;AAEJ,WAAO,KAAKK,OAAL,CAAaI,QAAb,CAAP;AACH,GAnBD;AAoBH,CA3ED",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "sourcesContent": [
        "/**\n* Helper functions for page/post.\n*\n* @example\n*     <%- is_categories(page) %>\n*     <%- is_tags(page) %>\n*     <%- page_title(page) %>\n*     <%- has_thumbnail(post) %>\n*     <%- get_thumbnail(post) %>\n*     <%- get_og_image(post) %>\n*/\nmodule.exports = function (hexo) {\n    hexo.extend.helper.register('is_categories', function (page = null) {\n        return (page === null ? this.page : page).__categories;\n    });\n\n    hexo.extend.helper.register('is_tags', function (page = null) {\n        return (page === null ? this.page : page).__tags;\n    });\n\n    /**\n     * Generate html head title based on page type\n     */\n    hexo.extend.helper.register('page_title', function (page = null) {\n        page = page === null ? this.page : page;\n        let title = page.title;\n\n        if (this.is_archive()) {\n            title = this._p('common.archive', Infinity);\n            if (this.is_month()) {\n                title += ': ' + page.year + '/' + page.month;\n            } else if (this.is_year()) {\n                title += ': ' + page.year;\n            }\n        } else if (this.is_category()) {\n            title = this._p('common.category', 1) + ': ' + page.category;\n        } else if (this.is_tag()) {\n            title = this._p('common.tag', 1) + ': ' + page.tag;\n        } else if (this.is_categories()) {\n            title = this._p('common.category', Infinity);\n        } else if (this.is_tags()) {\n            title = this._p('common.tag', Infinity);\n        }\n\n        const siteTitle = hexo.extend.helper.get('get_config').bind(this)('title', '', true);\n        return [title, siteTitle].filter(str => typeof (str) !== 'undefined' && str.trim() !== '').join(' - ');\n    });\n\n    hexo.extend.helper.register('has_thumbnail', function (post) {\n        const getConfig = hexo.extend.helper.get('get_config').bind(this);\n        const allowThumbnail = getConfig('article.thumbnail', true);\n        if (!allowThumbnail) {\n            return false;\n        }\n        return post.hasOwnProperty('thumbnail') && post.thumbnail;\n    });\n\n    hexo.extend.helper.register('get_thumbnail', function (post) {\n        const hasThumbnail = hexo.extend.helper.get('has_thumbnail').bind(this)(post);\n        return this.url_for(hasThumbnail ? post.thumbnail : 'images/thumbnail.svg');\n    });\n\n    hexo.extend.helper.register('has_og_image', function (post) {\n        return post.hasOwnProperty('og_image');\n    });\n\n    hexo.extend.helper.register('get_og_image', function (post) {\n        const getConfig = hexo.extend.helper.get('get_config').bind(this);\n        const hasConfig = hexo.extend.helper.get('has_config').bind(this);\n\n        const hasOGImage = hexo.extend.helper.get('has_og_image').bind(this)(post);\n        const hasThumbnail = hexo.extend.helper.get('has_thumbnail').bind(this)(post);\n\n        const getThumbnail = hexo.extend.helper.get('get_thumbnail').bind(this);\n\n        let og_image\n\n        if (hasOGImage)\n            og_image = post.og_image\n        else if (hasThumbnail)\n            og_image = getThumbnail(post);\n        else\n            og_image = getConfig('article.og_image', '/images/og_image.png');\n\n        return this.url_for(og_image);\n    });\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525717
  },
  "{\"sourceRoot\":\"/home/coding/workspace/themes/icarus/includes/helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/coding/workspace\",\"filename\":\"/home/coding/workspace/themes/icarus/includes/helpers/site.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/coding/workspace\",\"plugins\":[{\"key\":\"/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXElement\":{\"enter\":[null]},\"JSXFragment\":{\"enter\":[null]}},\"options\":{\"imports\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/coding/workspace",
      "filename": "/home/coding/workspace/themes/icarus/includes/helpers/site.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/coding/workspace",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/coding/workspace/node_modules/babel-plugin-inferno/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "JSXFragment": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "imports": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/coding/workspace/themes/icarus/includes/helpers/site.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/coding/workspace/themes/icarus/includes/helpers/site.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
        "sourceFileName": "site.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Helper functions related the site properties.\n *\n * @example\n*     <%- is_same_link(url_a, url_b) %>\n*     <%- get_domain(url) %>\n*     <%- post_count() %>\n*     <%- category_count() %>\n*     <%- tag_count() %>\n*     <%- duration() %>\n*     <%- word_count(content) %>\n*     <%- md5(data) %>\n*     <%- meta() %>\n*     <%- hexo_version() %>\n */\nvar URL = require('url').URL;\n\nvar moment = require('moment');\n\nvar crypto = require('crypto');\n\nmodule.exports = function (hexo) {\n  hexo.extend.helper.register('is_same_link', function (a, b) {\n    function santize(url) {\n      var paths = url.replace(/(^\\w+:|^)\\/\\//, '').split('#')[0].split('/').filter(function (p) {\n        return p.trim() !== '';\n      });\n\n      if (paths.length > 0 && paths[paths.length - 1].trim() === 'index.html') {\n        paths = paths.slice(0, paths.length - 1);\n      }\n\n      return paths.join('/');\n    }\n\n    return santize(this.url_for(a)) == santize(this.url_for(b));\n  });\n  hexo.extend.helper.register('get_domain', function (link) {\n    var url = new URL(link);\n    return url.hostname;\n  });\n  hexo.extend.helper.register('post_count', function () {\n    return this.site.posts.length;\n  });\n  hexo.extend.helper.register('category_count', function () {\n    return this.site.categories.filter(function (category) {\n      return category.length;\n    }).length;\n  });\n  hexo.extend.helper.register('tag_count', function () {\n    return this.site.tags.filter(function (tag) {\n      return tag.length;\n    }).length;\n  });\n  /**\n   * Export moment.duration\n   */\n\n  hexo.extend.helper.register('duration', function () {\n    return moment.duration.apply(moment, arguments);\n  });\n  /**\n   * Get the word count of a paragraph.\n   */\n\n  hexo.extend.helper.register('word_count', function (content) {\n    content = content.replace(/<\\/?[a-z][^>]*>/gi, '');\n    content = content.trim();\n    return content ? (content.match(/[\\u00ff-\\uffff]|[a-zA-Z]+/g) || []).length : 0;\n  });\n  hexo.extend.helper.register('md5', function (data) {\n    return crypto.createHash('md5').update(data).digest(\"hex\");\n  });\n  hexo.extend.helper.register('meta', function () {\n    function trim(str) {\n      return str.trim().replace(/^\"(.*)\"$/, '$1').replace(/^'(.*)'$/, '$1');\n    }\n\n    function split(str, sep) {\n      var result = [];\n      var matched = null;\n\n      while (matched = sep.exec(str)) {\n        result.push(matched[0]);\n      }\n\n      return result;\n    }\n\n    var getConfig = hexo.extend.helper.get('get_config').bind(this);\n    var metas = getConfig('meta', []);\n    var metaDOMArray = metas.map(function (meta) {\n      var entities = split(meta, /(?:[^\\\\;]+|\\\\.)+/g);\n      var entityArray = entities.map(function (entity) {\n        var keyValue = split(entity, /(?:[^\\\\=]+|\\\\.)+/g);\n\n        if (keyValue.length < 2) {\n          return null;\n        }\n\n        var key = trim(keyValue[0]);\n        var value = trim(keyValue[1]);\n        return key + '=\"' + value + '\"';\n      }).filter(function (entity) {\n        return entity;\n      });\n      return '<meta ' + entityArray.join(' ') + ' />';\n    });\n    return metaDOMArray.join('\\n');\n  });\n  hexo.extend.helper.register('hexo_version', function (data) {\n    return hexo.version;\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "site.js"
      ],
      "names": [
        "URL",
        "require",
        "moment",
        "crypto",
        "module",
        "exports",
        "hexo",
        "extend",
        "helper",
        "register",
        "a",
        "b",
        "santize",
        "url",
        "paths",
        "replace",
        "split",
        "filter",
        "p",
        "trim",
        "length",
        "slice",
        "join",
        "url_for",
        "link",
        "hostname",
        "site",
        "posts",
        "categories",
        "category",
        "tags",
        "tag",
        "duration",
        "apply",
        "arguments",
        "content",
        "match",
        "data",
        "createHash",
        "update",
        "digest",
        "str",
        "sep",
        "result",
        "matched",
        "exec",
        "push",
        "getConfig",
        "get",
        "bind",
        "metas",
        "metaDOMArray",
        "map",
        "meta",
        "entities",
        "entityArray",
        "entity",
        "keyValue",
        "key",
        "value",
        "version"
      ],
      "mappings": ";;AAAA;;;;;;;;;;;;;;;AAeA,IAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAP,CAAeD,GAA3B;;AACA,IAAME,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC7BA,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,cAA5B,EAA4C,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACxD,aAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,UAAIC,KAAK,GAAGD,GAAG,CAACE,OAAJ,CAAY,eAAZ,EAA6B,EAA7B,EAAiCC,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,EAA+CA,KAA/C,CAAqD,GAArD,EAA0DC,MAA1D,CAAiE,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,OAAa,EAAjB;AAAA,OAAlE,CAAZ;;AACA,UAAIL,KAAK,CAACM,MAAN,GAAe,CAAf,IAAoBN,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAAL,CAAwBD,IAAxB,OAAmC,YAA3D,EAAyE;AACrEL,QAAAA,KAAK,GAAGA,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAeP,KAAK,CAACM,MAAN,GAAe,CAA9B,CAAR;AACH;;AACD,aAAON,KAAK,CAACQ,IAAN,CAAW,GAAX,CAAP;AACH;;AACD,WAAOV,OAAO,CAAC,KAAKW,OAAL,CAAab,CAAb,CAAD,CAAP,IAA4BE,OAAO,CAAC,KAAKW,OAAL,CAAaZ,CAAb,CAAD,CAA1C;AACH,GATD;AAWAL,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,UAAUe,IAAV,EAAgB;AACtD,QAAMX,GAAG,GAAG,IAAIb,GAAJ,CAAQwB,IAAR,CAAZ;AACA,WAAOX,GAAG,CAACY,QAAX;AACH,GAHD;AAKAnB,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,YAAY;AAClD,WAAO,KAAKiB,IAAL,CAAUC,KAAV,CAAgBP,MAAvB;AACH,GAFD;AAIAd,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,gBAA5B,EAA8C,YAAY;AACtD,WAAO,KAAKiB,IAAL,CAAUE,UAAV,CAAqBX,MAArB,CAA4B,UAAAY,QAAQ;AAAA,aAAIA,QAAQ,CAACT,MAAb;AAAA,KAApC,EAAyDA,MAAhE;AACH,GAFD;AAIAd,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,WAA5B,EAAyC,YAAY;AACjD,WAAO,KAAKiB,IAAL,CAAUI,IAAV,CAAeb,MAAf,CAAsB,UAAAc,GAAG;AAAA,aAAIA,GAAG,CAACX,MAAR;AAAA,KAAzB,EAAyCA,MAAhD;AACH,GAFD;AAIA;;;;AAGAd,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,UAA5B,EAAwC,YAAY;AAChD,WAAOP,MAAM,CAAC8B,QAAP,CAAgBC,KAAhB,CAAsB/B,MAAtB,EAA8BgC,SAA9B,CAAP;AACH,GAFD;AAIA;;;;AAGA5B,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,YAA5B,EAA0C,UAAU0B,OAAV,EAAmB;AACzDA,IAAAA,OAAO,GAAGA,OAAO,CAACpB,OAAR,CAAgB,mBAAhB,EAAqC,EAArC,CAAV;AACAoB,IAAAA,OAAO,GAAGA,OAAO,CAAChB,IAAR,EAAV;AACA,WAAOgB,OAAO,GAAG,CAACA,OAAO,CAACC,KAAR,CAAc,4BAAd,KAA+C,EAAhD,EAAoDhB,MAAvD,GAAgE,CAA9E;AACH,GAJD;AAMAd,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,KAA5B,EAAmC,UAAU4B,IAAV,EAAgB;AAC/C,WAAOlC,MAAM,CAACmC,UAAP,CAAkB,KAAlB,EAAyBC,MAAzB,CAAgCF,IAAhC,EAAsCG,MAAtC,CAA6C,KAA7C,CAAP;AACH,GAFD;AAIAlC,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,MAA5B,EAAoC,YAAY;AAC5C,aAASU,IAAT,CAAcsB,GAAd,EAAmB;AACf,aAAOA,GAAG,CAACtB,IAAJ,GAAWJ,OAAX,CAAmB,UAAnB,EAA+B,IAA/B,EAAqCA,OAArC,CAA6C,UAA7C,EAAyD,IAAzD,CAAP;AACH;;AAED,aAASC,KAAT,CAAeyB,GAAf,EAAoBC,GAApB,EAAyB;AACrB,UAAMC,MAAM,GAAG,EAAf;AACA,UAAIC,OAAO,GAAG,IAAd;;AACA,aAAOA,OAAO,GAAGF,GAAG,CAACG,IAAJ,CAASJ,GAAT,CAAjB,EAAgC;AAC5BE,QAAAA,MAAM,CAACG,IAAP,CAAYF,OAAO,CAAC,CAAD,CAAnB;AACH;;AACD,aAAOD,MAAP;AACH;;AAED,QAAMI,SAAS,GAAGzC,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBwC,GAAnB,CAAuB,YAAvB,EAAqCC,IAArC,CAA0C,IAA1C,CAAlB;AACA,QAAMC,KAAK,GAAGH,SAAS,CAAC,MAAD,EAAS,EAAT,CAAvB;AACA,QAAMI,YAAY,GAAGD,KAAK,CAACE,GAAN,CAAU,UAAUC,IAAV,EAAgB;AAC3C,UAAMC,QAAQ,GAAGtC,KAAK,CAACqC,IAAD,EAAO,mBAAP,CAAtB;AACA,UAAME,WAAW,GAAGD,QAAQ,CAACF,GAAT,CAAa,UAAUI,MAAV,EAAkB;AAC/C,YAAMC,QAAQ,GAAGzC,KAAK,CAACwC,MAAD,EAAS,mBAAT,CAAtB;;AACA,YAAIC,QAAQ,CAACrC,MAAT,GAAkB,CAAtB,EAAyB;AACrB,iBAAO,IAAP;AACH;;AACD,YAAMsC,GAAG,GAAGvC,IAAI,CAACsC,QAAQ,CAAC,CAAD,CAAT,CAAhB;AACA,YAAME,KAAK,GAAGxC,IAAI,CAACsC,QAAQ,CAAC,CAAD,CAAT,CAAlB;AACA,eAAOC,GAAG,GAAG,IAAN,GAAaC,KAAb,GAAqB,GAA5B;AACH,OARmB,EAQjB1C,MARiB,CAQV,UAAUuC,MAAV,EAAkB;AACxB,eAAOA,MAAP;AACH,OAVmB,CAApB;AAWA,aAAO,WAAWD,WAAW,CAACjC,IAAZ,CAAiB,GAAjB,CAAX,GAAmC,KAA1C;AACH,KAdoB,CAArB;AAeA,WAAO6B,YAAY,CAAC7B,IAAb,CAAkB,IAAlB,CAAP;AACH,GAhCD;AAkCAhB,EAAAA,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,cAA5B,EAA4C,UAAU4B,IAAV,EAAgB;AACxD,WAAO/B,IAAI,CAACsD,OAAZ;AACH,GAFD;AAGH,CAtFD",
      "sourceRoot": "/home/coding/workspace/themes/icarus/includes/helpers",
      "sourcesContent": [
        "/**\n * Helper functions related the site properties.\n *\n * @example\n*     <%- is_same_link(url_a, url_b) %>\n*     <%- get_domain(url) %>\n*     <%- post_count() %>\n*     <%- category_count() %>\n*     <%- tag_count() %>\n*     <%- duration() %>\n*     <%- word_count(content) %>\n*     <%- md5(data) %>\n*     <%- meta() %>\n*     <%- hexo_version() %>\n */\nconst URL = require('url').URL;\nconst moment = require('moment');\nconst crypto = require('crypto');\n\nmodule.exports = function (hexo) {\n    hexo.extend.helper.register('is_same_link', function (a, b) {\n        function santize(url) {\n            let paths = url.replace(/(^\\w+:|^)\\/\\//, '').split('#')[0].split('/').filter(p => p.trim() !== '');\n            if (paths.length > 0 && paths[paths.length - 1].trim() === 'index.html') {\n                paths = paths.slice(0, paths.length - 1)\n            }\n            return paths.join('/');\n        }\n        return santize(this.url_for(a)) == santize(this.url_for(b));\n    });\n\n    hexo.extend.helper.register('get_domain', function (link) {\n        const url = new URL(link);\n        return url.hostname;\n    });\n\n    hexo.extend.helper.register('post_count', function () {\n        return this.site.posts.length;\n    });\n\n    hexo.extend.helper.register('category_count', function () {\n        return this.site.categories.filter(category => category.length).length;\n    });\n\n    hexo.extend.helper.register('tag_count', function () {\n        return this.site.tags.filter(tag => tag.length).length;\n    });\n\n    /**\n     * Export moment.duration\n     */\n    hexo.extend.helper.register('duration', function () {\n        return moment.duration.apply(moment, arguments);\n    });\n\n    /**\n     * Get the word count of a paragraph.\n     */\n    hexo.extend.helper.register('word_count', function (content) {\n        content = content.replace(/<\\/?[a-z][^>]*>/gi, '');\n        content = content.trim();\n        return content ? (content.match(/[\\u00ff-\\uffff]|[a-zA-Z]+/g) || []).length : 0;\n    });\n\n    hexo.extend.helper.register('md5', function (data) {\n        return crypto.createHash('md5').update(data).digest(\"hex\");\n    });\n\n    hexo.extend.helper.register('meta', function () {\n        function trim(str) {\n            return str.trim().replace(/^\"(.*)\"$/, '$1').replace(/^'(.*)'$/, '$1');\n        }\n    \n        function split(str, sep) {\n            const result = [];\n            let matched = null;\n            while (matched = sep.exec(str)) {\n                result.push(matched[0]);\n            }\n            return result;\n        }\n\n        const getConfig = hexo.extend.helper.get('get_config').bind(this);\n        const metas = getConfig('meta', []);\n        const metaDOMArray = metas.map(function (meta) {\n            const entities = split(meta, /(?:[^\\\\;]+|\\\\.)+/g);\n            const entityArray = entities.map(function (entity) {\n                const keyValue = split(entity, /(?:[^\\\\=]+|\\\\.)+/g);\n                if (keyValue.length < 2) {\n                    return null;\n                }\n                const key = trim(keyValue[0]);\n                const value = trim(keyValue[1]);\n                return key + '=\"' + value + '\"';\n            }).filter(function (entity) {\n                return entity;\n            });\n            return '<meta ' + entityArray.join(' ') + ' />';\n        });\n        return metaDOMArray.join('\\n');\n    });\n\n    hexo.extend.helper.register('hexo_version', function (data) {\n        return hexo.version;\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574690525717
  }
}
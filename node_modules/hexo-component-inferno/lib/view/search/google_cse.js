"use strict";

var _inferno = require("inferno");

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * Google custom search engine JSX component.
 * @module view/search/google_cse
 */
var _require = require('inferno'),
    Component = _require.Component,
    Fragment = _require.Fragment;

var _require2 = require('../../util/cache'),
    cacheComponent = _require2.cacheComponent;
/**
 * Google custom search engine JSX component.
 *
 * @see https://cse.google.com/cse/create/new
 * @example
 * <GoogleCSE cx="******" hint="Placeholder text" />
 */


var GoogleCSE = /*#__PURE__*/function (_Component) {
  _inherits(GoogleCSE, _Component);

  function GoogleCSE() {
    _classCallCheck(this, GoogleCSE);

    return _possibleConstructorReturn(this, _getPrototypeOf(GoogleCSE).apply(this, arguments));
  }

  _createClass(GoogleCSE, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          cx = _this$props.cx,
          hint = _this$props.hint;
      var css = '.searchbox .searchbox-body { background: white; }';
      var js1 = "(function() {\n            var cx = '".concat(cx, "';\n            var gcse = document.createElement('script');\n            gcse.type = 'text/javascript';\n            gcse.async = true;\n            gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;\n            var s = document.getElementsByTagName('script')[0];\n            s.parentNode.insertBefore(gcse, s);\n        })();");
      var js2 = "(function (document, $) {\n            function debounce(func, wait, immediate) {\n                var timeout;\n                return function() {\n                    var context = this, args = arguments;\n                    var later = function() {\n                        timeout = null;\n                        if (!immediate) func.apply(context, args);\n                    };\n                    var callNow = immediate && !timeout;\n                    clearTimeout(timeout);\n                    timeout = setTimeout(later, wait);\n                    if (callNow) func.apply(context, args);\n                };\n            };\n    \n            $(document).on('click', '.navbar-main .search', function () {\n                $('.searchbox').toggleClass('show');\n            }).on('click', '.searchbox .searchbox-mask', function () {\n                $('.searchbox').removeClass('show');\n            }).on('click', '.searchbox-close', function () {\n                $('.searchbox').removeClass('show');\n            }).on('keydown', '.searchbox-input', debounce(function () {\n                var value = $(this).val();\n                try {\n                    var element = google.search.cse.element.getElement('searchresults-only0');\n                    if (value.trim() === '') {\n                        element.clearAllResults();\n                    } else {\n                        element.execute(value);\n                    }\n                } catch (e) {}\n            }, 300));\n        })(document, jQuery);";
      return (0, _inferno.createFragment)([(0, _inferno.createVNode)(1, "style", null, null, 1, {
        "dangerouslySetInnerHTML": {
          __html: css
        }
      }), (0, _inferno.createVNode)(1, "div", "searchbox", [(0, _inferno.createVNode)(1, "div", "searchbox-container", [(0, _inferno.createVNode)(1, "div", "searchbox-header", [(0, _inferno.createVNode)(1, "div", "searchbox-input-container", (0, _inferno.createVNode)(64, "input", "searchbox-input", null, 1, {
        "type": "text",
        "placeholder": hint
      }), 2), (0, _inferno.createVNode)(1, "a", "searchbox-close", "\xD7", 16, {
        "href": "javascript:;"
      })], 4), function () {
        if (cx) {
          var innerHtml = '<gcse:searchresults-only></gcse:searchresults-only>';
          return (0, _inferno.createVNode)(1, "div", "searchbox-body", null, 1, {
            "dangerouslySetInnerHTML": {
              __html: innerHtml
            }
          });
        }

        return (0, _inferno.createVNode)(1, "div", "notification is-danger", [(0, _inferno.createTextVNode)("It seems that you forget to set the "), (0, _inferno.createVNode)(1, "code", null, "cx", 16), (0, _inferno.createTextVNode)(" value for the Google CSE. Please set it in "), (0, _inferno.createVNode)(1, "code", null, "_config.yml", 16), (0, _inferno.createTextVNode)(".")], 4);
      }()], 0), cx ? (0, _inferno.createVNode)(1, "script", null, null, 1, {
        "dangerouslySetInnerHTML": {
          __html: js1
        }
      }) : null], 0), (0, _inferno.createVNode)(1, "script", null, null, 1, {
        "dangerouslySetInnerHTML": {
          __html: js2
        }
      })], 4);
    }
  }]);

  return GoogleCSE;
}(Component);
/**
 * Cacheable Google custom search engine JSX component.
 * <p>
 * This class is supposed to be used in combination with the <code>locals</code> hexo filter
 * ({@link module:hexo/filter/locals}).
 *
 * @see module:util/cache.cacheComponent
 * @example
 * <Baidu.Cacheable
 *     search={{ cx: '******' }}
 *     helper={{ __: function() {...} }} />
 */


GoogleCSE.Cacheable = cacheComponent(GoogleCSE, 'search.google', function (props) {
  var helper = props.helper,
      search = props.search;
  return {
    cx: search.cx,
    hint: helper.__('search.hint')
  };
});
module.exports = GoogleCSE;
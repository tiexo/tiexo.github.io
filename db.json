{"meta":{"version":1,"warehouse":"3.0.1"},"models":{"Asset":[{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"themes/icarus/source/css/back-to-top.css","path":"css/back-to-top.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/insight.css","path":"css/insight.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/progressbar.css","path":"css/progressbar.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/search.css","path":"css/search.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/thumbnail.svg","path":"images/thumbnail.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/animation.js","path":"js/animation.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/gallery.js","path":"js/gallery.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/clipboard.js","path":"js/clipboard.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/back-to-top.js","path":"js/back-to-top.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/icarus/_config.yml","hash":"4f886916cfaf0195b95cdbcaf818c591ae194449","modified":1575194271433},{"_id":"themes/icarus/package.json","hash":"4167e65682af257bdf8531a05730e6c42339996d","modified":1574690525789},{"_id":"source/robots.txt","hash":"a21de2a09e1a748701623748112aec34c2e40c82","modified":1575195569469},{"_id":"source/404/index.md","hash":"ea59b4a7b84f4098a220b64628d34de1ddafcfbd","modified":1575141653179},{"_id":"source/_posts/Icarus主题更新至V2版本.md","hash":"e13c00bc0d5eef42ab75cf6d302a35f4e5218f29","modified":1575136218980},{"_id":"source/_posts/使用QQ空间相册生成图片外链.md","hash":"49d78528be62658319f228ec19f63cb4c5359b4d","modified":1575136519060},{"_id":"source/_posts/利用Jsdelivr实现Github-Pages静态文件CDN加速.md","hash":"3e722fdb0b8a4746f16af4c0fd21077715046e99","modified":1575029300327},{"_id":"source/_posts/基金进阶计划之场内交易.md","hash":"bf3b7ef92ecdd50ae01459727999cb12cfe2a9dd","modified":1575135990572},{"_id":"source/_posts/通过Github Actions使用Gulp压缩静态文件.md","hash":"48506d69e5dcd50ab2b34b7de159a454ebe93f49","modified":1575203396533},{"_id":"source/_posts/熟悉CODING企业版Cloud-Studio的使用.md","hash":"65747f6a8391fec10f37b03a389c77c8c7bee0b0","modified":1575136994436},{"_id":"source/_posts/网站恢复二级域名.md","hash":"79845253a5df844ae527b544988aee3e3c868499","modified":1575136820642},{"_id":"source/_posts/股票账户的那点破事.md","hash":"cab0cb49aa8014a50b9faf2642a26ab2af2e8f7d","modified":1574690525705},{"_id":"source/_posts/通过Github Actions实现Hexo博客自动部署.md","hash":"8e3865349fb97511abbb028e5e7dd4f9c43c1e17","modified":1575195611835},{"_id":"source/_posts/降低评论门槛：使用Valine评论系统.md","hash":"3fd7ded73b2748b33234163aeedcd0a10056f907","modified":1575136757888},{"_id":"source/about/index.md","hash":"a93a01d6f61dc64d7da4f2bcc80d95338ac4859f","modified":1575004744914},{"_id":"themes/icarus/languages/en.yml","hash":"66d873bbe04894610c2d28b0d03e10143997b51b","modified":1574690525733},{"_id":"themes/icarus/languages/es.yml","hash":"8827823e5b2ce967566854c9bfebc7c69098b4ac","modified":1574690525733},{"_id":"themes/icarus/languages/fr.yml","hash":"0017f93a5d491a9c0e55911cdc35316762c5a94e","modified":1574690525733},{"_id":"themes/icarus/languages/ja.yml","hash":"6eed7771de2353d71b720c6e605cceb3f230b12e","modified":1574690525733},{"_id":"themes/icarus/languages/id.yml","hash":"92d2d19a62a17b6e99f82a014309bbf6c13c9ae8","modified":1574690525733},{"_id":"themes/icarus/languages/ko.yml","hash":"eef426a7d580058024260ccc111476d5b1b688d1","modified":1574690525737},{"_id":"themes/icarus/languages/pl.yml","hash":"43f5447c38c9be2e1f5ce6181a0f97eeb437b059","modified":1574690525737},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"bcf5bc81ca855d26bbc3b3bfabc7d84429e74b85","modified":1574690525737},{"_id":"themes/icarus/languages/ru.yml","hash":"ba8b4f7d77eb1d1e28aa1f9107bd0bbbdc4cba99","modified":1574690525737},{"_id":"themes/icarus/languages/vn.yml","hash":"6d9f4fabca711a6cb0a0efd72aa75c3641beb4a6","modified":1574690525741},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"804f6a1edee49bb6a5ecb8e9d14d3e93eaca37c0","modified":1574690525741},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"6ff978a0c4c11e996925e1a912a1d805f4680a6c","modified":1574690525741},{"_id":"themes/icarus/layout/archive.ejs","hash":"5208b8758887b714f20e63e2d5dcc67548f8425a","modified":1574690525741},{"_id":"themes/icarus/layout/category.ejs","hash":"58aa84f75193b978b2072f29dbb84ed8279574b9","modified":1574690525741},{"_id":"themes/icarus/layout/categories.ejs","hash":"29d304f2b95a04fbc5e7529f9bdce9648e3545ef","modified":1574690525741},{"_id":"themes/icarus/languages/tr.yml","hash":"eff1c0b3d5c4b328f6dd74a195ff378c898f4d29","modified":1574690525737},{"_id":"themes/icarus/layout/index.ejs","hash":"8ab440868f721bb7256ab9f2be96996850b0cf44","modified":1574690525761},{"_id":"themes/icarus/layout/layout.ejs","hash":"c9ab786c4c4a95e403fc8ea7e536084f21a9ecc4","modified":1574690525761},{"_id":"themes/icarus/layout/page.ejs","hash":"b3f93e6b44bc44ce87c00e4ead47505c6480a558","modified":1574690525761},{"_id":"themes/icarus/scripts/index.js","hash":"f97eb95812480cc3b07cc0ad44dc39f9a0032f24","modified":1574690525789},{"_id":"themes/icarus/layout/post.ejs","hash":"ebf120d46074f67ea25a231d2f7a64fd1e751904","modified":1574690525773},{"_id":"themes/icarus/layout/tag.ejs","hash":"45eb077f2ac86f5c8090cb1a2361eed56a368e95","modified":1574690525777},{"_id":"themes/icarus/layout/tags.ejs","hash":"0c527c6b72386f11c18e8aa5249be8c601e69906","modified":1574690525781},{"_id":"themes/icarus/includes/common/ConfigGenerator.js","hash":"451397efc7808787419fa3eb6b043c0bd8bbdf30","modified":1574690525709},{"_id":"themes/icarus/includes/common/ConfigValidator.js","hash":"48cff5402e93b11d5266370e9c4b78ee21369cb9","modified":1574690525709},{"_id":"themes/icarus/includes/common/utils.js","hash":"c0aeaeb57a42bcc71a92da2249762f91abd83ffe","modified":1574690525709},{"_id":"themes/icarus/includes/filters/highlight.js","hash":"19a4dcd2dee7388544b57e473cfb0fc9eea9623e","modified":1574690525709},{"_id":"themes/icarus/includes/generators/categories.js","hash":"7cb370ac53a05d6b1b9203579716c0ca83d35c36","modified":1574690525709},{"_id":"themes/icarus/includes/generators/category.js","hash":"313e170e55d74526c4e1be7181ef7a21439147c9","modified":1574690525713},{"_id":"themes/icarus/includes/generators/insight.js","hash":"c4b981443927b87cc14a3a583029e13f819d6d71","modified":1574690525713},{"_id":"themes/icarus/includes/generators/tags.js","hash":"8195322c208706427a1cf56361669dca4d86f6f1","modified":1574690525713},{"_id":"themes/icarus/includes/helpers/cdn.js","hash":"f2851fb379614a1e4adb70b21dc733121db556ac","modified":1574690525713},{"_id":"themes/icarus/includes/helpers/config.js","hash":"173e02987e7a7d5df1e686f6ee4edd8cf494bdd3","modified":1574690525713},{"_id":"themes/icarus/includes/helpers/layout.js","hash":"afdf5e9704cfc087526b4a0403fe7eb04f22190e","modified":1574690525713},{"_id":"themes/icarus/includes/helpers/override.js","hash":"98f2c72c79de74bd01e3be10ef2f174c885d395a","modified":1574690525713},{"_id":"themes/icarus/includes/helpers/page.js","hash":"4ce98c781bcbc132672e6d16bf02df5bebcea7b3","modified":1574690525717},{"_id":"themes/icarus/includes/helpers/site.js","hash":"2f55818448fe83c73418dcf9751745c7918c10e3","modified":1574690525717},{"_id":"themes/icarus/includes/specs/article.spec.js","hash":"ce24279cd0cd39855216dab0cd5223c755757cdf","modified":1574690525717},{"_id":"themes/icarus/includes/specs/clipboard.ejs","hash":"5e20fb23de9a8c72761f450e242a9eceb3845ea0","modified":1574690525717},{"_id":"themes/icarus/includes/specs/comment.spec.js","hash":"b0ef033e363b918134fb5a003143e9bd8fafa300","modified":1574690525717},{"_id":"themes/icarus/includes/specs/config.spec.js","hash":"7a9bac384a73cf9f39173fdb2dfc2813784d8891","modified":1574690525717},{"_id":"themes/icarus/includes/specs/donate.spec.js","hash":"722cb2662569957e8b1d1a467d9632b8cc6e69d6","modified":1574690525721},{"_id":"themes/icarus/includes/specs/footer.spec.js","hash":"8e6d7c5f9a13ce03241b6562259d210b389cb88e","modified":1574690525721},{"_id":"themes/icarus/includes/specs/icon_link.spec.js","hash":"f2a83ac5ccb74fc6f3dfbd25430e142297d8491c","modified":1574690525721},{"_id":"themes/icarus/includes/specs/meta.spec.js","hash":"28863042ad8fcf9ecb86d5288ecd3ce5250a984d","modified":1574690525721},{"_id":"themes/icarus/includes/specs/navbar.spec.js","hash":"7de29c0031738a4de4d31ed4f7b0c43447c7961c","modified":1574690525725},{"_id":"themes/icarus/includes/specs/plugins.spec.js","hash":"2fb7a28fdde9a46f576e69b9967f24d66adffb57","modified":1574690525725},{"_id":"themes/icarus/includes/specs/providers.spec.js","hash":"820cc6936ba75e3104cc2e8641716ed65ada8b6f","modified":1574690525725},{"_id":"themes/icarus/includes/specs/search.spec.js","hash":"1e3995cdc471e6a2817cd45e2b6f0fd39b4540ec","modified":1574690525725},{"_id":"themes/icarus/includes/specs/share.spec.js","hash":"5ec65409a17ead13974140fc5ddc19e526586d9f","modified":1574690525725},{"_id":"themes/icarus/includes/specs/sidebar.spec.js","hash":"630c9701affe2549abc61cd4d1e5153af2224fb6","modified":1574690525729},{"_id":"themes/icarus/includes/specs/widgets.spec.js","hash":"c5cedfe1074c0566baf8aca248f0392a501d9a74","modified":1574690525729},{"_id":"themes/icarus/includes/tasks/check_config.js","hash":"ce7626d643737c90dee6b75435ccdec26b89dacf","modified":1574690525729},{"_id":"themes/icarus/includes/tasks/check_deps.js","hash":"cfc357f27116d1b9285a3b0bec35c3e89ae73711","modified":1574690525729},{"_id":"themes/icarus/includes/tasks/welcome.js","hash":"00d1ef8c9609552b82e9a5140b838a9057c59508","modified":1574690525733},{"_id":"themes/icarus/layout/comment/changyan.ejs","hash":"73038ac4fdfdfa71d92edaa98cc194b3446586a3","modified":1574690525745},{"_id":"themes/icarus/layout/comment/changyan.locals.js","hash":"49bce2ee742c7224bda97092d6e0a1a09184ef34","modified":1574690525745},{"_id":"themes/icarus/layout/comment/disqus.ejs","hash":"7a8c656c8651d48e21ed24c469ea75898b2b12df","modified":1574690525745},{"_id":"themes/icarus/layout/comment/disqus.locals.js","hash":"a8d2cecaa82ec9e2e2e61cb73417d63d115335d6","modified":1574690525745},{"_id":"themes/icarus/layout/comment/facebook.ejs","hash":"1c3751f36f737527e352c65bb1ca7172ff792979","modified":1574690525745},{"_id":"themes/icarus/layout/comment/facebook.locals.js","hash":"77e3ef1d933660d980b26d15968aa1a5c8a93a56","modified":1574690525749},{"_id":"themes/icarus/layout/comment/gitalk.ejs","hash":"eb1314badf793924b5786e92f8b3ebb0f21f3b58","modified":1574690525749},{"_id":"themes/icarus/layout/comment/gitalk.locals.js","hash":"f920f130598148b4d9f213c82f2d7f88a796012f","modified":1574690525749},{"_id":"themes/icarus/layout/comment/gitment.ejs","hash":"d5e1a396e23df4e75e139d12846290bdb08ba01e","modified":1574690525749},{"_id":"themes/icarus/layout/comment/gitment.locals.js","hash":"f920f130598148b4d9f213c82f2d7f88a796012f","modified":1574690525749},{"_id":"themes/icarus/layout/comment/isso.ejs","hash":"cc6a43bd24be764086f88ad7c5c97ff04df87e0b","modified":1574690525749},{"_id":"themes/icarus/layout/comment/isso.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525749},{"_id":"themes/icarus/layout/comment/livere.ejs","hash":"12ff9a345f6bba2f732f592e39508c2afde89b00","modified":1574690525753},{"_id":"themes/icarus/layout/comment/livere.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525753},{"_id":"themes/icarus/layout/comment/valine.ejs","hash":"8306812c2e43b492bc1a74825e675228ef282241","modified":1575132830741},{"_id":"themes/icarus/layout/comment/valine.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525753},{"_id":"themes/icarus/layout/common/article.ejs","hash":"d2362964b2d9427067e1d7dfe100220b380b2f70","modified":1574690525753},{"_id":"themes/icarus/layout/common/article.locals.js","hash":"1f108fa96e61a681d7b1ee390b4f0ff60d042720","modified":1574690525753},{"_id":"themes/icarus/layout/common/footer.ejs","hash":"389ecd3ce1ce362be574c4f66832b5d1eb2803e1","modified":1574690525753},{"_id":"themes/icarus/layout/common/footer.locals.js","hash":"504ed92dc76723f19777463d690acfbe1d89e2ba","modified":1574690525753},{"_id":"themes/icarus/layout/common/head.ejs","hash":"84756df34ff9da864b452e9b59d5d8ae2f0d0fb5","modified":1574919137546},{"_id":"themes/icarus/layout/common/navbar.ejs","hash":"765d8ab516781d7157bb41d690a71b549e95e721","modified":1574690525757},{"_id":"themes/icarus/layout/common/navbar.locals.js","hash":"7e523ba80667038f2e58cf4f9cb073e9afbc70e6","modified":1574690525757},{"_id":"themes/icarus/layout/common/paginator.ejs","hash":"7837d80b27f166161b3deeffb571680025c7d723","modified":1574690525757},{"_id":"themes/icarus/layout/common/widget.ejs","hash":"02ffa7531d14b88e76bff5ff6d2b4482e7c5bbfd","modified":1574690525757},{"_id":"themes/icarus/layout/common/scripts.ejs","hash":"d32a628d8cefc3f6a3a3e2fb602c82420f1dd1d9","modified":1574690525757},{"_id":"themes/icarus/layout/donate/alipay.ejs","hash":"3290058879973e403a05472a0fe2ac0219d5b961","modified":1574690525757},{"_id":"themes/icarus/layout/donate/alipay.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525757},{"_id":"themes/icarus/layout/donate/patreon.ejs","hash":"8e52a9c28ffaf4b0b786a20977b848c5f60f2274","modified":1574690525757},{"_id":"themes/icarus/layout/donate/patreon.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525757},{"_id":"themes/icarus/layout/donate/paypal.ejs","hash":"3975dee39f9378975b9c10f37d118ad7cb6f5bf6","modified":1574690525761},{"_id":"themes/icarus/layout/donate/paypal.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525761},{"_id":"themes/icarus/layout/donate/wechat.ejs","hash":"051b873e1fc28c1d7c2d6443991b6a2f43813e6b","modified":1574690525761},{"_id":"themes/icarus/layout/donate/wechat.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525761},{"_id":"themes/icarus/layout/plugin/animejs.ejs","hash":"5a49762e8d8acfc380ef62482435a4f2296784c6","modified":1574690525761},{"_id":"themes/icarus/layout/plugin/animejs.locals.js","hash":"3bf911060a222f00b03be708c37f20e36cb66ba9","modified":1574690525761},{"_id":"themes/icarus/layout/plugin/back-to-top.ejs","hash":"fe115d06613bcff3b683368085bc66aba99dc741","modified":1574690525761},{"_id":"themes/icarus/layout/plugin/baidu-analytics.ejs","hash":"7dbbea5722277e00a624c1796ec83d5f9c12d059","modified":1574690525765},{"_id":"themes/icarus/layout/plugin/baidu-analytics.locals.js","hash":"c02eb152e6aff05833006e6edd32b74c1c4258c3","modified":1574690525765},{"_id":"themes/icarus/layout/plugin/busuanzi.locals.js","hash":"ec80bcfa4c1302c04130a746df4b1298d117de0b","modified":1574690525765},{"_id":"themes/icarus/layout/plugin/back-to-top.locals.js","hash":"3bf911060a222f00b03be708c37f20e36cb66ba9","modified":1574690525761},{"_id":"themes/icarus/layout/plugin/busuanzi.ejs","hash":"a7c90026c94a6651eb3e5cc004a70f638fa575b2","modified":1574690525765},{"_id":"themes/icarus/layout/plugin/gallery.ejs","hash":"4dda07a94d8799a039ba97311c0d7415a6a20dd1","modified":1574690525765},{"_id":"themes/icarus/layout/plugin/gallery.locals.js","hash":"037fb56dffc128d3a91c1cb8852998d9539d3fac","modified":1574690525765},{"_id":"themes/icarus/layout/plugin/clipboard.ejs","hash":"5848e9a2d91e3bcd2093da7330adb1f5d6eaf8c6","modified":1574690525765},{"_id":"themes/icarus/layout/plugin/google-analytics.locals.js","hash":"c02eb152e6aff05833006e6edd32b74c1c4258c3","modified":1574690525765},{"_id":"themes/icarus/layout/plugin/hotjar.ejs","hash":"6df0d8f77ed39e4d32c78177844115e31bf3a776","modified":1574690525765},{"_id":"themes/icarus/layout/plugin/google-analytics.ejs","hash":"13b298b0026bfc7bcb6a47b6c795fe15cc4584fc","modified":1574690525765},{"_id":"themes/icarus/layout/plugin/hotjar.locals.js","hash":"9258fc2af057d2545a43fae54790743b63450378","modified":1574690525769},{"_id":"themes/icarus/layout/plugin/mathjax.ejs","hash":"dddb6f37487286fe2080118bcbb4a8d82dc84d5e","modified":1574690525769},{"_id":"themes/icarus/layout/plugin/mathjax.locals.js","hash":"7faa26fa6da6a93dc3f7fdcf5a784d1f8825b031","modified":1574690525769},{"_id":"themes/icarus/layout/plugin/outdated-browser.ejs","hash":"1437d1ac085a8110e61317254f6c0a034121bc39","modified":1574690525769},{"_id":"themes/icarus/layout/plugin/outdated-browser.locals.js","hash":"037fb56dffc128d3a91c1cb8852998d9539d3fac","modified":1574690525769},{"_id":"themes/icarus/layout/plugin/progressbar.ejs","hash":"34423f74787cc9d67b2598dd69b07c84d5bf2280","modified":1574690525769},{"_id":"themes/icarus/layout/plugin/progressbar.locals.js","hash":"ec80bcfa4c1302c04130a746df4b1298d117de0b","modified":1574690525769},{"_id":"themes/icarus/layout/search/baidu.ejs","hash":"850aa91778100d693a52b10eaa8586c8e3215ee6","modified":1574690525773},{"_id":"themes/icarus/layout/search/google-cse.ejs","hash":"4b881a99325a6a0cebf97ac53e09d8fc67f87d29","modified":1574690525773},{"_id":"themes/icarus/layout/search/insight.ejs","hash":"065242293e5dc6c65b1fe90662d196de07cf5b49","modified":1574690525773},{"_id":"themes/icarus/layout/search/baidu.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525773},{"_id":"themes/icarus/layout/search/insight.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525773},{"_id":"themes/icarus/layout/share/addthis.ejs","hash":"f1c5f337333009d5f00dfbac4864a16ef8f9cb8d","modified":1574690525773},{"_id":"themes/icarus/layout/share/addthis.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525773},{"_id":"themes/icarus/layout/share/addtoany.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525773},{"_id":"themes/icarus/layout/share/addtoany.ejs","hash":"95d3bc1a841bd934b1ae9209ad1af74e743ecb10","modified":1574690525773},{"_id":"themes/icarus/layout/search/google-cse.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525773},{"_id":"themes/icarus/layout/share/bdshare.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525777},{"_id":"themes/icarus/layout/share/bdshare.ejs","hash":"f14c8084b7ee16a091f0bd2ae9039e3bfff7e7b7","modified":1574690525777},{"_id":"themes/icarus/layout/share/sharejs.ejs","hash":"65d08316cc479910ea4f526cd1c299d0104daf7f","modified":1574690525777},{"_id":"themes/icarus/layout/share/sharethis.ejs","hash":"4f2c40f790f3be0a4e79db04f02ea41ba2f4d4c0","modified":1574690525777},{"_id":"themes/icarus/layout/share/sharejs.locals.js","hash":"11976fd4cfed1044be29b476b34c33175c9b4308","modified":1574690525777},{"_id":"themes/icarus/layout/share/sharethis.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525777},{"_id":"themes/icarus/layout/widget/archive.ejs","hash":"eb738a2ac2935ce7a542964d90088613b281dd15","modified":1574690525781},{"_id":"themes/icarus/layout/widget/archive.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525781},{"_id":"themes/icarus/layout/widget/category.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525781},{"_id":"themes/icarus/layout/widget/links.ejs","hash":"c18dab874af84147349a596d9e713f8e0ee5e17e","modified":1574690525781},{"_id":"themes/icarus/layout/widget/links.locals.js","hash":"872cf1a18e152361f5739c6d5fecc0bf46d59513","modified":1574690525781},{"_id":"themes/icarus/layout/widget/profile.ejs","hash":"14f024e8da3cbaaa55f9ae9706de664c3f9b7dd8","modified":1574690525785},{"_id":"themes/icarus/layout/widget/recent_posts.ejs","hash":"14a2f4587831e017b93818c06dbe18a7e8a27c1e","modified":1574690525785},{"_id":"themes/icarus/layout/widget/category.ejs","hash":"17e58e537645c4434a1140377ae3e7f43cca4927","modified":1574690525781},{"_id":"themes/icarus/layout/widget/profile.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1574690525785},{"_id":"themes/icarus/layout/widget/subscribe_email.ejs","hash":"391622e9c1d17bf79180faa617ed8c1ee1871a87","modified":1574690525785},{"_id":"themes/icarus/layout/widget/recent_posts.locals.js","hash":"5065aca74ec2c98ec88994636fee8408f769c5f2","modified":1574690525785},{"_id":"themes/icarus/layout/widget/subscribe_email.locals.js","hash":"aae87fbdb7a1245a0fc0637225a935fc39836916","modified":1574690525785},{"_id":"themes/icarus/layout/widget/tagcloud.ejs","hash":"26fa17afaf0cb345a213816c44c39575a66759ba","modified":1574690525785},{"_id":"themes/icarus/layout/widget/tag.ejs","hash":"e41aff420cc4ea1c454de49bd8af0e7a93f3db3f","modified":1574690525785},{"_id":"themes/icarus/layout/widget/tagcloud.locals.js","hash":"093f59d2f43e7ffa47bee79da15f98705300dfba","modified":1574690525789},{"_id":"themes/icarus/layout/widget/toc.ejs","hash":"e800b4b38eab716882389a09527e9f59a189dea6","modified":1574690525789},{"_id":"themes/icarus/layout/widget/toc.locals.js","hash":"e730a7fff2717f17741540e5ed77b89e289fdeab","modified":1574690525789},{"_id":"themes/icarus/source/css/back-to-top.css","hash":"5805bee2445e997d64dfe526b08b5fe0bce357eb","modified":1574690525789},{"_id":"themes/icarus/source/css/insight.css","hash":"22943a610d5cfffedfb823c692f4db2b1f37a4c9","modified":1574690525793},{"_id":"themes/icarus/source/css/progressbar.css","hash":"bbc737b7a8feb19901e792c447a846273779d5c3","modified":1574690525793},{"_id":"themes/icarus/source/css/search.css","hash":"d6a59894819e7431d42b249b6c2fc9ff3b99a488","modified":1574690525793},{"_id":"themes/icarus/source/css/style.styl","hash":"6f1c959dabad88606cfcae6e631c18e80447e3d8","modified":1574918887454},{"_id":"themes/icarus/source/images/favicon.ico","hash":"2ab4f3e6a6463a1f233da6e368c3811047419f54","modified":1574690525793},{"_id":"themes/icarus/source/images/logo.svg","hash":"e1464cb342a6dad20ed96757e525199d0e76dab0","modified":1574690525793},{"_id":"themes/icarus/source/images/thumbnail.svg","hash":"b9c58ff09ed415e6cf08b42b35faa2bc000d5059","modified":1574690525793},{"_id":"themes/icarus/source/js/animation.js","hash":"d744581909d2d092a584be07c39f9d3f0d009ec7","modified":1574690525793},{"_id":"themes/icarus/source/js/gallery.js","hash":"bb74e694457dc23b83ac80cf5aadcd26b60469fd","modified":1574690525793},{"_id":"themes/icarus/source/js/insight.js","hash":"244cb4d36f5cb52c8e0517f324b56f9632e8e3c3","modified":1574690525793},{"_id":"themes/icarus/source/js/clipboard.js","hash":"6fdd602268727744b6b2c8ad79d684aab3cffda5","modified":1574690525793},{"_id":"themes/icarus/source/js/main.js","hash":"faee41896e7bb3373ba5032b82d0b21a0321cea5","modified":1574690525793},{"_id":"themes/icarus/source/js/back-to-top.js","hash":"b1dcf30577cefe833dc6151757c0a05ea5b5a643","modified":1574690525793},{"_id":"public/404.html","hash":"fe148b9c9ea7b11a0b4756cc91c05a11ba9af115","modified":1575203395564},{"_id":"public/baidu_urls.txt","hash":"e6ad8b8fe8f3ab4c1b130d723bb718abb6c058f8","modified":1575203395564},{"_id":"public/content.json","hash":"59583230ed4daa9419f52ceaadc20bb1b1233cff","modified":1575203395564},{"_id":"public/sitemap.xml","hash":"693f1f9234ae3703702eda158b57a5eb35806b78","modified":1575203395564},{"_id":"public/about/index.html","hash":"e1204825d1e67d0ff048b772a7acae4e25513996","modified":1575203395564},{"_id":"public/1e1b3df9/index.html","hash":"207e4ad19ba2002504e08eea0e240feac1140cbe","modified":1575203395564},{"_id":"public/c1adca3d/index.html","hash":"4bafd5cd5f79362ae785418c2de555c18288a636","modified":1575203395564},{"_id":"public/8f21d967/index.html","hash":"dcfd968d17b36047059a1a309c6783fb25747274","modified":1575203395564},{"_id":"public/e4ed098a/index.html","hash":"7a392f075a2978cd96504033eca1cb3918e0e606","modified":1575203395564},{"_id":"public/d2d7ecd5/index.html","hash":"cf041dd0d0b10dcb17d2d81470e7ed90043803ec","modified":1575203395564},{"_id":"public/b23226a5/index.html","hash":"6b6f9231c5ab71e1ce85fd6f2bf5f887da0e2b20","modified":1575203395564},{"_id":"public/archives/2018/index.html","hash":"63d5cc56e5c573993b66d3270bf80ce11e08a683","modified":1575203395564},{"_id":"public/archives/2018/10/index.html","hash":"dc8ec8299a7656bedf372af68f35d71278a958ce","modified":1575203395564},{"_id":"public/archives/2018/11/index.html","hash":"852f2436b38e76db3160f9d4b6c248016436f6b6","modified":1575203395564},{"_id":"public/archives/2018/12/index.html","hash":"63fa0992539ffff5cbc083c88911e22650ead3c6","modified":1575203395564},{"_id":"public/archives/2019/index.html","hash":"620bbf73712704fce5fb557478efd05663c6be9c","modified":1575203395564},{"_id":"public/archives/2019/01/index.html","hash":"38329bdb0a93b929ca00d68aebc4e2bb430b60c5","modified":1575203395564},{"_id":"public/archives/2019/11/index.html","hash":"5f42f4c004dd002752cf66dbd563ec1c4a4ccb27","modified":1575203395564},{"_id":"public/categories/index.html","hash":"3f27ccd6d0b80b5372195f5a05f31f2017d7f1cc","modified":1575203395564},{"_id":"public/tags/index.html","hash":"d2278a175363f801b0905edcddcbb3be669dae17","modified":1575203395564},{"_id":"public/37e5a6a1/index.html","hash":"38693846f7a8b2acbddb6736f07801f5c0e78e5f","modified":1575203395564},{"_id":"public/6ea6b07d/index.html","hash":"91d1e8822f8c61abd80e7e8912dcab24a5c12f14","modified":1575203395564},{"_id":"public/5cf6b291/index.html","hash":"8db4f515ef7866100b6df95b3d4d2a5e7a038778","modified":1575203395564},{"_id":"public/archives/index.html","hash":"e8f449e49507a4c78470f7c4616f522ce1794023","modified":1575203395564},{"_id":"public/index.html","hash":"e1dfdbd174c9c567801dcfaf82b828b63f4656fb","modified":1575203395564},{"_id":"public/archives/2019/12/index.html","hash":"1ccc85b0f1542b212f401c3a7e879ad03720530a","modified":1575203395564},{"_id":"public/28061956/index.html","hash":"d4305439be4f1bfbcc603550af414aa3387ff149","modified":1575203395564},{"_id":"public/robots.txt","hash":"a21de2a09e1a748701623748112aec34c2e40c82","modified":1575203395564},{"_id":"public/images/favicon.ico","hash":"2ab4f3e6a6463a1f233da6e368c3811047419f54","modified":1575203395564},{"_id":"public/images/logo.svg","hash":"e1464cb342a6dad20ed96757e525199d0e76dab0","modified":1575203395564},{"_id":"public/images/thumbnail.svg","hash":"b9c58ff09ed415e6cf08b42b35faa2bc000d5059","modified":1575203395564},{"_id":"public/css/insight.css","hash":"22943a610d5cfffedfb823c692f4db2b1f37a4c9","modified":1575203395564},{"_id":"public/css/progressbar.css","hash":"bbc737b7a8feb19901e792c447a846273779d5c3","modified":1575203395564},{"_id":"public/css/back-to-top.css","hash":"5805bee2445e997d64dfe526b08b5fe0bce357eb","modified":1575203395564},{"_id":"public/css/search.css","hash":"d6a59894819e7431d42b249b6c2fc9ff3b99a488","modified":1575203395564},{"_id":"public/css/style.css","hash":"2c537469947922d7b4c6bf7986d88ef6fd081822","modified":1575203395564},{"_id":"public/js/animation.js","hash":"d744581909d2d092a584be07c39f9d3f0d009ec7","modified":1575203395564},{"_id":"public/js/gallery.js","hash":"bb74e694457dc23b83ac80cf5aadcd26b60469fd","modified":1575203395564},{"_id":"public/js/insight.js","hash":"244cb4d36f5cb52c8e0517f324b56f9632e8e3c3","modified":1575203395564},{"_id":"public/js/clipboard.js","hash":"6fdd602268727744b6b2c8ad79d684aab3cffda5","modified":1575203395564},{"_id":"public/js/main.js","hash":"faee41896e7bb3373ba5032b82d0b21a0321cea5","modified":1575203395564},{"_id":"public/js/back-to-top.js","hash":"b1dcf30577cefe833dc6151757c0a05ea5b5a643","modified":1575203395564}],"Category":[],"Data":[],"Page":[{"title":"404 Not Found：网页已被删除","layout":"false","_content":"<!DOCTYPE html>\n<html>\n<body>\n<script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"https://tiexo.github.io\" homePageName=\"5秒后自动返回网站首页\"></script>\n<script>\n    setTimeout(function () {\n        window.location.href = '//' +  document.domain;\n    }, 5000);\n</script>\n\n</body>\n</html>","source":"404/index.md","raw":"---\ntitle: 404 Not Found：网页已被删除\npermalink: /404\nlayout: false\n---\n<!DOCTYPE html>\n<html>\n<body>\n<script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"https://tiexo.github.io\" homePageName=\"5秒后自动返回网站首页\"></script>\n<script>\n    setTimeout(function () {\n        window.location.href = '//' +  document.domain;\n    }, 5000);\n</script>\n\n</body>\n</html>","date":"2019-11-30T19:20:53.179Z","updated":"2019-11-30T19:20:53.179Z","path":"/404.html","comments":1,"_id":"ck3mzfjho0000fzsih9cefwoy","content":"<!DOCTYPE html>\n<html>\n<body>\n<script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homepageurl=\"https://tiexo.github.io\" homepagename=\"5秒后自动返回网站首页\"></script>\n<script>\n    setTimeout(function () {\n        window.location.href = '//' +  document.domain;\n    }, 5000);\n</script>\n\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n<body>\n<script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homepageurl=\"https://tiexo.github.io\" homepagename=\"5秒后自动返回网站首页\"></script>\n<script>\n    setTimeout(function () {\n        window.location.href = '//' +  document.domain;\n    }, 5000);\n</script>\n\n</body>\n</html>"},{"title":"","layout":"page","_content":"\n### 让我们以热烈的掌声感谢以下赞助商：\n- [Github Pages](https://github.com/) ，提供网站托管仓库\n- [Hexo](https://hexo.io/zh-cn/) ，提供博客程序源码\n- [Icarus](https://github.com/ppoffice/hexo-theme-icarus) ，添加主题美化\n- [Qzone-Photo-Outside](https://github.com/xunni1000/Qzone-Photo-Outside) ，生成QQ空间图片外链\n- [Coding](https://cloudstudio.net/)，提供Cloud Studio云端开发空间\n- [Json-content](https://github.com/alexbruno/hexo-generator-json-content)，生成本地搜索数据\n- [Valine](https://valine.js.org)，增加评论功能\n- [Valine-Admin](https://github.com/panjunwen/Valine-Admin)，提供评论管理和邮件通知功能\n- [Aplayer](https://github.com/DIYgod/APlayer)，负责音乐播放功能\n- [MetingJS](https://github.com/metowolf/MetingJS)，提供BGM API接口\n- [Jsdelivr](https://cdn.jsdelivr.net)，提供git仓库文件CDN加速服务\n- [Loli](https://css.loli.net) & [七牛云](http://www.staticfile.org/)，提供公共库加速服务\n- [Abbrlink](https://github.com/Rozbo/hexo-abbrlink)，专注于生产链接\n- [Autonofollow](https://github.com/liuzc/hexo-autonofollow)，防止权重侧漏\n- [Baidu-url-submit](https://github.com/huiwang/hexo-baidu-url-submit)，百度主动推送插件\n- [Outlook](https://outlook.live.com/owa/)，负责评论提醒邮件发送\n- [今日诗词](https://www.jinrishici.com/)，提供一言API\n- [Github Actions](https://help.github.com/en/actions)，负责24小时持续集成并自动部署\n\n以及那些上文未提及的、在本站运营过程中对我有所帮助的人们，谢谢！\n\n\n### 免责申明\n\n本人在此发布文章（包括但不限于汉字、拼音、阿拉伯字母 、图片、影像，以及前述之各种任意组合等等）均为随意敲击键盘所出，用于检验本人电脑键盘录入、屏幕显示的机械、光电性能，并不代表本人观点。\n\n### 友情链接\n\n( 注：<i class=\"fa fa-ban\" style=\"color: #FF0000;\"></i> 为不可访问状态，<i class=\"fa fa-lock\" style=\"color: #00bb00;\"></i> 为HTTPS安全认证 )\n\n- <i class=\"fa fa-lock\" style=\"color: #00bb00;\"></i> [乐趣公园](https://gitcafe.net//)—— 分享有趣，创造价值\n- <i class=\"fa fa-lock\" style=\"color: #00bb00;\"></i> [哔哩萌](https://www.bilimoe.com/)—— 是不是选择任何一个方向，都会游向同一个宿命呢？\n- [弋牧](http://emuia.com/)—— 行多久，方显执着；思多久，方能远见！\n- <i class=\"fa fa-lock\" style=\"color: #00bb00;\"></i> [Zidone](https://blog.zidone.cn/)—— 深自缄默 如云漂泊\n\n欢迎各位小伙伴互换友链~！\n\n### 每日分享\n\n<meting-js\n\tauto=\"https://music.163.com/#/song?id=92939\" autoplay=\"true\">\n</meting-js>  ","source":"about/index.md","raw":"title: \"\"\nlayout: \"page\"\n\n---\n\n### 让我们以热烈的掌声感谢以下赞助商：\n- [Github Pages](https://github.com/) ，提供网站托管仓库\n- [Hexo](https://hexo.io/zh-cn/) ，提供博客程序源码\n- [Icarus](https://github.com/ppoffice/hexo-theme-icarus) ，添加主题美化\n- [Qzone-Photo-Outside](https://github.com/xunni1000/Qzone-Photo-Outside) ，生成QQ空间图片外链\n- [Coding](https://cloudstudio.net/)，提供Cloud Studio云端开发空间\n- [Json-content](https://github.com/alexbruno/hexo-generator-json-content)，生成本地搜索数据\n- [Valine](https://valine.js.org)，增加评论功能\n- [Valine-Admin](https://github.com/panjunwen/Valine-Admin)，提供评论管理和邮件通知功能\n- [Aplayer](https://github.com/DIYgod/APlayer)，负责音乐播放功能\n- [MetingJS](https://github.com/metowolf/MetingJS)，提供BGM API接口\n- [Jsdelivr](https://cdn.jsdelivr.net)，提供git仓库文件CDN加速服务\n- [Loli](https://css.loli.net) & [七牛云](http://www.staticfile.org/)，提供公共库加速服务\n- [Abbrlink](https://github.com/Rozbo/hexo-abbrlink)，专注于生产链接\n- [Autonofollow](https://github.com/liuzc/hexo-autonofollow)，防止权重侧漏\n- [Baidu-url-submit](https://github.com/huiwang/hexo-baidu-url-submit)，百度主动推送插件\n- [Outlook](https://outlook.live.com/owa/)，负责评论提醒邮件发送\n- [今日诗词](https://www.jinrishici.com/)，提供一言API\n- [Github Actions](https://help.github.com/en/actions)，负责24小时持续集成并自动部署\n\n以及那些上文未提及的、在本站运营过程中对我有所帮助的人们，谢谢！\n\n\n### 免责申明\n\n本人在此发布文章（包括但不限于汉字、拼音、阿拉伯字母 、图片、影像，以及前述之各种任意组合等等）均为随意敲击键盘所出，用于检验本人电脑键盘录入、屏幕显示的机械、光电性能，并不代表本人观点。\n\n### 友情链接\n\n( 注：<i class=\"fa fa-ban\" style=\"color: #FF0000;\"></i> 为不可访问状态，<i class=\"fa fa-lock\" style=\"color: #00bb00;\"></i> 为HTTPS安全认证 )\n\n- <i class=\"fa fa-lock\" style=\"color: #00bb00;\"></i> [乐趣公园](https://gitcafe.net//)—— 分享有趣，创造价值\n- <i class=\"fa fa-lock\" style=\"color: #00bb00;\"></i> [哔哩萌](https://www.bilimoe.com/)—— 是不是选择任何一个方向，都会游向同一个宿命呢？\n- [弋牧](http://emuia.com/)—— 行多久，方显执着；思多久，方能远见！\n- <i class=\"fa fa-lock\" style=\"color: #00bb00;\"></i> [Zidone](https://blog.zidone.cn/)—— 深自缄默 如云漂泊\n\n欢迎各位小伙伴互换友链~！\n\n### 每日分享\n\n<meting-js\n\tauto=\"https://music.163.com/#/song?id=92939\" autoplay=\"true\">\n</meting-js>  ","date":"2019-11-29T05:19:04.914Z","updated":"2019-11-29T05:19:04.914Z","path":"about/index.html","comments":1,"_id":"ck3mzfjhv0002fzsi0z2ebuf1","content":"<h3 id=\"让我们以热烈的掌声感谢以下赞助商：\"><a href=\"#让我们以热烈的掌声感谢以下赞助商：\" class=\"headerlink\" title=\"让我们以热烈的掌声感谢以下赞助商：\"></a>让我们以热烈的掌声感谢以下赞助商：</h3><ul>\n<li><a href=\"https://github.com/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Github Pages</a> ，提供网站托管仓库</li>\n<li><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Hexo</a> ，提供博客程序源码</li>\n<li><a href=\"https://github.com/ppoffice/hexo-theme-icarus\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Icarus</a> ，添加主题美化</li>\n<li><a href=\"https://github.com/xunni1000/Qzone-Photo-Outside\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Qzone-Photo-Outside</a> ，生成QQ空间图片外链</li>\n<li><a href=\"https://cloudstudio.net/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Coding</a>，提供Cloud Studio云端开发空间</li>\n<li><a href=\"https://github.com/alexbruno/hexo-generator-json-content\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Json-content</a>，生成本地搜索数据</li>\n<li><a href=\"https://valine.js.org\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Valine</a>，增加评论功能</li>\n<li><a href=\"https://github.com/panjunwen/Valine-Admin\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Valine-Admin</a>，提供评论管理和邮件通知功能</li>\n<li><a href=\"https://github.com/DIYgod/APlayer\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Aplayer</a>，负责音乐播放功能</li>\n<li><a href=\"https://github.com/metowolf/MetingJS\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">MetingJS</a>，提供BGM API接口</li>\n<li><a href=\"https://cdn.jsdelivr.net\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Jsdelivr</a>，提供git仓库文件CDN加速服务</li>\n<li><a href=\"https://css.loli.net\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Loli</a> &amp; <a href=\"http://www.staticfile.org/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">七牛云</a>，提供公共库加速服务</li>\n<li><a href=\"https://github.com/Rozbo/hexo-abbrlink\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Abbrlink</a>，专注于生产链接</li>\n<li><a href=\"https://github.com/liuzc/hexo-autonofollow\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Autonofollow</a>，防止权重侧漏</li>\n<li><a href=\"https://github.com/huiwang/hexo-baidu-url-submit\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Baidu-url-submit</a>，百度主动推送插件</li>\n<li><a href=\"https://outlook.live.com/owa/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Outlook</a>，负责评论提醒邮件发送</li>\n<li><a href=\"https://www.jinrishici.com/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">今日诗词</a>，提供一言API</li>\n<li><a href=\"https://help.github.com/en/actions\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Github Actions</a>，负责24小时持续集成并自动部署</li>\n</ul>\n<p>以及那些上文未提及的、在本站运营过程中对我有所帮助的人们，谢谢！</p>\n<h3 id=\"免责申明\"><a href=\"#免责申明\" class=\"headerlink\" title=\"免责申明\"></a>免责申明</h3><p>本人在此发布文章（包括但不限于汉字、拼音、阿拉伯字母 、图片、影像，以及前述之各种任意组合等等）均为随意敲击键盘所出，用于检验本人电脑键盘录入、屏幕显示的机械、光电性能，并不代表本人观点。</p>\n<h3 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h3><p>( 注：<i class=\"fa fa-ban\" style=\"color: #FF0000;\"></i> 为不可访问状态，<i class=\"fa fa-lock\" style=\"color: #00bb00;\"></i> 为HTTPS安全认证 )</p>\n<ul>\n<li><i class=\"fa fa-lock\" style=\"color: #00bb00;\"></i> <a href=\"https://gitcafe.net//\" target=\"_blank\" rel=\"noopener\">乐趣公园</a>—— 分享有趣，创造价值</li>\n<li><i class=\"fa fa-lock\" style=\"color: #00bb00;\"></i> <a href=\"https://www.bilimoe.com/\" target=\"_blank\" rel=\"noopener\">哔哩萌</a>—— 是不是选择任何一个方向，都会游向同一个宿命呢？</li>\n<li><a href=\"http://emuia.com/\" target=\"_blank\" rel=\"noopener\">弋牧</a>—— 行多久，方显执着；思多久，方能远见！</li>\n<li><i class=\"fa fa-lock\" style=\"color: #00bb00;\"></i> <a href=\"https://blog.zidone.cn/\" target=\"_blank\" rel=\"noopener\">Zidone</a>—— 深自缄默 如云漂泊</li>\n</ul>\n<p>欢迎各位小伙伴互换友链~！</p>\n<h3 id=\"每日分享\"><a href=\"#每日分享\" class=\"headerlink\" title=\"每日分享\"></a>每日分享</h3><p><meting-js auto=\"https://music.163.com/#/song?id=92939\" autoplay=\"true\"><br></meting-js>  </p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"让我们以热烈的掌声感谢以下赞助商：\"><a href=\"#让我们以热烈的掌声感谢以下赞助商：\" class=\"headerlink\" title=\"让我们以热烈的掌声感谢以下赞助商：\"></a>让我们以热烈的掌声感谢以下赞助商：</h3><ul>\n<li><a href=\"https://github.com/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Github Pages</a> ，提供网站托管仓库</li>\n<li><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Hexo</a> ，提供博客程序源码</li>\n<li><a href=\"https://github.com/ppoffice/hexo-theme-icarus\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Icarus</a> ，添加主题美化</li>\n<li><a href=\"https://github.com/xunni1000/Qzone-Photo-Outside\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Qzone-Photo-Outside</a> ，生成QQ空间图片外链</li>\n<li><a href=\"https://cloudstudio.net/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Coding</a>，提供Cloud Studio云端开发空间</li>\n<li><a href=\"https://github.com/alexbruno/hexo-generator-json-content\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Json-content</a>，生成本地搜索数据</li>\n<li><a href=\"https://valine.js.org\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Valine</a>，增加评论功能</li>\n<li><a href=\"https://github.com/panjunwen/Valine-Admin\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Valine-Admin</a>，提供评论管理和邮件通知功能</li>\n<li><a href=\"https://github.com/DIYgod/APlayer\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Aplayer</a>，负责音乐播放功能</li>\n<li><a href=\"https://github.com/metowolf/MetingJS\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">MetingJS</a>，提供BGM API接口</li>\n<li><a href=\"https://cdn.jsdelivr.net\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Jsdelivr</a>，提供git仓库文件CDN加速服务</li>\n<li><a href=\"https://css.loli.net\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Loli</a> &amp; <a href=\"http://www.staticfile.org/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">七牛云</a>，提供公共库加速服务</li>\n<li><a href=\"https://github.com/Rozbo/hexo-abbrlink\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Abbrlink</a>，专注于生产链接</li>\n<li><a href=\"https://github.com/liuzc/hexo-autonofollow\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Autonofollow</a>，防止权重侧漏</li>\n<li><a href=\"https://github.com/huiwang/hexo-baidu-url-submit\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Baidu-url-submit</a>，百度主动推送插件</li>\n<li><a href=\"https://outlook.live.com/owa/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Outlook</a>，负责评论提醒邮件发送</li>\n<li><a href=\"https://www.jinrishici.com/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">今日诗词</a>，提供一言API</li>\n<li><a href=\"https://help.github.com/en/actions\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Github Actions</a>，负责24小时持续集成并自动部署</li>\n</ul>\n<p>以及那些上文未提及的、在本站运营过程中对我有所帮助的人们，谢谢！</p>\n<h3 id=\"免责申明\"><a href=\"#免责申明\" class=\"headerlink\" title=\"免责申明\"></a>免责申明</h3><p>本人在此发布文章（包括但不限于汉字、拼音、阿拉伯字母 、图片、影像，以及前述之各种任意组合等等）均为随意敲击键盘所出，用于检验本人电脑键盘录入、屏幕显示的机械、光电性能，并不代表本人观点。</p>\n<h3 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h3><p>( 注：<i class=\"fa fa-ban\" style=\"color: #FF0000;\"></i> 为不可访问状态，<i class=\"fa fa-lock\" style=\"color: #00bb00;\"></i> 为HTTPS安全认证 )</p>\n<ul>\n<li><i class=\"fa fa-lock\" style=\"color: #00bb00;\"></i> <a href=\"https://gitcafe.net//\" target=\"_blank\" rel=\"noopener\">乐趣公园</a>—— 分享有趣，创造价值</li>\n<li><i class=\"fa fa-lock\" style=\"color: #00bb00;\"></i> <a href=\"https://www.bilimoe.com/\" target=\"_blank\" rel=\"noopener\">哔哩萌</a>—— 是不是选择任何一个方向，都会游向同一个宿命呢？</li>\n<li><a href=\"http://emuia.com/\" target=\"_blank\" rel=\"noopener\">弋牧</a>—— 行多久，方显执着；思多久，方能远见！</li>\n<li><i class=\"fa fa-lock\" style=\"color: #00bb00;\"></i> <a href=\"https://blog.zidone.cn/\" target=\"_blank\" rel=\"noopener\">Zidone</a>—— 深自缄默 如云漂泊</li>\n</ul>\n<p>欢迎各位小伙伴互换友链~！</p>\n<h3 id=\"每日分享\"><a href=\"#每日分享\" class=\"headerlink\" title=\"每日分享\"></a>每日分享</h3><p><meting-js auto=\"https://music.163.com/#/song?id=92939\" autoplay=\"true\"><br></meting-js>  </p>\n"}],"Post":[{"title":"Icarus主题更新至V2版本","thumbnail":"//r.photo.store.qq.com/psb?/V11rnv1t26XYl4/t9xubrC00SFg7zYZClhiZjYXD9CEVKSF6X0CS7Y5nMg!/r/dDABAAAAAAAAnull&bo=5gOQAeYDkAERCT4!&rf=photolist&t=5qzoneimgout.png","abbrlink":"d2d7ecd5","date":"2018-11-03T03:47:47.000Z","_content":"实际上这次更新我已经准备了半个月，期间一直在Cloud Studio上面进行配置和修改，现在我觉得它基本符合了我的需求，故而正式切换上线。\n\n<!--more-->\n\n### V2版本主要变化\n\n根据官方文档，V2版本的主要更新内容如下：\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/cB9f77OwGijRy1eysEbI7THuSteQDSTUip1Vfhqzs6s!/r/dFYAAAAAAAAAnull&bo=XwMqA18DKgMRCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n根据我个人的感受来说，主题设计变得更加现代化，配置更加灵活。\n其中有不少新特性都是之前大家反馈的内容，譬如多布局切换和CDN加速，总体感觉还是很棒的。\n\n### 个人配置\n\n首先满足我之前的心愿，将profile和widget全部去掉，变成了如今的单栏布局。\n去除多余页面，仅保留归档和留言，并将不常用的插件选项全部关闭。\n其中比较纠结的问题有两个：\n\n- LOGO显示\n\n虽然V2版本支持图片或者文字logo，但好像不支持文字+logo，这与之前的版本有所不同。\n所以我干脆去掉了文字，仅保留一个logo图标，同时去掉了底部的logo显示。\n当然，受此影响，我还调整了导航栏的布局，让它从居中变成了两端靠齐。\n\n- CDN\n\nV2版本提供了包括公共JS库、字体和图标三类资源的CDN选择，其中公共JS和字体我选择了`css.loli.net`提供的常用前端公共库CDN服务。\n而最后一个fontawesome图标却没有找到相应的服务，目前它也是页面加载耗时最长的。\n另外还有一些包括评论、音乐播放相关的JS文件都是直接引用`jsdelivr`版本，如果七牛还能用的话就好了...\n\n\n### 反馈\n\n在配置V2版本的时候，我也遇到了一些问题，跑到主题issue提问，作者很友好很高效的帮我解决了。\n\n![](//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/bqxbeBINEnPOtkik4VAS0AuJBrkl.v65nXdpgtf7g10!/r/dDQBAAAAAAAAnull&bo=4gSpAeIEqQERCT4!&rf=photolist&t=5qzoneimgout.png)\n\n同时我也反馈了三个小bug，为icarus的完美进化贡献一份力量~\n\n### 结语\n\n另外，由于七牛测试域名失效，之前旧文章的很多图片都出现问题，干脆直接全部移除了。\n总之，现在网站是以新面貌重新出发，后续有啥更新再继续发布吧。","source":"_posts/Icarus主题更新至V2版本.md","raw":"---\ntitle: Icarus主题更新至V2版本\nthumbnail: '//r.photo.store.qq.com/psb?/V11rnv1t26XYl4/t9xubrC00SFg7zYZClhiZjYXD9CEVKSF6X0CS7Y5nMg!/r/dDABAAAAAAAAnull&bo=5gOQAeYDkAERCT4!&rf=photolist&t=5qzoneimgout.png'\nabbrlink: d2d7ecd5\ndate: 2018-11-03 11:47:47\n---\n实际上这次更新我已经准备了半个月，期间一直在Cloud Studio上面进行配置和修改，现在我觉得它基本符合了我的需求，故而正式切换上线。\n\n<!--more-->\n\n### V2版本主要变化\n\n根据官方文档，V2版本的主要更新内容如下：\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/cB9f77OwGijRy1eysEbI7THuSteQDSTUip1Vfhqzs6s!/r/dFYAAAAAAAAAnull&bo=XwMqA18DKgMRCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n根据我个人的感受来说，主题设计变得更加现代化，配置更加灵活。\n其中有不少新特性都是之前大家反馈的内容，譬如多布局切换和CDN加速，总体感觉还是很棒的。\n\n### 个人配置\n\n首先满足我之前的心愿，将profile和widget全部去掉，变成了如今的单栏布局。\n去除多余页面，仅保留归档和留言，并将不常用的插件选项全部关闭。\n其中比较纠结的问题有两个：\n\n- LOGO显示\n\n虽然V2版本支持图片或者文字logo，但好像不支持文字+logo，这与之前的版本有所不同。\n所以我干脆去掉了文字，仅保留一个logo图标，同时去掉了底部的logo显示。\n当然，受此影响，我还调整了导航栏的布局，让它从居中变成了两端靠齐。\n\n- CDN\n\nV2版本提供了包括公共JS库、字体和图标三类资源的CDN选择，其中公共JS和字体我选择了`css.loli.net`提供的常用前端公共库CDN服务。\n而最后一个fontawesome图标却没有找到相应的服务，目前它也是页面加载耗时最长的。\n另外还有一些包括评论、音乐播放相关的JS文件都是直接引用`jsdelivr`版本，如果七牛还能用的话就好了...\n\n\n### 反馈\n\n在配置V2版本的时候，我也遇到了一些问题，跑到主题issue提问，作者很友好很高效的帮我解决了。\n\n![](//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/bqxbeBINEnPOtkik4VAS0AuJBrkl.v65nXdpgtf7g10!/r/dDQBAAAAAAAAnull&bo=4gSpAeIEqQERCT4!&rf=photolist&t=5qzoneimgout.png)\n\n同时我也反馈了三个小bug，为icarus的完美进化贡献一份力量~\n\n### 结语\n\n另外，由于七牛测试域名失效，之前旧文章的很多图片都出现问题，干脆直接全部移除了。\n总之，现在网站是以新面貌重新出发，后续有啥更新再继续发布吧。","slug":"Icarus主题更新至V2版本","published":1,"updated":"2019-12-01T12:35:10.357Z","_id":"ck3mzfjhr0001fzsi6hb30kgq","comments":1,"layout":"post","photos":[],"link":"","content":"<p>实际上这次更新我已经准备了半个月，期间一直在Cloud Studio上面进行配置和修改，现在我觉得它基本符合了我的需求，故而正式切换上线。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"V2版本主要变化\"><a href=\"#V2版本主要变化\" class=\"headerlink\" title=\"V2版本主要变化\"></a>V2版本主要变化</h3><p>根据官方文档，V2版本的主要更新内容如下：</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/cB9f77OwGijRy1eysEbI7THuSteQDSTUip1Vfhqzs6s!/r/dFYAAAAAAAAAnull&bo=XwMqA18DKgMRCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>根据我个人的感受来说，主题设计变得更加现代化，配置更加灵活。<br>其中有不少新特性都是之前大家反馈的内容，譬如多布局切换和CDN加速，总体感觉还是很棒的。</p>\n<h3 id=\"个人配置\"><a href=\"#个人配置\" class=\"headerlink\" title=\"个人配置\"></a>个人配置</h3><p>首先满足我之前的心愿，将profile和widget全部去掉，变成了如今的单栏布局。<br>去除多余页面，仅保留归档和留言，并将不常用的插件选项全部关闭。<br>其中比较纠结的问题有两个：</p>\n<ul>\n<li>LOGO显示</li>\n</ul>\n<p>虽然V2版本支持图片或者文字logo，但好像不支持文字+logo，这与之前的版本有所不同。<br>所以我干脆去掉了文字，仅保留一个logo图标，同时去掉了底部的logo显示。<br>当然，受此影响，我还调整了导航栏的布局，让它从居中变成了两端靠齐。</p>\n<ul>\n<li>CDN</li>\n</ul>\n<p>V2版本提供了包括公共JS库、字体和图标三类资源的CDN选择，其中公共JS和字体我选择了<code>css.loli.net</code>提供的常用前端公共库CDN服务。<br>而最后一个fontawesome图标却没有找到相应的服务，目前它也是页面加载耗时最长的。<br>另外还有一些包括评论、音乐播放相关的JS文件都是直接引用<code>jsdelivr</code>版本，如果七牛还能用的话就好了…</p>\n<h3 id=\"反馈\"><a href=\"#反馈\" class=\"headerlink\" title=\"反馈\"></a>反馈</h3><p>在配置V2版本的时候，我也遇到了一些问题，跑到主题issue提问，作者很友好很高效的帮我解决了。</p>\n<p><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/bqxbeBINEnPOtkik4VAS0AuJBrkl.v65nXdpgtf7g10!/r/dDQBAAAAAAAAnull&bo=4gSpAeIEqQERCT4!&rf=photolist&t=5qzoneimgout.png\" alt=\"\"></p>\n<p>同时我也反馈了三个小bug，为icarus的完美进化贡献一份力量~</p>\n<h3 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h3><p>另外，由于七牛测试域名失效，之前旧文章的很多图片都出现问题，干脆直接全部移除了。<br>总之，现在网站是以新面貌重新出发，后续有啥更新再继续发布吧。</p>\n","site":{"data":{}},"excerpt":"<p>实际上这次更新我已经准备了半个月，期间一直在Cloud Studio上面进行配置和修改，现在我觉得它基本符合了我的需求，故而正式切换上线。</p>","more":"<h3 id=\"V2版本主要变化\"><a href=\"#V2版本主要变化\" class=\"headerlink\" title=\"V2版本主要变化\"></a>V2版本主要变化</h3><p>根据官方文档，V2版本的主要更新内容如下：</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/cB9f77OwGijRy1eysEbI7THuSteQDSTUip1Vfhqzs6s!/r/dFYAAAAAAAAAnull&bo=XwMqA18DKgMRCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>根据我个人的感受来说，主题设计变得更加现代化，配置更加灵活。<br>其中有不少新特性都是之前大家反馈的内容，譬如多布局切换和CDN加速，总体感觉还是很棒的。</p>\n<h3 id=\"个人配置\"><a href=\"#个人配置\" class=\"headerlink\" title=\"个人配置\"></a>个人配置</h3><p>首先满足我之前的心愿，将profile和widget全部去掉，变成了如今的单栏布局。<br>去除多余页面，仅保留归档和留言，并将不常用的插件选项全部关闭。<br>其中比较纠结的问题有两个：</p>\n<ul>\n<li>LOGO显示</li>\n</ul>\n<p>虽然V2版本支持图片或者文字logo，但好像不支持文字+logo，这与之前的版本有所不同。<br>所以我干脆去掉了文字，仅保留一个logo图标，同时去掉了底部的logo显示。<br>当然，受此影响，我还调整了导航栏的布局，让它从居中变成了两端靠齐。</p>\n<ul>\n<li>CDN</li>\n</ul>\n<p>V2版本提供了包括公共JS库、字体和图标三类资源的CDN选择，其中公共JS和字体我选择了<code>css.loli.net</code>提供的常用前端公共库CDN服务。<br>而最后一个fontawesome图标却没有找到相应的服务，目前它也是页面加载耗时最长的。<br>另外还有一些包括评论、音乐播放相关的JS文件都是直接引用<code>jsdelivr</code>版本，如果七牛还能用的话就好了…</p>\n<h3 id=\"反馈\"><a href=\"#反馈\" class=\"headerlink\" title=\"反馈\"></a>反馈</h3><p>在配置V2版本的时候，我也遇到了一些问题，跑到主题issue提问，作者很友好很高效的帮我解决了。</p>\n<p><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/bqxbeBINEnPOtkik4VAS0AuJBrkl.v65nXdpgtf7g10!/r/dDQBAAAAAAAAnull&bo=4gSpAeIEqQERCT4!&rf=photolist&t=5qzoneimgout.png\" alt=\"\"></p>\n<p>同时我也反馈了三个小bug，为icarus的完美进化贡献一份力量~</p>\n<h3 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h3><p>另外，由于七牛测试域名失效，之前旧文章的很多图片都出现问题，干脆直接全部移除了。<br>总之，现在网站是以新面貌重新出发，后续有啥更新再继续发布吧。</p>"},{"title":"使用QQ空间相册生成图片外链","thumbnail":"//r.photo.store.qq.com/psb?/V11rnv1t26XYl4/8VheMW*o4XdH3aHps4u6Zz2mttZ2s8BTOa1rEk6CT7s!/r/dEYBAAAAAAAAnull&bo=6APBAegDwQERCT4!&rf=photolist&t=5qzoneimgout.png","abbrlink":"e4ed098a","date":"2018-11-03T08:41:34.000Z","_content":"图片外链是每个博客都要折腾的项目，我曾经使用过七牛、SM图床、微博图床等等，但七牛域名需要备案并且HTTPS流量收费，SM和微博则对图片尺度限制较大，连本站不露点的动漫图片都会被和谐。\n这个时候，我终于回想起曾经在狐吧看到的QQ空间相册外链项目...\n<!--more-->\n\n### QQ空间相册外链项目\n\n目前该项目由Windows软件版和GM脚本版，地址分别如下：\n- [Qzone-Photo-Outside](https://github.com/xunni1000/Qzone-Photo-Outside)\n- [QQ相册外链工具](https://greasyfork.org/zh-CN/scripts/373731-qq%E7%9B%B8%E5%86%8C%E5%A4%96%E9%93%BE%E5%B7%A5%E5%85%B7)\n\n两个版本都比较简陋，但这些都不是重点，因为QQ空间的确有独到的优势。\n- 支持HTTPS，这是大势所趋。\n- 稳定，除非QQ空间关闭或者接口被封。\n- 高速，QQ空间图片的加载速度绝对是一流的。\n- 限制少，不会动不动就和谐。\n- 保留原文件，像SM图床和微博图床都无法保留原文件。\n\n所以，我把本站的所有图片全部迁移到QQ空间啦。\n\n### 使用\n\n实际上外链工具只是提供链接转换，仍然需要我们手动把图片上传到QQ空间相册里面。\n- 选择原图上传\n\n根据作者提醒，必须选择原图上传，但是对访问权限无限制。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/pMNIVnCwfKt8GVtB05P7REGs2RmOxToyev9cu78WtU4!/r/dFQBAAAAAAAAnull&bo=0AKzANACswADCSw!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n- 复制链接\n\n如果你用的GM脚本版，那么将鼠标移动到图片缩略图上面会显示“外链”字样，点击后会自动复制链接（无任何提示）。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/phMDoUQk4qls17QsKBtEi41RoICkdx6Cn*ZEuboVKPo!/r/dDQBAAAAAAAAnull&bo=EgHZABIB2QADCSw!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n如果你用的是软件版，那么需要手动复制QQ空间图片链接，然后去软件点击粘贴，接着会自动复制转换后的外链。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/8gZTpF0TMZ6kKVg4gzhEP84nIslgaK2m*iguj1*FLrU!/r/dFIBAAAAAAAAnull&bo=tAK7AbQCuwEDCSw!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n具体效果可以看看本站，根据作者所说已经稳定使用9年，应该没什么问题！","source":"_posts/使用QQ空间相册生成图片外链.md","raw":"---\ntitle: 使用QQ空间相册生成图片外链\nthumbnail: >-\n  //r.photo.store.qq.com/psb?/V11rnv1t26XYl4/8VheMW*o4XdH3aHps4u6Zz2mttZ2s8BTOa1rEk6CT7s!/r/dEYBAAAAAAAAnull&bo=6APBAegDwQERCT4!&rf=photolist&t=5qzoneimgout.png\nabbrlink: e4ed098a\ndate: 2018-11-03 16:41:34\n---\n图片外链是每个博客都要折腾的项目，我曾经使用过七牛、SM图床、微博图床等等，但七牛域名需要备案并且HTTPS流量收费，SM和微博则对图片尺度限制较大，连本站不露点的动漫图片都会被和谐。\n这个时候，我终于回想起曾经在狐吧看到的QQ空间相册外链项目...\n<!--more-->\n\n### QQ空间相册外链项目\n\n目前该项目由Windows软件版和GM脚本版，地址分别如下：\n- [Qzone-Photo-Outside](https://github.com/xunni1000/Qzone-Photo-Outside)\n- [QQ相册外链工具](https://greasyfork.org/zh-CN/scripts/373731-qq%E7%9B%B8%E5%86%8C%E5%A4%96%E9%93%BE%E5%B7%A5%E5%85%B7)\n\n两个版本都比较简陋，但这些都不是重点，因为QQ空间的确有独到的优势。\n- 支持HTTPS，这是大势所趋。\n- 稳定，除非QQ空间关闭或者接口被封。\n- 高速，QQ空间图片的加载速度绝对是一流的。\n- 限制少，不会动不动就和谐。\n- 保留原文件，像SM图床和微博图床都无法保留原文件。\n\n所以，我把本站的所有图片全部迁移到QQ空间啦。\n\n### 使用\n\n实际上外链工具只是提供链接转换，仍然需要我们手动把图片上传到QQ空间相册里面。\n- 选择原图上传\n\n根据作者提醒，必须选择原图上传，但是对访问权限无限制。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/pMNIVnCwfKt8GVtB05P7REGs2RmOxToyev9cu78WtU4!/r/dFQBAAAAAAAAnull&bo=0AKzANACswADCSw!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n- 复制链接\n\n如果你用的GM脚本版，那么将鼠标移动到图片缩略图上面会显示“外链”字样，点击后会自动复制链接（无任何提示）。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/phMDoUQk4qls17QsKBtEi41RoICkdx6Cn*ZEuboVKPo!/r/dDQBAAAAAAAAnull&bo=EgHZABIB2QADCSw!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n如果你用的是软件版，那么需要手动复制QQ空间图片链接，然后去软件点击粘贴，接着会自动复制转换后的外链。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/8gZTpF0TMZ6kKVg4gzhEP84nIslgaK2m*iguj1*FLrU!/r/dFIBAAAAAAAAnull&bo=tAK7AbQCuwEDCSw!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n具体效果可以看看本站，根据作者所说已经稳定使用9年，应该没什么问题！","slug":"使用QQ空间相册生成图片外链","published":1,"updated":"2019-11-30T17:55:19.060Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3mzfjhw0003fzsi52vpa440","content":"<p>图片外链是每个博客都要折腾的项目，我曾经使用过七牛、SM图床、微博图床等等，但七牛域名需要备案并且HTTPS流量收费，SM和微博则对图片尺度限制较大，连本站不露点的动漫图片都会被和谐。<br>这个时候，我终于回想起曾经在狐吧看到的QQ空间相册外链项目…</p>\n<a id=\"more\"></a>\n\n<h3 id=\"QQ空间相册外链项目\"><a href=\"#QQ空间相册外链项目\" class=\"headerlink\" title=\"QQ空间相册外链项目\"></a>QQ空间相册外链项目</h3><p>目前该项目由Windows软件版和GM脚本版，地址分别如下：</p>\n<ul>\n<li><a href=\"https://github.com/xunni1000/Qzone-Photo-Outside\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Qzone-Photo-Outside</a></li>\n<li><a href=\"https://greasyfork.org/zh-CN/scripts/373731-qq%E7%9B%B8%E5%86%8C%E5%A4%96%E9%93%BE%E5%B7%A5%E5%85%B7\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">QQ相册外链工具</a></li>\n</ul>\n<p>两个版本都比较简陋，但这些都不是重点，因为QQ空间的确有独到的优势。</p>\n<ul>\n<li>支持HTTPS，这是大势所趋。</li>\n<li>稳定，除非QQ空间关闭或者接口被封。</li>\n<li>高速，QQ空间图片的加载速度绝对是一流的。</li>\n<li>限制少，不会动不动就和谐。</li>\n<li>保留原文件，像SM图床和微博图床都无法保留原文件。</li>\n</ul>\n<p>所以，我把本站的所有图片全部迁移到QQ空间啦。</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>实际上外链工具只是提供链接转换，仍然需要我们手动把图片上传到QQ空间相册里面。</p>\n<ul>\n<li>选择原图上传</li>\n</ul>\n<p>根据作者提醒，必须选择原图上传，但是对访问权限无限制。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/pMNIVnCwfKt8GVtB05P7REGs2RmOxToyev9cu78WtU4!/r/dFQBAAAAAAAAnull&bo=0AKzANACswADCSw!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<ul>\n<li>复制链接</li>\n</ul>\n<p>如果你用的GM脚本版，那么将鼠标移动到图片缩略图上面会显示“外链”字样，点击后会自动复制链接（无任何提示）。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/phMDoUQk4qls17QsKBtEi41RoICkdx6Cn*ZEuboVKPo!/r/dDQBAAAAAAAAnull&bo=EgHZABIB2QADCSw!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>如果你用的是软件版，那么需要手动复制QQ空间图片链接，然后去软件点击粘贴，接着会自动复制转换后的外链。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/8gZTpF0TMZ6kKVg4gzhEP84nIslgaK2m*iguj1*FLrU!/r/dFIBAAAAAAAAnull&bo=tAK7AbQCuwEDCSw!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>具体效果可以看看本站，根据作者所说已经稳定使用9年，应该没什么问题！</p>\n","site":{"data":{}},"excerpt":"<p>图片外链是每个博客都要折腾的项目，我曾经使用过七牛、SM图床、微博图床等等，但七牛域名需要备案并且HTTPS流量收费，SM和微博则对图片尺度限制较大，连本站不露点的动漫图片都会被和谐。<br>这个时候，我终于回想起曾经在狐吧看到的QQ空间相册外链项目…</p>","more":"<h3 id=\"QQ空间相册外链项目\"><a href=\"#QQ空间相册外链项目\" class=\"headerlink\" title=\"QQ空间相册外链项目\"></a>QQ空间相册外链项目</h3><p>目前该项目由Windows软件版和GM脚本版，地址分别如下：</p>\n<ul>\n<li><a href=\"https://github.com/xunni1000/Qzone-Photo-Outside\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Qzone-Photo-Outside</a></li>\n<li><a href=\"https://greasyfork.org/zh-CN/scripts/373731-qq%E7%9B%B8%E5%86%8C%E5%A4%96%E9%93%BE%E5%B7%A5%E5%85%B7\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">QQ相册外链工具</a></li>\n</ul>\n<p>两个版本都比较简陋，但这些都不是重点，因为QQ空间的确有独到的优势。</p>\n<ul>\n<li>支持HTTPS，这是大势所趋。</li>\n<li>稳定，除非QQ空间关闭或者接口被封。</li>\n<li>高速，QQ空间图片的加载速度绝对是一流的。</li>\n<li>限制少，不会动不动就和谐。</li>\n<li>保留原文件，像SM图床和微博图床都无法保留原文件。</li>\n</ul>\n<p>所以，我把本站的所有图片全部迁移到QQ空间啦。</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>实际上外链工具只是提供链接转换，仍然需要我们手动把图片上传到QQ空间相册里面。</p>\n<ul>\n<li>选择原图上传</li>\n</ul>\n<p>根据作者提醒，必须选择原图上传，但是对访问权限无限制。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/pMNIVnCwfKt8GVtB05P7REGs2RmOxToyev9cu78WtU4!/r/dFQBAAAAAAAAnull&bo=0AKzANACswADCSw!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<ul>\n<li>复制链接</li>\n</ul>\n<p>如果你用的GM脚本版，那么将鼠标移动到图片缩略图上面会显示“外链”字样，点击后会自动复制链接（无任何提示）。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/phMDoUQk4qls17QsKBtEi41RoICkdx6Cn*ZEuboVKPo!/r/dDQBAAAAAAAAnull&bo=EgHZABIB2QADCSw!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>如果你用的是软件版，那么需要手动复制QQ空间图片链接，然后去软件点击粘贴，接着会自动复制转换后的外链。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/8gZTpF0TMZ6kKVg4gzhEP84nIslgaK2m*iguj1*FLrU!/r/dFIBAAAAAAAAnull&bo=tAK7AbQCuwEDCSw!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>具体效果可以看看本站，根据作者所说已经稳定使用9年，应该没什么问题！</p>"},{"title":"利用Jsdelivr实现Github Pages静态文件CDN加速","thumbnail":"//r.photo.store.qq.com/psb?/V11rnv1t26XYl4/pwAHe6tXhNTne6aRjCCEaTHOZvSG4rO48zhmoLoPcmQ!/r/dFQBAAAAAAAAnull&bo=sATpAbAE6QERCT4!&rf=photolist&t=5_yake_qzoneimgout.png","abbrlink":"1e1b3df9","date":"2019-11-29T09:38:23.000Z","_content":"\nCDN加速不是一个新鲜的话题，但是受限于免费、无备案域名等因素，实际上并没有什么选择。直到偶然发现Jsdelivr竟然可以对整个Git仓库进行CDN加速后...\n<!--more-->\n\n### 图片\n\n图片的CDN方案有很多，这里就不讨论了，本站使用QQ空间作为图床，速度应该是顶尖的。\n有兴趣的可以访问：<a href=\"https://tiexo.github.io/e4ed098a/\" target=\"_blank\">《使用QQ空间相册生成图片外链》</a>\n\n### 公共JS/CSS库\n\n公共库也有不少选择，比如七牛、360、Loli等。\n本站除了Fontawesome使用七牛外，其他的都是Loli CDN。\n\n### 私人文件\n\n本文今天介绍的主要是私人文件，譬如Github Pages仓库中CSS和JS两个文件夹里面的JS和CSS文件，以及搜索插件生成的JSON文件等。\n\n其请求链接为\n\n```html\nhttps://tiexo.github.io/js/xxx.js\n```\n在主题引用处找到代码\n\n```js\n<%- _js('js/xxx', true) %>\n```\n将其修改为\n\n```js\n<%- _js('https://cdn.jsdelivr.net/gh/tiexo/tiexo.github.io/js/xxx', true) %>\n```\n\n其原理就是Jsdelivr会将所有Git仓库中的文件CDN化，我们使用文件的CDN链接替换其自身的链接，从而实现了CDN加速。\n\n难点主要在于找到主题目录中的引用代码，之后直接按照格式替换链接即可。\n具体格式为\n\n```html\nhttps://cdn.jsdelivr.net/gh/用户名/仓库名/文件路径\n```\n\n### 缺点\n\nCDN都是有缓存的，可能修改某处文件后网站页面不会及时更新。\n\n### 优点\n\n至少比github.io要快吧？","source":"_posts/利用Jsdelivr实现Github-Pages静态文件CDN加速.md","raw":"---\ntitle: 利用Jsdelivr实现Github Pages静态文件CDN加速\nthumbnail: >-\n  //r.photo.store.qq.com/psb?/V11rnv1t26XYl4/pwAHe6tXhNTne6aRjCCEaTHOZvSG4rO48zhmoLoPcmQ!/r/dFQBAAAAAAAAnull&bo=sATpAbAE6QERCT4!&rf=photolist&t=5_yake_qzoneimgout.png\nabbrlink: 1e1b3df9\ndate: 2019-11-29 17:38:23\n---\n\nCDN加速不是一个新鲜的话题，但是受限于免费、无备案域名等因素，实际上并没有什么选择。直到偶然发现Jsdelivr竟然可以对整个Git仓库进行CDN加速后...\n<!--more-->\n\n### 图片\n\n图片的CDN方案有很多，这里就不讨论了，本站使用QQ空间作为图床，速度应该是顶尖的。\n有兴趣的可以访问：<a href=\"https://tiexo.github.io/e4ed098a/\" target=\"_blank\">《使用QQ空间相册生成图片外链》</a>\n\n### 公共JS/CSS库\n\n公共库也有不少选择，比如七牛、360、Loli等。\n本站除了Fontawesome使用七牛外，其他的都是Loli CDN。\n\n### 私人文件\n\n本文今天介绍的主要是私人文件，譬如Github Pages仓库中CSS和JS两个文件夹里面的JS和CSS文件，以及搜索插件生成的JSON文件等。\n\n其请求链接为\n\n```html\nhttps://tiexo.github.io/js/xxx.js\n```\n在主题引用处找到代码\n\n```js\n<%- _js('js/xxx', true) %>\n```\n将其修改为\n\n```js\n<%- _js('https://cdn.jsdelivr.net/gh/tiexo/tiexo.github.io/js/xxx', true) %>\n```\n\n其原理就是Jsdelivr会将所有Git仓库中的文件CDN化，我们使用文件的CDN链接替换其自身的链接，从而实现了CDN加速。\n\n难点主要在于找到主题目录中的引用代码，之后直接按照格式替换链接即可。\n具体格式为\n\n```html\nhttps://cdn.jsdelivr.net/gh/用户名/仓库名/文件路径\n```\n\n### 缺点\n\nCDN都是有缓存的，可能修改某处文件后网站页面不会及时更新。\n\n### 优点\n\n至少比github.io要快吧？","slug":"利用Jsdelivr实现Github-Pages静态文件CDN加速","published":1,"updated":"2019-11-29T12:08:20.327Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3mzfjhx0004fzsi2xjr5gt9","content":"<p>CDN加速不是一个新鲜的话题，但是受限于免费、无备案域名等因素，实际上并没有什么选择。直到偶然发现Jsdelivr竟然可以对整个Git仓库进行CDN加速后…</p>\n<a id=\"more\"></a>\n\n<h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><p>图片的CDN方案有很多，这里就不讨论了，本站使用QQ空间作为图床，速度应该是顶尖的。<br>有兴趣的可以访问：<a href=\"https://tiexo.github.io/e4ed098a/\" target=\"_blank\">《使用QQ空间相册生成图片外链》</a></p>\n<h3 id=\"公共JS-CSS库\"><a href=\"#公共JS-CSS库\" class=\"headerlink\" title=\"公共JS/CSS库\"></a>公共JS/CSS库</h3><p>公共库也有不少选择，比如七牛、360、Loli等。<br>本站除了Fontawesome使用七牛外，其他的都是Loli CDN。</p>\n<h3 id=\"私人文件\"><a href=\"#私人文件\" class=\"headerlink\" title=\"私人文件\"></a>私人文件</h3><p>本文今天介绍的主要是私人文件，譬如Github Pages仓库中CSS和JS两个文件夹里面的JS和CSS文件，以及搜索插件生成的JSON文件等。</p>\n<p>其请求链接为</p>\n<figure class=\"highlight html hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://tiexo.github.io/js/xxx.js</span><br></pre></td></tr></table></figure>\n<p>在主题引用处找到代码</p>\n<figure class=\"highlight js hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%- _js(<span class=\"hljs-string\">'js/xxx'</span>, <span class=\"hljs-literal\">true</span>) %&gt;</span><br></pre></td></tr></table></figure>\n<p>将其修改为</p>\n<figure class=\"highlight js hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%- _js(<span class=\"hljs-string\">'https://cdn.jsdelivr.net/gh/tiexo/tiexo.github.io/js/xxx'</span>, <span class=\"hljs-literal\">true</span>) %&gt;</span><br></pre></td></tr></table></figure>\n\n<p>其原理就是Jsdelivr会将所有Git仓库中的文件CDN化，我们使用文件的CDN链接替换其自身的链接，从而实现了CDN加速。</p>\n<p>难点主要在于找到主题目录中的引用代码，之后直接按照格式替换链接即可。<br>具体格式为</p>\n<figure class=\"highlight html hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/gh/用户名/仓库名/文件路径</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h3><p>CDN都是有缓存的，可能修改某处文件后网站页面不会及时更新。</p>\n<h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><p>至少比github.io要快吧？</p>\n","site":{"data":{}},"excerpt":"<p>CDN加速不是一个新鲜的话题，但是受限于免费、无备案域名等因素，实际上并没有什么选择。直到偶然发现Jsdelivr竟然可以对整个Git仓库进行CDN加速后…</p>","more":"<h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><p>图片的CDN方案有很多，这里就不讨论了，本站使用QQ空间作为图床，速度应该是顶尖的。<br>有兴趣的可以访问：<a href=\"https://tiexo.github.io/e4ed098a/\" target=\"_blank\">《使用QQ空间相册生成图片外链》</a></p>\n<h3 id=\"公共JS-CSS库\"><a href=\"#公共JS-CSS库\" class=\"headerlink\" title=\"公共JS/CSS库\"></a>公共JS/CSS库</h3><p>公共库也有不少选择，比如七牛、360、Loli等。<br>本站除了Fontawesome使用七牛外，其他的都是Loli CDN。</p>\n<h3 id=\"私人文件\"><a href=\"#私人文件\" class=\"headerlink\" title=\"私人文件\"></a>私人文件</h3><p>本文今天介绍的主要是私人文件，譬如Github Pages仓库中CSS和JS两个文件夹里面的JS和CSS文件，以及搜索插件生成的JSON文件等。</p>\n<p>其请求链接为</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://tiexo.github.io/js/xxx.js</span><br></pre></td></tr></table></figure>\n<p>在主题引用处找到代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%- _js(<span class=\"string\">'js/xxx'</span>, <span class=\"literal\">true</span>) %&gt;</span><br></pre></td></tr></table></figure>\n<p>将其修改为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%- _js(<span class=\"string\">'https://cdn.jsdelivr.net/gh/tiexo/tiexo.github.io/js/xxx'</span>, <span class=\"literal\">true</span>) %&gt;</span><br></pre></td></tr></table></figure>\n\n<p>其原理就是Jsdelivr会将所有Git仓库中的文件CDN化，我们使用文件的CDN链接替换其自身的链接，从而实现了CDN加速。</p>\n<p>难点主要在于找到主题目录中的引用代码，之后直接按照格式替换链接即可。<br>具体格式为</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/gh/用户名/仓库名/文件路径</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h3><p>CDN都是有缓存的，可能修改某处文件后网站页面不会及时更新。</p>\n<h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><p>至少比github.io要快吧？</p>"},{"title":"基金进阶计划之场内交易","thumbnail":"//r.photo.store.qq.com/psb?/V11rnv1t26XYl4/TtguPnPXqET9PwvvSXZ1m9J.DIvjbqtbzkJbCTPmB3I!/r/dL4AAAAAAAAAnull&bo=sAT0AbAE9AERCT4!&rf=photolist&t=5_yake_qzoneimgout.png","abbrlink":"c1adca3d","date":"2019-01-21T02:51:38.000Z","_content":"接触基金定投已经快9个月，虽然一直在亏钱，但是并没有妨碍我对指数的信心。只是昨天在比较基金收益时，发现自己选择的沪深300增强基金表现较差，因此产生了更换另一只沪深300的念头。\n\n在纠结的过程中，我发现似乎由场外交易转向场内交易，是一个不错的选择。\n\n<!--more-->\n\n### 沪深300增强指数基金\n\n作为一个新手，在第一次挑选基金的时候难免会被“网红姬”吸引，所以选择了`景顺长城沪深300增强`定投。\n\n<div align=center><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/Ls8XGhIgowpFCPmt2EUnRouebblxkX.zq33yebVkoXg!/r/dFQBAAAAAAAAnull&bo=OATRAjgE0QIRCT4!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n可是2018年它的表现相比2017年差了很多，对比其他两只同类基金，增强效果微乎其微，即便在整个跟踪沪深300的基金中表现也很一般。\n\n<div align=center><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/pIdCvs89Qe9mDSdWobC3VFh7uyomL3l1lprkbPBrfD8!/r/dL8AAAAAAAAAnull&bo=7QFlAe0BZQEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n所以，我产生了更换为`兴全沪深300指数（LOF）`定投的念头，但是由于蚂蚁金服并没有开通这两只基金的超级转换，所以必须要先赎回再申购，这中间还要付出0.62%的手续费。\n\n### 场内交易\n我注意到，兴全沪深300指数是一只LOF基金，同时也支持在场内交易。\n\n<div align=center><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/RNapWve3cNMflrGj0T9VKXPGhODP8LE1DSqy72f69mg!/r/dFMBAAAAAAAAnull&bo=OAT9BDgE*QQRCT4!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n既然如此，我为什么不直接在场内购买呢，这样成本也更加便宜。\n\n### 交易成本\n所谓场内交易，就是通过股票账户在证券交易所买入和卖出，因此只需要支付佣金即可，而无需支付场外的申购费和赎回费。\n目前券商佣金在万2.5-万3左右，也就是说买入卖出1万元基金，手续费是6元钱。\n而场外申购费率为0.12%，赎回费率为0.5%，同样买入卖出1万元基金，手续费是62元钱。\n但是这中间还存在一个问题，大部分券商都有单笔交易佣金最低5元的限制，也就是说实际上手续费要花10元钱。\n即便如此，两者之间的成本差异也是比较大的，如果能去掉最低5元的限制就更好了。\n\n### 券商\n虽然大部分都有最低限制，但也意味着有些券商取消了限制，譬如东方财富、华泰证券等。\n甚至有网友评论说东方财富不仅没有最低5元限制，而且场内基金交易佣金为万1，吸引力确实挺大。\n但我依然选择了华泰证券...\n\n<div align=center><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/iWCjslpyUg5pWdF6lfTFD.twojX2AYDjTRHzbjBAXMw!/r/dDYBAAAAAAAAnull&bo=OAQBBTgEAQURCT4!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n因为我在上一篇文章说过，目前名下沪A账户已经达到上限，所以无法在其他券商进行开户。\n但是华泰证券可以在开户时选择下挂`沪深基金账户`，而无需开通沪A股东账户，这意味着我可以单独通过华泰来交易场内基金。\n虽然华泰证券手机开户佣金是万3，但场内基金交易手续费最低只要0.1元，比较适合进行小资金定投。","source":"_posts/基金进阶计划之场内交易.md","raw":"---\ntitle: 基金进阶计划之场内交易\nthumbnail: >-\n  //r.photo.store.qq.com/psb?/V11rnv1t26XYl4/TtguPnPXqET9PwvvSXZ1m9J.DIvjbqtbzkJbCTPmB3I!/r/dL4AAAAAAAAAnull&bo=sAT0AbAE9AERCT4!&rf=photolist&t=5_yake_qzoneimgout.png\nabbrlink: c1adca3d\ndate: 2019-01-21 10:51:38\n---\n接触基金定投已经快9个月，虽然一直在亏钱，但是并没有妨碍我对指数的信心。只是昨天在比较基金收益时，发现自己选择的沪深300增强基金表现较差，因此产生了更换另一只沪深300的念头。\n\n在纠结的过程中，我发现似乎由场外交易转向场内交易，是一个不错的选择。\n\n<!--more-->\n\n### 沪深300增强指数基金\n\n作为一个新手，在第一次挑选基金的时候难免会被“网红姬”吸引，所以选择了`景顺长城沪深300增强`定投。\n\n<div align=center><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/Ls8XGhIgowpFCPmt2EUnRouebblxkX.zq33yebVkoXg!/r/dFQBAAAAAAAAnull&bo=OATRAjgE0QIRCT4!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n可是2018年它的表现相比2017年差了很多，对比其他两只同类基金，增强效果微乎其微，即便在整个跟踪沪深300的基金中表现也很一般。\n\n<div align=center><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/pIdCvs89Qe9mDSdWobC3VFh7uyomL3l1lprkbPBrfD8!/r/dL8AAAAAAAAAnull&bo=7QFlAe0BZQEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n所以，我产生了更换为`兴全沪深300指数（LOF）`定投的念头，但是由于蚂蚁金服并没有开通这两只基金的超级转换，所以必须要先赎回再申购，这中间还要付出0.62%的手续费。\n\n### 场内交易\n我注意到，兴全沪深300指数是一只LOF基金，同时也支持在场内交易。\n\n<div align=center><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/RNapWve3cNMflrGj0T9VKXPGhODP8LE1DSqy72f69mg!/r/dFMBAAAAAAAAnull&bo=OAT9BDgE*QQRCT4!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n既然如此，我为什么不直接在场内购买呢，这样成本也更加便宜。\n\n### 交易成本\n所谓场内交易，就是通过股票账户在证券交易所买入和卖出，因此只需要支付佣金即可，而无需支付场外的申购费和赎回费。\n目前券商佣金在万2.5-万3左右，也就是说买入卖出1万元基金，手续费是6元钱。\n而场外申购费率为0.12%，赎回费率为0.5%，同样买入卖出1万元基金，手续费是62元钱。\n但是这中间还存在一个问题，大部分券商都有单笔交易佣金最低5元的限制，也就是说实际上手续费要花10元钱。\n即便如此，两者之间的成本差异也是比较大的，如果能去掉最低5元的限制就更好了。\n\n### 券商\n虽然大部分都有最低限制，但也意味着有些券商取消了限制，譬如东方财富、华泰证券等。\n甚至有网友评论说东方财富不仅没有最低5元限制，而且场内基金交易佣金为万1，吸引力确实挺大。\n但我依然选择了华泰证券...\n\n<div align=center><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/iWCjslpyUg5pWdF6lfTFD.twojX2AYDjTRHzbjBAXMw!/r/dDYBAAAAAAAAnull&bo=OAQBBTgEAQURCT4!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n因为我在上一篇文章说过，目前名下沪A账户已经达到上限，所以无法在其他券商进行开户。\n但是华泰证券可以在开户时选择下挂`沪深基金账户`，而无需开通沪A股东账户，这意味着我可以单独通过华泰来交易场内基金。\n虽然华泰证券手机开户佣金是万3，但场内基金交易手续费最低只要0.1元，比较适合进行小资金定投。","slug":"基金进阶计划之场内交易","published":1,"updated":"2019-12-01T12:36:24.429Z","_id":"ck3mzfjhy0005fzsi2cj5fdco","comments":1,"layout":"post","photos":[],"link":"","content":"<p>接触基金定投已经快9个月，虽然一直在亏钱，但是并没有妨碍我对指数的信心。只是昨天在比较基金收益时，发现自己选择的沪深300增强基金表现较差，因此产生了更换另一只沪深300的念头。</p>\n<p>在纠结的过程中，我发现似乎由场外交易转向场内交易，是一个不错的选择。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"沪深300增强指数基金\"><a href=\"#沪深300增强指数基金\" class=\"headerlink\" title=\"沪深300增强指数基金\"></a>沪深300增强指数基金</h3><p>作为一个新手，在第一次挑选基金的时候难免会被“网红姬”吸引，所以选择了<code>景顺长城沪深300增强</code>定投。</p>\n<div align=\"center\"><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/Ls8XGhIgowpFCPmt2EUnRouebblxkX.zq33yebVkoXg!/r/dFQBAAAAAAAAnull&bo=OATRAjgE0QIRCT4!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>可是2018年它的表现相比2017年差了很多，对比其他两只同类基金，增强效果微乎其微，即便在整个跟踪沪深300的基金中表现也很一般。</p>\n<div align=\"center\"><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/pIdCvs89Qe9mDSdWobC3VFh7uyomL3l1lprkbPBrfD8!/r/dL8AAAAAAAAAnull&bo=7QFlAe0BZQEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>所以，我产生了更换为<code>兴全沪深300指数（LOF）</code>定投的念头，但是由于蚂蚁金服并没有开通这两只基金的超级转换，所以必须要先赎回再申购，这中间还要付出0.62%的手续费。</p>\n<h3 id=\"场内交易\"><a href=\"#场内交易\" class=\"headerlink\" title=\"场内交易\"></a>场内交易</h3><p>我注意到，兴全沪深300指数是一只LOF基金，同时也支持在场内交易。</p>\n<div align=\"center\"><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/RNapWve3cNMflrGj0T9VKXPGhODP8LE1DSqy72f69mg!/r/dFMBAAAAAAAAnull&bo=OAT9BDgE*QQRCT4!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>既然如此，我为什么不直接在场内购买呢，这样成本也更加便宜。</p>\n<h3 id=\"交易成本\"><a href=\"#交易成本\" class=\"headerlink\" title=\"交易成本\"></a>交易成本</h3><p>所谓场内交易，就是通过股票账户在证券交易所买入和卖出，因此只需要支付佣金即可，而无需支付场外的申购费和赎回费。<br>目前券商佣金在万2.5-万3左右，也就是说买入卖出1万元基金，手续费是6元钱。<br>而场外申购费率为0.12%，赎回费率为0.5%，同样买入卖出1万元基金，手续费是62元钱。<br>但是这中间还存在一个问题，大部分券商都有单笔交易佣金最低5元的限制，也就是说实际上手续费要花10元钱。<br>即便如此，两者之间的成本差异也是比较大的，如果能去掉最低5元的限制就更好了。</p>\n<h3 id=\"券商\"><a href=\"#券商\" class=\"headerlink\" title=\"券商\"></a>券商</h3><p>虽然大部分都有最低限制，但也意味着有些券商取消了限制，譬如东方财富、华泰证券等。<br>甚至有网友评论说东方财富不仅没有最低5元限制，而且场内基金交易佣金为万1，吸引力确实挺大。<br>但我依然选择了华泰证券…</p>\n<div align=\"center\"><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/iWCjslpyUg5pWdF6lfTFD.twojX2AYDjTRHzbjBAXMw!/r/dDYBAAAAAAAAnull&bo=OAQBBTgEAQURCT4!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>因为我在上一篇文章说过，目前名下沪A账户已经达到上限，所以无法在其他券商进行开户。<br>但是华泰证券可以在开户时选择下挂<code>沪深基金账户</code>，而无需开通沪A股东账户，这意味着我可以单独通过华泰来交易场内基金。<br>虽然华泰证券手机开户佣金是万3，但场内基金交易手续费最低只要0.1元，比较适合进行小资金定投。</p>\n","site":{"data":{}},"excerpt":"<p>接触基金定投已经快9个月，虽然一直在亏钱，但是并没有妨碍我对指数的信心。只是昨天在比较基金收益时，发现自己选择的沪深300增强基金表现较差，因此产生了更换另一只沪深300的念头。</p>\n<p>在纠结的过程中，我发现似乎由场外交易转向场内交易，是一个不错的选择。</p>","more":"<h3 id=\"沪深300增强指数基金\"><a href=\"#沪深300增强指数基金\" class=\"headerlink\" title=\"沪深300增强指数基金\"></a>沪深300增强指数基金</h3><p>作为一个新手，在第一次挑选基金的时候难免会被“网红姬”吸引，所以选择了<code>景顺长城沪深300增强</code>定投。</p>\n<div align=\"center\"><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/Ls8XGhIgowpFCPmt2EUnRouebblxkX.zq33yebVkoXg!/r/dFQBAAAAAAAAnull&bo=OATRAjgE0QIRCT4!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>可是2018年它的表现相比2017年差了很多，对比其他两只同类基金，增强效果微乎其微，即便在整个跟踪沪深300的基金中表现也很一般。</p>\n<div align=\"center\"><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/pIdCvs89Qe9mDSdWobC3VFh7uyomL3l1lprkbPBrfD8!/r/dL8AAAAAAAAAnull&bo=7QFlAe0BZQEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>所以，我产生了更换为<code>兴全沪深300指数（LOF）</code>定投的念头，但是由于蚂蚁金服并没有开通这两只基金的超级转换，所以必须要先赎回再申购，这中间还要付出0.62%的手续费。</p>\n<h3 id=\"场内交易\"><a href=\"#场内交易\" class=\"headerlink\" title=\"场内交易\"></a>场内交易</h3><p>我注意到，兴全沪深300指数是一只LOF基金，同时也支持在场内交易。</p>\n<div align=\"center\"><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/RNapWve3cNMflrGj0T9VKXPGhODP8LE1DSqy72f69mg!/r/dFMBAAAAAAAAnull&bo=OAT9BDgE*QQRCT4!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>既然如此，我为什么不直接在场内购买呢，这样成本也更加便宜。</p>\n<h3 id=\"交易成本\"><a href=\"#交易成本\" class=\"headerlink\" title=\"交易成本\"></a>交易成本</h3><p>所谓场内交易，就是通过股票账户在证券交易所买入和卖出，因此只需要支付佣金即可，而无需支付场外的申购费和赎回费。<br>目前券商佣金在万2.5-万3左右，也就是说买入卖出1万元基金，手续费是6元钱。<br>而场外申购费率为0.12%，赎回费率为0.5%，同样买入卖出1万元基金，手续费是62元钱。<br>但是这中间还存在一个问题，大部分券商都有单笔交易佣金最低5元的限制，也就是说实际上手续费要花10元钱。<br>即便如此，两者之间的成本差异也是比较大的，如果能去掉最低5元的限制就更好了。</p>\n<h3 id=\"券商\"><a href=\"#券商\" class=\"headerlink\" title=\"券商\"></a>券商</h3><p>虽然大部分都有最低限制，但也意味着有些券商取消了限制，譬如东方财富、华泰证券等。<br>甚至有网友评论说东方财富不仅没有最低5元限制，而且场内基金交易佣金为万1，吸引力确实挺大。<br>但我依然选择了华泰证券…</p>\n<div align=\"center\"><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/iWCjslpyUg5pWdF6lfTFD.twojX2AYDjTRHzbjBAXMw!/r/dDYBAAAAAAAAnull&bo=OAQBBTgEAQURCT4!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>因为我在上一篇文章说过，目前名下沪A账户已经达到上限，所以无法在其他券商进行开户。<br>但是华泰证券可以在开户时选择下挂<code>沪深基金账户</code>，而无需开通沪A股东账户，这意味着我可以单独通过华泰来交易场内基金。<br>虽然华泰证券手机开户佣金是万3，但场内基金交易手续费最低只要0.1元，比较适合进行小资金定投。</p>"},{"title":"通过Github Actions使用Gulp压缩静态文件","date":"2019-12-01T12:27:40.000Z","abbrlink":"28061956","thumbnail":"//r.photo.store.qq.com/psb?/V11rnv1t26XYl4/PAde*GMGt3LUUCYqbR64OPMtZ5LfpNJ9lD3YVIvfqSo!/r/dAgBAAAAAAAAnull&bo=rwQFAq8EBQIRCT4!&rf=photolist&t=5_yake_qzoneimgout.png","_content":"\n虽然本站大部分静态文件都使用了CDN，但是一些html文件依然存在大量的空白字符。通过Github Actions既不用增加部署命令，又可以实现静态文件的压缩，何乐而不为呢？\n\n<!--more-->\n\n###  本地安装Gulp\n\n首先全局安装gulp\n\n```js\nnpm install gulp -g\n```\n\n接着分别安装相关的html、js、css、image插件，后面这些主要是为了解决兼容的问题\n\n```js\nnpm install gulp --save\nnpm install gulp-minify-css --save\nnpm install gulp-uglify --save\nnpm install gulp-htmlmin --save\nnpm install gulp-htmlclean --save\nnpm install gulp-imagemin --save\n# 解决【Gulp打包问题】 GulpUglifyError: unable to minify JavaScript\n# 解决 gulp-uglify 压缩JavaScript 不兼容 es5 语法的问题\nnpm install babel-core@6.26.3 --save\nnpm install gulp-babel@7.0.1 --save\nnpm install babel-preset-es2015@6.24.1 --save\n# gulp-babel 取消严格模式方法(\"use strict\")\nnpm install babel-plugin-transform-remove-strict-mode --save\n```\n\n### 创建`gulpfile.js`文件\n\n直接在根目录新建gulpfile.js文件\n\n```js\nvar gulp = require('gulp');\nvar minifycss = require('gulp-minify-css');\nvar uglify = require('gulp-uglify');\nvar htmlmin = require('gulp-htmlmin');\nvar htmlclean = require('gulp-htmlclean');\nvar imagemin = require('gulp-imagemin');\nvar babel = require('gulp-babel');\n\n// 压缩css文件\ngulp.task('minify-css', function (done) {\n    return gulp.src('./public/**/*.css')\n        .pipe(minifycss())\n        .pipe(gulp.dest('./public'));\n    done();\n});\n\n// 压缩html文件\ngulp.task('minify-html', function (done) {\n    return gulp.src('./public/**/*.html')\n        .pipe(htmlclean())\n        .pipe(htmlmin({\n            removeComments: true,\n            minifyJS: true,\n            minifyCSS: true,\n            minifyURLs: true,\n        }))\n        .pipe(gulp.dest('./public'));\n    done();\n});\n\n// 压缩js文件\ngulp.task('minify-js', function (done) {\n    return gulp.src(['./public/**/*.js', '!./public/**/*.min.js'])\n        .pipe(babel({\n            //将ES6代码转译为可执行的JS代码\n            presets: ['es2015'] // es5检查机制\n        }))\n        .pipe(uglify())\n        .pipe(gulp.dest('./public'));\n    done();\n});\n\n// 压缩 public/images 目录内图片(Version<3)\n// gulp.task('minify-images', function () {\n//     gulp.src('./public/images/**/*.*')\n//         .pipe(imagemin({\n//             optimizationLevel: 5, //类型：Number  默认：3  取值范围：0-7（优化等级）\n//             progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片\n//             interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染\n//             multipass: false, //类型：Boolean 默认：false 多次优化svg直到完全优化\n//         }))\n//         .pipe(gulp.dest('./public/images'));\n// });\n\n// 压缩 public/images 目录内图片(Version>3)\ngulp.task('minify-images', function (done) {\n    gulp.src('./public/images/**/*.*')\n        .pipe(imagemin([\n            imagemin.gifsicle({interlaced: true}),\n            imagemin.jpegtran({progressive: true}),\n            imagemin.optipng({optimizationLevel: 5}),\n            imagemin.svgo({\n                plugins: [\n                    {removeViewBox: true},\n                    {cleanupIDs: false}\n                ]\n            })\n        ]))\n        .pipe(gulp.dest('./public/images'));\n    done();\n});\n\n//4.0以前的写法 \n//gulp.task('default', [\n//  'minify-html', 'minify-css', 'minify-js', 'minify-images'\n//]);\n//4.0以后的写法\n// 执行 gulp 命令时执行的任务\ngulp.task('default', gulp.series(gulp.parallel('minify-html', 'minify-css',\n 'minify-js', 'minify-images')), function () {\n    console.log(\"----------gulp Finished----------\");\n    // Do something after a, b, and c are finished.\n});\n```\n\n### 创建`.babelrc`文件\n\n依然是在根目录新建即可\n\n```js\n{\n    'presets': ['es2015'],\n    \"plugins\": [\"transform-remove-strict-mode\"]\n}\n```\n\n### 修改Acitons配置文件\n\n修改`.github/workflows/main.yml`文件，这里我参考的Travis CI的配置，因为网上还没有Github Actions安装gulp相关的内容。\n\n- 新增gulp安装命令\n\n```js\nnpm install hexo-cli -g\nnpm install gulp -g\nnpm install\n```\n\n- 新增gulp压缩命令\n\n```js\nhexo clean\nhexo g\ngulp\nhexo d\n```\n\n### 自动触发\n\n接着使用git push即可自动触发gulp压缩静态文件并部署到Github Pages\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/mllaWFovunVLdx8odUwjEQm.Or8wj50M*wRUvOvDj9w!/r/dL8AAAAAAAAAnull&bo=9AKTAfQCkwEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n### 压缩效果\n\nhtml压缩前24KB，压缩后17KB，减少29%的体积\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/t07wnkGiWV4Jeeag*eetZq8ene10idfYOyFF38JXjrg!/r/dD4BAAAAAAAAnull&bo=eAJqAXgCagEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/5jblezObgabMOwcPvTa9KdlBf8LGp5kENleaNbPVVI0!/r/dDQBAAAAAAAAnull&bo=XgIdAV4CHQEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\ncss和js也有接近30%的压缩，图片则没有效果，因为除了logo和ico全是用的CDN\n\n### 参考资料\n\n- https://segmentfault.com/a/1190000019842178","source":"_posts/通过Github Actions使用Gulp压缩静态文件.md","raw":"---\n\ntitle: 通过Github Actions使用Gulp压缩静态文件\ndate: 2019-12-01 20:27:40\nabbrlink: '28061956'\nthumbnail: //r.photo.store.qq.com/psb?/V11rnv1t26XYl4/PAde*GMGt3LUUCYqbR64OPMtZ5LfpNJ9lD3YVIvfqSo!/r/dAgBAAAAAAAAnull&bo=rwQFAq8EBQIRCT4!&rf=photolist&t=5_yake_qzoneimgout.png\n\n---\n\n虽然本站大部分静态文件都使用了CDN，但是一些html文件依然存在大量的空白字符。通过Github Actions既不用增加部署命令，又可以实现静态文件的压缩，何乐而不为呢？\n\n<!--more-->\n\n###  本地安装Gulp\n\n首先全局安装gulp\n\n```js\nnpm install gulp -g\n```\n\n接着分别安装相关的html、js、css、image插件，后面这些主要是为了解决兼容的问题\n\n```js\nnpm install gulp --save\nnpm install gulp-minify-css --save\nnpm install gulp-uglify --save\nnpm install gulp-htmlmin --save\nnpm install gulp-htmlclean --save\nnpm install gulp-imagemin --save\n# 解决【Gulp打包问题】 GulpUglifyError: unable to minify JavaScript\n# 解决 gulp-uglify 压缩JavaScript 不兼容 es5 语法的问题\nnpm install babel-core@6.26.3 --save\nnpm install gulp-babel@7.0.1 --save\nnpm install babel-preset-es2015@6.24.1 --save\n# gulp-babel 取消严格模式方法(\"use strict\")\nnpm install babel-plugin-transform-remove-strict-mode --save\n```\n\n### 创建`gulpfile.js`文件\n\n直接在根目录新建gulpfile.js文件\n\n```js\nvar gulp = require('gulp');\nvar minifycss = require('gulp-minify-css');\nvar uglify = require('gulp-uglify');\nvar htmlmin = require('gulp-htmlmin');\nvar htmlclean = require('gulp-htmlclean');\nvar imagemin = require('gulp-imagemin');\nvar babel = require('gulp-babel');\n\n// 压缩css文件\ngulp.task('minify-css', function (done) {\n    return gulp.src('./public/**/*.css')\n        .pipe(minifycss())\n        .pipe(gulp.dest('./public'));\n    done();\n});\n\n// 压缩html文件\ngulp.task('minify-html', function (done) {\n    return gulp.src('./public/**/*.html')\n        .pipe(htmlclean())\n        .pipe(htmlmin({\n            removeComments: true,\n            minifyJS: true,\n            minifyCSS: true,\n            minifyURLs: true,\n        }))\n        .pipe(gulp.dest('./public'));\n    done();\n});\n\n// 压缩js文件\ngulp.task('minify-js', function (done) {\n    return gulp.src(['./public/**/*.js', '!./public/**/*.min.js'])\n        .pipe(babel({\n            //将ES6代码转译为可执行的JS代码\n            presets: ['es2015'] // es5检查机制\n        }))\n        .pipe(uglify())\n        .pipe(gulp.dest('./public'));\n    done();\n});\n\n// 压缩 public/images 目录内图片(Version<3)\n// gulp.task('minify-images', function () {\n//     gulp.src('./public/images/**/*.*')\n//         .pipe(imagemin({\n//             optimizationLevel: 5, //类型：Number  默认：3  取值范围：0-7（优化等级）\n//             progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片\n//             interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染\n//             multipass: false, //类型：Boolean 默认：false 多次优化svg直到完全优化\n//         }))\n//         .pipe(gulp.dest('./public/images'));\n// });\n\n// 压缩 public/images 目录内图片(Version>3)\ngulp.task('minify-images', function (done) {\n    gulp.src('./public/images/**/*.*')\n        .pipe(imagemin([\n            imagemin.gifsicle({interlaced: true}),\n            imagemin.jpegtran({progressive: true}),\n            imagemin.optipng({optimizationLevel: 5}),\n            imagemin.svgo({\n                plugins: [\n                    {removeViewBox: true},\n                    {cleanupIDs: false}\n                ]\n            })\n        ]))\n        .pipe(gulp.dest('./public/images'));\n    done();\n});\n\n//4.0以前的写法 \n//gulp.task('default', [\n//  'minify-html', 'minify-css', 'minify-js', 'minify-images'\n//]);\n//4.0以后的写法\n// 执行 gulp 命令时执行的任务\ngulp.task('default', gulp.series(gulp.parallel('minify-html', 'minify-css',\n 'minify-js', 'minify-images')), function () {\n    console.log(\"----------gulp Finished----------\");\n    // Do something after a, b, and c are finished.\n});\n```\n\n### 创建`.babelrc`文件\n\n依然是在根目录新建即可\n\n```js\n{\n    'presets': ['es2015'],\n    \"plugins\": [\"transform-remove-strict-mode\"]\n}\n```\n\n### 修改Acitons配置文件\n\n修改`.github/workflows/main.yml`文件，这里我参考的Travis CI的配置，因为网上还没有Github Actions安装gulp相关的内容。\n\n- 新增gulp安装命令\n\n```js\nnpm install hexo-cli -g\nnpm install gulp -g\nnpm install\n```\n\n- 新增gulp压缩命令\n\n```js\nhexo clean\nhexo g\ngulp\nhexo d\n```\n\n### 自动触发\n\n接着使用git push即可自动触发gulp压缩静态文件并部署到Github Pages\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/mllaWFovunVLdx8odUwjEQm.Or8wj50M*wRUvOvDj9w!/r/dL8AAAAAAAAAnull&bo=9AKTAfQCkwEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n### 压缩效果\n\nhtml压缩前24KB，压缩后17KB，减少29%的体积\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/t07wnkGiWV4Jeeag*eetZq8ene10idfYOyFF38JXjrg!/r/dD4BAAAAAAAAnull&bo=eAJqAXgCagEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/5jblezObgabMOwcPvTa9KdlBf8LGp5kENleaNbPVVI0!/r/dDQBAAAAAAAAnull&bo=XgIdAV4CHQEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\ncss和js也有接近30%的压缩，图片则没有效果，因为除了logo和ico全是用的CDN\n\n### 参考资料\n\n- https://segmentfault.com/a/1190000019842178","slug":"通过Github Actions使用Gulp压缩静态文件","published":1,"updated":"2019-12-01T12:35:30.405Z","_id":"ck3mzfjhz0006fzsi95uig1vi","comments":1,"layout":"post","photos":[],"link":"","content":"<p>虽然本站大部分静态文件都使用了CDN，但是一些html文件依然存在大量的空白字符。通过Github Actions既不用增加部署命令，又可以实现静态文件的压缩，何乐而不为呢？</p>\n<a id=\"more\"></a>\n\n<h3 id=\"本地安装Gulp\"><a href=\"#本地安装Gulp\" class=\"headerlink\" title=\"本地安装Gulp\"></a>本地安装Gulp</h3><p>首先全局安装gulp</p>\n<figure class=\"highlight js hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install gulp -g</span><br></pre></td></tr></table></figure>\n\n<p>接着分别安装相关的html、js、css、image插件，后面这些主要是为了解决兼容的问题</p>\n<figure class=\"highlight js hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install gulp --save</span><br><span class=\"line\">npm install gulp-minify-css --save</span><br><span class=\"line\">npm install gulp-uglify --save</span><br><span class=\"line\">npm install gulp-htmlmin --save</span><br><span class=\"line\">npm install gulp-htmlclean --save</span><br><span class=\"line\">npm install gulp-imagemin --save</span><br><span class=\"line\"># 解决【Gulp打包问题】 GulpUglifyError: unable to minify JavaScript</span><br><span class=\"line\"># 解决 gulp-uglify 压缩JavaScript 不兼容 es5 语法的问题</span><br><span class=\"line\">npm install babel-core@<span class=\"hljs-number\">6.26</span><span class=\"hljs-number\">.3</span> --save</span><br><span class=\"line\">npm install gulp-babel@<span class=\"hljs-number\">7.0</span><span class=\"hljs-number\">.1</span> --save</span><br><span class=\"line\">npm install babel-preset-es2015@<span class=\"hljs-number\">6.24</span><span class=\"hljs-number\">.1</span> --save</span><br><span class=\"line\"># gulp-babel 取消严格模式方法(\"use strict\")</span><br><span class=\"line\">npm install babel-plugin-transform-remove-strict-mode --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建gulpfile-js文件\"><a href=\"#创建gulpfile-js文件\" class=\"headerlink\" title=\"创建gulpfile.js文件\"></a>创建<code>gulpfile.js</code>文件</h3><p>直接在根目录新建gulpfile.js文件</p>\n<figure class=\"highlight js hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"hljs-keyword\">var</span> gulp = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"hljs-keyword\">var</span> minifycss = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'gulp-minify-css'</span>);</span><br><span class=\"line\"><span class=\"hljs-keyword\">var</span> uglify = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'gulp-uglify'</span>);</span><br><span class=\"line\"><span class=\"hljs-keyword\">var</span> htmlmin = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'gulp-htmlmin'</span>);</span><br><span class=\"line\"><span class=\"hljs-keyword\">var</span> htmlclean = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'gulp-htmlclean'</span>);</span><br><span class=\"line\"><span class=\"hljs-keyword\">var</span> imagemin = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'gulp-imagemin'</span>);</span><br><span class=\"line\"><span class=\"hljs-keyword\">var</span> babel = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'gulp-babel'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"hljs-comment\">// 压缩css文件</span></span><br><span class=\"line\">gulp.task(<span class=\"hljs-string\">'minify-css'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">done</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"hljs-keyword\">return</span> gulp.src(<span class=\"hljs-string\">'./public/**/*.css'</span>)</span><br><span class=\"line\">        .pipe(minifycss())</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"hljs-string\">'./public'</span>));</span><br><span class=\"line\">    done();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"hljs-comment\">// 压缩html文件</span></span><br><span class=\"line\">gulp.task(<span class=\"hljs-string\">'minify-html'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">done</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"hljs-keyword\">return</span> gulp.src(<span class=\"hljs-string\">'./public/**/*.html'</span>)</span><br><span class=\"line\">        .pipe(htmlclean())</span><br><span class=\"line\">        .pipe(htmlmin(&#123;</span><br><span class=\"line\">            removeComments: <span class=\"hljs-literal\">true</span>,</span><br><span class=\"line\">            minifyJS: <span class=\"hljs-literal\">true</span>,</span><br><span class=\"line\">            minifyCSS: <span class=\"hljs-literal\">true</span>,</span><br><span class=\"line\">            minifyURLs: <span class=\"hljs-literal\">true</span>,</span><br><span class=\"line\">        &#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"hljs-string\">'./public'</span>));</span><br><span class=\"line\">    done();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"hljs-comment\">// 压缩js文件</span></span><br><span class=\"line\">gulp.task(<span class=\"hljs-string\">'minify-js'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">done</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"hljs-keyword\">return</span> gulp.src([<span class=\"hljs-string\">'./public/**/*.js'</span>, <span class=\"hljs-string\">'!./public/**/*.min.js'</span>])</span><br><span class=\"line\">        .pipe(babel(&#123;</span><br><span class=\"line\">            <span class=\"hljs-comment\">//将ES6代码转译为可执行的JS代码</span></span><br><span class=\"line\">            presets: [<span class=\"hljs-string\">'es2015'</span>] <span class=\"hljs-comment\">// es5检查机制</span></span><br><span class=\"line\">        &#125;))</span><br><span class=\"line\">        .pipe(uglify())</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"hljs-string\">'./public'</span>));</span><br><span class=\"line\">    done();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"hljs-comment\">// 压缩 public/images 目录内图片(Version&lt;3)</span></span><br><span class=\"line\"><span class=\"hljs-comment\">// gulp.task('minify-images', function () &#123;</span></span><br><span class=\"line\"><span class=\"hljs-comment\">//     gulp.src('./public/images/**/*.*')</span></span><br><span class=\"line\"><span class=\"hljs-comment\">//         .pipe(imagemin(&#123;</span></span><br><span class=\"line\"><span class=\"hljs-comment\">//             optimizationLevel: 5, //类型：Number  默认：3  取值范围：0-7（优化等级）</span></span><br><span class=\"line\"><span class=\"hljs-comment\">//             progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片</span></span><br><span class=\"line\"><span class=\"hljs-comment\">//             interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染</span></span><br><span class=\"line\"><span class=\"hljs-comment\">//             multipass: false, //类型：Boolean 默认：false 多次优化svg直到完全优化</span></span><br><span class=\"line\"><span class=\"hljs-comment\">//         &#125;))</span></span><br><span class=\"line\"><span class=\"hljs-comment\">//         .pipe(gulp.dest('./public/images'));</span></span><br><span class=\"line\"><span class=\"hljs-comment\">// &#125;);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"hljs-comment\">// 压缩 public/images 目录内图片(Version&gt;3)</span></span><br><span class=\"line\">gulp.task(<span class=\"hljs-string\">'minify-images'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">done</span>) </span>&#123;</span><br><span class=\"line\">    gulp.src(<span class=\"hljs-string\">'./public/images/**/*.*'</span>)</span><br><span class=\"line\">        .pipe(imagemin([</span><br><span class=\"line\">            imagemin.gifsicle(&#123;<span class=\"hljs-attr\">interlaced</span>: <span class=\"hljs-literal\">true</span>&#125;),</span><br><span class=\"line\">            imagemin.jpegtran(&#123;<span class=\"hljs-attr\">progressive</span>: <span class=\"hljs-literal\">true</span>&#125;),</span><br><span class=\"line\">            imagemin.optipng(&#123;<span class=\"hljs-attr\">optimizationLevel</span>: <span class=\"hljs-number\">5</span>&#125;),</span><br><span class=\"line\">            imagemin.svgo(&#123;</span><br><span class=\"line\">                plugins: [</span><br><span class=\"line\">                    &#123;<span class=\"hljs-attr\">removeViewBox</span>: <span class=\"hljs-literal\">true</span>&#125;,</span><br><span class=\"line\">                    &#123;<span class=\"hljs-attr\">cleanupIDs</span>: <span class=\"hljs-literal\">false</span>&#125;</span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        ]))</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"hljs-string\">'./public/images'</span>));</span><br><span class=\"line\">    done();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"hljs-comment\">//4.0以前的写法 </span></span><br><span class=\"line\"><span class=\"hljs-comment\">//gulp.task('default', [</span></span><br><span class=\"line\"><span class=\"hljs-comment\">//  'minify-html', 'minify-css', 'minify-js', 'minify-images'</span></span><br><span class=\"line\"><span class=\"hljs-comment\">//]);</span></span><br><span class=\"line\"><span class=\"hljs-comment\">//4.0以后的写法</span></span><br><span class=\"line\"><span class=\"hljs-comment\">// 执行 gulp 命令时执行的任务</span></span><br><span class=\"line\">gulp.task(<span class=\"hljs-string\">'default'</span>, gulp.series(gulp.parallel(<span class=\"hljs-string\">'minify-html'</span>, <span class=\"hljs-string\">'minify-css'</span>,</span><br><span class=\"line\"> <span class=\"hljs-string\">'minify-js'</span>, <span class=\"hljs-string\">'minify-images'</span>)), <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"----------gulp Finished----------\"</span>);</span><br><span class=\"line\">    <span class=\"hljs-comment\">// Do something after a, b, and c are finished.</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建-babelrc文件\"><a href=\"#创建-babelrc文件\" class=\"headerlink\" title=\"创建.babelrc文件\"></a>创建<code>.babelrc</code>文件</h3><p>依然是在根目录新建即可</p>\n<figure class=\"highlight js hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"hljs-string\">'presets'</span>: [<span class=\"hljs-string\">'es2015'</span>],</span><br><span class=\"line\">    <span class=\"hljs-string\">\"plugins\"</span>: [<span class=\"hljs-string\">\"transform-remove-strict-mode\"</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改Acitons配置文件\"><a href=\"#修改Acitons配置文件\" class=\"headerlink\" title=\"修改Acitons配置文件\"></a>修改Acitons配置文件</h3><p>修改<code>.github/workflows/main.yml</code>文件，这里我参考的Travis CI的配置，因为网上还没有Github Actions安装gulp相关的内容。</p>\n<ul>\n<li>新增gulp安装命令</li>\n</ul>\n<figure class=\"highlight js hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\">npm install gulp -g</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>新增gulp压缩命令</li>\n</ul>\n<figure class=\"highlight js hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">gulp</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自动触发\"><a href=\"#自动触发\" class=\"headerlink\" title=\"自动触发\"></a>自动触发</h3><p>接着使用git push即可自动触发gulp压缩静态文件并部署到Github Pages</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/mllaWFovunVLdx8odUwjEQm.Or8wj50M*wRUvOvDj9w!/r/dL8AAAAAAAAAnull&bo=9AKTAfQCkwEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<h3 id=\"压缩效果\"><a href=\"#压缩效果\" class=\"headerlink\" title=\"压缩效果\"></a>压缩效果</h3><p>html压缩前24KB，压缩后17KB，减少29%的体积</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/t07wnkGiWV4Jeeag*eetZq8ene10idfYOyFF38JXjrg!/r/dD4BAAAAAAAAnull&bo=eAJqAXgCagEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/5jblezObgabMOwcPvTa9KdlBf8LGp5kENleaNbPVVI0!/r/dDQBAAAAAAAAnull&bo=XgIdAV4CHQEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>css和js也有接近30%的压缩，图片则没有效果，因为除了logo和ico全是用的CDN</p>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><ul>\n<li><a href=\"https://segmentfault.com/a/1190000019842178\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://segmentfault.com/a/1190000019842178</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>虽然本站大部分静态文件都使用了CDN，但是一些html文件依然存在大量的空白字符。通过Github Actions既不用增加部署命令，又可以实现静态文件的压缩，何乐而不为呢？</p>","more":"<h3 id=\"本地安装Gulp\"><a href=\"#本地安装Gulp\" class=\"headerlink\" title=\"本地安装Gulp\"></a>本地安装Gulp</h3><p>首先全局安装gulp</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install gulp -g</span><br></pre></td></tr></table></figure>\n\n<p>接着分别安装相关的html、js、css、image插件，后面这些主要是为了解决兼容的问题</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install gulp --save</span><br><span class=\"line\">npm install gulp-minify-css --save</span><br><span class=\"line\">npm install gulp-uglify --save</span><br><span class=\"line\">npm install gulp-htmlmin --save</span><br><span class=\"line\">npm install gulp-htmlclean --save</span><br><span class=\"line\">npm install gulp-imagemin --save</span><br><span class=\"line\"># 解决【Gulp打包问题】 GulpUglifyError: unable to minify JavaScript</span><br><span class=\"line\"># 解决 gulp-uglify 压缩JavaScript 不兼容 es5 语法的问题</span><br><span class=\"line\">npm install babel-core@<span class=\"number\">6.26</span><span class=\"number\">.3</span> --save</span><br><span class=\"line\">npm install gulp-babel@<span class=\"number\">7.0</span><span class=\"number\">.1</span> --save</span><br><span class=\"line\">npm install babel-preset-es2015@<span class=\"number\">6.24</span><span class=\"number\">.1</span> --save</span><br><span class=\"line\"># gulp-babel 取消严格模式方法(\"use strict\")</span><br><span class=\"line\">npm install babel-plugin-transform-remove-strict-mode --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建gulpfile-js文件\"><a href=\"#创建gulpfile-js文件\" class=\"headerlink\" title=\"创建gulpfile.js文件\"></a>创建<code>gulpfile.js</code>文件</h3><p>直接在根目录新建gulpfile.js文件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> minifycss = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minify-css'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> htmlmin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-htmlmin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> htmlclean = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-htmlclean'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-imagemin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> babel = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-babel'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 压缩css文件</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-css'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">done</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'./public/**/*.css'</span>)</span><br><span class=\"line\">        .pipe(minifycss())</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public'</span>));</span><br><span class=\"line\">    done();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 压缩html文件</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-html'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">done</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'./public/**/*.html'</span>)</span><br><span class=\"line\">        .pipe(htmlclean())</span><br><span class=\"line\">        .pipe(htmlmin(&#123;</span><br><span class=\"line\">            removeComments: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            minifyJS: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            minifyCSS: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            minifyURLs: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        &#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public'</span>));</span><br><span class=\"line\">    done();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 压缩js文件</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-js'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">done</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src([<span class=\"string\">'./public/**/*.js'</span>, <span class=\"string\">'!./public/**/*.min.js'</span>])</span><br><span class=\"line\">        .pipe(babel(&#123;</span><br><span class=\"line\">            <span class=\"comment\">//将ES6代码转译为可执行的JS代码</span></span><br><span class=\"line\">            presets: [<span class=\"string\">'es2015'</span>] <span class=\"comment\">// es5检查机制</span></span><br><span class=\"line\">        &#125;))</span><br><span class=\"line\">        .pipe(uglify())</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public'</span>));</span><br><span class=\"line\">    done();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 压缩 public/images 目录内图片(Version&lt;3)</span></span><br><span class=\"line\"><span class=\"comment\">// gulp.task('minify-images', function () &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     gulp.src('./public/images/**/*.*')</span></span><br><span class=\"line\"><span class=\"comment\">//         .pipe(imagemin(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//             optimizationLevel: 5, //类型：Number  默认：3  取值范围：0-7（优化等级）</span></span><br><span class=\"line\"><span class=\"comment\">//             progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片</span></span><br><span class=\"line\"><span class=\"comment\">//             interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染</span></span><br><span class=\"line\"><span class=\"comment\">//             multipass: false, //类型：Boolean 默认：false 多次优化svg直到完全优化</span></span><br><span class=\"line\"><span class=\"comment\">//         &#125;))</span></span><br><span class=\"line\"><span class=\"comment\">//         .pipe(gulp.dest('./public/images'));</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 压缩 public/images 目录内图片(Version&gt;3)</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-images'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">done</span>) </span>&#123;</span><br><span class=\"line\">    gulp.src(<span class=\"string\">'./public/images/**/*.*'</span>)</span><br><span class=\"line\">        .pipe(imagemin([</span><br><span class=\"line\">            imagemin.gifsicle(&#123;<span class=\"attr\">interlaced</span>: <span class=\"literal\">true</span>&#125;),</span><br><span class=\"line\">            imagemin.jpegtran(&#123;<span class=\"attr\">progressive</span>: <span class=\"literal\">true</span>&#125;),</span><br><span class=\"line\">            imagemin.optipng(&#123;<span class=\"attr\">optimizationLevel</span>: <span class=\"number\">5</span>&#125;),</span><br><span class=\"line\">            imagemin.svgo(&#123;</span><br><span class=\"line\">                plugins: [</span><br><span class=\"line\">                    &#123;<span class=\"attr\">removeViewBox</span>: <span class=\"literal\">true</span>&#125;,</span><br><span class=\"line\">                    &#123;<span class=\"attr\">cleanupIDs</span>: <span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        ]))</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public/images'</span>));</span><br><span class=\"line\">    done();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//4.0以前的写法 </span></span><br><span class=\"line\"><span class=\"comment\">//gulp.task('default', [</span></span><br><span class=\"line\"><span class=\"comment\">//  'minify-html', 'minify-css', 'minify-js', 'minify-images'</span></span><br><span class=\"line\"><span class=\"comment\">//]);</span></span><br><span class=\"line\"><span class=\"comment\">//4.0以后的写法</span></span><br><span class=\"line\"><span class=\"comment\">// 执行 gulp 命令时执行的任务</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'default'</span>, gulp.series(gulp.parallel(<span class=\"string\">'minify-html'</span>, <span class=\"string\">'minify-css'</span>,</span><br><span class=\"line\"> <span class=\"string\">'minify-js'</span>, <span class=\"string\">'minify-images'</span>)), <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"----------gulp Finished----------\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// Do something after a, b, and c are finished.</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建-babelrc文件\"><a href=\"#创建-babelrc文件\" class=\"headerlink\" title=\"创建.babelrc文件\"></a>创建<code>.babelrc</code>文件</h3><p>依然是在根目录新建即可</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">'presets'</span>: [<span class=\"string\">'es2015'</span>],</span><br><span class=\"line\">    <span class=\"string\">\"plugins\"</span>: [<span class=\"string\">\"transform-remove-strict-mode\"</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改Acitons配置文件\"><a href=\"#修改Acitons配置文件\" class=\"headerlink\" title=\"修改Acitons配置文件\"></a>修改Acitons配置文件</h3><p>修改<code>.github/workflows/main.yml</code>文件，这里我参考的Travis CI的配置，因为网上还没有Github Actions安装gulp相关的内容。</p>\n<ul>\n<li>新增gulp安装命令</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\">npm install gulp -g</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>新增gulp压缩命令</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">gulp</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自动触发\"><a href=\"#自动触发\" class=\"headerlink\" title=\"自动触发\"></a>自动触发</h3><p>接着使用git push即可自动触发gulp压缩静态文件并部署到Github Pages</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/mllaWFovunVLdx8odUwjEQm.Or8wj50M*wRUvOvDj9w!/r/dL8AAAAAAAAAnull&bo=9AKTAfQCkwEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<h3 id=\"压缩效果\"><a href=\"#压缩效果\" class=\"headerlink\" title=\"压缩效果\"></a>压缩效果</h3><p>html压缩前24KB，压缩后17KB，减少29%的体积</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/t07wnkGiWV4Jeeag*eetZq8ene10idfYOyFF38JXjrg!/r/dD4BAAAAAAAAnull&bo=eAJqAXgCagEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/5jblezObgabMOwcPvTa9KdlBf8LGp5kENleaNbPVVI0!/r/dDQBAAAAAAAAnull&bo=XgIdAV4CHQEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>css和js也有接近30%的压缩，图片则没有效果，因为除了logo和ico全是用的CDN</p>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><ul>\n<li><a href=\"https://segmentfault.com/a/1190000019842178\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://segmentfault.com/a/1190000019842178</a></li>\n</ul>"},{"title":"熟悉CODING企业版Cloud Studio的使用","thumbnail":"//r.photo.store.qq.com/psb?/V11rnv1t26XYl4/lHceXUWapSGWTjMdktWyTFqUEd1o.8FaXxH.fW6bo38!/r/dFIBAAAAAAAAnull&bo=sAQBArAEAQIRCT4!&rf=photolist&t=5_yake_qzoneimgout.png","abbrlink":"6ea6b07d","date":"2019-11-29T07:38:14.000Z","_content":"由于CODING推出了企业版，我预感之前使用的WEB IDE将会逐渐停止维护，因此提前熟悉一下新版Cloud Studio的使用。\n<!--more-->\n\n### 注册企业版\n\n要想使用新版Cloud Studio必须先注册CODING 企业版，目前5人以下团体是免费的。\n实际上如果单纯为了使用Cloud Studio，并不需要去研究CODING的项目体系，因为我的博客托管在Github，只是利用它来管理代码而已。\n\n不过需要注意的是，**新版Cloud Studio只能每天使用两个小时**。\n\n### 导入项目\n\n目前新版Cloud Studio不支持直接从Github导入仓库，因此只能通过git pull命令来实现。\n记得将SSH公钥添加到Github仓库的`Setting—Deploy keys`里面。\n\n### 安装Hexo\n\n选择默认的Node.js环境，根据官网命令安装即可，如果安装失败记得使用`sudo`命令。\n\n### 使用\n\n由于新版Cloud Studio汉化不完全，而且配置选项跟之前有些差别，也耗费了我一些时间来摸索。\n\n#### 本地预览\n\n旧版是先输入hexo s命令，接着选择“`访问链接—修改端口号为4000`”，点击链接即可进行预览。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/I73PO2Sb*jzd8pz2n46yZbOuJZm1m9j.2Qkjk3Y2pSI!/r/dFQBAAAAAAAAnull&bo=NQI0ATUCNAEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n但是新版去掉了图形化的界面，反而没有之前方便了。\n\n在菜单栏点击“`查看—命令面板`”，输入\"`preview`\"点击\"`generate preview config file`\"创建一个预览配置文件\"`.vscode/preview.yml`\"\n\n主要是修改`port、run、root`这三项\n\n{% codeblock preview.yml lang:yaml %}\n# .vscode/preview.yml\nautoOpen: true # 打开工作空间时是否自动开启所有应用的预览\napps:\n  - port: 4000 # 应用的端口\n    run: hexo s # 应用的启动命令\n    root: ./public # 应用的启动目录\n    name: hexo s # 应用名称\n    description: 在线预览 # 应用描述\n    autoOpen: false # 打开工作空间时是否自动开启预览（优先级高于根级 autoOpen）\n{% endcodeblock %}\n以后每次想要预览时，只需要点击“`查看—命令面板`”，输入\"`preview`\"点击\"`open preview tab`\"，选择\"`hexo s`\"即可。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/PLQy*uJyIc0ah0ca6PJeh0mcBF5PWc57Hgy8SNhOfUg!/r/dFIBAAAAAAAAnull&bo=ywHaAMsB2gADCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n点击\"`open in browser`\"可以在浏览器中打开新标签页。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/7HniNNl*qWVA.xuICbVpKE6RofZ9G3rNnhJ*Xp.z6Vg!/r/dL8AAAAAAAAAnull&bo=JAeeAyQHngMDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n不过，我发现修改某些文件后，预览页面并不会实时变动，而是要重新hexo g生成，还有待考察。\n\n#### Git提交\n\n旧版是在“版本”中依次选择“`提交—推送`”即可，分别对应git commit和git push。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/fHF9AovBV4bUsld2TGtiWm1k2.oF*a00hBkWHp0Heqo!/r/dL8AAAAAAAAAnull&bo=MAImAjACJgIDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n新版则是先在“`源代码管理`”提交commit\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/Nr6WaVSm9QaNcy*qJnsp.ERIejUccEi6KQb9sjyl0YM!/r/dFQBAAAAAAAAnull&bo=nwFnAZ8BZwEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n接着点击左下角的“`同步按钮`”，就会自动推送到git仓库了。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/d6dfg04B3sA.M3qkTt5vKH09f1TZjsnQV7BtAjLoOHw!/r/dLYAAAAAAAAAnull&bo=MQFyADEBcgADCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n当然，你也可以直接输入git命令进行提交和推送。\n\n### 总结\n\n使用新版Cloud Studio来管理hexo在功能上没有问题，只不过一些细节和交互还需要优化改进。\n另外每天限制两小时的使用比较坑，所以我目前还在使用旧版，等最后关头再转移过去吧。\n","source":"_posts/熟悉CODING企业版Cloud-Studio的使用.md","raw":"---\ntitle: 熟悉CODING企业版Cloud Studio的使用\nthumbnail: >-\n  //r.photo.store.qq.com/psb?/V11rnv1t26XYl4/lHceXUWapSGWTjMdktWyTFqUEd1o.8FaXxH.fW6bo38!/r/dFIBAAAAAAAAnull&bo=sAQBArAEAQIRCT4!&rf=photolist&t=5_yake_qzoneimgout.png\nabbrlink: 6ea6b07d\ndate: 2019-11-29 15:38:14\n---\n由于CODING推出了企业版，我预感之前使用的WEB IDE将会逐渐停止维护，因此提前熟悉一下新版Cloud Studio的使用。\n<!--more-->\n\n### 注册企业版\n\n要想使用新版Cloud Studio必须先注册CODING 企业版，目前5人以下团体是免费的。\n实际上如果单纯为了使用Cloud Studio，并不需要去研究CODING的项目体系，因为我的博客托管在Github，只是利用它来管理代码而已。\n\n不过需要注意的是，**新版Cloud Studio只能每天使用两个小时**。\n\n### 导入项目\n\n目前新版Cloud Studio不支持直接从Github导入仓库，因此只能通过git pull命令来实现。\n记得将SSH公钥添加到Github仓库的`Setting—Deploy keys`里面。\n\n### 安装Hexo\n\n选择默认的Node.js环境，根据官网命令安装即可，如果安装失败记得使用`sudo`命令。\n\n### 使用\n\n由于新版Cloud Studio汉化不完全，而且配置选项跟之前有些差别，也耗费了我一些时间来摸索。\n\n#### 本地预览\n\n旧版是先输入hexo s命令，接着选择“`访问链接—修改端口号为4000`”，点击链接即可进行预览。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/I73PO2Sb*jzd8pz2n46yZbOuJZm1m9j.2Qkjk3Y2pSI!/r/dFQBAAAAAAAAnull&bo=NQI0ATUCNAEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n但是新版去掉了图形化的界面，反而没有之前方便了。\n\n在菜单栏点击“`查看—命令面板`”，输入\"`preview`\"点击\"`generate preview config file`\"创建一个预览配置文件\"`.vscode/preview.yml`\"\n\n主要是修改`port、run、root`这三项\n\n{% codeblock preview.yml lang:yaml %}\n# .vscode/preview.yml\nautoOpen: true # 打开工作空间时是否自动开启所有应用的预览\napps:\n  - port: 4000 # 应用的端口\n    run: hexo s # 应用的启动命令\n    root: ./public # 应用的启动目录\n    name: hexo s # 应用名称\n    description: 在线预览 # 应用描述\n    autoOpen: false # 打开工作空间时是否自动开启预览（优先级高于根级 autoOpen）\n{% endcodeblock %}\n以后每次想要预览时，只需要点击“`查看—命令面板`”，输入\"`preview`\"点击\"`open preview tab`\"，选择\"`hexo s`\"即可。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/PLQy*uJyIc0ah0ca6PJeh0mcBF5PWc57Hgy8SNhOfUg!/r/dFIBAAAAAAAAnull&bo=ywHaAMsB2gADCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n点击\"`open in browser`\"可以在浏览器中打开新标签页。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/7HniNNl*qWVA.xuICbVpKE6RofZ9G3rNnhJ*Xp.z6Vg!/r/dL8AAAAAAAAAnull&bo=JAeeAyQHngMDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n不过，我发现修改某些文件后，预览页面并不会实时变动，而是要重新hexo g生成，还有待考察。\n\n#### Git提交\n\n旧版是在“版本”中依次选择“`提交—推送`”即可，分别对应git commit和git push。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/fHF9AovBV4bUsld2TGtiWm1k2.oF*a00hBkWHp0Heqo!/r/dL8AAAAAAAAAnull&bo=MAImAjACJgIDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n新版则是先在“`源代码管理`”提交commit\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/Nr6WaVSm9QaNcy*qJnsp.ERIejUccEi6KQb9sjyl0YM!/r/dFQBAAAAAAAAnull&bo=nwFnAZ8BZwEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n接着点击左下角的“`同步按钮`”，就会自动推送到git仓库了。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/d6dfg04B3sA.M3qkTt5vKH09f1TZjsnQV7BtAjLoOHw!/r/dLYAAAAAAAAAnull&bo=MQFyADEBcgADCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n当然，你也可以直接输入git命令进行提交和推送。\n\n### 总结\n\n使用新版Cloud Studio来管理hexo在功能上没有问题，只不过一些细节和交互还需要优化改进。\n另外每天限制两小时的使用比较坑，所以我目前还在使用旧版，等最后关头再转移过去吧。\n","slug":"熟悉CODING企业版Cloud-Studio的使用","published":1,"updated":"2019-11-30T18:03:14.436Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3mzfji00007fzsi3f6pgq3f","content":"<p>由于CODING推出了企业版，我预感之前使用的WEB IDE将会逐渐停止维护，因此提前熟悉一下新版Cloud Studio的使用。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"注册企业版\"><a href=\"#注册企业版\" class=\"headerlink\" title=\"注册企业版\"></a>注册企业版</h3><p>要想使用新版Cloud Studio必须先注册CODING 企业版，目前5人以下团体是免费的。<br>实际上如果单纯为了使用Cloud Studio，并不需要去研究CODING的项目体系，因为我的博客托管在Github，只是利用它来管理代码而已。</p>\n<p>不过需要注意的是，<strong>新版Cloud Studio只能每天使用两个小时</strong>。</p>\n<h3 id=\"导入项目\"><a href=\"#导入项目\" class=\"headerlink\" title=\"导入项目\"></a>导入项目</h3><p>目前新版Cloud Studio不支持直接从Github导入仓库，因此只能通过git pull命令来实现。<br>记得将SSH公钥添加到Github仓库的<code>Setting—Deploy keys</code>里面。</p>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><p>选择默认的Node.js环境，根据官网命令安装即可，如果安装失败记得使用<code>sudo</code>命令。</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>由于新版Cloud Studio汉化不完全，而且配置选项跟之前有些差别，也耗费了我一些时间来摸索。</p>\n<h4 id=\"本地预览\"><a href=\"#本地预览\" class=\"headerlink\" title=\"本地预览\"></a>本地预览</h4><p>旧版是先输入hexo s命令，接着选择“<code>访问链接—修改端口号为4000</code>”，点击链接即可进行预览。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/I73PO2Sb*jzd8pz2n46yZbOuJZm1m9j.2Qkjk3Y2pSI!/r/dFQBAAAAAAAAnull&bo=NQI0ATUCNAEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>但是新版去掉了图形化的界面，反而没有之前方便了。</p>\n<p>在菜单栏点击“<code>查看—命令面板</code>”，输入”<code>preview</code>“点击”<code>generate preview config file</code>“创建一个预览配置文件”<code>.vscode/preview.yml</code>“</p>\n<p>主要是修改<code>port、run、root</code>这三项</p>\n<figure class=\"highlight yaml hljs\"><figcaption><span>preview.yml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"hljs-comment\"># .vscode/preview.yml</span></span><br><span class=\"line\"><span class=\"hljs-attr\">autoOpen:</span> <span class=\"hljs-literal\">true</span> <span class=\"hljs-comment\"># 打开工作空间时是否自动开启所有应用的预览</span></span><br><span class=\"line\"><span class=\"hljs-attr\">apps:</span></span><br><span class=\"line\"><span class=\"hljs-attr\">  - port:</span> <span class=\"hljs-number\">4000</span> <span class=\"hljs-comment\"># 应用的端口</span></span><br><span class=\"line\"><span class=\"hljs-attr\">    run:</span> <span class=\"hljs-string\">hexo</span> <span class=\"hljs-string\">s</span> <span class=\"hljs-comment\"># 应用的启动命令</span></span><br><span class=\"line\"><span class=\"hljs-attr\">    root:</span> <span class=\"hljs-string\">./public</span> <span class=\"hljs-comment\"># 应用的启动目录</span></span><br><span class=\"line\"><span class=\"hljs-attr\">    name:</span> <span class=\"hljs-string\">hexo</span> <span class=\"hljs-string\">s</span> <span class=\"hljs-comment\"># 应用名称</span></span><br><span class=\"line\"><span class=\"hljs-attr\">    description:</span> <span class=\"hljs-string\">在线预览</span> <span class=\"hljs-comment\"># 应用描述</span></span><br><span class=\"line\"><span class=\"hljs-attr\">    autoOpen:</span> <span class=\"hljs-literal\">false</span> <span class=\"hljs-comment\"># 打开工作空间时是否自动开启预览（优先级高于根级 autoOpen）</span></span><br></pre></td></tr></table></figure>\n<p>以后每次想要预览时，只需要点击“<code>查看—命令面板</code>”，输入”<code>preview</code>“点击”<code>open preview tab</code>“，选择”<code>hexo s</code>“即可。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/PLQy*uJyIc0ah0ca6PJeh0mcBF5PWc57Hgy8SNhOfUg!/r/dFIBAAAAAAAAnull&bo=ywHaAMsB2gADCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>点击”<code>open in browser</code>“可以在浏览器中打开新标签页。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/7HniNNl*qWVA.xuICbVpKE6RofZ9G3rNnhJ*Xp.z6Vg!/r/dL8AAAAAAAAAnull&bo=JAeeAyQHngMDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>不过，我发现修改某些文件后，预览页面并不会实时变动，而是要重新hexo g生成，还有待考察。</p>\n<h4 id=\"Git提交\"><a href=\"#Git提交\" class=\"headerlink\" title=\"Git提交\"></a>Git提交</h4><p>旧版是在“版本”中依次选择“<code>提交—推送</code>”即可，分别对应git commit和git push。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/fHF9AovBV4bUsld2TGtiWm1k2.oF*a00hBkWHp0Heqo!/r/dL8AAAAAAAAAnull&bo=MAImAjACJgIDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>新版则是先在“<code>源代码管理</code>”提交commit</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/Nr6WaVSm9QaNcy*qJnsp.ERIejUccEi6KQb9sjyl0YM!/r/dFQBAAAAAAAAnull&bo=nwFnAZ8BZwEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>接着点击左下角的“<code>同步按钮</code>”，就会自动推送到git仓库了。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/d6dfg04B3sA.M3qkTt5vKH09f1TZjsnQV7BtAjLoOHw!/r/dLYAAAAAAAAAnull&bo=MQFyADEBcgADCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>当然，你也可以直接输入git命令进行提交和推送。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>使用新版Cloud Studio来管理hexo在功能上没有问题，只不过一些细节和交互还需要优化改进。<br>另外每天限制两小时的使用比较坑，所以我目前还在使用旧版，等最后关头再转移过去吧。</p>\n","site":{"data":{}},"excerpt":"<p>由于CODING推出了企业版，我预感之前使用的WEB IDE将会逐渐停止维护，因此提前熟悉一下新版Cloud Studio的使用。</p>","more":"<h3 id=\"注册企业版\"><a href=\"#注册企业版\" class=\"headerlink\" title=\"注册企业版\"></a>注册企业版</h3><p>要想使用新版Cloud Studio必须先注册CODING 企业版，目前5人以下团体是免费的。<br>实际上如果单纯为了使用Cloud Studio，并不需要去研究CODING的项目体系，因为我的博客托管在Github，只是利用它来管理代码而已。</p>\n<p>不过需要注意的是，<strong>新版Cloud Studio只能每天使用两个小时</strong>。</p>\n<h3 id=\"导入项目\"><a href=\"#导入项目\" class=\"headerlink\" title=\"导入项目\"></a>导入项目</h3><p>目前新版Cloud Studio不支持直接从Github导入仓库，因此只能通过git pull命令来实现。<br>记得将SSH公钥添加到Github仓库的<code>Setting—Deploy keys</code>里面。</p>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><p>选择默认的Node.js环境，根据官网命令安装即可，如果安装失败记得使用<code>sudo</code>命令。</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>由于新版Cloud Studio汉化不完全，而且配置选项跟之前有些差别，也耗费了我一些时间来摸索。</p>\n<h4 id=\"本地预览\"><a href=\"#本地预览\" class=\"headerlink\" title=\"本地预览\"></a>本地预览</h4><p>旧版是先输入hexo s命令，接着选择“<code>访问链接—修改端口号为4000</code>”，点击链接即可进行预览。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/I73PO2Sb*jzd8pz2n46yZbOuJZm1m9j.2Qkjk3Y2pSI!/r/dFQBAAAAAAAAnull&bo=NQI0ATUCNAEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>但是新版去掉了图形化的界面，反而没有之前方便了。</p>\n<p>在菜单栏点击“<code>查看—命令面板</code>”，输入”<code>preview</code>“点击”<code>generate preview config file</code>“创建一个预览配置文件”<code>.vscode/preview.yml</code>“</p>\n<p>主要是修改<code>port、run、root</code>这三项</p>\n<figure class=\"highlight yaml\"><figcaption><span>preview.yml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># .vscode/preview.yml</span></span><br><span class=\"line\"><span class=\"attr\">autoOpen:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 打开工作空间时是否自动开启所有应用的预览</span></span><br><span class=\"line\"><span class=\"attr\">apps:</span></span><br><span class=\"line\"><span class=\"attr\">  - port:</span> <span class=\"number\">4000</span> <span class=\"comment\"># 应用的端口</span></span><br><span class=\"line\"><span class=\"attr\">    run:</span> <span class=\"string\">hexo</span> <span class=\"string\">s</span> <span class=\"comment\"># 应用的启动命令</span></span><br><span class=\"line\"><span class=\"attr\">    root:</span> <span class=\"string\">./public</span> <span class=\"comment\"># 应用的启动目录</span></span><br><span class=\"line\"><span class=\"attr\">    name:</span> <span class=\"string\">hexo</span> <span class=\"string\">s</span> <span class=\"comment\"># 应用名称</span></span><br><span class=\"line\"><span class=\"attr\">    description:</span> <span class=\"string\">在线预览</span> <span class=\"comment\"># 应用描述</span></span><br><span class=\"line\"><span class=\"attr\">    autoOpen:</span> <span class=\"literal\">false</span> <span class=\"comment\"># 打开工作空间时是否自动开启预览（优先级高于根级 autoOpen）</span></span><br></pre></td></tr></table></figure>\n<p>以后每次想要预览时，只需要点击“<code>查看—命令面板</code>”，输入”<code>preview</code>“点击”<code>open preview tab</code>“，选择”<code>hexo s</code>“即可。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/PLQy*uJyIc0ah0ca6PJeh0mcBF5PWc57Hgy8SNhOfUg!/r/dFIBAAAAAAAAnull&bo=ywHaAMsB2gADCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>点击”<code>open in browser</code>“可以在浏览器中打开新标签页。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/7HniNNl*qWVA.xuICbVpKE6RofZ9G3rNnhJ*Xp.z6Vg!/r/dL8AAAAAAAAAnull&bo=JAeeAyQHngMDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>不过，我发现修改某些文件后，预览页面并不会实时变动，而是要重新hexo g生成，还有待考察。</p>\n<h4 id=\"Git提交\"><a href=\"#Git提交\" class=\"headerlink\" title=\"Git提交\"></a>Git提交</h4><p>旧版是在“版本”中依次选择“<code>提交—推送</code>”即可，分别对应git commit和git push。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/fHF9AovBV4bUsld2TGtiWm1k2.oF*a00hBkWHp0Heqo!/r/dL8AAAAAAAAAnull&bo=MAImAjACJgIDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>新版则是先在“<code>源代码管理</code>”提交commit</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/Nr6WaVSm9QaNcy*qJnsp.ERIejUccEi6KQb9sjyl0YM!/r/dFQBAAAAAAAAnull&bo=nwFnAZ8BZwEDCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>接着点击左下角的“<code>同步按钮</code>”，就会自动推送到git仓库了。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/d6dfg04B3sA.M3qkTt5vKH09f1TZjsnQV7BtAjLoOHw!/r/dLYAAAAAAAAAnull&bo=MQFyADEBcgADCSw!&rf=photolist&t=5_yake_qzoneimgout.png\"></div>\n\n<p>当然，你也可以直接输入git命令进行提交和推送。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>使用新版Cloud Studio来管理hexo在功能上没有问题，只不过一些细节和交互还需要优化改进。<br>另外每天限制两小时的使用比较坑，所以我目前还在使用旧版，等最后关头再转移过去吧。</p>"},{"title":"网站恢复二级域名","thumbnail":"//r.photo.store.qq.com/psb?/V11rnv1t26XYl4/SvSpcoA9c5UtlEQE8cJFI4hokNDzwgg1XwatRNKy8X0!/r/dFQBAAAAAAAAnull&bo=5QOuAeUDrgERCT4!&rf=photolist&t=5qzoneimgout.png","abbrlink":"5cf6b291","date":"2018-10-21T06:27:06.000Z","_content":"某天突然收到七牛发送的邮件，提醒我系统即将收回测试域名时，我就一直在思考如何处理由此引发的一系列问题，顺便再好好规划下网站以后的定位。今晚，我终于作出了决定并付诸了行动。\n<!--more-->\n## 七牛测试域名被回收\n\n实际上我在七牛云注册过两个测试域名，一个是http另一个是https，而前者早在之前就被回收了，没想到后面这个一直在付费的域名也会被回收。\n\n<div align=center><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/s2Kg9Hrmqxg2dMUEN9IuwSfyHO3jBVC9fKhuyRuocJ0!/r/dAgBAAAAAAAAnull&bo=HwRZBR8EWQURCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n根据七牛云的规定，自定义域名必须进行备案，这意味着我将不能再使用七牛云的图床和CDN加速。\n\n### 回归二级域名\n\n在这个时候我意识到，越来越多的平台需要备案域名，自定义域名反而成为了一种负担，这与我创建静态博客的初衷背道而驰，于是我决定回归到二级域名。\n使用github提供的Pages服务，即从：\n\n```\nwww.tiexo.cn ==> tiexo.github.io\n```\n\n### 使用Cloud Studio管理Hexo\n\n最近Coding将自己卖身给了腾讯云，于是我又开始使用Cloud Studio来管理Hexo，其实就是网站之前介绍过的WebIDE。\n当然，之所以这么做的一个主要原因是，解决多平台管理的繁琐流程，况且每次电脑重装系统后又要重新安装Git、Hexo让我烦不胜烦。\n\n![](//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/7XWCTfVczjxHJHMDPK62to70.Btdo14juvSFkHk.9Gc!/r/dGcBAAAAAAAAnull&bo=dwWAAnkHawMRCdg!&rf=photolist&t=5qzoneimgout.png)\n\n如果它保持不收费的话，我必须推荐给大家。\n\n### 解决的问题\n\n这次修改网站，中间也遇到了不少问题，例如：\n\n- **cloud studio推送后网站不更新**\n\n明明在仓库中看到推送成功，源文件也更新了，但网站页面一直没变化。\n为此我还找coding反馈过，但是并没有解决这个问题。\n今晚我突然发现，当我使用`hexo d`推送后，竟然整个hexo目录出现在`coding-pages`分支，按道理应该`git push`命令才会如此。\n最后是手动将delopy和public两个文件夹删除，重新推送就好了...可能是某次同步分支时错乱导致的。\n\n- **CDN资源引用地址变更**\n\n之前我都是将图片、JS和CSS文件直接上传到七牛云空间，然后引用外链生效，但七牛域名回收后必须将资源取回来。\n好在测试域名虽然回收了，但之前上传的图片资源并没有失效，因此只要把CS和JS文件地址解决就行。\n中间碰到的问题主要是，JS和CSS文件引用的相对路径，最终解决方案是分别扔到主题`source/css`和`/js`文件夹中。\n\n- **页面布局**\n\n在最开始，我是打算将网站改成单页布局，但实际效果并不满意，无奈自己不懂CSS只能放弃了。\n目前我心中比较满意的是微博头条文章的布局，可惜没看到类似的主题。\n\n- **百度**\n\n包括百度统计和百度站长平台都需要修改配置，其中站长平台的`网站改版`还没弄好，因为之前直接将自定义域名解绑了，审核没通过，待会儿再试试。\n\n### 网站定位\n\n之前本站都是以分享教程和记录折腾日记为主，但是今年来折腾的少，所以许久都没更新。\n以后决定把自己的一些评论和总结都搬过来，因为受不了百度贴吧的删帖啦~\n\n最后，希望自己能加油更新，不忘初心！","source":"_posts/网站恢复二级域名.md","raw":"---\ntitle: 网站恢复二级域名\nthumbnail: //r.photo.store.qq.com/psb?/V11rnv1t26XYl4/SvSpcoA9c5UtlEQE8cJFI4hokNDzwgg1XwatRNKy8X0!/r/dFQBAAAAAAAAnull&bo=5QOuAeUDrgERCT4!&rf=photolist&t=5qzoneimgout.png\nabbrlink: 5cf6b291\ndate: 2018-10-21 14:27:06\n---\n某天突然收到七牛发送的邮件，提醒我系统即将收回测试域名时，我就一直在思考如何处理由此引发的一系列问题，顺便再好好规划下网站以后的定位。今晚，我终于作出了决定并付诸了行动。\n<!--more-->\n## 七牛测试域名被回收\n\n实际上我在七牛云注册过两个测试域名，一个是http另一个是https，而前者早在之前就被回收了，没想到后面这个一直在付费的域名也会被回收。\n\n<div align=center><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/s2Kg9Hrmqxg2dMUEN9IuwSfyHO3jBVC9fKhuyRuocJ0!/r/dAgBAAAAAAAAnull&bo=HwRZBR8EWQURCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n根据七牛云的规定，自定义域名必须进行备案，这意味着我将不能再使用七牛云的图床和CDN加速。\n\n### 回归二级域名\n\n在这个时候我意识到，越来越多的平台需要备案域名，自定义域名反而成为了一种负担，这与我创建静态博客的初衷背道而驰，于是我决定回归到二级域名。\n使用github提供的Pages服务，即从：\n\n```\nwww.tiexo.cn ==> tiexo.github.io\n```\n\n### 使用Cloud Studio管理Hexo\n\n最近Coding将自己卖身给了腾讯云，于是我又开始使用Cloud Studio来管理Hexo，其实就是网站之前介绍过的WebIDE。\n当然，之所以这么做的一个主要原因是，解决多平台管理的繁琐流程，况且每次电脑重装系统后又要重新安装Git、Hexo让我烦不胜烦。\n\n![](//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/7XWCTfVczjxHJHMDPK62to70.Btdo14juvSFkHk.9Gc!/r/dGcBAAAAAAAAnull&bo=dwWAAnkHawMRCdg!&rf=photolist&t=5qzoneimgout.png)\n\n如果它保持不收费的话，我必须推荐给大家。\n\n### 解决的问题\n\n这次修改网站，中间也遇到了不少问题，例如：\n\n- **cloud studio推送后网站不更新**\n\n明明在仓库中看到推送成功，源文件也更新了，但网站页面一直没变化。\n为此我还找coding反馈过，但是并没有解决这个问题。\n今晚我突然发现，当我使用`hexo d`推送后，竟然整个hexo目录出现在`coding-pages`分支，按道理应该`git push`命令才会如此。\n最后是手动将delopy和public两个文件夹删除，重新推送就好了...可能是某次同步分支时错乱导致的。\n\n- **CDN资源引用地址变更**\n\n之前我都是将图片、JS和CSS文件直接上传到七牛云空间，然后引用外链生效，但七牛域名回收后必须将资源取回来。\n好在测试域名虽然回收了，但之前上传的图片资源并没有失效，因此只要把CS和JS文件地址解决就行。\n中间碰到的问题主要是，JS和CSS文件引用的相对路径，最终解决方案是分别扔到主题`source/css`和`/js`文件夹中。\n\n- **页面布局**\n\n在最开始，我是打算将网站改成单页布局，但实际效果并不满意，无奈自己不懂CSS只能放弃了。\n目前我心中比较满意的是微博头条文章的布局，可惜没看到类似的主题。\n\n- **百度**\n\n包括百度统计和百度站长平台都需要修改配置，其中站长平台的`网站改版`还没弄好，因为之前直接将自定义域名解绑了，审核没通过，待会儿再试试。\n\n### 网站定位\n\n之前本站都是以分享教程和记录折腾日记为主，但是今年来折腾的少，所以许久都没更新。\n以后决定把自己的一些评论和总结都搬过来，因为受不了百度贴吧的删帖啦~\n\n最后，希望自己能加油更新，不忘初心！","slug":"网站恢复二级域名","published":1,"updated":"2019-12-01T12:36:54.613Z","_id":"ck3mzfji10008fzsi4dbpe0lm","comments":1,"layout":"post","photos":[],"link":"","content":"<p>某天突然收到七牛发送的邮件，提醒我系统即将收回测试域名时，我就一直在思考如何处理由此引发的一系列问题，顺便再好好规划下网站以后的定位。今晚，我终于作出了决定并付诸了行动。</p>\n<a id=\"more\"></a>\n<h2 id=\"七牛测试域名被回收\"><a href=\"#七牛测试域名被回收\" class=\"headerlink\" title=\"七牛测试域名被回收\"></a>七牛测试域名被回收</h2><p>实际上我在七牛云注册过两个测试域名，一个是http另一个是https，而前者早在之前就被回收了，没想到后面这个一直在付费的域名也会被回收。</p>\n<div align=\"center\"><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/s2Kg9Hrmqxg2dMUEN9IuwSfyHO3jBVC9fKhuyRuocJ0!/r/dAgBAAAAAAAAnull&bo=HwRZBR8EWQURCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>根据七牛云的规定，自定义域名必须进行备案，这意味着我将不能再使用七牛云的图床和CDN加速。</p>\n<h3 id=\"回归二级域名\"><a href=\"#回归二级域名\" class=\"headerlink\" title=\"回归二级域名\"></a>回归二级域名</h3><p>在这个时候我意识到，越来越多的平台需要备案域名，自定义域名反而成为了一种负担，这与我创建静态博客的初衷背道而驰，于是我决定回归到二级域名。<br>使用github提供的Pages服务，即从：</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">www.tiexo.cn ==&gt; tiexo.github.io</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用Cloud-Studio管理Hexo\"><a href=\"#使用Cloud-Studio管理Hexo\" class=\"headerlink\" title=\"使用Cloud Studio管理Hexo\"></a>使用Cloud Studio管理Hexo</h3><p>最近Coding将自己卖身给了腾讯云，于是我又开始使用Cloud Studio来管理Hexo，其实就是网站之前介绍过的WebIDE。<br>当然，之所以这么做的一个主要原因是，解决多平台管理的繁琐流程，况且每次电脑重装系统后又要重新安装Git、Hexo让我烦不胜烦。</p>\n<p><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/7XWCTfVczjxHJHMDPK62to70.Btdo14juvSFkHk.9Gc!/r/dGcBAAAAAAAAnull&bo=dwWAAnkHawMRCdg!&rf=photolist&t=5qzoneimgout.png\" alt=\"\"></p>\n<p>如果它保持不收费的话，我必须推荐给大家。</p>\n<h3 id=\"解决的问题\"><a href=\"#解决的问题\" class=\"headerlink\" title=\"解决的问题\"></a>解决的问题</h3><p>这次修改网站，中间也遇到了不少问题，例如：</p>\n<ul>\n<li><strong>cloud studio推送后网站不更新</strong></li>\n</ul>\n<p>明明在仓库中看到推送成功，源文件也更新了，但网站页面一直没变化。<br>为此我还找coding反馈过，但是并没有解决这个问题。<br>今晚我突然发现，当我使用<code>hexo d</code>推送后，竟然整个hexo目录出现在<code>coding-pages</code>分支，按道理应该<code>git push</code>命令才会如此。<br>最后是手动将delopy和public两个文件夹删除，重新推送就好了…可能是某次同步分支时错乱导致的。</p>\n<ul>\n<li><strong>CDN资源引用地址变更</strong></li>\n</ul>\n<p>之前我都是将图片、JS和CSS文件直接上传到七牛云空间，然后引用外链生效，但七牛域名回收后必须将资源取回来。<br>好在测试域名虽然回收了，但之前上传的图片资源并没有失效，因此只要把CS和JS文件地址解决就行。<br>中间碰到的问题主要是，JS和CSS文件引用的相对路径，最终解决方案是分别扔到主题<code>source/css</code>和<code>/js</code>文件夹中。</p>\n<ul>\n<li><strong>页面布局</strong></li>\n</ul>\n<p>在最开始，我是打算将网站改成单页布局，但实际效果并不满意，无奈自己不懂CSS只能放弃了。<br>目前我心中比较满意的是微博头条文章的布局，可惜没看到类似的主题。</p>\n<ul>\n<li><strong>百度</strong></li>\n</ul>\n<p>包括百度统计和百度站长平台都需要修改配置，其中站长平台的<code>网站改版</code>还没弄好，因为之前直接将自定义域名解绑了，审核没通过，待会儿再试试。</p>\n<h3 id=\"网站定位\"><a href=\"#网站定位\" class=\"headerlink\" title=\"网站定位\"></a>网站定位</h3><p>之前本站都是以分享教程和记录折腾日记为主，但是今年来折腾的少，所以许久都没更新。<br>以后决定把自己的一些评论和总结都搬过来，因为受不了百度贴吧的删帖啦~</p>\n<p>最后，希望自己能加油更新，不忘初心！</p>\n","site":{"data":{}},"excerpt":"<p>某天突然收到七牛发送的邮件，提醒我系统即将收回测试域名时，我就一直在思考如何处理由此引发的一系列问题，顺便再好好规划下网站以后的定位。今晚，我终于作出了决定并付诸了行动。</p>","more":"<h2 id=\"七牛测试域名被回收\"><a href=\"#七牛测试域名被回收\" class=\"headerlink\" title=\"七牛测试域名被回收\"></a>七牛测试域名被回收</h2><p>实际上我在七牛云注册过两个测试域名，一个是http另一个是https，而前者早在之前就被回收了，没想到后面这个一直在付费的域名也会被回收。</p>\n<div align=\"center\"><img width=\"500\" src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/s2Kg9Hrmqxg2dMUEN9IuwSfyHO3jBVC9fKhuyRuocJ0!/r/dAgBAAAAAAAAnull&bo=HwRZBR8EWQURCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>根据七牛云的规定，自定义域名必须进行备案，这意味着我将不能再使用七牛云的图床和CDN加速。</p>\n<h3 id=\"回归二级域名\"><a href=\"#回归二级域名\" class=\"headerlink\" title=\"回归二级域名\"></a>回归二级域名</h3><p>在这个时候我意识到，越来越多的平台需要备案域名，自定义域名反而成为了一种负担，这与我创建静态博客的初衷背道而驰，于是我决定回归到二级域名。<br>使用github提供的Pages服务，即从：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">www.tiexo.cn ==&gt; tiexo.github.io</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用Cloud-Studio管理Hexo\"><a href=\"#使用Cloud-Studio管理Hexo\" class=\"headerlink\" title=\"使用Cloud Studio管理Hexo\"></a>使用Cloud Studio管理Hexo</h3><p>最近Coding将自己卖身给了腾讯云，于是我又开始使用Cloud Studio来管理Hexo，其实就是网站之前介绍过的WebIDE。<br>当然，之所以这么做的一个主要原因是，解决多平台管理的繁琐流程，况且每次电脑重装系统后又要重新安装Git、Hexo让我烦不胜烦。</p>\n<p><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/7XWCTfVczjxHJHMDPK62to70.Btdo14juvSFkHk.9Gc!/r/dGcBAAAAAAAAnull&bo=dwWAAnkHawMRCdg!&rf=photolist&t=5qzoneimgout.png\" alt=\"\"></p>\n<p>如果它保持不收费的话，我必须推荐给大家。</p>\n<h3 id=\"解决的问题\"><a href=\"#解决的问题\" class=\"headerlink\" title=\"解决的问题\"></a>解决的问题</h3><p>这次修改网站，中间也遇到了不少问题，例如：</p>\n<ul>\n<li><strong>cloud studio推送后网站不更新</strong></li>\n</ul>\n<p>明明在仓库中看到推送成功，源文件也更新了，但网站页面一直没变化。<br>为此我还找coding反馈过，但是并没有解决这个问题。<br>今晚我突然发现，当我使用<code>hexo d</code>推送后，竟然整个hexo目录出现在<code>coding-pages</code>分支，按道理应该<code>git push</code>命令才会如此。<br>最后是手动将delopy和public两个文件夹删除，重新推送就好了…可能是某次同步分支时错乱导致的。</p>\n<ul>\n<li><strong>CDN资源引用地址变更</strong></li>\n</ul>\n<p>之前我都是将图片、JS和CSS文件直接上传到七牛云空间，然后引用外链生效，但七牛域名回收后必须将资源取回来。<br>好在测试域名虽然回收了，但之前上传的图片资源并没有失效，因此只要把CS和JS文件地址解决就行。<br>中间碰到的问题主要是，JS和CSS文件引用的相对路径，最终解决方案是分别扔到主题<code>source/css</code>和<code>/js</code>文件夹中。</p>\n<ul>\n<li><strong>页面布局</strong></li>\n</ul>\n<p>在最开始，我是打算将网站改成单页布局，但实际效果并不满意，无奈自己不懂CSS只能放弃了。<br>目前我心中比较满意的是微博头条文章的布局，可惜没看到类似的主题。</p>\n<ul>\n<li><strong>百度</strong></li>\n</ul>\n<p>包括百度统计和百度站长平台都需要修改配置，其中站长平台的<code>网站改版</code>还没弄好，因为之前直接将自定义域名解绑了，审核没通过，待会儿再试试。</p>\n<h3 id=\"网站定位\"><a href=\"#网站定位\" class=\"headerlink\" title=\"网站定位\"></a>网站定位</h3><p>之前本站都是以分享教程和记录折腾日记为主，但是今年来折腾的少，所以许久都没更新。<br>以后决定把自己的一些评论和总结都搬过来，因为受不了百度贴吧的删帖啦~</p>\n<p>最后，希望自己能加油更新，不忘初心！</p>"},{"title":"股票账户的那点破事","thumbnail":"//r.photo.store.qq.com/psb?/V11rnv1t26XYl4/AIRp9JOyasdLwCivKZat0Fa2TLRZ.Of3SZdrCWmlLIs!/r/dEcBAAAAAAAAnull&bo=6APCAegDwgERCT4!&rf=photolist&t=5qzoneimgout.png","abbrlink":"8f21d967","date":"2018-11-30T23:24:53.000Z","_content":"在购买基金半年后，我对股票有了一些冲动，虽然基金自从进场后已经亏了10个点，但大A股的春天应该快到了吧，我这样安慰自己。\n<!--more-->\n\n### 股票销户\n\n炒股前的第一个准备工作自然是开户，可因为我几年前开通过3个银行证券账户，所以导致现在破事一大堆。\n\n#### 破事一：佣金费率高\n\n虽然这三个账户我没有交易过，但它的费率估计是千分之一，而目前网上开户的佣金费率只有万分之2.5，足足贵了4倍，我肯定不愿意接受。\n\n#### 破事二：销户必须去营业部\n\n虽然当时是网上开户的，但选择的营业部是之前生活的城市，现在早已经换了。\n我不可能为了销户专门去一趟，并且根据网友反馈来看，销户的流程体验也非常糟糕，因此销户是暂时不可能了。\n\n#### 破事三：限制3个账户\n\n虽然股票开户账户数可以达到10个或者20个，但是上交所指定交易限制为3个。\n这意味着我甚至不能开通新的账户，除非把之前的指定交易撤销，这跟销户没什么差别。\n\n所以把这3个破事组合起来，就是现有账户不想用，新账户不能开，只能干看着。\n好在前段时间就有报道说：\n\n> 2019年3月将实现证券账户网上注销，到时一切问题都将迎刃而解！\n\n### 股票开户\n\n如果明年可以把银河证券的账户注销，那么需要重新开通一个股票账户，这就涉及到了选择券商的注意事项。\n\n#### 1. 交易软件\n\n我认为最重要的并非什么证券公司实力，而是支持的交易软件好不好用。\n这就跟大家喜欢支付宝和微信，不喜欢银行APP一样，最好是选择一家第三方软件，譬如同花顺。\n\n然而同花顺支持开户的券商和支持交易的券商是有限的，所以最好是从支持交易的券商里面选择。\n今天我也尝试了一下微信推出的微信微证券和腾讯自选股，可是这两者数据并未打通，支持的券商都不一样，只能先放弃了。\n\n#### 2. 佣金\n\n佣金一般都是万2.5就够了，如果没有最低5元限制就更好啦。\n\n#### 3. 营业部\n\n在满足前两者的条件下，可以考虑选择一家本地有营业部的券商。\n\n#### 4. 实力\n\n在满足前三者的条件下，再选择一家实力最强的。\n\n虽然目前基金还在亏损中，但我对指数还是有一定信心的，股票就不好说了，也许是一条不归路...","source":"_posts/股票账户的那点破事.md","raw":"---\ntitle: 股票账户的那点破事\nthumbnail:  //r.photo.store.qq.com/psb?/V11rnv1t26XYl4/AIRp9JOyasdLwCivKZat0Fa2TLRZ.Of3SZdrCWmlLIs!/r/dEcBAAAAAAAAnull&bo=6APCAegDwgERCT4!&rf=photolist&t=5qzoneimgout.png\nabbrlink: 8f21d967\ndate: 2018-12-01 07:24:53\n---\n在购买基金半年后，我对股票有了一些冲动，虽然基金自从进场后已经亏了10个点，但大A股的春天应该快到了吧，我这样安慰自己。\n<!--more-->\n\n### 股票销户\n\n炒股前的第一个准备工作自然是开户，可因为我几年前开通过3个银行证券账户，所以导致现在破事一大堆。\n\n#### 破事一：佣金费率高\n\n虽然这三个账户我没有交易过，但它的费率估计是千分之一，而目前网上开户的佣金费率只有万分之2.5，足足贵了4倍，我肯定不愿意接受。\n\n#### 破事二：销户必须去营业部\n\n虽然当时是网上开户的，但选择的营业部是之前生活的城市，现在早已经换了。\n我不可能为了销户专门去一趟，并且根据网友反馈来看，销户的流程体验也非常糟糕，因此销户是暂时不可能了。\n\n#### 破事三：限制3个账户\n\n虽然股票开户账户数可以达到10个或者20个，但是上交所指定交易限制为3个。\n这意味着我甚至不能开通新的账户，除非把之前的指定交易撤销，这跟销户没什么差别。\n\n所以把这3个破事组合起来，就是现有账户不想用，新账户不能开，只能干看着。\n好在前段时间就有报道说：\n\n> 2019年3月将实现证券账户网上注销，到时一切问题都将迎刃而解！\n\n### 股票开户\n\n如果明年可以把银河证券的账户注销，那么需要重新开通一个股票账户，这就涉及到了选择券商的注意事项。\n\n#### 1. 交易软件\n\n我认为最重要的并非什么证券公司实力，而是支持的交易软件好不好用。\n这就跟大家喜欢支付宝和微信，不喜欢银行APP一样，最好是选择一家第三方软件，譬如同花顺。\n\n然而同花顺支持开户的券商和支持交易的券商是有限的，所以最好是从支持交易的券商里面选择。\n今天我也尝试了一下微信推出的微信微证券和腾讯自选股，可是这两者数据并未打通，支持的券商都不一样，只能先放弃了。\n\n#### 2. 佣金\n\n佣金一般都是万2.5就够了，如果没有最低5元限制就更好啦。\n\n#### 3. 营业部\n\n在满足前两者的条件下，可以考虑选择一家本地有营业部的券商。\n\n#### 4. 实力\n\n在满足前三者的条件下，再选择一家实力最强的。\n\n虽然目前基金还在亏损中，但我对指数还是有一定信心的，股票就不好说了，也许是一条不归路...","slug":"股票账户的那点破事","published":1,"updated":"2019-12-01T12:37:08.045Z","_id":"ck3mzfji20009fzsi1ru22uq3","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在购买基金半年后，我对股票有了一些冲动，虽然基金自从进场后已经亏了10个点，但大A股的春天应该快到了吧，我这样安慰自己。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"股票销户\"><a href=\"#股票销户\" class=\"headerlink\" title=\"股票销户\"></a>股票销户</h3><p>炒股前的第一个准备工作自然是开户，可因为我几年前开通过3个银行证券账户，所以导致现在破事一大堆。</p>\n<h4 id=\"破事一：佣金费率高\"><a href=\"#破事一：佣金费率高\" class=\"headerlink\" title=\"破事一：佣金费率高\"></a>破事一：佣金费率高</h4><p>虽然这三个账户我没有交易过，但它的费率估计是千分之一，而目前网上开户的佣金费率只有万分之2.5，足足贵了4倍，我肯定不愿意接受。</p>\n<h4 id=\"破事二：销户必须去营业部\"><a href=\"#破事二：销户必须去营业部\" class=\"headerlink\" title=\"破事二：销户必须去营业部\"></a>破事二：销户必须去营业部</h4><p>虽然当时是网上开户的，但选择的营业部是之前生活的城市，现在早已经换了。<br>我不可能为了销户专门去一趟，并且根据网友反馈来看，销户的流程体验也非常糟糕，因此销户是暂时不可能了。</p>\n<h4 id=\"破事三：限制3个账户\"><a href=\"#破事三：限制3个账户\" class=\"headerlink\" title=\"破事三：限制3个账户\"></a>破事三：限制3个账户</h4><p>虽然股票开户账户数可以达到10个或者20个，但是上交所指定交易限制为3个。<br>这意味着我甚至不能开通新的账户，除非把之前的指定交易撤销，这跟销户没什么差别。</p>\n<p>所以把这3个破事组合起来，就是现有账户不想用，新账户不能开，只能干看着。<br>好在前段时间就有报道说：</p>\n<blockquote>\n<p>2019年3月将实现证券账户网上注销，到时一切问题都将迎刃而解！</p>\n</blockquote>\n<h3 id=\"股票开户\"><a href=\"#股票开户\" class=\"headerlink\" title=\"股票开户\"></a>股票开户</h3><p>如果明年可以把银河证券的账户注销，那么需要重新开通一个股票账户，这就涉及到了选择券商的注意事项。</p>\n<h4 id=\"1-交易软件\"><a href=\"#1-交易软件\" class=\"headerlink\" title=\"1. 交易软件\"></a>1. 交易软件</h4><p>我认为最重要的并非什么证券公司实力，而是支持的交易软件好不好用。<br>这就跟大家喜欢支付宝和微信，不喜欢银行APP一样，最好是选择一家第三方软件，譬如同花顺。</p>\n<p>然而同花顺支持开户的券商和支持交易的券商是有限的，所以最好是从支持交易的券商里面选择。<br>今天我也尝试了一下微信推出的微信微证券和腾讯自选股，可是这两者数据并未打通，支持的券商都不一样，只能先放弃了。</p>\n<h4 id=\"2-佣金\"><a href=\"#2-佣金\" class=\"headerlink\" title=\"2. 佣金\"></a>2. 佣金</h4><p>佣金一般都是万2.5就够了，如果没有最低5元限制就更好啦。</p>\n<h4 id=\"3-营业部\"><a href=\"#3-营业部\" class=\"headerlink\" title=\"3. 营业部\"></a>3. 营业部</h4><p>在满足前两者的条件下，可以考虑选择一家本地有营业部的券商。</p>\n<h4 id=\"4-实力\"><a href=\"#4-实力\" class=\"headerlink\" title=\"4. 实力\"></a>4. 实力</h4><p>在满足前三者的条件下，再选择一家实力最强的。</p>\n<p>虽然目前基金还在亏损中，但我对指数还是有一定信心的，股票就不好说了，也许是一条不归路…</p>\n","site":{"data":{}},"excerpt":"<p>在购买基金半年后，我对股票有了一些冲动，虽然基金自从进场后已经亏了10个点，但大A股的春天应该快到了吧，我这样安慰自己。</p>","more":"<h3 id=\"股票销户\"><a href=\"#股票销户\" class=\"headerlink\" title=\"股票销户\"></a>股票销户</h3><p>炒股前的第一个准备工作自然是开户，可因为我几年前开通过3个银行证券账户，所以导致现在破事一大堆。</p>\n<h4 id=\"破事一：佣金费率高\"><a href=\"#破事一：佣金费率高\" class=\"headerlink\" title=\"破事一：佣金费率高\"></a>破事一：佣金费率高</h4><p>虽然这三个账户我没有交易过，但它的费率估计是千分之一，而目前网上开户的佣金费率只有万分之2.5，足足贵了4倍，我肯定不愿意接受。</p>\n<h4 id=\"破事二：销户必须去营业部\"><a href=\"#破事二：销户必须去营业部\" class=\"headerlink\" title=\"破事二：销户必须去营业部\"></a>破事二：销户必须去营业部</h4><p>虽然当时是网上开户的，但选择的营业部是之前生活的城市，现在早已经换了。<br>我不可能为了销户专门去一趟，并且根据网友反馈来看，销户的流程体验也非常糟糕，因此销户是暂时不可能了。</p>\n<h4 id=\"破事三：限制3个账户\"><a href=\"#破事三：限制3个账户\" class=\"headerlink\" title=\"破事三：限制3个账户\"></a>破事三：限制3个账户</h4><p>虽然股票开户账户数可以达到10个或者20个，但是上交所指定交易限制为3个。<br>这意味着我甚至不能开通新的账户，除非把之前的指定交易撤销，这跟销户没什么差别。</p>\n<p>所以把这3个破事组合起来，就是现有账户不想用，新账户不能开，只能干看着。<br>好在前段时间就有报道说：</p>\n<blockquote>\n<p>2019年3月将实现证券账户网上注销，到时一切问题都将迎刃而解！</p>\n</blockquote>\n<h3 id=\"股票开户\"><a href=\"#股票开户\" class=\"headerlink\" title=\"股票开户\"></a>股票开户</h3><p>如果明年可以把银河证券的账户注销，那么需要重新开通一个股票账户，这就涉及到了选择券商的注意事项。</p>\n<h4 id=\"1-交易软件\"><a href=\"#1-交易软件\" class=\"headerlink\" title=\"1. 交易软件\"></a>1. 交易软件</h4><p>我认为最重要的并非什么证券公司实力，而是支持的交易软件好不好用。<br>这就跟大家喜欢支付宝和微信，不喜欢银行APP一样，最好是选择一家第三方软件，譬如同花顺。</p>\n<p>然而同花顺支持开户的券商和支持交易的券商是有限的，所以最好是从支持交易的券商里面选择。<br>今天我也尝试了一下微信推出的微信微证券和腾讯自选股，可是这两者数据并未打通，支持的券商都不一样，只能先放弃了。</p>\n<h4 id=\"2-佣金\"><a href=\"#2-佣金\" class=\"headerlink\" title=\"2. 佣金\"></a>2. 佣金</h4><p>佣金一般都是万2.5就够了，如果没有最低5元限制就更好啦。</p>\n<h4 id=\"3-营业部\"><a href=\"#3-营业部\" class=\"headerlink\" title=\"3. 营业部\"></a>3. 营业部</h4><p>在满足前两者的条件下，可以考虑选择一家本地有营业部的券商。</p>\n<h4 id=\"4-实力\"><a href=\"#4-实力\" class=\"headerlink\" title=\"4. 实力\"></a>4. 实力</h4><p>在满足前三者的条件下，再选择一家实力最强的。</p>\n<p>虽然目前基金还在亏损中，但我对指数还是有一定信心的，股票就不好说了，也许是一条不归路…</p>"},{"title":"通过Github Actions实现Hexo博客自动部署","thumbnail":"//r.photo.store.qq.com/psb?/V11rnv1t26XYl4/8wGH3vQfWMfzu0iLeNWywm7ZbJUEDX0*71NQAbs8OrE!/r/dL8AAAAAAAAAnull&bo=sAQQArAEEAIRCT4!&rf=photolist&t=5_yake_qzoneimgout.png","abbrlink":"37e5a6a1","date":"2019-11-29T15:02:26.000Z","_content":"\n一开始打算通过Travis CI来实现此功能，后来发现Github正式开放了Actions功能，本着一站体验的原则，选择了后者。\n\n<!--more-->\n\n### 自动部署\n\n很早以前就听说了Travis CI自动部署的方案，但是我一直没觉得有什么优点，不过省了hexo d的命令而已。\n在实际体验过后，依然没有感觉到...\n但是我们折腾博客，从来就不是为了提高生产力，而是装逼罢了。\n\n### Actions\n\nGithub Actions和Travis CI的原理是一样的。\n- 生成SSH私钥\n\n```git\nssh-keygen -f github-deploy-key\n```\n连续三次回车，会生成\"`github-deploy-key`\"和\"`github-deploy-key.pub`\"两个文件。\n\n- Setting\n\n打开博客源码分支\"`blog/settings/secrets`\"点击\"`Add new secrets`\"\n\nname栏输入 HEXO_DEPLOY_PRI\nvalue栏输入之前生成的 github-deploy-key文件里面的内容\n\n接着打开pages分支\"`master/settings/keys`\"点击\"`Add deploy key`\"\n\ntitle栏输入HEXO_DEPLOY_PUB\nkey栏输入之前生成的github-deploy-key.pub文件里面的内容\n\n- yml文件\n\n打开博客源码分支\"`blog/.github/workflows`\"新建一个\"`main.yml`\"文件\n\n```yml\nname: CI\non:\n  push:\n    branches:\n      - blog\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout source\n        uses: actions/checkout@v1\n        with:\n          ref: blog\n      - name: Use Node.js ${{ matrix.node_version }}\n        uses: actions/setup-node@v1\n        with:\n          version: ${{ matrix.node_version }}\n      - name: Setup hexo\n        env:\n          ACTION_DEPLOY_KEY: ${{ secrets.ACTION_DEPLOY_KEY }}\n        run: |\n          mkdir -p ~/.ssh/\n          echo \"$ACTION_DEPLOY_KEY\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n          git config --global user.email \"输入邮箱\"\n          git config --global user.name \"输入用户名\"\n          npm install hexo-cli -g\n          npm install\n      - name: Hexo deploy\n        run: |\n          hexo clean\n          hexo d\n```\n### 自动部署\n\n接着git push推送一个commit到博客源码分支，点击Actions即可看见部署过程。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/2hXYYLvW48mRt9MqRvi5v5uaA9bzD9bDdmLs2xbbIuc!/r/dLYAAAAAAAAA&bo=DwMSAg8DEgIDCSw!&rf=viewer_4_yake_qzoneimgout.png\"></div>\n\n每次部署的时间大概在45s左右，实际上比hexo d还要慢些。\n\n### 参考资料\n\n- https://hdj.me/github-actions-hexo-cicd/","source":"_posts/通过Github Actions实现Hexo博客自动部署.md","raw":"---\ntitle: 通过Github Actions实现Hexo博客自动部署\nthumbnail: >-\n  //r.photo.store.qq.com/psb?/V11rnv1t26XYl4/8wGH3vQfWMfzu0iLeNWywm7ZbJUEDX0*71NQAbs8OrE!/r/dL8AAAAAAAAAnull&bo=sAQQArAEEAIRCT4!&rf=photolist&t=5_yake_qzoneimgout.png\nabbrlink: 37e5a6a1\ndate: 2019-11-29 23:02:26\n---\n\n一开始打算通过Travis CI来实现此功能，后来发现Github正式开放了Actions功能，本着一站体验的原则，选择了后者。\n\n<!--more-->\n\n### 自动部署\n\n很早以前就听说了Travis CI自动部署的方案，但是我一直没觉得有什么优点，不过省了hexo d的命令而已。\n在实际体验过后，依然没有感觉到...\n但是我们折腾博客，从来就不是为了提高生产力，而是装逼罢了。\n\n### Actions\n\nGithub Actions和Travis CI的原理是一样的。\n- 生成SSH私钥\n\n```git\nssh-keygen -f github-deploy-key\n```\n连续三次回车，会生成\"`github-deploy-key`\"和\"`github-deploy-key.pub`\"两个文件。\n\n- Setting\n\n打开博客源码分支\"`blog/settings/secrets`\"点击\"`Add new secrets`\"\n\nname栏输入 HEXO_DEPLOY_PRI\nvalue栏输入之前生成的 github-deploy-key文件里面的内容\n\n接着打开pages分支\"`master/settings/keys`\"点击\"`Add deploy key`\"\n\ntitle栏输入HEXO_DEPLOY_PUB\nkey栏输入之前生成的github-deploy-key.pub文件里面的内容\n\n- yml文件\n\n打开博客源码分支\"`blog/.github/workflows`\"新建一个\"`main.yml`\"文件\n\n```yml\nname: CI\non:\n  push:\n    branches:\n      - blog\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout source\n        uses: actions/checkout@v1\n        with:\n          ref: blog\n      - name: Use Node.js ${{ matrix.node_version }}\n        uses: actions/setup-node@v1\n        with:\n          version: ${{ matrix.node_version }}\n      - name: Setup hexo\n        env:\n          ACTION_DEPLOY_KEY: ${{ secrets.ACTION_DEPLOY_KEY }}\n        run: |\n          mkdir -p ~/.ssh/\n          echo \"$ACTION_DEPLOY_KEY\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n          git config --global user.email \"输入邮箱\"\n          git config --global user.name \"输入用户名\"\n          npm install hexo-cli -g\n          npm install\n      - name: Hexo deploy\n        run: |\n          hexo clean\n          hexo d\n```\n### 自动部署\n\n接着git push推送一个commit到博客源码分支，点击Actions即可看见部署过程。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/2hXYYLvW48mRt9MqRvi5v5uaA9bzD9bDdmLs2xbbIuc!/r/dLYAAAAAAAAA&bo=DwMSAg8DEgIDCSw!&rf=viewer_4_yake_qzoneimgout.png\"></div>\n\n每次部署的时间大概在45s左右，实际上比hexo d还要慢些。\n\n### 参考资料\n\n- https://hdj.me/github-actions-hexo-cicd/","slug":"通过Github Actions实现Hexo博客自动部署","published":1,"updated":"2019-12-01T10:20:11.835Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3mzfji3000afzsi4c33abot","content":"<p>一开始打算通过Travis CI来实现此功能，后来发现Github正式开放了Actions功能，本着一站体验的原则，选择了后者。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"自动部署\"><a href=\"#自动部署\" class=\"headerlink\" title=\"自动部署\"></a>自动部署</h3><p>很早以前就听说了Travis CI自动部署的方案，但是我一直没觉得有什么优点，不过省了hexo d的命令而已。<br>在实际体验过后，依然没有感觉到…<br>但是我们折腾博客，从来就不是为了提高生产力，而是装逼罢了。</p>\n<h3 id=\"Actions\"><a href=\"#Actions\" class=\"headerlink\" title=\"Actions\"></a>Actions</h3><p>Github Actions和Travis CI的原理是一样的。</p>\n<ul>\n<li>生成SSH私钥</li>\n</ul>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -f github-deploy-key</span><br></pre></td></tr></table></figure>\n<p>连续三次回车，会生成”<code>github-deploy-key</code>“和”<code>github-deploy-key.pub</code>“两个文件。</p>\n<ul>\n<li>Setting</li>\n</ul>\n<p>打开博客源码分支”<code>blog/settings/secrets</code>“点击”<code>Add new secrets</code>“</p>\n<p>name栏输入 HEXO_DEPLOY_PRI<br>value栏输入之前生成的 github-deploy-key文件里面的内容</p>\n<p>接着打开pages分支”<code>master/settings/keys</code>“点击”<code>Add deploy key</code>“</p>\n<p>title栏输入HEXO_DEPLOY_PUB<br>key栏输入之前生成的github-deploy-key.pub文件里面的内容</p>\n<ul>\n<li>yml文件</li>\n</ul>\n<p>打开博客源码分支”<code>blog/.github/workflows</code>“新建一个”<code>main.yml</code>“文件</p>\n<figure class=\"highlight yml hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">CI</span></span><br><span class=\"line\"><span class=\"hljs-attr\">on:</span></span><br><span class=\"line\"><span class=\"hljs-attr\">  push:</span></span><br><span class=\"line\"><span class=\"hljs-attr\">    branches:</span></span><br><span class=\"line\"><span class=\"hljs-bullet\">      -</span> <span class=\"hljs-string\">blog</span></span><br><span class=\"line\"><span class=\"hljs-attr\">jobs:</span></span><br><span class=\"line\"><span class=\"hljs-attr\">  build:</span></span><br><span class=\"line\"><span class=\"hljs-attr\">    runs-on:</span> <span class=\"hljs-string\">ubuntu-latest</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"hljs-attr\">    steps:</span></span><br><span class=\"line\"><span class=\"hljs-attr\">      - name:</span> <span class=\"hljs-string\">Checkout</span> <span class=\"hljs-string\">source</span></span><br><span class=\"line\"><span class=\"hljs-attr\">        uses:</span> <span class=\"hljs-string\">actions/checkout@v1</span></span><br><span class=\"line\"><span class=\"hljs-attr\">        with:</span></span><br><span class=\"line\"><span class=\"hljs-attr\">          ref:</span> <span class=\"hljs-string\">blog</span></span><br><span class=\"line\"><span class=\"hljs-attr\">      - name:</span> <span class=\"hljs-string\">Use</span> <span class=\"hljs-string\">Node.js</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">matrix.node_version</span> <span class=\"hljs-string\">&#125;&#125;</span></span><br><span class=\"line\"><span class=\"hljs-attr\">        uses:</span> <span class=\"hljs-string\">actions/setup-node@v1</span></span><br><span class=\"line\"><span class=\"hljs-attr\">        with:</span></span><br><span class=\"line\"><span class=\"hljs-attr\">          version:</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">matrix.node_version</span> <span class=\"hljs-string\">&#125;&#125;</span></span><br><span class=\"line\"><span class=\"hljs-attr\">      - name:</span> <span class=\"hljs-string\">Setup</span> <span class=\"hljs-string\">hexo</span></span><br><span class=\"line\"><span class=\"hljs-attr\">        env:</span></span><br><span class=\"line\"><span class=\"hljs-attr\">          ACTION_DEPLOY_KEY:</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">secrets.ACTION_DEPLOY_KEY</span> <span class=\"hljs-string\">&#125;&#125;</span></span><br><span class=\"line\"><span class=\"hljs-attr\">        run:</span> <span class=\"hljs-string\">|</span></span><br><span class=\"line\"><span class=\"hljs-string\">          mkdir -p ~/.ssh/</span></span><br><span class=\"line\"><span class=\"hljs-string\">          echo \"$ACTION_DEPLOY_KEY\" &gt; ~/.ssh/id_rsa</span></span><br><span class=\"line\"><span class=\"hljs-string\">          chmod 600 ~/.ssh/id_rsa</span></span><br><span class=\"line\"><span class=\"hljs-string\">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class=\"line\"><span class=\"hljs-string\">          git config --global user.email \"输入邮箱\"</span></span><br><span class=\"line\"><span class=\"hljs-string\">          git config --global user.name \"输入用户名\"</span></span><br><span class=\"line\"><span class=\"hljs-string\">          npm install hexo-cli -g</span></span><br><span class=\"line\"><span class=\"hljs-string\">          npm install</span></span><br><span class=\"line\"><span class=\"hljs-string\"></span><span class=\"hljs-attr\">      - name:</span> <span class=\"hljs-string\">Hexo</span> <span class=\"hljs-string\">deploy</span></span><br><span class=\"line\"><span class=\"hljs-attr\">        run:</span> <span class=\"hljs-string\">|</span></span><br><span class=\"line\"><span class=\"hljs-string\">          hexo clean</span></span><br><span class=\"line\"><span class=\"hljs-string\">          hexo d</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"自动部署-1\"><a href=\"#自动部署-1\" class=\"headerlink\" title=\"自动部署\"></a>自动部署</h3><p>接着git push推送一个commit到博客源码分支，点击Actions即可看见部署过程。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/2hXYYLvW48mRt9MqRvi5v5uaA9bzD9bDdmLs2xbbIuc!/r/dLYAAAAAAAAA&bo=DwMSAg8DEgIDCSw!&rf=viewer_4_yake_qzoneimgout.png\"></div>\n\n<p>每次部署的时间大概在45s左右，实际上比hexo d还要慢些。</p>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><ul>\n<li><a href=\"https://hdj.me/github-actions-hexo-cicd/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://hdj.me/github-actions-hexo-cicd/</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>一开始打算通过Travis CI来实现此功能，后来发现Github正式开放了Actions功能，本着一站体验的原则，选择了后者。</p>","more":"<h3 id=\"自动部署\"><a href=\"#自动部署\" class=\"headerlink\" title=\"自动部署\"></a>自动部署</h3><p>很早以前就听说了Travis CI自动部署的方案，但是我一直没觉得有什么优点，不过省了hexo d的命令而已。<br>在实际体验过后，依然没有感觉到…<br>但是我们折腾博客，从来就不是为了提高生产力，而是装逼罢了。</p>\n<h3 id=\"Actions\"><a href=\"#Actions\" class=\"headerlink\" title=\"Actions\"></a>Actions</h3><p>Github Actions和Travis CI的原理是一样的。</p>\n<ul>\n<li>生成SSH私钥</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -f github-deploy-key</span><br></pre></td></tr></table></figure>\n<p>连续三次回车，会生成”<code>github-deploy-key</code>“和”<code>github-deploy-key.pub</code>“两个文件。</p>\n<ul>\n<li>Setting</li>\n</ul>\n<p>打开博客源码分支”<code>blog/settings/secrets</code>“点击”<code>Add new secrets</code>“</p>\n<p>name栏输入 HEXO_DEPLOY_PRI<br>value栏输入之前生成的 github-deploy-key文件里面的内容</p>\n<p>接着打开pages分支”<code>master/settings/keys</code>“点击”<code>Add deploy key</code>“</p>\n<p>title栏输入HEXO_DEPLOY_PUB<br>key栏输入之前生成的github-deploy-key.pub文件里面的内容</p>\n<ul>\n<li>yml文件</li>\n</ul>\n<p>打开博客源码分支”<code>blog/.github/workflows</code>“新建一个”<code>main.yml</code>“文件</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">CI</span></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\"><span class=\"attr\">  push:</span></span><br><span class=\"line\"><span class=\"attr\">    branches:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">blog</span></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\"><span class=\"attr\">  build:</span></span><br><span class=\"line\"><span class=\"attr\">    runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">    steps:</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">Checkout</span> <span class=\"string\">source</span></span><br><span class=\"line\"><span class=\"attr\">        uses:</span> <span class=\"string\">actions/checkout@v1</span></span><br><span class=\"line\"><span class=\"attr\">        with:</span></span><br><span class=\"line\"><span class=\"attr\">          ref:</span> <span class=\"string\">blog</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">Use</span> <span class=\"string\">Node.js</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">matrix.node_version</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">        uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\"><span class=\"attr\">        with:</span></span><br><span class=\"line\"><span class=\"attr\">          version:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">matrix.node_version</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">Setup</span> <span class=\"string\">hexo</span></span><br><span class=\"line\"><span class=\"attr\">        env:</span></span><br><span class=\"line\"><span class=\"attr\">          ACTION_DEPLOY_KEY:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.ACTION_DEPLOY_KEY</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">        run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          mkdir -p ~/.ssh/</span></span><br><span class=\"line\"><span class=\"string\">          echo \"$ACTION_DEPLOY_KEY\" &gt; ~/.ssh/id_rsa</span></span><br><span class=\"line\"><span class=\"string\">          chmod 600 ~/.ssh/id_rsa</span></span><br><span class=\"line\"><span class=\"string\">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class=\"line\"><span class=\"string\">          git config --global user.email \"输入邮箱\"</span></span><br><span class=\"line\"><span class=\"string\">          git config --global user.name \"输入用户名\"</span></span><br><span class=\"line\"><span class=\"string\">          npm install hexo-cli -g</span></span><br><span class=\"line\"><span class=\"string\">          npm install</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">      - name:</span> <span class=\"string\">Hexo</span> <span class=\"string\">deploy</span></span><br><span class=\"line\"><span class=\"attr\">        run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          hexo clean</span></span><br><span class=\"line\"><span class=\"string\">          hexo d</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"自动部署-1\"><a href=\"#自动部署-1\" class=\"headerlink\" title=\"自动部署\"></a>自动部署</h3><p>接着git push推送一个commit到博客源码分支，点击Actions即可看见部署过程。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/2hXYYLvW48mRt9MqRvi5v5uaA9bzD9bDdmLs2xbbIuc!/r/dLYAAAAAAAAA&bo=DwMSAg8DEgIDCSw!&rf=viewer_4_yake_qzoneimgout.png\"></div>\n\n<p>每次部署的时间大概在45s左右，实际上比hexo d还要慢些。</p>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><ul>\n<li><a href=\"https://hdj.me/github-actions-hexo-cicd/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://hdj.me/github-actions-hexo-cicd/</a></li>\n</ul>"},{"title":"降低评论门槛：使用Valine评论系统","thumbnail":"//r.photo.store.qq.com/psb?/V11rnv1t26XYl4/oiC6oYru46lv2k1ZmSL4Ze1oKZsy.J85JW2Q5RK5XVc!/r/dDUBAAAAAAAAnull&bo=6AOVAegDlQERCT4!&rf=photolist&t=5qzoneimgout.png","abbrlink":"b23226a5","date":"2018-10-22T05:49:52.000Z","_content":"这次从Gitalk更换至Valine评论，主要出于两方面的因素考虑：\n- 降低评论门槛，后者甚至不需要填写任何信息即可评论；\n- 文章链接重新生成，导致之前的Gitalk评论数据丢失。\n\n从昨晚开始折腾到现在，总算把基本功能设置好啦~\n<!--more-->\n\n### Valine评论启用\n\n实际上本款主题是适配了Valine评论系统的，但是由于版本错乱，加上我自己修改过主题文件，所以还是花了些时间。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/r6UZFUaiScjI2XHw*Cmr.rGkazDdccFyKKWkfldCGKI!/r/dFkAAAAAAAAAnull&bo=hQLIAIUCyAARCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n另外还有一些配置项没弄好，例如默认头像和评论者信息，后面再慢慢研究。\n\n### 搭配Valine-Admin系统\n\n如果不搭配Valine-Admin系统使用，Valine在很多地方体验都不好，例如邮件通知和管理评论。\n整个过程基本都是教程，其中在某些地方我也栽了跟头。\n- **SMTP邮箱设置**\n\n这里需要注意的是，如果用QQ邮箱，必须开启独立密码并用授权码登录，配置好后再重启一下。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/b7A4KgzN*t3vPbVQh*6.Tzi5GeRjJhUGSOtbxM47kkQ!/r/dDUBAAAAAAAAnull&bo=ZgMbAWYDGwERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n应用日志提示成功就行了。\n\n- **管理评论**\n\n管理评论的后台需要手动添加管理员账号，即`存储-_User`，依次在`email、username、password`三个单元格编辑，设置好邮箱、用户名和密码。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/7aA5dj0o7typPLbzDoVGaxC9SX.uvuglmkSkFH3cKU0!/r/dDQBAAAAAAAAnull&bo=WQSZAVkEmQERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n接着访问管理后台，输入邮箱和密码登录，不需要使用用户名。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/5WB*zTfwT6fTWMlhG*i.nyiO26IF5EVZjtklAlPx4LU!/r/dFMBAAAAAAAAnull&bo=FgJgARYCYAERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n在这里就可以进行评论管理啦，还支持手动发送邮件通知。\n另外，每次有新评论产生时，应用日志中都会有提示：\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/9Kf.3FAD3FE7Nap4Jgdcj7XzSK42DanhrGrRKQB2Tkc!/r/dC4BAAAAAAAAnull&bo=sgIUAbICFAERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n收到的提醒邮件\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/9ZkFVT3pOKYk8PtPoHm7mVXVhNTIBZO518tsOOPpGjc!/r/dFMBAAAAAAAAnull&bo=VgOUAVYDlAERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n另外还有点击链接自动跳转到评论处，我还没弄好...\n总之，现在评论是可以正常使用啦，后面的细节我再慢慢调整吧，勤快！","source":"_posts/降低评论门槛：使用Valine评论系统.md","raw":"---\ntitle: 降低评论门槛：使用Valine评论系统\nthumbnail: //r.photo.store.qq.com/psb?/V11rnv1t26XYl4/oiC6oYru46lv2k1ZmSL4Ze1oKZsy.J85JW2Q5RK5XVc!/r/dDUBAAAAAAAAnull&bo=6AOVAegDlQERCT4!&rf=photolist&t=5qzoneimgout.png\nabbrlink: b23226a5\ndate: 2018-10-22 13:49:52\n---\n这次从Gitalk更换至Valine评论，主要出于两方面的因素考虑：\n- 降低评论门槛，后者甚至不需要填写任何信息即可评论；\n- 文章链接重新生成，导致之前的Gitalk评论数据丢失。\n\n从昨晚开始折腾到现在，总算把基本功能设置好啦~\n<!--more-->\n\n### Valine评论启用\n\n实际上本款主题是适配了Valine评论系统的，但是由于版本错乱，加上我自己修改过主题文件，所以还是花了些时间。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/r6UZFUaiScjI2XHw*Cmr.rGkazDdccFyKKWkfldCGKI!/r/dFkAAAAAAAAAnull&bo=hQLIAIUCyAARCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n另外还有一些配置项没弄好，例如默认头像和评论者信息，后面再慢慢研究。\n\n### 搭配Valine-Admin系统\n\n如果不搭配Valine-Admin系统使用，Valine在很多地方体验都不好，例如邮件通知和管理评论。\n整个过程基本都是教程，其中在某些地方我也栽了跟头。\n- **SMTP邮箱设置**\n\n这里需要注意的是，如果用QQ邮箱，必须开启独立密码并用授权码登录，配置好后再重启一下。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/b7A4KgzN*t3vPbVQh*6.Tzi5GeRjJhUGSOtbxM47kkQ!/r/dDUBAAAAAAAAnull&bo=ZgMbAWYDGwERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n应用日志提示成功就行了。\n\n- **管理评论**\n\n管理评论的后台需要手动添加管理员账号，即`存储-_User`，依次在`email、username、password`三个单元格编辑，设置好邮箱、用户名和密码。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/7aA5dj0o7typPLbzDoVGaxC9SX.uvuglmkSkFH3cKU0!/r/dDQBAAAAAAAAnull&bo=WQSZAVkEmQERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n接着访问管理后台，输入邮箱和密码登录，不需要使用用户名。\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/5WB*zTfwT6fTWMlhG*i.nyiO26IF5EVZjtklAlPx4LU!/r/dFMBAAAAAAAAnull&bo=FgJgARYCYAERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n在这里就可以进行评论管理啦，还支持手动发送邮件通知。\n另外，每次有新评论产生时，应用日志中都会有提示：\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/9Kf.3FAD3FE7Nap4Jgdcj7XzSK42DanhrGrRKQB2Tkc!/r/dC4BAAAAAAAAnull&bo=sgIUAbICFAERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n收到的提醒邮件\n\n<div align=center><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/9ZkFVT3pOKYk8PtPoHm7mVXVhNTIBZO518tsOOPpGjc!/r/dFMBAAAAAAAAnull&bo=VgOUAVYDlAERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n另外还有点击链接自动跳转到评论处，我还没弄好...\n总之，现在评论是可以正常使用啦，后面的细节我再慢慢调整吧，勤快！","slug":"降低评论门槛：使用Valine评论系统","published":1,"updated":"2019-11-30T17:59:17.888Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3mzfji4000bfzsi7ao67v80","content":"<p>这次从Gitalk更换至Valine评论，主要出于两方面的因素考虑：</p>\n<ul>\n<li>降低评论门槛，后者甚至不需要填写任何信息即可评论；</li>\n<li>文章链接重新生成，导致之前的Gitalk评论数据丢失。</li>\n</ul>\n<p>从昨晚开始折腾到现在，总算把基本功能设置好啦~</p>\n<a id=\"more\"></a>\n\n<h3 id=\"Valine评论启用\"><a href=\"#Valine评论启用\" class=\"headerlink\" title=\"Valine评论启用\"></a>Valine评论启用</h3><p>实际上本款主题是适配了Valine评论系统的，但是由于版本错乱，加上我自己修改过主题文件，所以还是花了些时间。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/r6UZFUaiScjI2XHw*Cmr.rGkazDdccFyKKWkfldCGKI!/r/dFkAAAAAAAAAnull&bo=hQLIAIUCyAARCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>另外还有一些配置项没弄好，例如默认头像和评论者信息，后面再慢慢研究。</p>\n<h3 id=\"搭配Valine-Admin系统\"><a href=\"#搭配Valine-Admin系统\" class=\"headerlink\" title=\"搭配Valine-Admin系统\"></a>搭配Valine-Admin系统</h3><p>如果不搭配Valine-Admin系统使用，Valine在很多地方体验都不好，例如邮件通知和管理评论。<br>整个过程基本都是教程，其中在某些地方我也栽了跟头。</p>\n<ul>\n<li><strong>SMTP邮箱设置</strong></li>\n</ul>\n<p>这里需要注意的是，如果用QQ邮箱，必须开启独立密码并用授权码登录，配置好后再重启一下。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/b7A4KgzN*t3vPbVQh*6.Tzi5GeRjJhUGSOtbxM47kkQ!/r/dDUBAAAAAAAAnull&bo=ZgMbAWYDGwERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>应用日志提示成功就行了。</p>\n<ul>\n<li><strong>管理评论</strong></li>\n</ul>\n<p>管理评论的后台需要手动添加管理员账号，即<code>存储-_User</code>，依次在<code>email、username、password</code>三个单元格编辑，设置好邮箱、用户名和密码。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/7aA5dj0o7typPLbzDoVGaxC9SX.uvuglmkSkFH3cKU0!/r/dDQBAAAAAAAAnull&bo=WQSZAVkEmQERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>接着访问管理后台，输入邮箱和密码登录，不需要使用用户名。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/5WB*zTfwT6fTWMlhG*i.nyiO26IF5EVZjtklAlPx4LU!/r/dFMBAAAAAAAAnull&bo=FgJgARYCYAERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>在这里就可以进行评论管理啦，还支持手动发送邮件通知。<br>另外，每次有新评论产生时，应用日志中都会有提示：</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/9Kf.3FAD3FE7Nap4Jgdcj7XzSK42DanhrGrRKQB2Tkc!/r/dC4BAAAAAAAAnull&bo=sgIUAbICFAERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>收到的提醒邮件</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/9ZkFVT3pOKYk8PtPoHm7mVXVhNTIBZO518tsOOPpGjc!/r/dFMBAAAAAAAAnull&bo=VgOUAVYDlAERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>另外还有点击链接自动跳转到评论处，我还没弄好…<br>总之，现在评论是可以正常使用啦，后面的细节我再慢慢调整吧，勤快！</p>\n","site":{"data":{}},"excerpt":"<p>这次从Gitalk更换至Valine评论，主要出于两方面的因素考虑：</p>\n<ul>\n<li>降低评论门槛，后者甚至不需要填写任何信息即可评论；</li>\n<li>文章链接重新生成，导致之前的Gitalk评论数据丢失。</li>\n</ul>\n<p>从昨晚开始折腾到现在，总算把基本功能设置好啦~</p>","more":"<h3 id=\"Valine评论启用\"><a href=\"#Valine评论启用\" class=\"headerlink\" title=\"Valine评论启用\"></a>Valine评论启用</h3><p>实际上本款主题是适配了Valine评论系统的，但是由于版本错乱，加上我自己修改过主题文件，所以还是花了些时间。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/r6UZFUaiScjI2XHw*Cmr.rGkazDdccFyKKWkfldCGKI!/r/dFkAAAAAAAAAnull&bo=hQLIAIUCyAARCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>另外还有一些配置项没弄好，例如默认头像和评论者信息，后面再慢慢研究。</p>\n<h3 id=\"搭配Valine-Admin系统\"><a href=\"#搭配Valine-Admin系统\" class=\"headerlink\" title=\"搭配Valine-Admin系统\"></a>搭配Valine-Admin系统</h3><p>如果不搭配Valine-Admin系统使用，Valine在很多地方体验都不好，例如邮件通知和管理评论。<br>整个过程基本都是教程，其中在某些地方我也栽了跟头。</p>\n<ul>\n<li><strong>SMTP邮箱设置</strong></li>\n</ul>\n<p>这里需要注意的是，如果用QQ邮箱，必须开启独立密码并用授权码登录，配置好后再重启一下。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/b7A4KgzN*t3vPbVQh*6.Tzi5GeRjJhUGSOtbxM47kkQ!/r/dDUBAAAAAAAAnull&bo=ZgMbAWYDGwERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>应用日志提示成功就行了。</p>\n<ul>\n<li><strong>管理评论</strong></li>\n</ul>\n<p>管理评论的后台需要手动添加管理员账号，即<code>存储-_User</code>，依次在<code>email、username、password</code>三个单元格编辑，设置好邮箱、用户名和密码。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/7aA5dj0o7typPLbzDoVGaxC9SX.uvuglmkSkFH3cKU0!/r/dDQBAAAAAAAAnull&bo=WQSZAVkEmQERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>接着访问管理后台，输入邮箱和密码登录，不需要使用用户名。</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/5WB*zTfwT6fTWMlhG*i.nyiO26IF5EVZjtklAlPx4LU!/r/dFMBAAAAAAAAnull&bo=FgJgARYCYAERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>在这里就可以进行评论管理啦，还支持手动发送邮件通知。<br>另外，每次有新评论产生时，应用日志中都会有提示：</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/9Kf.3FAD3FE7Nap4Jgdcj7XzSK42DanhrGrRKQB2Tkc!/r/dC4BAAAAAAAAnull&bo=sgIUAbICFAERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>收到的提醒邮件</p>\n<div align=\"center\"><img src=\"//r.photo.store.qq.com/psb?/V11rnv1t2fVV1f/9ZkFVT3pOKYk8PtPoHm7mVXVhNTIBZO518tsOOPpGjc!/r/dFMBAAAAAAAAnull&bo=VgOUAVYDlAERCT4!&rf=photolist&t=5qzoneimgout.png\"></div>\n\n<p>另外还有点击链接自动跳转到评论处，我还没弄好…<br>总之，现在评论是可以正常使用啦，后面的细节我再慢慢调整吧，勤快！</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}